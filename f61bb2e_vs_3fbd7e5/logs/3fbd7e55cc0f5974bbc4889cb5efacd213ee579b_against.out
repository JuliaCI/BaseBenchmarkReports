cset: moving following pidspec: 2986
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.330354436 seconds)
loading group "string"... done (took 0.595038515 seconds)
loading group "linalg"... done (took 7.248693833 seconds)
loading group "parallel"... done (took 0.173871694 seconds)
loading group "find"... done (took 1.15018039 seconds)
loading group "tuple"... done (took 1.771847282 seconds)
loading group "dates"... done (took 1.23493406 seconds)
loading group "micro"... done (took 0.230733185 seconds)
loading group "io"... done (took 1.02841008 seconds)
loading group "scalar"... done (took 40.745609101 seconds)
loading group "sparse"... done (took 12.964021178 seconds)
loading group "broadcast"... done (took 0.986686615 seconds)
loading group "union"... done (took 13.836019257 seconds)
loading group "simd"... done (took 4.53318935 seconds)
loading group "random"... done (took 9.245601628 seconds)
loading group "problem"... done (took 1.982182918 seconds)
loading group "array"... done (took 21.690354126 seconds)
loading group "misc"... done (took 1.979076693 seconds)
loading group "sort"... done (took 3.292116857 seconds)
loading group "collection"... done (took 18.450693582 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.542122942 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.147174928 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.120589032 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.145179013 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.194541546 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.134798642 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.148794799 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086990025 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.111097592 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.163854401 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.143309172 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.489475153 seconds)
done (took 5.300669132 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.208707853 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087159904 seconds)
    (2/2) benchmarking "String"...
    done (took 0.099443177 seconds)
  done (took 1.00019188 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.068080927 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126887325 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.083353627 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069466236 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068815134 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.085945382 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069498848 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068484785 seconds)
  done (took 1.393545606 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075043291 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070055642 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.087378739 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070455656 seconds)
  done (took 1.122833381 seconds)
done (took 4.624059727 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.905702192 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.247298203 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.191447143 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.45675115 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.153779269 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.194369717 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.67352861 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.317267448 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.213389841 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.104570726 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.108835655 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.392823977 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.110274348 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.664937186 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077151677 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.10736133 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.163949992 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.414237374 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083675684 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084728223 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.106691003 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.147054503 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.102761547 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078261044 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.169630017 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070619363 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.149720076 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.100213813 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069517739 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.244579853 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.193028614 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.689754187 seconds)
  done (took 10.644714809 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101141981 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.119298327 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071581062 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.145321511 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.106352289 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.091132721 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073348586 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.088105784 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.095280919 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.165129459 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.120573246 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.108977738 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.08719633 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072552432 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.106404408 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.216272384 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.113161773 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.088554943 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.091712398 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.078877688 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.128540871 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.086489603 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.099347316 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.081059043 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.157849037 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.201618153 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.116955056 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.115789212 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.073235012 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.083978466 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.136206167 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.148119365 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068990321 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.086492453 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.144808297 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.115541271 seconds)
  done (took 4.816995404 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.052534135 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.162359028 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092395735 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.157947698 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.090439545 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.113354379 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.088400232 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104693643 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.257641715 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.094372965 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.468793089 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.135342464 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.107626689 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070861198 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.088994555 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.07071795 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.564351801 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.151365263 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105964031 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.108095933 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.093366314 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.074199481 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.362829292 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071539785 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.069039679 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088730829 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.062822529 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.150700662 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070800657 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.252212474 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.091393359 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.092771464 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.123753572 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.182431174 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098176614 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.127836846 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086532059 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.070081445 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.175703628 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.076287016 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.087634156 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.091934909 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124643839 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.125190957 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.071449337 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.087303286 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.18618833 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.070586272 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.104138034 seconds)
    (49/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.133473537 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.900275856 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.173746284 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.080835494 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068168388 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.297085861 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.105436176 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070801292 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.067178905 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.269383502 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.157054468 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.070227024 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.085443455 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.070442792 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068255846 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.089474121 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.372385392 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.071540911 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.728082336 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.088298682 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080053854 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087756606 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071638088 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07588753 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093674954 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.068452501 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.103849696 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.068181464 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068801086 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.088596731 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.06958695 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067997464 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.090030371 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.105463089 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.210600718 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.070690574 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069214182 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.085695987 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089221097 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116008489 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.073682624 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067738167 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12090614 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07153512 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.08876741 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.105299318 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089146946 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.105250832 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.073330464 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.133689152 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070144233 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.154112256 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.069695212 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.116202971 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.075482681 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118907599 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.100497354 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071399179 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.157738024 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.067558867 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.086446307 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.06984197 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066719427 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.089096748 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070408351 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.102801052 seconds)
  done (took 21.555180403 seconds)
done (took 38.890659332 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.304421537 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.098004967 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.098468222 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078715648 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.098693274 seconds)
  done (took 1.573697277 seconds)
done (took 2.441224788 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.121731113 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.124056719 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065992137 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.119672204 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066267098 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.124296718 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.121130617 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.084501593 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.12504165 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.067154078 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.118268134 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.067329582 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066242927 seconds)
  done (took 2.164871327 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08472582 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087663587 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09082931 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085955855 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083842234 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085979165 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083358425 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.111687767 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083836822 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.09353061 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06757456 seconds)
  done (took 1.820006541 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084329424 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086456049 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.090610193 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084178309 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083832212 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084993529 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082951273 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108275159 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083440886 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.094826293 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068058594 seconds)
  done (took 1.818125633 seconds)
done (took 6.659948275 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079970027 seconds)
  done (took 0.939549753 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.728323799 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.787346153 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085627843 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.137224709 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.231063577 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.160829944 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.456798955 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.115922158 seconds)
  done (took 10.748876649 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.10431029 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.091434193 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.07215222 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.094241286 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.073537169 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.090513994 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.076306818 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.072010639 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.093382434 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072676771 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.093178166 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.075653365 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.08968096 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.072681543 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.074105381 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.093795754 seconds)
  done (took 2.262668949 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096521265 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096275376 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.096945098 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.079285834 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.095828235 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.076502018 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.097102931 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.078060103 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.092134587 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07608768 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.095768746 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.078600032 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.094051054 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.069033459 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.095549364 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.080403584 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.092389659 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.078302684 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.097018282 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079877116 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.096992902 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.069100724 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.093825508 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.079023358 seconds)
  done (took 3.057672101 seconds)
done (took 17.875798789 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.133433117 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080220528 seconds)
  done (took 1.077271938 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084605734 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.102070508 seconds)
  done (took 1.056593688 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085962167 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.084289454 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.093133953 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.100349005 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.068953557 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.08941443 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.108009667 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.071005116 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.069262524 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.089616039 seconds)
  done (took 1.72927219 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071512542 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095279385 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.074778959 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.102484144 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07834584 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.086023344 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.077647018 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.089285901 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.08263281 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.084214713 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.075433332 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.10435268 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.075510135 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.106406427 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075813751 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.090762397 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.091625477 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.072457462 seconds)
  done (took 2.405944479 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068159278 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068694828 seconds)
  done (took 1.009901559 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069621352 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065025315 seconds)
    (3/7) benchmarking "month"...
    done (took 0.088645454 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069995088 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.085396902 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.066581524 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.084342981 seconds)
  done (took 1.402786639 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.415342541 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.112340095 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.252347745 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.094615479 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.109437179 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.270246142 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.089531338 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074226006 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.09403462 seconds)
  done (took 2.427077735 seconds)
done (took 11.979968542 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081746064 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087846624 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.116882771 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.438686612 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.114766789 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069621646 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.148090332 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.214073911 seconds)
done (took 2.147176014 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.127442791 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.638297001 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.419268502 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.222738111 seconds)
  done (took 2.161051298 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.390190677 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.096717259 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.078910885 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.071023142 seconds)
  done (took 1.521669128 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068313785 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072720567 seconds)
  done (took 1.024094687 seconds)
done (took 5.713831212 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069607248 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.108358862 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.070126123 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.066888356 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.089633341 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.067360653 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066642927 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.090065013 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.069603767 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.068611003 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.088488499 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072174632 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084593384 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068340644 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069697495 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.085151784 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067978596 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.067200461 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085368748 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.067762759 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068946607 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088155386 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067452255 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066379046 seconds)
  done (took 2.733068293 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087406225 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.088089245 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.076078647 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.092710566 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.075575181 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.092985624 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.076493361 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069451762 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.094009288 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.072085273 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091600513 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.074096789 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.090502906 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.075090859 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090415916 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07852536 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.092986954 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07124099 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072206361 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.093015145 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.074024528 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089434586 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.074099864 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09363113 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.073548556 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092024827 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.072941901 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.088236876 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076688497 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.090667976 seconds)
  done (took 3.365357426 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073424964 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.066592273 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.086449983 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.075403563 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.066736448 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.088029265 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.068050798 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.085813905 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.069429655 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.067000696 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.08776273 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.067558874 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.067185523 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.087412396 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.068192694 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.087825286 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.08524237 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066985026 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.086371195 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.068709452 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.069417642 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.08685874 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.068194528 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.085687949 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.068260758 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.067103341 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.085897972 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.067975125 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.067406928 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.086405394 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.070777546 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.069813924 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.087513944 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.073989653 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.088867755 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.068184612 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.071052753 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.085153109 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.069142446 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06652027 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.085849998 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.067681619 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.066924384 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.092550352 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.067013516 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.087929061 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.068295861 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.068289883 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.087494321 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070949388 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.084002071 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.068813534 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.068767291 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.086815511 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.071523476 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.066361588 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.087223654 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.066611039 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.085273947 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.068347306 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.066590273 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.085010428 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.070481732 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.066828585 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.101880205 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.073854962 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.084281111 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.07019399 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.068127419 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.087965548 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.069425493 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.080112698 seconds)
  done (took 6.351328117 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.121649295 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.095875373 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.088439683 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069321933 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083662032 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069135582 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070580195 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086776871 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069626642 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.091883213 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068548868 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068251108 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088662756 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080261527 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086429525 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069829175 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.09161947 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066129303 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066565095 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.090458388 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069096055 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.089360783 seconds)
  done (took 2.673274003 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.19127121 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092821436 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.113461056 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.096685813 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070380529 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09713108 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072946492 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.093224548 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073790906 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093300779 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071660936 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092763894 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071420213 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090330834 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07158392 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091048648 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075083249 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089816879 seconds)
  done (took 2.536750542 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.080103333 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067123088 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.113646213 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069337457 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.090531146 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071459933 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094315374 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07829062 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.091475901 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.070296242 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.097314141 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072525378 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.089870765 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071271153 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071853661 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.088800387 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.072725021 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088549584 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079085532 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093064677 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.075088088 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096990172 seconds)
  done (took 2.714873958 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083855821 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069558526 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.106639594 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.090051933 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.067162623 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067906209 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.094980789 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.070027036 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.095005712 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.072088841 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06938906 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086520238 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.074893023 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089099522 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.074299726 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088589069 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072741992 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068936521 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091238901 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066063141 seconds)
  done (took 2.491655412 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089824233 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.089726326 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072357779 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.098341828 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071840614 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08944423 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080177354 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.089673062 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072614868 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.114758116 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072114058 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089374971 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079977835 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.095001936 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071371903 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097891177 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07877936 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.098265938 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070874029 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.090932473 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.22572695 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072854853 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.097042955 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072375585 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070638361 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091074221 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070161448 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096111946 seconds)
  done (took 3.40675296 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06950492 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068650347 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.085970254 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.068028034 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.067735949 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.086399578 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.068710495 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066838428 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089589981 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067465772 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.069677385 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.088770679 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069723454 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.087428921 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070337672 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.069313306 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088097611 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.068053948 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066748806 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086880377 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.070236329 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068716096 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.089248431 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067538629 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084900736 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.07099421 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067755779 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085688929 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070541697 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066507732 seconds)
  done (took 3.142005703 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079194431 seconds)
    (2/2) benchmarking "in"...
    done (took 0.095435089 seconds)
  done (took 1.074921917 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066579865 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081717187 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.087352845 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073232742 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.09370055 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070339067 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.097113678 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075201196 seconds)
  done (took 1.542468973 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084229482 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080053659 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.091969772 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080702813 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.100735945 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085628268 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.160533607 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.091347278 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076570293 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.087406254 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.085256343 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068660221 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.096419356 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069654353 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.094649127 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076291352 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.068510391 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.095406697 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072669983 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.088239453 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071858285 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096913689 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073063034 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.066221789 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.091065873 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.078034363 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.10066311 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.07159338 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09191227 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077240014 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074730951 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.084605391 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.070045819 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.089291229 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.068834749 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.097155769 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.0870344 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090206234 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.080178772 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069726407 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099349261 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.064970918 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.094198489 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076542386 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.098428812 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.071708202 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.069804152 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.085794365 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.067648232 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.090869435 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.066757124 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.0697996 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.084367129 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077849431 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091711364 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081164802 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.071256434 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.091991965 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072007545 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.093230245 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076919211 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.089950116 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073056407 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.069803022 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.099182812 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.074414428 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.098221208 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.065949806 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063969308 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.0873407 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.079487706 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.11232805 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.075265647 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.089954425 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071788088 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.067296284 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094439982 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070977779 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.095370711 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076130226 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.090124134 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.076137025 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095852513 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070967799 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071984785 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.096649999 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068023496 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.091639272 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.067694787 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.105124951 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.069427732 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06755376 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.087261833 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079784927 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.092717882 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.070531253 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06663521 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.096685175 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.06370208 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.089408896 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071385796 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069838131 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.101436328 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.093627939 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07636133 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.096969424 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.078886273 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069135089 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.092678881 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066872516 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089040173 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.069855985 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076756347 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.083960411 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073469078 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088368746 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.072504526 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.078528604 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.088477503 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070309541 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.097258469 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.076476442 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.068325183 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.087119617 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.072994858 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.089770847 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074334564 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.096913419 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.070038384 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064395591 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.084808539 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072735371 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.088444872 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.074308467 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074276731 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09414711 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064976035 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.087362916 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074378411 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.098580157 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070905248 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069519568 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.095653274 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070771443 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.089184554 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076382853 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.090286564 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.070327736 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074643469 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.090517444 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.065953681 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.092054856 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.074020188 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.068402107 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.093703956 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074142502 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.091362433 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.071766724 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068785998 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.096000732 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070503554 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.089414736 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071227318 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.067919691 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.100386247 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070553538 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.085294032 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.068150061 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.095982478 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067845175 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.069401887 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.08918382 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072113695 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.089212237 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.069464036 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.068920863 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.091413196 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.080453692 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.094619136 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071343942 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.095021146 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081325343 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.088190006 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.073577404 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.069490458 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091015241 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.071277511 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.097619846 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076156015 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093708978 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.073249594 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06596871 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094894268 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077601398 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.08764135 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.068999731 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068455992 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.09339087 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075337624 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.093223047 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.071481225 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067562304 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091229199 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073067515 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.092508768 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.070222591 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.087385108 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.076533629 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.068179421 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.096656319 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070389968 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.100525986 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073248852 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.084756434 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074109105 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06817636 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.096129511 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.065759795 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.087293811 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.069587522 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.070574439 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.089287373 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.073062004 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.082860485 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078161809 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076451119 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.090535445 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068695656 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.089019723 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077890083 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070329406 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093430067 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072553562 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.095943674 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080686848 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.08870681 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.073776442 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.079501163 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.091148024 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063742135 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.094705332 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069340628 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.069515095 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.090091945 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.067609565 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092944535 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.079900935 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.096791311 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.064999139 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071386861 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.089175796 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.069059584 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.085350072 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.075177928 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.072108746 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.09065052 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076102601 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090735402 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.071757793 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073146367 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.090471617 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070921557 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.091786048 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073409874 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.090948659 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.073729649 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.069057042 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.093610304 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.069139617 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.087013577 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.073159456 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070292983 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.09060057 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075353689 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.088525802 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07194062 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071486933 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.091727736 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070963428 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.089508146 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069764263 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072741337 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09086708 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070858098 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.091062316 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.067147271 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077151519 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.090146345 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.0780656 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.089343193 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.067971503 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074205213 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.093147603 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.074451868 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.091267627 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.071363769 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.090945932 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.070781835 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.07183901 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096462407 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067913344 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.100159268 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078172052 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089607662 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.07369664 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069139297 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.092107753 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.069321864 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.089460971 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.072358111 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069130763 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.090357261 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07515102 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.091538958 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.071446826 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070735995 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.091274942 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070570335 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.090769332 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.066363498 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068572728 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.089427373 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.071377051 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098806448 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.071347861 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068208533 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.08958821 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071709478 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.088936433 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067424305 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.095816009 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.080064723 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.069646897 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098561292 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068729269 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.091346831 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080305053 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.084332817 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.069259893 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.067719445 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.087670681 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077312797 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.090650781 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.079531543 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068861021 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.089386184 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.067518545 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.090039177 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.069932581 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.064113921 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.08837833 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074088804 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.087240229 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070371481 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.069917539 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.092956955 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071556825 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.099794855 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.070302958 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069915631 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.091196524 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.067025987 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.088427232 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.069332809 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.072423302 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.09196014 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06736016 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.086202263 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.071012617 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.070059876 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.09100881 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070289889 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069991235 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098311917 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069091273 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.093354011 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.0731713 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.087415242 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.073634525 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.069375119 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.090636942 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06895497 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.093093918 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074116332 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070939408 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.099398015 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.069213834 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091166959 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071088302 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.086909234 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.071505171 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.070239085 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.090100617 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.069281713 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.070347992 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.099167181 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067071937 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.093369909 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069783382 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.089571425 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.078185248 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.070172814 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.094149158 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076975624 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.091228348 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.07268246 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.097690241 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.075028001 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07336866 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092902912 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070809867 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09572755 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.069754539 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.095431025 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.07177342 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.070293521 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.091920634 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067803256 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068774629 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.091561674 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068733369 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.095802659 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.071444185 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.089246438 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.070610415 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.068237321 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.091065254 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073699752 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097107011 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072664714 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072090143 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.085861889 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.067696735 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090602942 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.068084942 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070458125 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.093845071 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075568293 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.092314743 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.071396948 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.068191369 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.099688286 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075210777 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.094392132 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06796584 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.092641254 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.072657776 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072065201 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.092194209 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070265571 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090547889 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.075021529 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070637161 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.089645545 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077394043 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.092977254 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072197539 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.070656041 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.091547546 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.07019824 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.085075789 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.072197575 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071063423 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095734619 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072306053 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.090318266 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080845152 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.086509159 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.07174714 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073255588 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090378816 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074461392 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.085014746 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.072555921 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070999349 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091894391 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.065399722 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.088048909 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.068988442 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.07178458 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.090368148 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.065597547 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099716991 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.080109035 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072684284 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.091324252 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06854971 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.085413904 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.066645944 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068367468 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092265081 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071605089 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.10083854 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.069551544 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068327428 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.086234466 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070235184 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092624475 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.07303558 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.066352343 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.08651752 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.069170059 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.092727086 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075518966 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068535114 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.090790042 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072998777 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.09163395 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.069139199 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072929666 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.087796134 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073238221 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103564994 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.071175822 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090104309 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.077171939 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096733133 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.072032801 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064875551 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.092072679 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.073797543 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.090096477 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.07209058 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.070541658 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.106545476 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072661235 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.089884123 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.069023213 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.091560633 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.070431798 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076973102 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092735125 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.07068101 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.094494868 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072435178 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.098127258 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07383183 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077102056 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.095106629 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072428648 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.090389482 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070902044 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.067845801 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.090649948 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.071058446 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.092169089 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.075911533 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.098294048 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.069662048 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101358536 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.080485632 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.071957008 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.088382989 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.069454061 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.088988242 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.067458637 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.070953362 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.089665785 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.069364562 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068802066 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.090908913 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071335653 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096410365 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071343621 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070539961 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.092155886 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064906939 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.091980786 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.073109029 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070220215 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.088472759 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.070525975 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.090929977 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074621787 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073196465 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.090601505 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071396649 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.091657529 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071247864 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.065432811 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.098166817 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070195882 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.092206026 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.070550848 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070072407 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.093142568 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073663837 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.096080596 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071369316 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.091640304 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.079967882 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071726482 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.088866602 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.067309499 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.095849826 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.069213411 seconds)
  done (took 48.827540761 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.109284436 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088058641 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065890144 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.086157213 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079305478 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087730975 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065931256 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065441342 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.087680993 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06833261 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.086102597 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066343637 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.094805038 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.090577607 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099455476 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069781698 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.088175618 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066572553 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085837838 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06712341 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.094608755 seconds)
  done (took 2.663825831 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077914626 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.093847102 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.077401618 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101490528 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071054279 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.09519783 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.076297663 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095511041 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099382241 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072599438 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.099860303 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075388971 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091232668 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.071680728 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090322322 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076765378 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.101090973 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071625548 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.095544106 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077348412 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095729347 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076625001 seconds)
  done (took 2.830009961 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069435847 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067856477 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.091833941 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.065877238 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06913476 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.086117151 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073033643 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.096129639 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.074085723 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067592343 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.089288366 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068317339 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.090497698 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.066609466 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069170363 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.087896076 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.137147248 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.07334895 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.068785306 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.092804938 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.065006424 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.092512332 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065484357 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064754931 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.089432317 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073551089 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.091130103 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068775474 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.06902554 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.089684004 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.070322733 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.066712273 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092469146 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068992133 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.088863135 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.069299006 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06951178 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.090761274 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064948352 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.086939672 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.07139702 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.065637518 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.090920296 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071071587 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.066945663 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.089430115 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071084546 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.090041622 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.066202653 seconds)
  done (took 4.776750861 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.087097737 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.134958938 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.09412055 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093259373 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.108156387 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.099181952 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.073698964 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.117437849 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06694107 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.091142451 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.085329808 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.110191452 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.092219401 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.076174199 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.096768343 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.070994829 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070720306 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.090858927 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.073088892 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.091687354 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072675103 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.09855337 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.104672705 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.084907978 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.09445604 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069164128 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.089766112 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.075494169 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.103245047 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.074144957 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.095197764 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.075598734 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.105703758 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.074651106 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.091426348 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.071363472 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.108003628 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.068692651 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.094553172 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.068011244 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.092485072 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073561727 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.09784367 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.086454053 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.092150751 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.074669446 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.091151866 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.066561926 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.10410924 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.071961425 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.098251021 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.104724349 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074215299 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.091019945 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074688637 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.106134445 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06944144 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.088238131 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.073340091 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.10341225 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067601737 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.093586761 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.084382518 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.092599458 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076736612 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.105224996 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073894167 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.095923495 seconds)
  done (took 7.049521888 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077905272 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095652018 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084729194 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106395847 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.096925858 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.077514384 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097395498 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076878092 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.097489144 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081232873 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.097722373 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.118798903 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.072146302 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.100658873 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07667137 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09815635 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075674037 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09778874 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074989219 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098274045 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.096802006 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.085158141 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.09823445 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.10309759 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10738672 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.092535975 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.077190888 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.097124163 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083645099 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.098264692 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108763162 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.077008561 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.097254837 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082892322 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.110137106 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.09742763 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069249196 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096620568 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.076689591 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.097373615 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071358575 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105711667 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.075546211 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.093246437 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075469817 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.097846554 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.105165388 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.087803354 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.100426534 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.102003458 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.077491079 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104980203 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075564505 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097749775 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.105710026 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.109352731 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10625435 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.105181481 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076325896 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.106181122 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104662439 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.09103229 seconds)
  done (took 6.68776625 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090413972 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098794642 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.100664845 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.067290654 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06743335 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096604041 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067664287 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.088075545 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.0797624 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099403145 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081586959 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095367642 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076448123 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102648334 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.094199679 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077766591 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095039891 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074045962 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099992187 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073825982 seconds)
  done (took 2.687292245 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.079006058 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.106652605 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.072247375 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075539487 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.096584909 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.076192376 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.095433264 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072359842 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092661335 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074143703 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102034107 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080979616 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091891098 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.076841081 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.101715981 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.076086316 seconds)
  done (took 2.332790282 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.081350499 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.100926439 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.084651413 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.092674151 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068773727 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.08817739 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.070213045 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065277546 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.088541774 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.084149553 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.092986574 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.072491636 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.091545769 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.068549827 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065606511 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.094815535 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.066465248 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.089325962 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.070491783 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.105510952 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.081519664 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.090260465 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.071132223 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.070121207 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.09283098 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.074655266 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.092269684 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.068319434 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.090092673 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070775613 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.091401343 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.078457392 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.086354031 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.070449942 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.068312249 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.089553544 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.070218328 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.090924874 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.073943278 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.069158774 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.090626334 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069388476 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.091592038 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.071253359 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.085640204 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.071838952 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065975655 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.097326291 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067599383 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.09210101 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.070866358 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.092245461 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.072095506 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.078867056 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.096074653 seconds)
  done (took 5.41115218 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082559587 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071597251 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.087191027 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06777141 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.09396717 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.072541853 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072071604 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.094398224 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070916602 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.089162516 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071620849 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.0926178 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073401195 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072748524 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093374588 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073078263 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.087229935 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072229437 seconds)
  done (took 2.404738648 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074710372 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067977658 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.097903946 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069867766 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.091184757 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.0727743 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065273989 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.09053749 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068841358 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.090343445 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071005724 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.072182091 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090552734 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.072012437 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090465142 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071605828 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071726341 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090786109 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070173044 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086342907 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073924972 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068001577 seconds)
  done (took 2.686412152 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.074860771 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.09448454 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.167018978 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.113742338 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.086053074 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.105321603 seconds)
  done (took 1.610412587 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092728521 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101062699 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06915877 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111234522 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079543679 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092824471 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072632851 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092698305 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081141882 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107376927 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070933539 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101950343 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101582805 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080041682 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098722673 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077051847 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093907172 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071057341 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092458657 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10945816 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073736631 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100874675 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073155409 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092814595 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073075096 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101426068 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079864486 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107578284 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092750541 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082210497 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099472779 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071779135 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102558425 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106607822 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074641814 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101245684 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073320645 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112076388 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07667692 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101668605 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072896941 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100129596 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102179827 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077527324 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102136237 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072139543 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099205066 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070619914 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093724728 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117902224 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076905756 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101546151 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097538035 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081354498 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10313825 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118507358 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085543028 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102374925 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098095436 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086310463 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102337675 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076535305 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101389957 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10686938 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07700046 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101908404 seconds)
  done (took 6.993172239 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086456919 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10892522 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071701511 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107369247 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100473251 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072941422 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092004209 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072858474 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092222452 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072489241 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134416394 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071064089 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102755696 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100596139 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073247439 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092909829 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072197171 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101151536 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071705736 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118787881 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092620602 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080787197 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102386748 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100174456 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086351005 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100102479 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072197492 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093819432 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070886059 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09322316 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076455707 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093854974 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10074588 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072606796 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100202528 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072003647 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093395813 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077278034 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093979228 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077385771 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102543794 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111263961 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071967393 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093206121 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083938983 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093903406 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070734613 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093557013 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071462446 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093983832 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084771011 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106773029 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106433112 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100543084 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073308906 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092842893 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072623035 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092165802 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073202083 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098768105 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07983074 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093625909 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11780738 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072386123 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093336741 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08066572 seconds)
  done (took 6.866914472 seconds)
done (took 136.745746634 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.205169158 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.189240388 seconds)
  done (took 1.365262148 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070679157 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096069763 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.105357667 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131822946 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.089475972 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101238175 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.120766435 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.080734163 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067580717 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.092416261 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070344823 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.092778364 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136512017 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067897478 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088839881 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069785262 seconds)
  done (took 2.460723028 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104164926 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.201598554 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.114519196 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067912141 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.105837947 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.081445271 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.090362284 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.081221448 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.096812777 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069584156 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.080165553 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.10140751 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067662309 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.10092922 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074830459 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.103819232 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068084486 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.103613112 seconds)
  done (took 2.696101258 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.105470799 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.14755001 seconds)
  done (took 1.23205916 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.202792129 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.126058008 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.207555292 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.421073274 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.217705771 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.291825278 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.185827529 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.184467021 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.168346363 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.176462894 seconds)
  done (took 3.158341311 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100430549 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.172397143 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.314560424 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.139236869 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.089051451 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.117639346 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.140333855 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.110856114 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084132092 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.103949005 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081666895 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.101060783 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.11986075 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07872039 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.099403782 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.082464951 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.127109122 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.078527694 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.101743436 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079962231 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.123627066 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069951367 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.099948055 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077974746 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.101628372 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.083251233 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.06879628 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.091538994 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078222699 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.101107222 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.081337245 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.120129319 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.10346322 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.137126327 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.085318202 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.157928046 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.082288443 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.096302789 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.079875592 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.075142376 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.103317953 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.100937212 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.089708971 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.101533617 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069766813 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080306726 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.091664823 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070300505 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.104621308 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.081331869 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.105624415 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.081370218 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.156758368 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.081928333 seconds)
  done (took 6.534928521 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.746406466 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.113123573 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.10044055 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.815476349 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09170211 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110105921 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.718552256 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.122732366 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.213839711 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.775940226 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.092178625 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.102281864 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.183338477 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.217898956 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.904834781 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.286588358 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.646248101 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.108282866 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112507349 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.136753871 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.144091785 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.180234999 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.152910532 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.439935425 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.075501887 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093741954 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.138986446 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.077810976 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.164846345 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.088077419 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.097659818 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.158497042 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.229003604 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.154770402 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099310087 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072530863 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094577605 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.151388488 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.225427703 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.193450551 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.162002575 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070807707 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.095297486 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.144959382 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132784752 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070976841 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.142640145 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.153039556 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.17385012 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076701227 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.099395728 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.146129705 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.142909435 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.145891395 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.106036689 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.271849203 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.286083858 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07270449 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124266091 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.107643966 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.218546972 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.108209209 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.20267227 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.141555019 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.169019818 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.095763485 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.733458769 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.151012907 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.096261145 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.077142535 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123631645 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098820776 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.142636367 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.14676985 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.349517796 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.168600227 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.076222766 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094346879 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.21067785 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084385076 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09744911 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.144821714 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07735667 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.126093508 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.169373746 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.1466486 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.149155746 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.212497516 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.145821179 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.164659191 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.076291694 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129046711 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.077058295 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.217357958 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.17420666 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.143881821 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.212485617 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.145235096 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.145559212 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.151677327 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.100259617 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.153362926 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122808467 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.082677215 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141092264 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.195887658 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.127996442 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084147083 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.099476692 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.144950441 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.129698107 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088131024 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.167685288 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.152678667 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.461285557 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.150268163 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.093742648 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.089679653 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14184429 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.166300746 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.078716189 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.23939082 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101332854 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.172559712 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.124975316 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.071431138 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124523565 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.144837977 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080038466 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126312858 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.164643047 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079211836 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.216711134 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.193865575 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.079221165 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.218210672 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.164296726 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.079266556 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.1514673 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124573503 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.148936931 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102730458 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.143175625 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.077575378 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.778334554 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.148370304 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.126365857 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097009992 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.156369821 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095818763 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084501817 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.109253573 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069637484 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.755537113 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.087523093 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.104788736 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.107855815 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.079038039 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.126199622 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.142358299 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.097645207 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.14255465 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.182694322 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100843111 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123976945 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.085130111 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.163707842 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.079229595 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.107978366 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08621802 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.109602317 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.126711734 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075788735 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.108662629 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.151702749 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.144722665 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.197159551 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.544869361 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072384741 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.10881234 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.20449054 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073949365 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.268374221 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14131803 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.202088389 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.145609487 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.08112466 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.28976927 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.145668803 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.180466966 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.109674945 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.155636666 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070922787 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.140279076 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.144525082 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.097137507 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077207092 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.143285751 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.171027582 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.147423731 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.943443087 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073539872 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.206781415 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069624633 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.174820527 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07845169 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10106896 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.241851555 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.096614866 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.150874624 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.14548101 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096890253 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.086294066 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.671171349 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.109776133 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.142933864 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099957811 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.175060613 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.166788979 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.141662174 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.142858779 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077069252 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.141471986 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.21257153 seconds)
  done (took 41.270504196 seconds)
done (took 59.699319736 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.261092605 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.178670358 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.244415169 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.146037849 seconds)
  done (took 1.906868749 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.146889195 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105020676 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120326494 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.088642595 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.105478615 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.091527059 seconds)
  done (took 1.660860998 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.41103417 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.266324837 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.23100072 seconds)
  done (took 1.913240243 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.262806176 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.216023357 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.451593885 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.300446712 seconds)
  done (took 2.365153309 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.183077248 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.119249093 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069328572 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.11217139 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.165109245 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.265616057 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.133024123 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.193593736 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.082435395 seconds)
  done (took 2.375745531 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.204300962 seconds)
done (took 11.43495065 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.097225514 seconds)
    (2/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.137095233 seconds)
    (3/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.288228884 seconds)
    (4/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.207589877 seconds)
    (5/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.074224856 seconds)
    (6/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.285330571 seconds)
    (7/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.113016978 seconds)
    (8/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.281956732 seconds)
    (9/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.091892854 seconds)
    (10/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.214503934 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.075602043 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.081080827 seconds)
    (13/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.205361926 seconds)
    (14/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.182873614 seconds)
    (15/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.105894259 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.082051826 seconds)
    (17/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.20343735 seconds)
    (18/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.068499082 seconds)
    (19/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.277173659 seconds)
    (20/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.172130452 seconds)
    (21/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.106923187 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.152687023 seconds)
    (23/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.266380826 seconds)
    (24/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.198746372 seconds)
    (25/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.155952823 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.123291673 seconds)
    (27/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.307044344 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.178015471 seconds)
    (29/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.175162238 seconds)
    (30/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.075894388 seconds)
    (31/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.138980201 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.120546887 seconds)
    (33/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.24950438 seconds)
    (34/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.212444519 seconds)
    (35/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.055400268 seconds)
    (36/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.07671577 seconds)
    (37/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.10439251 seconds)
    (38/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.270342853 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.095616386 seconds)
    (40/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.178498837 seconds)
    (41/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.083570628 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.117755541 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.098910036 seconds)
    (44/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.078972696 seconds)
    (45/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.077019874 seconds)
    (46/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.171750575 seconds)
    (47/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.081936847 seconds)
    (48/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.128628862 seconds)
    (49/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.205354842 seconds)
    (50/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.067413747 seconds)
    (51/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.082964557 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.125417227 seconds)
    (53/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.097453514 seconds)
    (54/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.101788993 seconds)
    (55/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.094212001 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.101595252 seconds)
    (57/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.147197338 seconds)
    (58/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.10607787 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.120521126 seconds)
    (60/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.072445449 seconds)
    (61/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.245940256 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.069928037 seconds)
    (63/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.165323634 seconds)
    (64/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.055604143 seconds)
    (65/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.100167605 seconds)
    (66/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.177022358 seconds)
    (67/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.128861872 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.071444094 seconds)
    (69/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.076205671 seconds)
    (70/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.100872653 seconds)
    (71/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.068670475 seconds)
    (72/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.101697627 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.080122699 seconds)
    (74/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.167281069 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.169049845 seconds)
    (76/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.102254279 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.125710849 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.068690008 seconds)
    (79/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.075059497 seconds)
    (80/309) benchmarking ("sort", Int8, false)...
    done (took 0.17105012 seconds)
    (81/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.260079244 seconds)
    (82/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.101978001 seconds)
    (83/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.076424198 seconds)
    (84/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.104306613 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.095002876 seconds)
    (86/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.132849839 seconds)
    (87/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.056915203 seconds)
    (88/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.255115321 seconds)
    (89/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.056510919 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 0.06973868 seconds)
    (91/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.09989391 seconds)
    (92/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.221956929 seconds)
    (93/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.101224685 seconds)
    (94/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.083647081 seconds)
    (95/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.244944962 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.097283336 seconds)
    (97/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.078171947 seconds)
    (98/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076283938 seconds)
    (99/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.100577375 seconds)
    (100/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.0577035 seconds)
    (101/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.138614637 seconds)
    (102/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.25286656 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.124823982 seconds)
    (104/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.077458573 seconds)
    (105/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.117672338 seconds)
    (106/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083670387 seconds)
    (107/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.090182452 seconds)
    (108/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.102875665 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.128733401 seconds)
    (110/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.055319142 seconds)
    (111/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.079654936 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.092885077 seconds)
    (113/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.079613966 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.119185029 seconds)
    (115/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.084449633 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076124072 seconds)
    (117/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.089272546 seconds)
    (118/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.080665488 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.131119395 seconds)
    (120/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.070616823 seconds)
    (121/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.06591292 seconds)
    (122/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.080641654 seconds)
    (123/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.055609794 seconds)
    (124/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.070134072 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.174384736 seconds)
    (126/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.0559171 seconds)
    (127/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.094346644 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.130848811 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.123918947 seconds)
    (130/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.256441114 seconds)
    (131/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.073346261 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 0.164243642 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.078018088 seconds)
    (134/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.095099661 seconds)
    (135/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.108397332 seconds)
    (136/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.09531888 seconds)
    (137/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.055668467 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.077474696 seconds)
    (139/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.09043633 seconds)
    (140/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.160887389 seconds)
    (141/309) benchmarking ("sort", Float32, false)...
    done (took 0.156730653 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.093748361 seconds)
    (143/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.097347075 seconds)
    (144/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.249271449 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.076275319 seconds)
    (146/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077039068 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.122144451 seconds)
    (148/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072157767 seconds)
    (149/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.100062773 seconds)
    (150/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.07189086 seconds)
    (151/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071880315 seconds)
    (152/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.269280788 seconds)
    (153/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.102789999 seconds)
    (154/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.238791247 seconds)
    (155/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.081601188 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.069475745 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.102906172 seconds)
    (158/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.232709289 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.144832091 seconds)
    (160/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.123025203 seconds)
    (161/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.09489359 seconds)
    (162/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077484223 seconds)
    (163/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.118440003 seconds)
    (164/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.082623502 seconds)
    (165/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.200655945 seconds)
    (166/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.073740033 seconds)
    (167/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.10361859 seconds)
    (168/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.057308498 seconds)
    (169/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074054837 seconds)
    (170/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.10496083 seconds)
    (171/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.26564622 seconds)
    (172/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.056568822 seconds)
    (173/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.076995246 seconds)
    (174/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.166295844 seconds)
    (175/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.070810484 seconds)
    (176/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.209161171 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.069813561 seconds)
    (178/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.082848842 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.101168958 seconds)
    (180/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.097463773 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.092869116 seconds)
    (182/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.054615431 seconds)
    (183/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.101162656 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.099365055 seconds)
    (185/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.094336257 seconds)
    (186/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.078961084 seconds)
    (187/309) benchmarking ("sort", Float64, false)...
    done (took 0.154463169 seconds)
    (188/309) benchmarking ("sort", BigInt, false)...
    done (took 0.434865839 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07511231 seconds)
    (190/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.05472656 seconds)
    (191/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.080571412 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.127771521 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.116208109 seconds)
    (194/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.068706321 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.102880627 seconds)
    (196/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.056588603 seconds)
    (197/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.055173185 seconds)
    (198/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.080888453 seconds)
    (199/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.056210925 seconds)
    (200/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.068782469 seconds)
    (201/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.134367412 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.068531062 seconds)
    (203/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.245423134 seconds)
    (204/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.073321276 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.1625246 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.094812074 seconds)
    (207/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.079877246 seconds)
    (208/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.082832578 seconds)
    (209/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.116367002 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.070235176 seconds)
    (211/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.074256161 seconds)
    (212/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.100277151 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.078868967 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076278396 seconds)
    (215/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.119923221 seconds)
    (216/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.055335826 seconds)
    (217/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.082466704 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.104256867 seconds)
    (219/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.100496623 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.114254751 seconds)
    (221/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.12121767 seconds)
    (222/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.0698833 seconds)
    (223/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.05383372 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.103669739 seconds)
    (225/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.055528086 seconds)
    (226/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.071758731 seconds)
    (227/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.210632451 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.093396955 seconds)
    (229/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.055084479 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.169551369 seconds)
    (231/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.14432151 seconds)
    (232/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.093863207 seconds)
    (233/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.071314716 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.164289886 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.069820784 seconds)
    (236/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.057074112 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.118953667 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.06902703 seconds)
    (239/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.055289807 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.115521695 seconds)
    (241/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.074835101 seconds)
    (242/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.10215515 seconds)
    (243/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.069267647 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.168662773 seconds)
    (245/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.065023461 seconds)
    (246/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.248765562 seconds)
    (247/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075219034 seconds)
    (248/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.095040469 seconds)
    (249/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.056966593 seconds)
    (250/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.245375746 seconds)
    (251/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.056685628 seconds)
    (252/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.05489728 seconds)
    (253/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.05550884 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.17680104 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.15242352 seconds)
    (256/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.055496822 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075308184 seconds)
    (258/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.100454967 seconds)
    (259/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.056493869 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.144082411 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076762465 seconds)
    (262/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.109560623 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.091083673 seconds)
    (264/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.244256329 seconds)
    (265/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.054701334 seconds)
    (266/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.090063663 seconds)
    (267/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.10889895 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.06846325 seconds)
    (269/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.102756381 seconds)
    (270/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.065621992 seconds)
    (271/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076560116 seconds)
    (272/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.200241819 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.093250126 seconds)
    (274/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.069433403 seconds)
    (275/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.077211333 seconds)
    (276/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.096309665 seconds)
    (277/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.056589035 seconds)
    (278/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.067628704 seconds)
    (279/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.195584436 seconds)
    (280/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.072172725 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.094619027 seconds)
    (282/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.064434454 seconds)
    (283/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.063147471 seconds)
    (284/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.102431537 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.097125002 seconds)
    (286/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.080489017 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.07081585 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.068801716 seconds)
    (289/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.082142918 seconds)
    (290/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.056854985 seconds)
    (291/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.054673501 seconds)
    (292/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.053889608 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.102480599 seconds)
    (294/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.069380808 seconds)
    (295/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.095934168 seconds)
    (296/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.069639276 seconds)
    (297/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071631034 seconds)
    (298/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.079512351 seconds)
    (299/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.066086745 seconds)
    (300/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.080282485 seconds)
    (301/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.079841769 seconds)
    (302/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.057100232 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074872098 seconds)
    (304/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.089363325 seconds)
    (305/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.057375325 seconds)
    (306/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.071927815 seconds)
    (307/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.079573184 seconds)
    (308/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.073404354 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.171481853 seconds)
  done (took 36.321356072 seconds)
done (took 37.33871936 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085019798 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.120716922 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07947575 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.121249744 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.085628848 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.10583879 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.07816803 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.082129699 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.110786726 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.084616887 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.109006041 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057608197 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.103722169 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078758564 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.1030776 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096721795 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.106599698 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.077024406 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076016767 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.09420435 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07651944 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.093035078 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.071565421 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057695138 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.106168806 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076908039 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074828367 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.104341748 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06898724 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.093463073 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072949454 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075714692 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.094445226 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081952335 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.100049519 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.078022361 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077974537 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.105314209 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071439708 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.093546153 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078100317 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068293915 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.100923759 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.077023059 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07422616 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.100663908 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076973783 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.107676319 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094983364 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.097778187 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077865654 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.1042166 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.081847189 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074855167 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.099822485 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.077524597 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.098469938 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097504304 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.102024722 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072984662 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076500024 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.103656869 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075437296 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076337465 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.103807028 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.078696652 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.105203432 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.075365687 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.102660932 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075969616 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.068588823 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.103133399 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073389636 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068940274 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.104968191 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.080037391 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.092505033 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.076293795 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.075894525 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.100980957 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06891341 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070913642 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.097713404 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.076312717 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095914158 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.059120085 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.072798238 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.09956389 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.069607944 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07737646 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.100649283 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076571951 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070799455 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.106185986 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068391284 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.099278861 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.070298858 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06867419 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.096672922 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073961418 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068300656 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.098036045 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.07820637 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.094829375 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.076834641 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.08302259 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.094576154 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075805032 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.068474449 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.095252376 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.084563207 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.104809 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.069352034 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.0957951 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.070183849 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076145979 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.093539847 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.069871118 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068094023 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.094284838 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.076597697 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.069137823 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09792394 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07683978 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.107763838 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.070141017 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072559955 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097330102 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.070101581 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074819666 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.09477935 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.069645253 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.071129174 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.092460023 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072408457 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.093080541 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.078375169 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072233932 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.10203399 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.071458708 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07700537 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.100347119 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075646065 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.098859565 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.069421772 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.062035295 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096437708 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072905099 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070950302 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.094744426 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.072469026 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068773131 seconds)
done (took 13.948658482 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069705783 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.175530077 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.131513272 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.101090769 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.117462283 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06951806 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.107072889 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.106402891 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.097790448 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.13238663 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092342964 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.112972001 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.118422678 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.0942468 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.070233036 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.072719803 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.096886875 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.092075311 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.132407365 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.113855512 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.120875693 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.094801664 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.12550666 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.095505984 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.117222068 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.097077733 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.095280589 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.073415582 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072084607 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.131588933 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.114603836 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.074274036 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.069203807 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.1311785 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.123480523 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.089537135 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.094007849 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.088911956 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.093710107 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.070972428 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.119588528 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.103880877 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.111966535 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.085037879 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.102575075 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.073017686 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.095624382 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.09110505 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.120517886 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.084548042 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.118889148 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.140647748 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072524152 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.113433733 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068015952 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.118282289 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.109463376 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.074318481 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069895407 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.096451779 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.070247758 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072273714 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.118363135 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.120637856 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074443017 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.111090593 seconds)
  done (took 7.669584379 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086842092 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.121704209 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.088689371 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.1132414 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069782277 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069358252 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.095653845 seconds)
  done (took 1.716140267 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070585642 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092101335 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.119585203 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093216771 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.116554386 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.090353699 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.106880284 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069885052 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.113924259 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.071625006 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.116449736 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.109788951 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.096597411 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078795644 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.119411396 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.071849709 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094182066 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.09616249 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073927249 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.120091774 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07449743 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.115824509 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.073962167 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070261803 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111775674 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.071000973 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.144173469 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075271554 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.096742181 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.075322579 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068882261 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.14600888 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.110386662 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.082408305 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069363644 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.111242862 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085696262 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094853193 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087879196 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.101019191 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.086260754 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070407286 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.097761374 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069045897 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.074255775 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.107587328 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.071208052 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.097113171 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.073995724 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.090779804 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.098281567 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08437702 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.096825102 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.075418101 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070826473 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.103369302 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081059249 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.097213703 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.092299964 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071617022 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.114089098 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086973767 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.111768698 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086561166 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.100020995 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.085212374 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.111216786 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.074132014 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071940434 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.100557757 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087417723 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.093985169 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.073002209 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.08071806 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.098597291 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.09419134 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.120415977 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072069771 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.106439087 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.071754819 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070891383 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.096795963 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.093991199 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.100051512 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071687629 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073815762 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.099677307 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.069464325 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068635508 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.100999715 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069029752 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.09671931 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.075633025 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071123934 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.098716392 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.089409976 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.094918987 seconds)
  done (took 9.850525897 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070847888 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069512413 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.096659072 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.072005323 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070980883 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.097726315 seconds)
  done (took 1.560936669 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09984412 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.096217855 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.086200361 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.100423439 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.111477416 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.112584907 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087539813 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113582428 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088411092 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.10946579 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.08650862 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.112854851 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092784974 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.103303598 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08655409 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.103027885 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.08803893 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.106444515 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.083674792 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102679369 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.092925662 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.10279264 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078804301 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.111945937 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076401843 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.077082282 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.108145587 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.083055494 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.108672073 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.085849738 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.10342256 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074829538 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.102077216 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.086790061 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.113231252 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.076115586 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.103090002 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076463311 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.106628811 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.076624979 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.111957112 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079273964 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.081366526 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.102618968 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.110212326 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.077740195 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.075019472 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.107253711 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085792251 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.102474037 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07648951 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.103642055 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075614879 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.1005885 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.077780705 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.111166454 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07711941 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.11138872 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.078778547 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075706018 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.100516692 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075389177 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.113088386 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075080711 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.112185338 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074979974 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.101647456 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078219299 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.103525577 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.078320867 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075026526 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.100736359 seconds)
  done (took 7.813214945 seconds)
done (took 29.682347963 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.664961232 seconds)
  done (took 1.745946476 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.783748738 seconds)
  done (took 1.865823598 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.90718277 seconds)
  done (took 16.996324493 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.632953299 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.798694047 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.827664915 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.137387762 seconds)
  done (took 3.479422403 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.925849244 seconds)
  done (took 2.034369293 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.239833673 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.225661431 seconds)
  done (took 1.553630175 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.769864846 seconds)
  done (took 1.865950692 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.379878755 seconds)
  done (took 2.466316273 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.326566253 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.182541297 seconds)
  done (took 1.609980605 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.537164438 seconds)
  done (took 1.637088729 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.860837427 seconds)
  done (took 7.962441381 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.23201977 seconds)
  done (took 1.339677486 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.273170002 seconds)
  done (took 1.372658644 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.337211613 seconds)
  done (took 4.434446711 seconds)
done (took 51.457392208 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080757496 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082470445 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.107658909 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079854249 seconds)
  done (took 1.439590584 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.080850016 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075946489 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.108044332 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075907994 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.10820774 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.077724741 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.104300539 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.083224741 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.075195295 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.105950541 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.076714787 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.102459791 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.080089144 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.104023888 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.076048802 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.079368388 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.107507691 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.076541806 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.106401373 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.077582428 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.073806222 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.105349502 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.079318034 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.102086796 seconds)
  done (took 3.251493702 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079863581 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075749123 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.104393312 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075626384 seconds)
  done (took 1.440361733 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080548108 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.118618393 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093786093 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.106339264 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.097604441 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.117995123 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.074181347 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072931623 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.102692945 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080461359 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.097258571 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.103447677 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.11833782 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080681477 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.108402369 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070750459 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.072001142 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.117747038 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080805082 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.108895103 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.074654586 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.108567962 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.073930587 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.093748011 seconds)
  done (took 3.366101375 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080978452 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10514796 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.109588026 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.092321384 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.123192032 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.0685384 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.107528462 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.095029537 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.158266207 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068550639 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.101661708 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.070186864 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.101303074 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.070562527 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080367993 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.140916312 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.116800054 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.100581491 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.100419757 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.096847686 seconds)
  done (took 3.107484803 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07831976 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.073367848 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.094996704 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.073224237 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079196375 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.103375786 seconds)
  done (took 1.606855223 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.073187845 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070523685 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.096922311 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.0710769 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.075028711 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.097633959 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.070711896 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069472453 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.097892551 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.071592518 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.069667154 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.096359594 seconds)
  done (took 2.065926871 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.443381172 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073138552 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.094493248 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.071217307 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074430108 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.096159269 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085011644 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070894539 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.123733491 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.070038956 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.096480316 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.073295842 seconds)
  done (took 2.482212242 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267071762 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081065611 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.336471068 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173693831 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146638281 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161790772 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107975206 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14666947 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.205994786 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142924044 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206472608 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233282092 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139740381 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17356748 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121423663 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.11164225 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220827294 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229749159 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109029641 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233427115 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213693111 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163142034 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187983451 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135491998 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140983746 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156971962 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07589235 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112351957 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24057874 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166981497 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209966628 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143168932 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101244089 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239744553 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233895433 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204106086 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166078163 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090720437 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.162830279 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.173864535 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266337033 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119912877 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200201687 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140361736 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111319805 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178483203 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151593037 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.152718102 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.143532663 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120110778 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18159813 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249038764 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.171902642 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119449517 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142192582 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147693425 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.148194857 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10823147 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25099029 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226644932 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164551217 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.101482102 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102025337 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220530749 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165917649 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.148276166 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.160188556 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124756763 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174098592 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.22013462 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152651594 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179733377 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.191199917 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093788298 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153075841 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.204170149 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163080961 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207416703 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183533351 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.079531209 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159510543 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135964235 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085264002 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.175385804 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079289572 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242704706 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13170876 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.14645032 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144315275 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113836189 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142601531 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229811804 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210179648 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108360669 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.097314453 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135059121 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155860717 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184662659 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119462336 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11295312 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180654523 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.083996302 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171725059 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.106907524 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158247326 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.082290246 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184828386 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169665158 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.080525793 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16343561 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135739206 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.134033328 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170819928 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227438215 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09443898 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115724122 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207679394 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187027162 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.111083708 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20925596 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.195504967 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.134671221 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136192285 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183767501 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276370959 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096499064 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232269646 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140474657 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.089337096 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.120450494 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161877353 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146271531 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.155754739 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087241675 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.184664695 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208892095 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.106969833 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101620592 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198531372 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08757829 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113592371 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145552342 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132553432 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.102055819 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.134045971 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.140104302 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17568252 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15960218 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141102513 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158911592 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131505442 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234044624 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121156843 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.108856884 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138010341 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.10136523 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.171417693 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197281748 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113896123 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233622644 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.161867915 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136029684 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153439456 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088129449 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175947887 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11119777 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.075295494 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206777416 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143664397 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116162096 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.220453495 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136155446 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.161759668 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.158432785 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170087737 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1658184 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.168132807 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140047066 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.120774735 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146468361 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16222519 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.102985033 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.099899471 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.114613124 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137020604 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100640775 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115606354 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177484317 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188029428 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103116466 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147026487 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130282897 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18615764 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.108883231 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164844836 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.153817826 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127662094 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.192516435 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22145989 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17148547 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133427599 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181457099 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.103055336 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078553013 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.124243746 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163504806 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113953091 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089963223 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152113482 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.213408191 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164206635 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17538027 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144144711 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156714353 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194800514 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.103516491 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.121245127 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214872094 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161030158 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.165407669 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096890025 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.132740339 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181246523 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140928388 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249174913 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147526916 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157764414 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217818503 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.137195748 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086225803 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140825262 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172352384 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140214058 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.216537675 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131832188 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09459237 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14418268 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.113479223 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137327166 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163772395 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155584192 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169985204 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.15170012 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199488045 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083657983 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152391656 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159261956 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157596827 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.095765669 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154829246 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201019825 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128948115 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152521069 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221148278 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084659399 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.159200234 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248714736 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208374086 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091416805 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145752266 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157208251 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165699056 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152387898 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175660257 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145036419 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198931833 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116573709 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.118395684 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120016309 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104283554 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140599878 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.128569559 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.146271726 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.15186425 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.128037693 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166268371 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145245211 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143986289 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153936736 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.102418661 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.125164789 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129887163 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216165541 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156001148 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242648454 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.134272952 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.214901908 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206979509 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109607312 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083776685 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.114049436 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176868657 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1173105 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169877757 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.127438393 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11263724 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162199351 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207349002 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1001825 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.101787106 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14424808 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171239858 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14429199 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130465881 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.111713579 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230651182 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.136336624 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08401455 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160147048 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137277418 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13369365 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242205215 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.066819806 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132976745 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081061424 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113502341 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165647402 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19186591 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.116550339 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.162664096 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155469488 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156184301 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166478679 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135994493 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102160486 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147067766 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213654257 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164284607 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.121621188 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119805629 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192617142 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194644667 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140249586 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.126391371 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233930886 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187588624 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.225942217 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.117608221 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14545717 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146234644 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113083041 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206985296 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115141091 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206972139 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114265771 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16970011 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136043662 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12186413 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160004488 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.125705287 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107316181 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209339222 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149277548 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110165232 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082674324 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147972077 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152650574 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136402921 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.103635791 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172261322 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073884567 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195962739 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204887229 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114762176 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139902643 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100431701 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114449867 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140310879 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133197649 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114891223 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.126017831 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238893707 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.122838495 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18851825 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205203655 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149900477 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174013344 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134741487 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.671181679 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.082468765 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223630907 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156744445 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247708044 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131982391 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154067626 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144690992 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159501095 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181757507 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138337283 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.210705885 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169841283 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.15638843 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112752668 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136146503 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145144259 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.096738521 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141301864 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15037526 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151656614 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.135191543 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.156287742 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161300055 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.115012137 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100509212 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224433202 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149383497 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177267869 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20323189 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091005167 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154280258 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206727994 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085356832 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.157417651 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224516549 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14212122 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132705666 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.085287071 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.140279001 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241594043 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07679013 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230012824 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15958248 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146133975 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148199991 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.153425614 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197505614 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143756206 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161729008 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128845516 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.14695537 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150309539 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090241949 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.111091583 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139507213 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148403549 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.105642514 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136526115 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.153776826 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196326386 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.103623636 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103505769 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136932902 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181400165 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247357637 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.12363559 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087213699 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153057073 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175880126 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.149614967 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161639685 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.086654861 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116402688 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.086806588 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.147395639 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.147265368 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150678831 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1097499 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145575915 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236105854 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.118393636 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.232773181 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131447667 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140976842 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.075021399 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.112899427 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102086425 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131954197 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143818017 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132332108 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242861123 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.103670949 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.125957521 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125664098 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.078789711 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115706839 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167435994 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144963003 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157374105 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131696819 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.069342429 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14447989 seconds)
  done (took 74.348590618 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.139863942 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.108675013 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.123131114 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.178389219 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.152211705 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.242642005 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.185291181 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.227455336 seconds)
  done (took 2.544656041 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071678229 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.122965268 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.107128692 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.12249103 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.098057994 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.072991153 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.3098344 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.115523919 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.071686705 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.123708099 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.124098213 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.098609627 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.487406528 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069155103 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.099895113 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.093229825 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070643945 seconds)
  done (took 3.439868588 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.43688268 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.660020257 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.462659539 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075925636 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.009601222 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.112954863 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.546763965 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.169457454 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095685921 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.446051731 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.7279388 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.162558571 seconds)
  done (took 18.099400999 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.079416472 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.073090889 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.116433798 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.087383266 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.103090019 seconds)
  done (took 1.647403321 seconds)
done (took 119.937243484 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084170455 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.354137572 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.05578313 seconds)
  done (took 1.638186143 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086024031 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086852942 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.117689997 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086747356 seconds)
  done (took 1.575366961 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.077687699 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078109429 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.117313409 seconds)
  done (took 1.470195956 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.290431168 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.171132419 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.09495628 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.088685812 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080389809 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.108318127 seconds)
  done (took 1.47574103 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076284513 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076500083 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.104662696 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.080009397 seconds)
  done (took 1.524861493 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079648382 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055794852 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057743851 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.088527103 seconds)
  done (took 1.479506685 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.094014003 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.108741126 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.086087172 seconds)
  done (took 1.481920815 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.110641427 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.114494275 seconds)
  done (took 1.42118935 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08531996 seconds)
  done (took 1.27261692 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.095957433 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.142578826 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.164118504 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.142588881 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.174147856 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.143439541 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.090032307 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.120981699 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.111181584 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.091938407 seconds)
  done (took 2.475778264 seconds)
done (took 17.646315445 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082366926 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.389268922 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364011828 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.119242526 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670963244 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358898454 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.047112707 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.124475347 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127557864 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.100193014 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087685183 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.678950475 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.973144869 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.355747497 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.958504564 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.325526169 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.682089589 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07247768 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069676005 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097888808 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.001626937 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096699542 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06958037 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068536348 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.68045853 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370912485 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096364877 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.323824351 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068506352 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099180791 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355949769 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096072482 seconds)
  done (took 16.193571046 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075769243 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.147216216 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077694539 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085330212 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.100086911 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070740255 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.100556823 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071727651 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.157005208 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071137163 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.118573316 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071622444 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102509928 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074889893 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091228716 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.101697883 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07333306 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072011984 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.101119301 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072100117 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.11911253 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072524417 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070844714 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101931543 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071690901 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.112248652 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072938162 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070880951 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.099804965 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073677398 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099914473 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072971744 seconds)
  done (took 4.079883089 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120792827 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.160220269 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077258102 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136032918 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117208644 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.104669365 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.176901038 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098084238 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.162968993 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071101195 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11887467 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071918311 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.134576415 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072591524 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.120448306 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.073033769 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072130616 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.101593744 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07166444 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.100701825 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091772931 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070725429 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.100878631 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07135574 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.100583415 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085223233 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096659751 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071301639 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069150128 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098536203 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072948875 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069373693 seconds)
  done (took 4.37747187 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.077924227 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078431568 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.115708499 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.088355311 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.101665136 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.076962492 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.077103281 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.102704204 seconds)
  done (took 1.937351983 seconds)
done (took 27.790454062 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.084668814 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072566513 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.105870717 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.085252548 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103556783 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.083933559 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.071180899 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.108327506 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.080630003 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.076218964 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.10953199 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.071674854 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.104317804 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.072503595 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.077710311 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.101153116 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.08416602 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.104356978 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083998884 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082612199 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.103767439 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.081068418 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.106540617 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.084355675 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.111332511 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.08529971 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.086025253 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.107125978 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.072515682 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.103326548 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.081856316 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.087851591 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.102163864 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082346292 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.100766193 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.072426731 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071057054 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.101059455 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083141941 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.106538565 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.075072771 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.105854844 seconds)
  done (took 4.981082348 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.093677347 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092068229 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.119764743 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.074131928 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.10391466 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066451921 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.120457904 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.075786487 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.098087505 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.094892085 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.058717645 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.092398192 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.076719211 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.065404174 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.102058547 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.060566123 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062247734 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.089183689 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.064091872 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.062781228 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.08893738 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.059367316 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.064171735 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.066390032 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.089316559 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.06630602 seconds)
  done (took 3.323678302 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.080462216 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088278896 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.121946991 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134285499 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.140691409 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080958476 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.112370298 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092416907 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.120685148 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.071092499 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073807842 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.13150021 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092468834 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.108362434 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.072192362 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.134751537 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.086590929 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072766775 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.10826375 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.094113128 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.118441823 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.08173974 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.127632261 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.086330695 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070124036 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10377362 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075028224 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.114582606 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.076813483 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079296578 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.106341734 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.074378919 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.102605722 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.083144122 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.103536871 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.07448222 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09397426 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.111222783 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.082216779 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.100252751 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.07605481 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071678097 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.120880597 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.115211152 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.100508789 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.079178646 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.106306438 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082256897 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070795919 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.119762644 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080570692 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069591461 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.105163559 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070147237 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.099505368 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085382093 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072986889 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.103702859 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.080574699 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.102707437 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085536385 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074731193 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.116724137 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.071146137 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.107444846 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.072187514 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.071750627 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.100716612 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096992668 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.101152818 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.116366934 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.100634436 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.074117364 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079364841 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.108978034 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077051195 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.099399637 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.0883982 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080279276 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.104844507 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07994922 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.103120477 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.076056796 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.092821283 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.103959285 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.073529608 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.071781045 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.108113879 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.073757604 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.101512521 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085665138 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070853921 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.104902378 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.088752425 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.09942207 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.074017003 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.077006674 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.106012557 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070828812 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.113385791 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.076871221 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070888169 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.111214296 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.070322665 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.103769294 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.08211986 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07505535 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.100820655 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.075624305 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.106958469 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.072407606 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071284779 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.104746009 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.072471123 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.108992168 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.078655208 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076098726 seconds)
  done (took 11.988205553 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.198380891 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.193219045 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074258206 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.182969588 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07777742 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.110748801 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.184563027 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.100554892 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.102065143 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.073009952 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.073285657 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.137848169 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.100163813 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.144152352 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.112550565 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.071902606 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.118553184 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.110021364 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.189704901 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.184359998 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.119385916 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.081832191 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.073486961 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.103991495 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07415399 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080733491 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.12223363 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.079105338 seconds)
  done (took 4.513127301 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08576903 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.141507589 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07883793 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.09467128 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.124820009 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070944211 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.109373094 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.073546615 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.113219968 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.084511686 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.101179827 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.078485551 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.077405694 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.112248037 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071641594 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.11073827 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.08215451 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.072719873 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.105893889 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.077451008 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.113721441 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.084530283 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.104071578 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.072016735 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077199701 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.100929932 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.068446431 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.119822592 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.07095182 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.124846211 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.07077739 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.077097396 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.121127225 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071401548 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.100175664 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.076509278 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.074068967 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.104589529 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073500619 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.069666046 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.100919756 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.061421063 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.069733009 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.115097061 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076961522 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.093768379 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.077881647 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.106145092 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.079160515 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.069674066 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.103965724 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.075003592 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.074534064 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.115850811 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.077078839 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.10515865 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.07748797 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.070448159 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.110061267 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.075554449 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.067439944 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.100127512 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.077017957 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.099592928 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.080855707 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.075719049 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.100687189 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.075990391 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.07547418 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.108152799 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.074918556 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.102342215 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.070755347 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.07390362 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.105905752 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.076716734 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.075459084 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.100446691 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.071733753 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070434745 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.090448689 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.071381377 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.056895779 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.105664531 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069863963 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.098423959 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.07581654 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.077379961 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.11450933 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.072957641 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.107098245 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.072824952 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070280463 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.105112219 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.067400823 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.102488836 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.092638019 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.116946616 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.072502191 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068777333 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.119655917 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.076562496 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.099373354 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.061233052 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.078784769 seconds)
  done (took 10.44813701 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.10118665 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092628101 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.100100265 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085798818 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.126803868 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.095445186 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.105795641 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076574401 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070956351 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.119014381 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.071645467 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.110069752 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.073015736 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080647975 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.133042905 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.080480612 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.103750363 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.082044462 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.075715366 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.145162502 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088157675 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.11656109 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.086350546 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.101270186 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077952769 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.084019031 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.131952815 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.084604576 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.113568304 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.090729831 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.084153413 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.131377449 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.089963831 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.105419112 seconds)
  done (took 4.556643846 seconds)
done (took 41.023257551 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.29277568 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.516876274 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.285582537 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.256282455 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.342254695 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.313084918 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.296530856 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.286804412 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.684158546 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.290789821 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.569011763 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.051856641 seconds)
done (took 60.419536841 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.386065135 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.433221957 seconds)
    (2/2) benchmarking "String"...
    done (took 1.563494429 seconds)
  done (took 4.232618517 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.65905853 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.34068081 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.583160021 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.308379148 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.293413485 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.740486397 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.992967049 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.157920169 seconds)
  done (took 28.653113074 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.302430541 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.666508148 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.779931099 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.780193466 seconds)
  done (took 18.766951441 seconds)
done (took 61.928070573 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.294180618 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.335130935 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.294169713 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.278451097 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.40348157 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.315286417 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.548784255 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.486668047 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.292117612 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.282212853 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.308241188 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.295351993 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.299940027 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.523281291 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.292720102 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.296370626 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.31034389 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.707242491 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.697897308 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.306758655 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.316250505 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.338663148 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.29516218 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.297176525 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.365859069 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.292352212 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.295704967 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.294118061 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.669254295 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.296135199 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.397104941 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.679707502 seconds)
  done (took 194.343483776 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.296800595 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.274869776 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.376903145 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.339428956 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.775467063 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.494517704 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.435013815 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.864907343 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.315783998 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.321461299 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.511102652 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.296601607 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.592332105 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.266793813 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.305074292 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.405320841 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.592058649 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.638582917 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.315332363 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.570361556 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.312383559 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.459921006 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.390789869 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.506729615 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.31134001 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.347579318 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.323757877 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.299366169 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.489885491 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.514474949 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.330472992 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.332492293 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.887718092 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.158923339 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.297560007 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.32384053 seconds)
  done (took 153.514625494 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.603463897 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.297573302 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.297923207 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.298644005 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.327927451 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.297193616 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.852111862 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.849021565 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.798998384 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.31001105 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.357915641 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.564685269 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.299943198 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.391621481 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.308689001 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.298585705 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.313039913 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.323345321 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.295028807 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.298335263 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.852332623 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.312734891 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.394799395 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.303569422 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.299985501 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.329708236 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.694003177 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.296910145 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.329920468 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.618846031 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.343425864 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.296186648 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.620130535 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.122223097 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.409667891 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.300508833 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.330325027 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.299298412 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.572594298 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.297665667 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.299909303 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.302315961 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.900851522 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.300757854 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.854536532 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.299606759 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.2273613 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.300839496 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.300240279 seconds)
    (49/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.299672148 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.504404198 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.800082653 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.300290967 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.300062312 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.301486175 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.300610448 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.300301691 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.331958995 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.502841668 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.399371079 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.300504957 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.300725358 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.304935056 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.332740779 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.300973173 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.316638167 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.30222373 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.372578169 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.359889258 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.409454551 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.85744681 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.302175842 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.39628507 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.419188764 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.299119979 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.302510711 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.301188316 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.30148835 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.302381745 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.300683704 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.408777282 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.299959083 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.712693321 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.305199311 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.303158731 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.362470092 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.397267426 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.298544466 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.639299417 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.302958785 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.302289414 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.01209212 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.395976002 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.300258026 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.301404107 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.302568616 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.710988477 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.856490812 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.482224374 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.301825237 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.507291553 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.302314943 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.724380211 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.832337923 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.933945951 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.30399902 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.414853505 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.305639808 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.306286064 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.301833738 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.332696637 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.30519098 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.36622555 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.301952045 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.702669477 seconds)
  done (took 355.199389967 seconds)
done (took 705.89819589 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.973941476 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.961075676 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.08133398 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.958882227 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.937584614 seconds)
  done (took 11.157970654 seconds)
done (took 12.403511169 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.501784738 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.502085286 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.366335515 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.505225431 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.334703088 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.522834816 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.479907792 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.324203299 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.411905618 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.386426435 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.409489277 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.356782624 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.332254491 seconds)
  done (took 19.67991092 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.630443995 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.658566896 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.371024074 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.631846094 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.347397272 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.638649758 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.509610823 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.521129548 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.503129161 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.320893088 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.321955826 seconds)
  done (took 17.701772651 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.63779052 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.630976435 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.373977847 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.629639614 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.347894348 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.638954661 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.506796401 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.520093896 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.503763275 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.322670894 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.322761072 seconds)
  done (took 17.680849252 seconds)
done (took 56.309333325 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.31491248 seconds)
  done (took 2.560516734 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.351750533 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.517346045 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.329749104 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.321749024 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.315009566 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.314307138 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.318169161 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.314683889 seconds)
  done (took 12.030375269 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.314461487 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.316277554 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.314204498 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.315794217 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.314862849 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.314708433 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.316748841 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.313854868 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.31699737 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.316209504 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.317441489 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.316842604 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.314354921 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.314413735 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.317508002 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.317219127 seconds)
  done (took 22.29990795 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.318119733 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.315934316 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.313446721 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.314986333 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.313996249 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.314031201 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.316214181 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.317286424 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.313778295 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.313762643 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.316008922 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.312534953 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.315250577 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.314174677 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.315140782 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.316633224 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.313969398 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.313456927 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.318764586 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.313402049 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.314922724 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.315362584 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.317065526 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.316140658 seconds)
  done (took 32.816008269 seconds)
done (took 70.952117094 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.366049825 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.96153285 seconds)
  done (took 9.575173794 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.319342711 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.318753039 seconds)
  done (took 3.885339537 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.316955016 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.317428127 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.320292859 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.314606637 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.314698136 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.315241332 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.316201561 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.314606907 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.316983516 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.318888577 seconds)
  done (took 14.414030817 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.316466743 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.315420288 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.313083541 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.317065862 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.315085342 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.313296701 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.31632727 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.315536001 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.316927165 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.313627214 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.315970047 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.313756208 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.316132162 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.313650374 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.316750014 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.31356278 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.313669 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.313944682 seconds)
  done (took 24.916646244 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.315025299 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.315998773 seconds)
  done (took 3.878462991 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.312911608 seconds)
    (2/7) benchmarking "second"...
    done (took 1.314348358 seconds)
    (3/7) benchmarking "month"...
    done (took 1.314911306 seconds)
    (4/7) benchmarking "year"...
    done (took 1.315143628 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.314334478 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.315501513 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.313347036 seconds)
  done (took 10.449085479 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.317536913 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.491707252 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.575518035 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.887520361 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.319929081 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.319730274 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.16454621 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.322159561 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.323551698 seconds)
  done (took 14.970620533 seconds)
done (took 83.337496139 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.339619829 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.307214667 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.227996526 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.327291912 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.323941414 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.609565608 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.328973625 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.434739163 seconds)
done (took 38.148383158 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.32759294 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.02987453 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.033826718 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.312557289 seconds)
  done (took 11.629055925 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.296377368 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.269188493 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.311620584 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.360916977 seconds)
  done (took 18.492041877 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.942306415 seconds)
    (2/2) benchmarking "read"...
    done (took 1.646057257 seconds)
  done (took 4.840134929 seconds)
done (took 42.540373814 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.321075659 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.32286284 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.321570748 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.318458482 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.322438798 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.31865052 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.317716683 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.320543961 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.321744998 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.322890868 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.322551677 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.322326273 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.319935405 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.319754091 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.321879439 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.319399983 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.318433081 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.318417522 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.319202343 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.318819496 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.321924742 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.321656617 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.319775025 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.320233239 seconds)
  done (took 32.942518542 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.321416049 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.320457677 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.321241029 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.321574223 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.319514049 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.322254231 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.323217862 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.322006767 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.322540583 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.323390891 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.321001529 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.319734842 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.324109432 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.320554409 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.323087686 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.321583654 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.323757161 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.320534472 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.322924629 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.321212386 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.323124879 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.320443609 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.322621646 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.324383119 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.321465352 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.32094908 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.323549832 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.321559897 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.324887325 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.324656966 seconds)
  done (took 40.917636166 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.327152691 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.332882241 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.324859126 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.324362 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.323527582 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.322137796 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.326090399 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.320464458 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.321281303 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.320946852 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.318370498 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.320848898 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.320835666 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.323184474 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.321260589 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.320416817 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.320835995 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.321005242 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.322804435 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.32224585 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.321409012 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.322427955 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.319626207 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.322697353 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.320836374 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.319318996 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.32178418 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.32208514 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.322122234 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.319949738 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.32334784 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.320064701 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.322598749 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.322737128 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.322918646 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.32283673 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.327179838 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.330424761 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.322794053 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.323234889 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.322781291 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.322901546 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.323577917 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.323179256 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.323328093 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.321360567 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.322779924 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.321956078 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.32281269 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.321411397 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.323581699 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.324136934 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.321371157 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.323224424 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.321941395 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.320774885 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.324074351 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.323760216 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.322649352 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.324103104 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.321450971 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.321614959 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.321569144 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.322238604 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.321660641 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.32402718 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.323476414 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.321993232 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.324499067 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.322098389 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.322219451 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.322069173 seconds)
  done (took 96.486819862 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.323507496 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.320815935 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.320475288 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.321535887 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.320345328 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.321206073 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.3216863 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.324070333 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.321986405 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.32574867 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.324712771 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.318448754 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.321270681 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.325861781 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.32429582 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.323299556 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.325929935 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.322058959 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.325153124 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.326086159 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.324445476 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.320662759 seconds)
  done (took 30.359482957 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.325780609 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.32405798 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.325298978 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.325548109 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.322462681 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.326363679 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.323374983 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.326519624 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.326101472 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.32448219 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.320621773 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.324781849 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.322576604 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.321980468 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.324729534 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.323947623 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.322372518 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.322617108 seconds)
  done (took 25.091079933 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.323395527 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.318499333 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.326679552 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.321587766 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.322829246 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.32687335 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.321988492 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.323160182 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.326711826 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.322664631 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.324539821 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.32519503 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.32407235 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.321596019 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.325120204 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.322013796 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.324154697 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.322541193 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.324127271 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.320275329 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.320070546 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.3248845 seconds)
  done (took 30.368466648 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.322908844 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.322821233 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.324321128 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.32209728 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.320224234 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.325530885 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.326590357 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.3228903 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.327293553 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.327518042 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.324139401 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.324604064 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.322137374 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.322369825 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.324520202 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.322155369 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.325924558 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.325179097 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.325743608 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.322963837 seconds)
  done (took 27.739550527 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.327214792 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.323145115 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.32815506 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.325822619 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.325876217 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.327537368 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.324750328 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.32853388 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.325086096 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.328202571 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.32858922 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.324778174 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.324375671 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.326535545 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.32677502 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.326332729 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.327888598 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.326068832 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.325420071 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.326444376 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.325447902 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.330342094 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.326206564 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.325474379 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.327785254 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.32722289 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.326087679 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.329251353 seconds)
  done (took 38.402899936 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.329446229 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.324449408 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.324075076 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.32430219 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.323516049 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.324407394 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.326080271 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.325839167 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.326983018 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.321381807 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.326338298 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.328030832 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.325789329 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.326873464 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.32626656 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.331131453 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.327689279 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.326738967 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.325285465 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.327214588 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.327666215 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.328727841 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.326399618 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.329177162 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.326092837 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.328575167 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.327520342 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.323888991 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.326274532 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.326430015 seconds)
  done (took 41.053963614 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.346971787 seconds)
    (2/2) benchmarking "in"...
    done (took 1.349904392 seconds)
  done (took 3.954383726 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.328352305 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.329371568 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.32817291 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.32484376 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.325969156 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.327467106 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.328409079 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.325853624 seconds)
  done (took 11.88098942 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.324822144 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.326594153 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.333630138 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.327501998 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.329411207 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.327639789 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.335192412 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.345826513 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.330126354 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.32962759 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.334713443 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.336256817 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.335507318 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.326093277 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.327692403 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.330071427 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.328772348 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.329030567 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.331034671 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.330542432 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.326005709 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.329357924 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.330269379 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.331928858 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.329890906 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.342436172 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.335990146 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.330909417 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.328150635 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.335458333 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.330203537 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.327993048 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.331049413 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.329790481 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.331158715 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.330900273 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.338910834 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.344376176 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.338041498 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.331868984 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.330421545 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.329689634 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.333672812 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.330371808 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.332336893 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.327914817 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.330049502 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.329300243 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.329775845 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.331609623 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.33671764 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.32628243 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.327362176 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.33492388 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.330224172 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.336673579 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.346870507 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.334221637 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.338534073 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.343901615 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.343387546 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.339932841 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.332317292 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.333854391 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.340270666 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.355206977 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.340745544 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.34532848 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.331809798 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.333295342 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.341763444 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.346294882 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.34494568 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.330686863 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.331529882 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.335362725 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.335042247 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.332163487 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.341816119 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.353306318 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.332291494 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.331409031 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.342808514 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.354308812 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.33228225 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.329795981 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.333897911 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.330903024 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.337262543 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.344765404 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.349439197 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.333212993 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.331664369 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.332621571 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.335901294 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.332722904 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.331788638 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.335053698 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.332231182 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.33403311 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.333450965 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.339215749 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.342135723 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.331598311 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.332151729 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.34227395 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.33818893 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.332119973 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.345055873 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.336459805 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.331762178 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.333385 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.341983524 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.335291772 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.335715964 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.341800467 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.332419387 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.336850932 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.332592846 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.335186695 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.342162553 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.364026034 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.338423382 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.338464476 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.341168434 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.345799 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.335509495 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.337030382 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.338385981 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.335449965 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.333930137 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.335739875 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.337255996 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.336864399 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.337108527 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.336498581 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.335859663 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.337530331 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.335159704 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.336738885 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.338216755 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.336202773 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.337930813 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.338892674 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.339364159 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.338261727 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.34441384 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.336213358 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.339831404 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.338152987 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.335362433 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.337892677 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.338670626 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.337734484 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.339954262 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.338166729 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.336236018 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.33498064 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.342194849 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.340788982 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.339138717 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.338973026 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.340177945 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.341549881 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.344048835 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.336080097 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.338136655 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.340214735 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.342402978 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.340367215 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.341797557 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.334025954 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.34217398 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.347704411 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.340193198 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.337880313 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.342707545 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.338769145 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.340821829 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.338704525 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.343852328 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.348860391 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.340215482 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.348896695 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.339226102 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.340171305 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.341471975 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.34185376 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.339578266 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.338165452 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.341329808 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.348103837 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.354981769 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.351243271 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.338935948 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.34400674 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.339635585 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.342870757 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.345519868 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.338965319 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.34186108 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.338820786 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.339066004 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.337901491 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.342779479 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.33934806 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.338332198 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.340904806 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.341812638 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.337894893 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.343163382 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.341349851 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.342133704 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.34101025 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.342145553 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.341348773 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.339827611 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.339236651 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.339646235 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.339169144 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.343155165 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.339418692 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.350552003 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.338782381 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.340944259 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.343212778 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.34148127 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.337875795 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.340624515 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.341213808 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.340067843 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.349176015 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.355075251 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.337770469 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.349478308 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.353642133 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.339005509 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.342052446 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.345876419 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.340025357 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.343155298 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.350687311 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.342248215 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.340483343 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.342723437 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.341381837 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.341252482 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.347531687 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.340326574 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.340549683 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.342371404 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.344146913 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.342556379 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.341617723 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.342309659 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.342119875 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.342433486 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.345143877 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.342039281 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.343448157 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.342235496 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.343874927 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.343900134 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.344260378 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.350489399 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.348300615 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.343964712 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.344836938 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.343063527 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.351153678 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.343186946 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.343275694 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.34467011 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.358650666 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.35370277 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.351723007 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.346721366 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.344977767 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.348615328 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.345425176 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.349216204 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.343074522 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.344350317 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.34186135 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.342113603 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.343939141 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.343993812 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.347852687 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.34489027 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.346110286 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.350449556 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.347213022 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.341592159 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.346636016 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.342535741 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.346978477 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.34439205 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.34735612 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.349249433 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.348562863 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.34346159 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.343376081 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.352711323 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.362405055 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.346744488 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.343720983 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.34467334 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.344773061 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.346176834 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.345299768 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.348380904 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.352050763 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.350424784 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.356156164 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.347156349 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.356887511 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.347907112 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.351571583 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.354323533 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.345137031 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.346213211 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.346926854 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.346833985 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.354889589 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.363242 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.346952495 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.352236918 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.348902369 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.347503741 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.350693252 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.345968124 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.350258959 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.346974126 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.359975248 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.361934147 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.349631294 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.350973446 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.345701666 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.3475292 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.351648149 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.346891023 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.351409739 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.347742274 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.349521652 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.346424797 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.347951199 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.347840613 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.345578496 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.349684817 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.348907357 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.348913191 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.357085172 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.361330634 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.350455424 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.352033921 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.3583153 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.347858148 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.356542955 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.367399375 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.348585168 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.347117887 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.349007437 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.351501152 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.346893363 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.349484978 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.34830842 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.349047773 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.35528727 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.346074223 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.354059758 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.347504419 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.350083539 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.347560996 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.360662127 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.371798567 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.352823952 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.353891185 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.348924784 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.347188281 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.351902443 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.350221143 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.346973375 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.353088903 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.359965422 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.35924854 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.348561628 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.350493748 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.351465651 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.35122838 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.351566032 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.3520383 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.350640051 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.353749477 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.34949019 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.3493542 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.356007307 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.350810799 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.350412494 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.35473312 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.350950892 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.3619377 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.350349586 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.350521406 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.349160658 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.353792467 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.350023326 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.351202159 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.35231641 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.350970268 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.352132852 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.350344531 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.357573761 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.357079356 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.354290626 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.349247166 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.349659763 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.352031505 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.353251442 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.351237028 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.349520676 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.349850715 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.353018089 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.352270435 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.354297219 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.348700597 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.3519982 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.353146328 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.351228863 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.354351372 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.357233659 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.351123184 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.349735529 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.352411137 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.355651125 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.34831807 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.353612744 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.362453181 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.354302311 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.363564431 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.360735921 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.358303259 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.353646457 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.35330914 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.358984362 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.349346536 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.35475571 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.354175746 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.35555925 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.352725002 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.355720238 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.351071099 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.363476391 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.352825156 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.35305161 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.364988656 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.371946291 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.353851702 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.354878364 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.358857856 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.355502249 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.351939318 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.355090016 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.350925213 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.36175786 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.372057543 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.353292306 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.35722902 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.352054734 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.35556016 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.358802599 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.358257877 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.357401337 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.354819441 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.353199223 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.355205979 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.357347015 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.353396725 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.352467413 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.353430279 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.357548847 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.363184421 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.353589932 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.357050509 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.355978083 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.354748073 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.354661517 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.35838615 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.352839023 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.352841588 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.354994724 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.355459743 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.356855792 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.358498412 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.354760869 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.35464237 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.359627295 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.353506332 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.360327788 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.364883849 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.365859242 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.352586739 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.352835044 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.355603459 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.358981096 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.355791539 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.354120785 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.355834668 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.36012268 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.359347299 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.356538877 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.35887482 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.360118608 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.379096568 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.375449105 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.357512484 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.358882199 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.361117304 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.356577911 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.356690377 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.359583984 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.357751399 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.357750847 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.36410682 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.357996449 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.363277963 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.371088512 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.357613287 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.363797915 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.359375137 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.363511092 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.361893645 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.358140779 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.354840997 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.361210393 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.376482465 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.358574716 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.368589255 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.387616591 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.375011554 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.359874433 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.357056921 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.357411021 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.357927378 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.362760343 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.3600248 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.3604977 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.36203245 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.359899101 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.35899253 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.365634114 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.360349828 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.361004788 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.359387065 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.35839773 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.360541056 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.360459438 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.360315072 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.361959541 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.357819782 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.35878021 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.359424315 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.361288339 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.374452718 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.371175026 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.361465666 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.357447979 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.359661502 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.363761108 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.362642672 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.370947656 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.369171878 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.360328672 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.36149506 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.361678752 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.359799957 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.35859257 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.357941596 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.361292342 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.357498094 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.358256173 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.372469727 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.368062661 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.364870143 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.359569004 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.359386721 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.362713929 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.364049424 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.359274319 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.359711195 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.362502773 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.361939122 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.362805203 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.360126074 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.363739599 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.361795809 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.370087192 seconds)
  done (took 804.404652418 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.357695875 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.358650013 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.358665395 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.360582498 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.359251105 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.359378339 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.359722487 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.360383073 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.360054347 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.361239162 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.360156736 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.361170717 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.361903797 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.360801085 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.360097064 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.359650081 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.361205856 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.361975825 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.361558691 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.362744711 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.362936278 seconds)
  done (took 29.861106802 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.36178576 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.359844332 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.361642101 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.365742681 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.359426427 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.363421595 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.362343446 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.363575442 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.363555443 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.364197561 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.363387809 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.362806507 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.362878719 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.361191225 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.360555426 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.363604744 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.362505066 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.361169142 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.362885058 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.362957254 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.365726657 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.360331238 seconds)
  done (took 31.266952971 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.362840628 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.363599132 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.363447254 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.362419734 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.364586964 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.361323561 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.360909016 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.366986639 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.364074014 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.365458561 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.361573088 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.363785514 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.371022689 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.370513531 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.367290262 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.36549299 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.508704232 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.36231147 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.365439026 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.366484447 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.364184804 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.373796137 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.361935722 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.362822986 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.364191862 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.363953501 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.367771355 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.367822162 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.36365048 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.364618749 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.366400994 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.367041838 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.36592929 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.365896933 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.364344588 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.365999611 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.372642743 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.36323597 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.362793381 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.36698473 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.375953493 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.389715418 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.365167996 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.374220801 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.368068839 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.36528615 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.367692643 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.372601163 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.365005671 seconds)
  done (took 68.391415406 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.368306212 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.367842687 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.367002787 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.36735669 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.368465667 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.368215927 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.369097583 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.367752304 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.365278418 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.366987153 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.368815808 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.366795028 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.36606021 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.368421942 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.367446379 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.364322077 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.365211008 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.364797069 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.366857042 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.365457794 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.36571075 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.369359369 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.369512747 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.368350707 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.367658599 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.365474969 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.366080765 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.370681546 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.367333573 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.367225288 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.369390907 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.369386323 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.37052406 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.366799062 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.367370272 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.368881505 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.369982205 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.367075142 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.367838629 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.366017919 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.371231358 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.37148128 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.367546598 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.370525303 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.367762382 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.368684706 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.368072365 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.368604576 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.366262936 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.369528583 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.368340738 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.366382866 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.372330269 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.365093471 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.370468624 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.371027466 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.367100058 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.368172807 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.370710249 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.366622303 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.369205371 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.370376435 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.370463676 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.371909233 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.372278455 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.369049007 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.36956131 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.371999924 seconds)
  done (took 94.341464625 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.367079455 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.367119268 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.368665404 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.368949691 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.370325273 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.371403142 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.370252624 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.369461283 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.368438889 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.37061735 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.370731051 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.37382432 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.370209425 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.374105019 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.36940937 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.369539859 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.370672943 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.369983084 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.371572651 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.371673003 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.369128952 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.370835015 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.369593387 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.37081774 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.369066672 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.371091442 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.370496942 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.371363586 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.371764964 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.370920404 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.369644824 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.370980808 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.371731387 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.371397888 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.370395114 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.370121324 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.37189948 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.37222775 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.369547304 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.371143818 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.370556435 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.371306861 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.372961218 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.368166031 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.372139948 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.3694972 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.372498854 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.372757936 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.376073169 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.370794152 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.372061757 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.373017463 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.372123169 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.37232413 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.370717368 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.37541587 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.372678457 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.373234532 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.371098823 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.373362236 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.371687951 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.374481633 seconds)
  done (took 86.309677971 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.373760915 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.372830456 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.370941375 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.373215538 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.375304109 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.373033248 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.375435183 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.376786515 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.374403631 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.375218706 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.37475792 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.371643134 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.372308932 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.375602926 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.373521779 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.371980308 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.372210052 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.374275084 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.374015149 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.373535193 seconds)
  done (took 28.779411414 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.372667351 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.375826345 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.373292864 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.372845762 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.3754477 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.373806956 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.376258878 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.377044313 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.374329392 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.377136169 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.375916633 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.376770157 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.373625803 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.375017859 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.377408206 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.373336726 seconds)
  done (took 23.308351281 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.372205867 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.375836306 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.374515195 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.374460501 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.375583714 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.374520485 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.377596605 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.375027798 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.374311107 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.377362344 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.378672896 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.378452119 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.377972421 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.376024845 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.374628994 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.377135332 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.375185677 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.374816569 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.376631514 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.376373446 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.374553245 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.374807376 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.378332493 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.378283167 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.376405474 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.375098738 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.375054878 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.375336503 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.375582909 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.377625838 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.37481571 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.377013915 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.377026292 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.376949816 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.37647524 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.377199331 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.378930058 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.378973099 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.378823613 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.379193026 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.380529125 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.377476999 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.379157844 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.380325203 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.377471773 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.380549873 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.378388989 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.377338066 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.376095641 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.377003985 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.379541657 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.377712922 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.379377889 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.380628047 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.380017227 seconds)
  done (took 77.044904686 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.379759547 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.37801402 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.377718575 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.380909023 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.379906588 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.377475524 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.38083895 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.37574813 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.378649825 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.381249761 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.379142723 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.380402364 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.378344684 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.380850824 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.378961167 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.38021565 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.37826523 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.378467712 seconds)
  done (took 26.136175401 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.37842869 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.378386493 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.380075499 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.377627064 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.377969301 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.382141952 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.377772364 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.380294933 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.381585928 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.378121362 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.378430993 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.381823264 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.379629674 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.38175006 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.378252997 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.378383718 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.38228349 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.380479063 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.378355699 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.378153611 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.381643284 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.381233651 seconds)
  done (took 31.665100817 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.377438524 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.379735923 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.395412595 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.421456668 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.407451134 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.378693878 seconds)
  done (took 9.673904397 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.380096212 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.382257425 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.378683414 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.382332878 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.383340915 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.37817219 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.380071151 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.380900525 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.382440809 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.379161484 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.380470171 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.382786593 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.380990878 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.378055878 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.381832285 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.383163284 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.379178208 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.380858063 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.381018463 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.383152098 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.37889008 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.382749208 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.379295803 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.378450455 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.381340191 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.37942271 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.382513263 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.382834465 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.380486432 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.382715833 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.38539976 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.381498874 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381284759 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.379008954 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.385363698 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.383991261 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.379007373 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381713561 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.380392138 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.379290736 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.381618529 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381446547 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381428043 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3804529 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.382562062 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.380053907 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.380819418 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.379866588 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.381961662 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.385012257 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.384382623 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.380022762 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.384625763 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.38503225 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.381681791 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.384670977 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.382700852 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.382482845 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.384220535 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.381410329 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.383168231 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.385062612 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.381345195 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.379926197 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.386005235 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.382897705 seconds)
  done (took 92.505604159 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.381823654 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.382634437 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.382379665 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.384402165 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.38128672 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.38332418 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.382149065 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.381788391 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.382995757 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.381779716 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.386743176 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.380691861 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.383767562 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.381884409 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.382207502 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.383172848 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381221845 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381894218 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.384631358 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.384356779 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.385123678 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.385184273 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.384815508 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.384887179 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.382803476 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.386245624 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381898082 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.385660217 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.381239482 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.38019277 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.383477952 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.382090306 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.384883457 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.382768525 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.381496432 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.383153125 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.382958691 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.383642276 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.385192599 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.387796988 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.383437562 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.384666464 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.382564128 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.384246236 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.385584275 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.383085723 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.384666735 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.383653185 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.385032708 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.383785136 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.387377193 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.383023542 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.381332636 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.382632177 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.382691102 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.384447726 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.382609873 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.382133702 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.384313743 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.389621649 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.384179101 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.384913238 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.385681326 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.38254383 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.384106399 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.382684342 seconds)
  done (took 92.62841626 seconds)
done (took 1876.767031073 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.401031418 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.419738963 seconds)
  done (took 14.130904995 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.54042342 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.498093261 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.381862649 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.406691836 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.380883687 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.39230728 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.377255107 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.379722348 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.385208117 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.38069265 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.381901134 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.573384156 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.405794665 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.382205012 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.381174828 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.47705775 seconds)
  done (took 44.055722733 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.409631636 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.389894281 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.509364343 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.399120448 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.409505827 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.583585279 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.442719751 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.384345653 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.57210731 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.423139019 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.988274439 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.408024465 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.38806289 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.531620315 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.404498055 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.581983001 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.646983126 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.991618444 seconds)
  done (took 31.778948924 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.858983277 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.417335402 seconds)
  done (took 9.59559655 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.430533593 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.41352527 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.399522445 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.412643909 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.401702771 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.381838999 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.451983452 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.459316099 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.37810189 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.404820244 seconds)
  done (took 65.459091988 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.411552042 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.391201464 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.390460782 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.388656916 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.385803574 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.382811277 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.386540959 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.401715448 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.152206747 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.523552541 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.407484776 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.397139529 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.389098119 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.391742598 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.390671374 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.427601726 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.51677863 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.390500015 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.390719979 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.395559783 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.388985642 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.531332338 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.432419792 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.392781858 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.524428033 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.176880617 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.393140233 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.397278019 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.507340763 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.39171644 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.390710541 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.391074563 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.391460704 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.977417787 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.918043512 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.399662311 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.411565315 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.398892565 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.391177007 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.593913893 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.392054143 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.396488245 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.384307185 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.887694692 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.5582946 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.514324022 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.729555515 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.393746185 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.393597125 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.455128445 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.389008564 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.394126316 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.423494593 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.19001475 seconds)
  done (took 115.134587991 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.387337146 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.873209309 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.556979234 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.408203406 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.183322851 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.082194457 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.377585497 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.690586522 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.45053282 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.384079501 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.676700355 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.908857545 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.392979841 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.455407417 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.479786109 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.45502856 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.384240219 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.165210738 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.384239158 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.384746177 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.812750224 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.404947373 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.396291901 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.404373551 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.423397567 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.862838475 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.936402756 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.864764749 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.382796094 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.383769777 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.865859031 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.383456798 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.44283474 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.383398 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.670356424 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.751435466 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.7287246 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.385130025 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.422048544 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.385726313 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.405917133 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.858708029 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.738008208 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.384908307 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.38370293 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.880097286 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.38069182 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.388104999 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.386892004 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.590071808 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.334261752 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.388355863 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.887885453 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.382665875 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.740899165 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.427589272 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.408772951 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.885450153 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.384443163 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.477864109 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.404657764 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.384927552 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.382542783 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.389538883 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.38355058 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.741531957 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.75425832 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.389029101 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.750541283 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.853864791 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.382978501 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.920938902 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.245908043 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.409200652 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.425856612 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.398449754 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.973996005 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.886660311 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.389812366 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.386220889 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.731827228 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.383891126 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.671410125 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.397804838 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.398354274 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.823667797 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.403883233 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.451312223 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.387638347 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.383101523 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.02336077 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.393004365 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.664795677 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.405997286 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.387958019 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.386509546 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.393007309 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.386022315 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.386214456 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.393238824 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.921996517 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.387437692 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.698543552 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.4127619 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.387284623 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.385997276 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.387655128 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.390175878 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.611067002 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.859111705 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.391181468 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.386134605 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.388793393 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.398861418 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.654311449 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.395271295 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.708249125 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.386958537 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.390839354 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.392979319 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.1361858 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.401014605 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.387128403 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.390287608 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.249226966 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.60522392 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.405114751 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.386288425 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.385915376 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.403341686 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.790915196 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.386781894 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.47699775 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.38922063 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.10768368 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.422992076 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.408878068 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.993831383 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.389414578 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.389627566 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.393039396 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.389856098 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.70356794 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.673244374 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.652861713 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.394228083 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.388670988 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.078830024 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.415041365 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.541249939 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.413177392 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.43328109 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.591944374 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.605758764 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.388914183 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.980371496 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.388095337 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.60481329 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.390593663 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.729250668 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.893324181 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.38901983 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.395064888 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.105549061 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.071318765 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.009334207 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.392218553 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.674960802 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.379575079 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.841789978 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.391310515 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.390274394 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.817961186 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.394828248 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.397268098 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.39498686 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.390666119 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.463521813 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.569082834 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.769463199 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.390821152 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.868156752 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.393038355 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.398087059 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.392146087 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.391345039 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.746154489 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.439576073 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.393007356 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.39627121 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.393881735 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.401021875 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.879176092 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.254250992 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.393832672 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.548566497 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.039486475 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.39406382 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.393922961 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.978947644 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.645238551 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.913611093 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.406575137 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.716431551 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.39314519 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.435733871 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.124136664 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.455869901 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.923955963 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.392236037 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.392359559 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.008802306 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.394757054 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.459607857 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.394935951 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.394941874 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.941074688 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.394789657 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.39984242 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.879654889 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.400466589 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.642063588 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.394476444 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.43899754 seconds)
  done (took 1124.285820505 seconds)
done (took 1405.75186455 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.393298557 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.398319457 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.384111055 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.395787864 seconds)
  done (took 26.897616227 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.404304822 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.401139611 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.40088345 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.401422699 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.403242845 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.398468779 seconds)
  done (took 9.741801252 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.47835084 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.395249924 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.398484778 seconds)
  done (took 19.602412061 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.632617955 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.720033132 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.789255959 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.674816044 seconds)
  done (took 11.147301722 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.407102746 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.404013347 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.405806388 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.402847304 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.404617029 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.40685289 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.402268224 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.406662554 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.404592757 seconds)
  done (took 13.975699351 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.497088693 seconds)
done (took 88.191423674 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.477035125 seconds)
    (2/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.617655525 seconds)
    (3/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.968717423 seconds)
    (4/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.410328766 seconds)
    (5/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.197889435 seconds)
    (6/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.802671075 seconds)
    (7/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.810658909 seconds)
    (8/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.007194361 seconds)
    (9/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.502450297 seconds)
    (10/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.771809116 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.655192977 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.452391978 seconds)
    (13/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.881189798 seconds)
    (14/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.810535577 seconds)
    (15/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.401164204 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.424428473 seconds)
    (17/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.500677123 seconds)
    (18/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.182217588 seconds)
    (19/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.809994242 seconds)
    (20/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.394514394 seconds)
    (21/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.462884138 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.950523663 seconds)
    (23/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.381359092 seconds)
    (24/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.483235238 seconds)
    (25/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.62254769 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.8652943 seconds)
    (27/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.680084956 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.514218974 seconds)
    (29/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.050979998 seconds)
    (30/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.465176031 seconds)
    (31/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.39630739 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.349861143 seconds)
    (33/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.220227467 seconds)
    (34/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.323154594 seconds)
    (35/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.81666033 seconds)
    (36/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.411781603 seconds)
    (37/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.486597134 seconds)
    (38/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.538031706 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.609766916 seconds)
    (40/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.977811739 seconds)
    (41/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.519507266 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.469249699 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.061405379 seconds)
    (44/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.822369601 seconds)
    (45/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.502749896 seconds)
    (46/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.33560076 seconds)
    (47/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.426064649 seconds)
    (48/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.615880218 seconds)
    (49/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.380405704 seconds)
    (50/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.44982442 seconds)
    (51/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.740570776 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.342731888 seconds)
    (53/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.589944734 seconds)
    (54/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.413035869 seconds)
    (55/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.143374108 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.5222251 seconds)
    (57/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.770578301 seconds)
    (58/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.40836203 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.661847675 seconds)
    (60/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.501316596 seconds)
    (61/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.017364175 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.294702268 seconds)
    (63/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.381783951 seconds)
    (64/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.849246859 seconds)
    (65/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.487613484 seconds)
    (66/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.400074337 seconds)
    (67/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.791612739 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.457620739 seconds)
    (69/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.399909858 seconds)
    (70/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.48850714 seconds)
    (71/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.398346906 seconds)
    (72/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.427723722 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.823992098 seconds)
    (74/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.339360171 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.494138452 seconds)
    (76/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.247767998 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.39542899 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.337388536 seconds)
    (79/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.861942055 seconds)
    (80/309) benchmarking ("sort", Int8, false)...
    done (took 4.460807884 seconds)
    (81/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.383733315 seconds)
    (82/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.426755675 seconds)
    (83/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.25422049 seconds)
    (84/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.507821859 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.485807299 seconds)
    (86/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.738770049 seconds)
    (87/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.028630284 seconds)
    (88/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.830598939 seconds)
    (89/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.701820024 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 5.627654717 seconds)
    (91/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.426668079 seconds)
    (92/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.066399004 seconds)
    (93/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.443263707 seconds)
    (94/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.512295903 seconds)
    (95/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.722744246 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.272546086 seconds)
    (97/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.799765169 seconds)
    (98/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.430843674 seconds)
    (99/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.510328125 seconds)
    (100/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.841995595 seconds)
    (101/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.399788883 seconds)
    (102/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.610124494 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.157362738 seconds)
    (104/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.401378371 seconds)
    (105/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.438617956 seconds)
    (106/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.900617279 seconds)
    (107/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.992136535 seconds)
    (108/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.071910945 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.452696693 seconds)
    (110/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.10427533 seconds)
    (111/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.410326421 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.763035435 seconds)
    (113/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.476332108 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.971430305 seconds)
    (115/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.730524937 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.614446594 seconds)
    (117/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.893854808 seconds)
    (118/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.502616596 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.477785203 seconds)
    (120/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.403360155 seconds)
    (121/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.655928162 seconds)
    (122/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.100633547 seconds)
    (123/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.288366844 seconds)
    (124/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.400587761 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.40012226 seconds)
    (126/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.496276574 seconds)
    (127/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.399774715 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.484650557 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.850135614 seconds)
    (130/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.599049333 seconds)
    (131/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.504661347 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 1.912448567 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.423183733 seconds)
    (134/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.457217211 seconds)
    (135/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.389060002 seconds)
    (136/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.422129987 seconds)
    (137/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.036403352 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.692419688 seconds)
    (139/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.778429684 seconds)
    (140/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.091724116 seconds)
    (141/309) benchmarking ("sort", Float32, false)...
    done (took 5.432988184 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.285748934 seconds)
    (143/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.396625085 seconds)
    (144/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.470809832 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.206007568 seconds)
    (146/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.414062746 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.682940302 seconds)
    (148/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.525217939 seconds)
    (149/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.874574369 seconds)
    (150/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.539432099 seconds)
    (151/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.46809759 seconds)
    (152/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.388966444 seconds)
    (153/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.5101637 seconds)
    (154/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.283866673 seconds)
    (155/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.071326886 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.363938314 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.833721152 seconds)
    (158/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.924088705 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.473678999 seconds)
    (160/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.402441754 seconds)
    (161/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.196752637 seconds)
    (162/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.428990025 seconds)
    (163/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.434156088 seconds)
    (164/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.410039259 seconds)
    (165/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.407580058 seconds)
    (166/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.428228186 seconds)
    (167/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.434308235 seconds)
    (168/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.394037051 seconds)
    (169/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.524140471 seconds)
    (170/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.426024216 seconds)
    (171/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.26831481 seconds)
    (172/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.730776384 seconds)
    (173/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.43089828 seconds)
    (174/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.40022506 seconds)
    (175/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.388322608 seconds)
    (176/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.425744326 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.360051415 seconds)
    (178/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.417899987 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.452818076 seconds)
    (180/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.491704198 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.988052099 seconds)
    (182/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.739539816 seconds)
    (183/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.496078939 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.44761247 seconds)
    (185/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.404797562 seconds)
    (186/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.421109894 seconds)
    (187/309) benchmarking ("sort", Float64, false)...
    done (took 5.752238689 seconds)
    (188/309) benchmarking ("sort", BigInt, false)...
    done (took 6.406110514 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.444835003 seconds)
    (190/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.269696791 seconds)
    (191/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.77335597 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.390000793 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.818746247 seconds)
    (194/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.965691889 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.452643454 seconds)
    (196/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.389948499 seconds)
    (197/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.065994459 seconds)
    (198/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.957794859 seconds)
    (199/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.917492504 seconds)
    (200/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.897700743 seconds)
    (201/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.787565218 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.467267238 seconds)
    (203/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.227531138 seconds)
    (204/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.049455085 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.507694466 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.979518997 seconds)
    (207/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.627553201 seconds)
    (208/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.162492256 seconds)
    (209/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.444232371 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.150049794 seconds)
    (211/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.631987194 seconds)
    (212/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.539100571 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.94898815 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.630323058 seconds)
    (215/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.490359584 seconds)
    (216/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.395088101 seconds)
    (217/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.393526294 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.40258336 seconds)
    (219/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.438873399 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.453540603 seconds)
    (221/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.417814037 seconds)
    (222/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.404481377 seconds)
    (223/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.751776193 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.434621638 seconds)
    (225/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.852405127 seconds)
    (226/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.453647039 seconds)
    (227/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.410275555 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.468173542 seconds)
    (229/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.685936525 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.40441387 seconds)
    (231/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.405278102 seconds)
    (232/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.531176177 seconds)
    (233/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.407445574 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.408818141 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.781013715 seconds)
    (236/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.427614075 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.277334097 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.063520363 seconds)
    (239/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.952926582 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.099462903 seconds)
    (241/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.181772908 seconds)
    (242/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.512243231 seconds)
    (243/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.300042494 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.521185714 seconds)
    (245/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.825058331 seconds)
    (246/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.475441563 seconds)
    (247/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.460106357 seconds)
    (248/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.635620024 seconds)
    (249/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.456360017 seconds)
    (250/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.853969441 seconds)
    (251/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 3.073029425 seconds)
    (252/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.753457294 seconds)
    (253/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.357706129 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.411581005 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.431761936 seconds)
    (256/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.864348841 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.45444986 seconds)
    (258/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.429155339 seconds)
    (259/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.353765813 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.405418976 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.81340353 seconds)
    (262/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.894279337 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.856707874 seconds)
    (264/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.782359961 seconds)
    (265/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.582204362 seconds)
    (266/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.403501954 seconds)
    (267/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.690678815 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.828917778 seconds)
    (269/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.456079088 seconds)
    (270/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.347062292 seconds)
    (271/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.437733768 seconds)
    (272/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.412869538 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.836077921 seconds)
    (274/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.512113402 seconds)
    (275/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.493138582 seconds)
    (276/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.464371888 seconds)
    (277/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.962324779 seconds)
    (278/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.499523271 seconds)
    (279/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.41225543 seconds)
    (280/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.492060391 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.526226107 seconds)
    (282/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.810728837 seconds)
    (283/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.79248638 seconds)
    (284/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.57436288 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.730911831 seconds)
    (286/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.603147985 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.035216993 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.142934462 seconds)
    (289/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.648523238 seconds)
    (290/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.129641064 seconds)
    (291/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.366379864 seconds)
    (292/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.047826462 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.457427666 seconds)
    (294/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.244907779 seconds)
    (295/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.4252557 seconds)
    (296/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.6800493 seconds)
    (297/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.493594592 seconds)
    (298/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.321941092 seconds)
    (299/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.277636242 seconds)
    (300/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.41744977 seconds)
    (301/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 3.068907551 seconds)
    (302/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.7617912 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.437948453 seconds)
    (304/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.213891402 seconds)
    (305/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.126767431 seconds)
    (306/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.563722129 seconds)
    (307/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.396270637 seconds)
    (308/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.439071752 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.435513154 seconds)
  done (took 955.715358195 seconds)
done (took 957.048661568 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.443312517 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.441090811 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.424126733 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.446495735 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.533041767 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.451989592 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.436606092 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.427731103 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.474086943 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.471299291 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.421577139 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.449775482 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.424839819 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.425257993 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.424787966 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.439128913 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.530990802 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.426300778 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.443676435 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.435195867 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.442448566 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.424658669 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.47543116 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.453348603 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.429943043 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.424741843 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.429435175 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.44594272 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.53489699 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.427020301 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.429218121 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.435910941 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.489328785 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.420944426 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.420880981 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.444199457 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.437868571 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.432047415 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.426865317 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.458901363 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.975347839 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.424204108 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.426803605 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.427598577 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.428087032 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.432181261 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.428923418 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.42690902 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.439130572 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.440475616 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.922840245 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.437743558 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.430297764 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.427737478 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.439565698 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.42769876 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.429052635 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.442989724 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.44674663 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.441615772 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.484772791 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.425171346 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.430604552 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.44530563 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.432704423 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.022458368 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.423887449 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.426738256 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.969429509 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.430600929 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.027424645 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.43892884 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.428147065 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.443174214 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.459869243 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.493714071 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.419030258 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.428859671 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.436979055 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.429053386 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.439279186 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.443274801 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.434607575 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.4307379 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.44420949 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.45892021 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.440165737 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.432387348 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.438111746 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.448533223 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.435102327 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.441273278 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.4326612 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.424320117 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.440450872 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.43477024 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.432886653 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.433787662 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.434735615 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.439966212 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.915724675 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.44344821 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.426620255 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.427893127 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.429065403 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.44528713 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.976849107 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.434161128 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.452303108 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.477122366 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.432999095 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.493177603 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.43203515 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.447348008 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.439580666 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.434599716 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.427047863 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.491226574 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.988059723 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.448227333 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.434661702 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.430446504 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.446744404 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.434322067 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.428090148 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.50199337 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.431752017 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.446133688 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.553194534 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.443826331 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.464535056 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.429709493 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.435450713 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.463444232 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.449405411 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.464418363 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.43517706 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.449733762 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.448395585 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.430099779 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.44406979 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.443668964 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.434552741 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.440379497 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.42866542 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.462654387 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.445119331 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.446014322 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.454452143 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.555240481 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.430211416 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.519026326 seconds)
done (took 241.155607381 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.494472886 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.426296676 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.531552545 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.433755695 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.532070898 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.526096479 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.431785558 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.432478723 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.431779962 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.807946817 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.432549927 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.432547485 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.429602454 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.431011722 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.511969209 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.435424197 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.433234572 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.771867991 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.432566287 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.504494186 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.428695054 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.432899461 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.436504927 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.811910105 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.429869458 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.431628755 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.502234863 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.435669427 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.777815139 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.42655513 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.432239069 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.777027585 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.523950759 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.453245662 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.447033737 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.442117242 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.535097885 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.454556616 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.514244823 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.517242378 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.53963071 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.471993983 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.430005584 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.435533942 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.438006679 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.437011268 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.436355092 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.464752058 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.434050816 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.435015241 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.77757206 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.446172651 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.435307528 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.435928938 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.436433242 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.464980493 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.436249407 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.436985969 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.524200954 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.436784203 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.496708549 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.815828539 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.812755136 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.435497108 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.428763817 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.43514301 seconds)
  done (took 155.213533736 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.502808096 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.508070702 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.555314053 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.437029399 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.487181571 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.557964657 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.438230923 seconds)
  done (took 11.851740044 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.442191082 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.440636279 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.486789762 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.48596278 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.437791959 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.583635828 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.439682131 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.447902532 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.437078533 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.489872831 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.438163222 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.441324715 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.448878046 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.431195662 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.483854338 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.449392994 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.55110733 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.438066376 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.435699394 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.588068428 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.437366356 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.447528085 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.48855663 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.448606838 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.43661528 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.443825077 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.00378693 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.438017161 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.438286033 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.439796998 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.437133466 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.472836035 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.438876696 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.431380812 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.436414478 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.551254907 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.437649376 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.437431403 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.440066964 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.433809218 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.44109171 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.440137521 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.4418878 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.440805027 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.44243442 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.460031577 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.442619579 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.442699545 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.441722046 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.444836572 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.487566703 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.442327729 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.43892469 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.437906808 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.493586739 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.447855872 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.440752135 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.437961285 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.441213355 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.438040902 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.589911924 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.486542592 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.44299265 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.489211948 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.442713679 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.44214937 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.44126618 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.441242087 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.49294593 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.44306822 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.486853323 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.4395114 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.593244803 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.462959049 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.44175279 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.441828133 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.441025545 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.437662161 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.436175265 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.444089542 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.439417882 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.441756483 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.444815159 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.440275793 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.439484906 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.54240444 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.5487497 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.439219888 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.450963066 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.447037625 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.439985536 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.493192204 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.443567451 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.440729256 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.491935745 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.554930965 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.493568207 seconds)
  done (took 163.579588061 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.445299523 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.448077771 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.441855627 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.454946068 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.439207442 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.441074799 seconds)
  done (took 10.04004197 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.442269816 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.440563057 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.444107237 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.443642198 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.440464874 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.441203237 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.438694843 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.442628337 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.445495601 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.445248337 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.442334078 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.438973312 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.438797076 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.440093043 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.442108414 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.4445318 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.441225092 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.442452052 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.444065767 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.438235167 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.54117491 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.442197609 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.440334719 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.445021566 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.444354542 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.444776595 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.448861079 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.444250311 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.443301772 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.448530985 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.440409233 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.443228699 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.44373319 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.447383405 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.447801083 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.442683438 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.449084237 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.444634997 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.442513979 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.443116312 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.442923041 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.439881859 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.446673077 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.44419442 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.445206994 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.447455738 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.449110383 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.449784008 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.444133666 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.444208184 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.444525336 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.445832019 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.444749531 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.443697683 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.448804949 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.446510975 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.449918765 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.444463894 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.445785958 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.445725852 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.449708731 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.445347091 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.445681138 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.449430715 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.444851793 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.445967813 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.447034858 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.449570958 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.444976423 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.445426693 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.446172315 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.445589274 seconds)
  done (took 106.469903403 seconds)
done (took 448.515745621 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.949630659 seconds)
  done (took 8.321776514 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.702940684 seconds)
  done (took 8.079170609 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.066131114 seconds)
  done (took 23.443630136 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.481369793 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.452999542 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.454117579 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.435780039 seconds)
  done (took 27.195652572 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.587329579 seconds)
  done (took 7.957924176 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.451468693 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.447241002 seconds)
  done (took 14.270574118 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.736645311 seconds)
  done (took 8.106163494 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.07854933 seconds)
  done (took 8.454462697 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.448317279 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.444180997 seconds)
  done (took 14.537503265 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.419106393 seconds)
  done (took 7.788969924 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.621138494 seconds)
  done (took 8.993960336 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.438665398 seconds)
  done (took 7.809904803 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.475335834 seconds)
  done (took 7.843491074 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.905178241 seconds)
  done (took 10.275771467 seconds)
done (took 164.452615124 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.43417897 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.433936147 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.434898871 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.435942286 seconds)
  done (took 27.108583975 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.478879248 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.477554381 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.480074444 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.487739311 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.481090744 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.474489828 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.470503279 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.469981305 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.487516811 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.481302659 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.476807586 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.480000565 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.479175096 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.470488353 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.479972984 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.480259702 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.488565552 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.479256809 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.472395188 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.481976496 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.446036471 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.488664078 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.483044419 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.443983088 seconds)
  done (took 36.813150608 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.640839283 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.510481451 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.593819573 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.492611828 seconds)
  done (took 7.609177546 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.494178937 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.499643218 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.510790985 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.546539701 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.576166068 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.507457884 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.473804297 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.466992587 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.453170563 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.499827489 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.573448935 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.515883062 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.599158676 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.442931152 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.630947639 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.44412423 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.443394445 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.49769424 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.549849758 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.575399965 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.445234515 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.498693449 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.501347355 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.51430788 seconds)
  done (took 37.635009037 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.445426763 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.451057547 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.449956519 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.445742195 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.443461502 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.446140903 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.450661851 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.447944449 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.46600177 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.444809767 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.44450295 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.445178982 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.442881541 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.445731493 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.44216184 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.457225859 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.460425191 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.447139388 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.447005908 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.451521064 seconds)
  done (took 30.347528332 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.434727804 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.327272734 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.789997361 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.692745532 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.435307755 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.43060277 seconds)
  done (took 29.482716842 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.517278635 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.655526108 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.445882407 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.835742538 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.91796464 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.446027529 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.443691677 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.699085565 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.039495427 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.037238039 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.502859433 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.516219575 seconds)
  done (took 21.433219706 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.446259323 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.44046774 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.450843887 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.455209416 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.503211684 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.449162173 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.450066592 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.435728623 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.50633829 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.508951804 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.450164692 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.504258328 seconds)
  done (took 38.977021987 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.529596038 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.491630021 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.454466086 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.403530433 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.822499589 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.652944563 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.365585809 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.932117806 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.448245929 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.716550887 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.448522888 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531819802 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.702460416 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.442002655 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.446865811 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.519736745 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.668033535 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98720613 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.446086187 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.670775748 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.467591806 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.449018286 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.831204022 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.47493582 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.655830365 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.576193247 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.706399148 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.444284855 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.746665248 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.456832478 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.453300535 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.444351227 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.71912272 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133767386 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.539260799 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.456506234 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.398931542 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.158857094 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.444796934 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.715612709 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.460723215 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.446244777 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4564956 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.445623341 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.380702207 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.457531984 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.941477888 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.446165164 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.158280872 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.44650463 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.457375832 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.541502542 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.452387172 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.263160187 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.609780999 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.441828846 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.445862215 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450722543 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017253655 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.144892841 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.446554556 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.38351123 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.007266984 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.711334633 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144001644 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.548872882 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.448111926 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.451135246 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.381511205 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.702633206 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.466213171 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.58733592 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.465452144 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.110421619 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.217439081 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.45962561 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.379731038 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047416671 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.450276166 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.382851535 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.677164553 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.44849174 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.388826805 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.392868153 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.383339082 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.205589744 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452953861 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.911425144 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452628544 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.925219688 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.45353828 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.466562322 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.472790699 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.673034203 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.329413961 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.446355615 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.457822873 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.568578895 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.468451897 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.928213562 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.38304007 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.450297774 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.705749202 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.660325337 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.448188655 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.980005737 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.678311797 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.452735665 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.466910284 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.448992544 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.475209895 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.107496007 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.458821386 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.272131372 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.466356027 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.450891675 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.253025984 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.464576122 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.550596416 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.453747423 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.715879176 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.287668447 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.450762504 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532753394 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.452533635 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.448003723 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.807881501 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.971919146 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.450771981 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.447833443 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.461496917 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.461441517 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.449560643 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.399077941 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.450743083 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.46641842 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.453595426 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.677642741 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.455435951 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.729012987 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.385919139 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.590725279 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.549685948 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.673427494 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.742405417 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.449774679 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.710930826 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.464384979 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.453816776 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.464010928 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.468526379 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.54921932 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.475157051 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.464398891 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.711721781 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.455976834 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.456315917 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.831245087 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.455245661 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.459152337 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.458240716 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.405484379 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.109481364 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426264393 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.453610934 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.347212745 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.465537294 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517852828 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.455230912 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.46211183 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.41316338 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.515905142 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.457426369 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.448185699 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.691455317 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.464581148 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.809630315 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.532220632 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.684712351 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.114347156 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.467288624 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.385547228 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.164735718 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.147059223 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.45377682 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.388859542 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.453628843 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.463806041 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.46478274 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.194450043 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.116301103 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.456628239 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.737922909 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.460889198 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.465508599 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.459306451 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.455445607 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.398508146 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.296950258 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.457295628 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.466586237 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.598102426 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.467922189 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.386841149 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.460050241 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.459192055 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.455268033 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.455340734 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.485453119 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.748068272 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.960578889 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.713113553 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.371636304 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.466837082 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.862602152 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.485193918 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.454180352 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.468265557 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.45497719 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.471197754 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.46229687 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.463375066 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.823777932 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.123425417 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020349266 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.230490682 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.064071195 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.488097148 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.469132727 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.455723632 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.936963643 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.385396243 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.013325937 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661151494 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.937473917 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.401526079 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.686898104 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.760239291 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.281857908 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.46522541 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.683935854 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.539262697 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.456606458 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.465959486 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.667082536 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.491559002 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.456052382 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.399170252 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.743538894 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.745488776 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.46447302 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.535862004 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.940694039 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.455516463 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.458548208 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.455424261 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.869457198 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.647354027 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.170491157 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.629523717 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.460365043 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.457514229 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.959578332 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.456391611 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.688241922 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.162505335 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.459971371 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.689903308 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.393324863 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.464942297 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.466068607 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.455194671 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.916183576 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.454474954 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.72755519 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.465297422 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.393362052 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.454849079 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.069068395 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.312066122 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.464299802 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.457650981 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.255907286 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.458294941 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.761765971 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.470791614 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.397887588 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.461678702 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.390597507 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.392216298 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.150436712 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.459791038 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427602624 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996770241 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.963096166 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.640874774 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.489692317 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30648592 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.713810789 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.47414303 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.124789541 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.68599334 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.478904756 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.481115453 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.558249936 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.464040121 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.441409889 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.458590948 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.697577854 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.411760818 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.680917142 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.474981544 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.359739854 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.452446287 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.672158824 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.460736421 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.459456889 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.721221828 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.164308967 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.457891075 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244314775 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.480082076 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.464688218 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.381954533 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.020751344 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465594632 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537909265 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.471460208 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.470599318 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.47054879 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.652569931 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.457408564 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.462099895 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.473237933 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55570294 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.332777385 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.405251816 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.463100348 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.130361346 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254042442 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.129191749 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.47146263 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.460932881 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.469716465 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.392892028 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.606141494 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.690250029 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.735930215 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.57888759 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.104363124 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.484046772 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.467140189 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.466804277 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.676482817 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.736263581 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.363203996 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.478863399 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.477190269 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.463881824 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.471034085 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.676126574 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.010754301 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073587501 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.586152068 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.473954651 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.94514003 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.734793633 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.460479141 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.461195139 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.05933282 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.463175035 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.879837446 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.46869344 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.474900342 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.607777091 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.472492199 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.156285631 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.468466384 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.618288736 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.235797161 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.86330461 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.721720698 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.986861886 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.471442354 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.134136909 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.266358059 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.728185657 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531521606 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.473736062 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.582155998 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.611554064 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.462689534 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.465903594 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.462754862 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315701673 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.174635931 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.473060537 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.139456779 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.731385011 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.464114143 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.462274659 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.489426457 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.474719851 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.690959872 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.238317128 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.690232958 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.475921237 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.467576002 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.284189109 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.140119049 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.478953014 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.397603061 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.465125138 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.724823462 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.697474257 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.488063409 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.916636293 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.17823246 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079136588 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.438497845 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.485564689 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.467640996 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.27068437 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.138461428 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.421386039 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.014827873 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.026554031 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.465102502 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.739135719 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.47187442 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.472410349 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.741904039 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.468988891 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.467115815 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.480582576 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.140520109 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.300143017 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.473558067 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.822551094 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.403978962 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.811618024 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.249536498 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.403665433 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.464664018 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.66394449 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.462531809 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.591553485 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.475659852 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.477793554 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.482008023 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.200771703 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.749359954 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.471033343 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.446183536 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.446916637 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.476762795 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.469989912 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.756700174 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.46790715 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.132381056 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.816894382 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.723761086 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.467676771 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.448707915 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.472538769 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.469763304 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.458265891 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.666814811 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.197766464 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.084080217 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.474387665 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.481395664 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.471104623 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.688303793 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.678141577 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.466995291 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.483944338 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.48204794 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.485979563 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.370807971 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.983827161 seconds)
  done (took 1667.521103289 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.501917012 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.482100911 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.510087942 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.487974342 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.527529712 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.532996004 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.565927392 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.559093457 seconds)
  done (took 53.566594701 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.461618727 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.720505986 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.497015189 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.465988193 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.478079854 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.471711131 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.954919917 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.469566536 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.472747589 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.474912043 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.469865304 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.464559402 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.141781048 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.474319002 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.462354007 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.460939473 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.473240496 seconds)
  done (took 67.820032804 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.479453736 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.835020515 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.484628481 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.464497402 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.001087788 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.486591703 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.73314534 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.465301558 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.464859631 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.751945717 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.139535587 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.479536922 seconds)
  done (took 82.185241212 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.474296107 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.4758203 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.471502883 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.473417417 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.474514929 seconds)
  done (took 8.768774546 seconds)
done (took 2110.640889136 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.715873418 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.246507813 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.169846528 seconds)
  done (took 5.815181176 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.615788161 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.665020386 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.82704657 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.798573142 seconds)
  done (took 8.310701736 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.748583443 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.843087266 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.661500503 seconds)
  done (took 6.658426663 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.000326958 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.469411381 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.609918449 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.469969242 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.470745946 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.472257502 seconds)
  done (took 20.817479847 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.474035511 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.478797228 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.476543525 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.47946489 seconds)
  done (took 7.3133315 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.453265599 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.228723145 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.453582069 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.466105248 seconds)
  done (took 19.005674309 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.221634977 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.234186858 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.220038318 seconds)
  done (took 8.080447451 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.488985032 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.314902007 seconds)
  done (took 10.208394513 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.795703676 seconds)
  done (took 3.200795974 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.60677901 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.74674727 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.671026707 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.542801766 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.683329835 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.69118313 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.242215265 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.791559785 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.521496519 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.865224418 seconds)
  done (took 30.766978085 seconds)
done (took 134.371914847 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.522004583 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.486435607 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.675686062 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.493349111 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.696033437 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.674021064 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.963455674 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.45680478 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.191198165 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.002454587 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.493241515 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.697984875 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.682608824 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.493236186 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.683538248 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.490862785 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.705406322 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.598338188 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.213673434 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.373668116 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.966251019 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.132032824 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.322288291 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.155249384 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.729681679 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.623077249 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.709673498 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.489953035 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.39296403 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.734652296 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.620531464 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.470200699 seconds)
  done (took 198.344542297 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.47206333 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.468371931 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.47507256 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.469375567 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.479328474 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.471193871 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.471836067 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.480233092 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.478686085 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.476640689 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.468756337 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.471570809 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.474259918 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.469606926 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.469940354 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.491412718 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.478695838 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.468459165 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.482913722 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.473109988 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.471386574 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.473914754 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.471528029 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.481061362 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.472712139 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.470612848 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.483630673 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.467761723 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.47225448 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.470034355 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.471554241 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.484298779 seconds)
  done (took 208.590308515 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.473462578 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.496137851 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.485231226 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.481563756 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.47144829 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.477562339 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.469290016 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.469170112 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.469611887 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.483808685 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.486245058 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.4809434 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.47295112 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.470982289 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.474468983 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.473505717 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.485360864 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.488536459 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.471525855 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.473535773 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.471992414 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.471309371 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.469476366 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.475851263 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.48405848 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.471935911 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.485493075 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.487373563 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.469979486 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.471944006 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.473123882 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.483388448 seconds)
  done (took 208.679487079 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.673106318 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.483657256 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.487669349 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.423473968 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.485944325 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.484967002 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.486986754 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.678053923 seconds)
  done (took 15.613692648 seconds)
done (took 632.633385765 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.948449792 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.641495233 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.687606186 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.503524887 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.352828854 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.501684198 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.505901285 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.684382398 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.448362694 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.686788813 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.795581666 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.497491741 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.936750873 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.501024395 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.772229211 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.603384198 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.374058003 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.495842316 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.839906779 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.130891415 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.775590063 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.030063715 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.683663969 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.45709807 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.938362201 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.023871562 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.28339491 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.382663088 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.503647454 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.848583178 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.262048998 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.538700892 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.566058817 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.545709981 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.598711793 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.582487408 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.524104249 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.548138594 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.688431125 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.794023173 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.141201661 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.258846496 seconds)
  done (took 99.290245807 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.469295877 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.472990706 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.469096075 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.472111625 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.472808635 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.472948151 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.471342706 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.470199465 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.468789017 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.471172796 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.469147412 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.473278547 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.468700837 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.47522101 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.472228965 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.46977183 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.474765608 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.473547666 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.47340526 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.470031348 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.469745838 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.470627845 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.472077397 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.475939304 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.471937458 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.473854832 seconds)
  done (took 39.680004853 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.487471816 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.733057869 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.910421022 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.489309349 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.485845368 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.49168025 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.568777939 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.488012396 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.488765747 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.491424954 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.64191251 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.490046843 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.522611468 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.922403238 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.486146877 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.497153559 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.490626532 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.487433209 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.740483834 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.494191728 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.575107544 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.491150139 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.57523381 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.493877392 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.487493444 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.488133109 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.491272235 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.997695094 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.490522905 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.643627665 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.346626525 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.56968775 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.946268429 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.928875695 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.349788199 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.490883359 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.489455508 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.651168254 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.488054169 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.487163899 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.568044901 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.486175388 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.9289581 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.13665532 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.508326979 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.497494503 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.02468479 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.652892384 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.76015392 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.503377907 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.954211447 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.495522753 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.498360309 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.494683251 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.75999178 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.499731237 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.493708497 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.040160538 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.497256468 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.576394992 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.495101438 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.492493135 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.752746437 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.491980161 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.743962814 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.495486026 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.499118984 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.491331944 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.934211712 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.495532937 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.155576728 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.50943875 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.496332639 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.648444002 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.741446563 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.051723333 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.496294608 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.759037461 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.96574843 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.573636975 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.495020787 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.990588779 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.579916109 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.498313489 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.499888683 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.496612949 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.496921454 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.540986581 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.575605699 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.080357274 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.150942065 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.05660477 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.578077615 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.502726721 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.492914037 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.046924695 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.499146234 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.496739309 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.926755609 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.155176725 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.509825694 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.499750267 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.141731216 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.512763578 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.580449155 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.499142618 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.940854447 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.495381181 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.542761993 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.497642193 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.504242763 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.497468343 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.576958528 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.496560777 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.499708886 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.132784152 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.669971371 seconds)
  done (took 194.729915558 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.49039393 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.487861121 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.488818844 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.503665909 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.486911423 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.491981905 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.48923166 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.492797738 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.495834054 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.490241438 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.490480761 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.488703076 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.491983802 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.493774522 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.497518696 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.496640797 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.100901336 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.492264096 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.491829697 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.486619557 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.308294884 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.490574094 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.490743331 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.487293369 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.489555795 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.490649942 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.490677919 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.490147094 seconds)
  done (took 156.614412756 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.499746217 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.104682735 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.499559905 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.641383278 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.523106348 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.49904894 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.63906841 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.562107265 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.50220887 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.499969717 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.497734094 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.823734285 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.501527153 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.05063316 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.698204429 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.643010998 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.077469711 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.503257156 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.501330357 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.501637189 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.642209065 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.506469374 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.838987931 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.133985039 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.504691883 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.132174861 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.489292973 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.503266905 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.499001007 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.119590387 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.501447554 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.827060165 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.580227772 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.560073955 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.136471807 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.080929625 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.058311745 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.657078678 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.499891264 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.499245184 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.499829152 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.487876398 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.138157998 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.507435576 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.500052535 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.131392706 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.52013141 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.503982236 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.513523471 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.501350547 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.563959181 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.564718791 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.844860713 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.145461969 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.586347821 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.524138958 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.639271232 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.877622683 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.502200277 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.052620954 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.487078738 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.143029853 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.510179178 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.488400539 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.502236395 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.508823263 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.663942177 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.643966124 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.054034758 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.501890212 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.053586558 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.665302913 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.501141126 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.504121755 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.504886709 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.110976544 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.053459096 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.665517677 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.644134563 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.71275393 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.493728767 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.500277106 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.48668584 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.582845385 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.502507258 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.11555953 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.055748853 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.504698102 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.507478609 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.506214978 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.505947862 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.693617182 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.116567175 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.584317472 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.051166393 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.841556234 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.829109858 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.506632925 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.565042928 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.502020475 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.832017008 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.503985376 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.567050601 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.942730468 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.830333615 seconds)
  done (took 178.618693864 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.761653454 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.714754971 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.599734116 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.620724873 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.073999238 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.082655754 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.752137147 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.627542961 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.617560543 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.752119072 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.705275849 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.594761449 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.69912106 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.580157681 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.253312657 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.575034659 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.600083278 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.631599335 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.622161163 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.542198024 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.146088174 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.818359615 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.683762338 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.699563168 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.600050869 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.288031047 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.076434359 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.023612137 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.678168427 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.816840993 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.043808562 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.650115279 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.487397695 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.201237108 seconds)
  done (took 71.050482609 seconds)
done (took 741.393520706 seconds)
SAVING RESULT...
DONE!
