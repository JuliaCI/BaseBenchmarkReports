cset: moving following pidspec: 31370
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.330352426 seconds)
loading group "string"... done (took 0.543130716 seconds)
loading group "linalg"... done (took 7.575327639 seconds)
loading group "parallel"... done (took 0.16797675 seconds)
loading group "find"... done (took 1.162221841 seconds)
loading group "tuple"... done (took 2.071441398 seconds)
loading group "dates"... done (took 1.314057618 seconds)
loading group "micro"... done (took 0.243084838 seconds)
loading group "io"... done (took 0.968618228 seconds)
loading group "scalar"... done (took 40.792181421 seconds)
loading group "sparse"... done (took 13.318462492 seconds)
loading group "broadcast"... done (took 1.03562174 seconds)
loading group "union"... done (took 14.161720757 seconds)
loading group "simd"... done (took 4.759246754 seconds)
loading group "random"... done (took 9.656196078 seconds)
loading group "problem"... done (took 2.005199877 seconds)
loading group "array"... done (took 22.600279807 seconds)
loading group "misc"... done (took 2.036517887 seconds)
loading group "sort"... done (took 3.446615069 seconds)
loading group "collection"... done (took 19.712704163 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.572286411 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142626042 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.151752921 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.129863281 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.2043457 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.15784629 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.15693458 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098067266 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.944102431 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.174221417 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.152246765 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.525486159 seconds)
done (took 5.149282092 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.218825428 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094372667 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103794116 seconds)
  done (took 0.876367212 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077138196 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.146148035 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094717258 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078251225 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094974437 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.07791829 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094991854 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077811729 seconds)
  done (took 1.352701932 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086462153 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097374878 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081469519 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.095428953 seconds)
  done (took 1.047110927 seconds)
done (took 4.266884021 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.724380966 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.272178095 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204652707 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.461381212 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.196717524 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.215878729 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.675338596 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.343302474 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.255383464 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.09937168 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.135225111 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.387993849 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137106929 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.677807843 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.09015347 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123513195 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.176305475 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.450507291 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08239669 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110129124 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117302848 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141883149 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.128630129 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.089478995 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184271453 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082255967 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.193257874 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107819275 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080945709 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.274243642 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200651617 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.688250389 seconds)
  done (took 10.832495268 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111408924 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133507841 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097499616 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138142877 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134432526 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099831286 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084257628 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096080951 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121643415 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.177458434 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.128323153 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.121180861 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094546512 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082933129 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114339934 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245256904 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120766136 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.098985738 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100401407 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.087947655 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.13752601 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111757512 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108643883 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094530734 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166432887 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221699902 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112922547 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125354842 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097085384 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113300525 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143024767 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14279919 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094457059 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079870705 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172574584 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124068753 seconds)
  done (took 5.133166088 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.073527987 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.190248926 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121322193 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.169120126 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.079979462 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.129261208 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142280239 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.095164929 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113282168 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.257916587 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.107983855 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.48287947 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.140252358 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099769562 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09701755 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08220561 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097070998 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.604269525 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.122201666 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.149774616 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.114133461 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10273955 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083773748 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.364730075 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095082679 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080291248 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097700298 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066015596 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160908051 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098845752 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.144040732 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.120113945 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082923986 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13429365 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.205770403 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.11070867 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134542824 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095317158 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079413384 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.174306849 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.10407169 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.104625051 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.09769246 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120696409 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133023563 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.118135873 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.09879444 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.096759379 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.195951845 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.079766873 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.11345822 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.946736631 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.180768637 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.102796091 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096057439 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.29022368 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116190585 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096506614 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077921263 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.27994996 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.187375339 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097943833 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079310362 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097196184 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080217355 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.39662435 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081248542 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.877412552 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.08448056 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.106763226 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083336066 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095500146 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103864672 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08668377 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116328827 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079759254 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099086876 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078793879 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096881682 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081741137 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.093631765 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.105921601 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.215683955 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080629745 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.09720767 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.076751825 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.116145761 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126460689 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082784905 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.09519928 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129727414 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082934922 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.096516688 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.133695977 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081153208 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.095433272 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.10640076 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083112228 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141777958 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096546821 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.14305713 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.093875477 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.12324732 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098733905 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113558618 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.110643887 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098662658 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.169535872 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077868835 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.09578149 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080094151 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.095872155 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080959116 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099079368 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110720333 seconds)
  done (took 22.855772903 seconds)
done (took 40.580095076 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.321853546 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.102865626 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102293087 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102130806 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100554303 seconds)
  done (took 1.487928062 seconds)
done (took 2.219194697 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.284417685 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.173743404 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095057827 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.165360424 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092718817 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.162388542 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.157978513 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.093755736 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.215920822 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.093927099 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.160021802 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076558355 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093575883 seconds)
  done (took 2.624724485 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092793446 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115761161 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082575508 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109048681 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075570666 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109675626 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092142995 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115147071 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108909914 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084823228 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092148766 seconds)
  done (took 1.808153065 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093919118 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111552707 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08232306 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109415565 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076231381 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10941873 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092050059 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115589982 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109699865 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085895881 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092005341 seconds)
  done (took 1.805927097 seconds)
done (took 6.9617022 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090290515 seconds)
  done (took 0.815637387 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.930324534 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.713505199 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112848208 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.150530743 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.316422941 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.172303996 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.473217974 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.126279924 seconds)
  done (took 10.93039027 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.114379689 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.10085506 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.111455318 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.0833511 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.099997189 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.083234207 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.101246469 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.097627927 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082331281 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.101630283 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.084822685 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.10065381 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.100236812 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.086216558 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.097503361 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.082130707 seconds)
  done (took 2.32284238 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.11738857 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116761523 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105822884 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107176722 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.08615052 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103350042 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.104900594 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.086723927 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.100616369 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.101814057 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090118673 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104572501 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.101808419 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.078896919 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.104853793 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.106360289 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.084399847 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.105257969 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.10515394 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090037134 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.105042167 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094298376 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086440434 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.104984493 seconds)
  done (took 3.232474123 seconds)
done (took 18.031513914 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.157647873 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.10811757 seconds)
  done (took 1.000161967 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.09522363 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.1115644 seconds)
  done (took 0.945382551 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.096739701 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.09531156 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.120196447 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108292558 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08039092 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095754703 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.119067111 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080405702 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095952536 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079948273 seconds)
  done (took 1.714648698 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082592595 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.108962148 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.099924468 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094849167 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.104062049 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093769998 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.088823386 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098520114 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.108048789 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077217669 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.100899164 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.112722212 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.084346495 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116031003 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104483479 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082529552 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.100574808 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.09691892 seconds)
  done (took 2.503364437 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079275805 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096170935 seconds)
  done (took 0.917572059 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080540967 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092731343 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080320187 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096401378 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.09277986 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.075794653 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.092525359 seconds)
  done (took 1.351920251 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.476789623 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.134669379 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.257377172 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.100202202 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.102131854 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.298500418 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.095930446 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083971404 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101138914 seconds)
  done (took 2.448785736 seconds)
done (took 11.621251575 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092942384 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.113562413 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111421988 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.454233022 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.105909494 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.096263502 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.145801209 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.245923731 seconds)
done (took 2.120179934 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.1456572 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.59467377 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.421530956 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.228076547 seconds)
  done (took 1.996866395 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.400274357 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.098031148 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.081364757 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.080011261 seconds)
  done (took 1.413882791 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079077515 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099134953 seconds)
  done (took 0.931527457 seconds)
done (took 5.243467359 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080451519 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.096174864 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.077783637 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.096173048 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.077240142 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.093150847 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.112897859 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.097371534 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.079739985 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.097236753 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.096948214 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.079637861 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094950039 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077758334 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09321293 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079608804 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.093110564 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077525151 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.092978289 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077443478 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.09384927 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080148264 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093170191 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077373236 seconds)
  done (took 2.903323038 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100154832 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098502595 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.101995343 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085261928 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101376145 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086065464 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101694019 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096133927 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085565414 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.099323687 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101045533 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085638991 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098631893 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083836411 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098795715 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100830422 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086781866 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09720481 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081927249 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100939488 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101901258 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080833232 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101044989 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085730945 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.100662623 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100369065 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082040422 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098339328 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102311014 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084085827 seconds)
  done (took 3.585848577 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084647811 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094009623 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078185688 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101157593 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077658456 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096265578 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077151269 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095526198 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078564356 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094785694 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.078937383 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094167374 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077479681 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.095926335 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078632558 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.09881984 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.110121087 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077347111 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.093885664 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078024858 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.099112028 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.076784531 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094365628 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077639119 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094771697 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.076965489 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094916668 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077204003 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095014586 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077135394 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098201246 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.080595086 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094792383 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.083288105 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.099047432 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077670685 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.097748522 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077613825 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.096430092 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093406844 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.07783862 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094312054 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077727856 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101125006 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.077892033 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096346961 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077969303 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096048982 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.077705647 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098098855 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077433288 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094336009 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.07844531 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095825154 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.08216947 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.094040812 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095325153 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.07820875 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.09533996 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077766158 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.093306394 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077192045 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096863593 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078256384 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110257852 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084616174 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094723246 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.07966222 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095378621 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080187115 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096324427 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108195203 seconds)
  done (took 7.122900589 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.103400163 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.125662722 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.09711542 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096956274 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076250157 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095276983 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.082790575 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0955402 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079620092 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.101328927 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095153147 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079203629 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096721992 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093585937 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095988417 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.079627218 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.101750518 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092493966 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.077582224 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098641482 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078629589 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098702556 seconds)
  done (took 2.803653412 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.206581283 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105008859 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141162392 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106430771 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082153139 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106703033 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.100764067 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085263494 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102245562 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08373445 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099885497 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.211611291 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082213447 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099854429 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100043419 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084830264 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101091725 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083977175 seconds)
  done (took 2.747933828 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092526778 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099156931 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.098044841 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098263663 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.097943525 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.082443933 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104605215 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106979701 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083344361 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097441066 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090541801 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10059919 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100608866 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080989148 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100020927 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081322117 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100642457 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081280865 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108079237 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103850264 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086297336 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107566422 seconds)
  done (took 2.871498932 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096781642 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100756881 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.117470852 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083799166 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094854781 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079425957 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105671853 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080138501 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.106892628 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.09981254 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081029363 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096400021 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087284956 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098745824 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.102820351 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080940471 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099969996 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081053607 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101118515 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077255846 seconds)
  done (took 2.641892537 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10143666 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09909157 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098851885 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091031737 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099238316 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082257247 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109010754 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099805761 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082196425 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123898347 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098783979 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081937218 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109053381 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105629765 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098813959 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091129399 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107907741 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10859584 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.081810859 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09983539 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123559727 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082314211 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108188079 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09898751 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08163764 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099298873 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098359244 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088150583 seconds)
  done (took 3.522462831 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081345932 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097766219 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.07864886 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.095861393 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.078046694 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095801221 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.077530513 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098200599 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080632314 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095528246 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080373133 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098249066 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080325209 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098140578 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080179208 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098210554 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080136246 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.096604705 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077764014 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096216119 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080155586 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098315101 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080475358 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095999794 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078849226 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099011105 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07779971 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095769212 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080269676 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096491411 seconds)
  done (took 3.422751289 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089927143 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10605873 seconds)
  done (took 0.968497532 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078947922 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113738517 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077955962 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103136678 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085548718 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099820874 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106423304 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08594893 seconds)
  done (took 1.524618508 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096359597 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110709835 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082649284 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.113073569 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.110167138 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.098122257 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.169147685 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.101313609 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.086806797 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.097951991 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113490832 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081257678 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105788973 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080616633 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105444758 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087575894 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097465155 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.104549541 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.084536541 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098667865 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083475726 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111049113 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083738241 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.09613865 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.101175013 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090283204 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112203858 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082491259 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102609297 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106546085 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086623851 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093893691 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081963908 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100340004 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079351682 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.107985154 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116062809 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084493526 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109843118 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082882258 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110973259 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095266084 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.085916637 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105579739 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109976057 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.082498895 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.101169459 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.075957797 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.09727219 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083580062 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094872164 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081524588 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095364685 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08915935 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.102515791 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110177247 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080358222 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101976223 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084197678 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.10357002 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089229376 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.10259943 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102537954 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.081397603 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10695237 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085558006 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109979197 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.078051852 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094077885 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.097417817 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.092050664 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123869835 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.088024849 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.100530052 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101076467 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.078977889 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103296185 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083522501 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10683663 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.104957007 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.08147975 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106552378 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089032278 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100436686 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084218613 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.107813814 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097954713 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084351665 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.098346799 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117827364 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.08001189 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.097636722 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.079132786 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.112580818 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08469774 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098791089 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079324837 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106524831 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.093750358 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.082187302 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101645394 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082114847 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.111417962 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105424707 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087818845 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109521929 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088189712 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100372604 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.10282615 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.078844115 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101756754 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.08412811 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.107404825 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.075818597 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10322838 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08246997 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.100649279 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.108828187 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.079767585 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.099550877 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090130199 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106650942 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080150403 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.096217754 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.102545421 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.08164212 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10413989 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.089736312 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098554675 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076868107 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.09519288 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.103497272 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.082430285 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.103958584 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087292958 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104168061 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076794523 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097447638 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.104822772 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.09195041 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.100519265 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082346847 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.107092366 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.101181704 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.081832025 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.106947749 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084529238 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.099770204 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.08782509 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.100980469 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077379969 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104364833 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.102795454 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.080592221 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.103502369 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086066725 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.103580721 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.082938953 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098958153 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.105851049 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084168511 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.099347807 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082139888 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.09956215 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.092427309 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102136194 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.09512141 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.078670917 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.109829999 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.079558303 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.100486457 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.080465438 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.102566025 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.101226227 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.079607788 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.099870073 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.083746911 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113301695 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105462499 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083923848 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.106193178 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.092682195 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.100133148 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.085174423 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.100931246 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10146275 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.083782523 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110376033 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.088021476 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10562164 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102630645 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.078446216 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10671934 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089920044 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.100596813 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.079501541 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.100831134 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.086059151 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106282511 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.104277248 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.082524074 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098955212 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083552804 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104902125 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103074859 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.081335954 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.099156416 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.087365212 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.100842887 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.089249093 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101683011 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.111598149 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085865123 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.096281096 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086497786 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098953502 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.106584677 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.077574171 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.098875723 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.081188753 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101906626 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.080518452 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.10382593 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.075802283 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108238433 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107807317 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.082938978 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.09961927 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.082745961 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107878218 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.083889241 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104959807 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.08561276 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.106734126 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112015188 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.081145552 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.103946931 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.092521645 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.1027848 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076790516 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.106084138 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.099670967 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.0815265 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.100105576 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.080094989 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103835381 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109459994 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.089567729 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.095693339 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086073869 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.099611599 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.080654942 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096492413 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.086817363 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.103780421 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.100899739 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.089808292 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103316145 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.082818639 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105281086 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.08211278 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.102274719 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.102816218 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086492818 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.104331815 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.084182784 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.100394957 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.084831472 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.10076695 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080071887 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.102008611 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100993301 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.08237337 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107194563 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.081808471 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101233127 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.084633642 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.102721498 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082691577 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101752538 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.100822651 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086274154 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10236637 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.082427143 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.10375478 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.077276983 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108623141 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082014979 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108856794 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.101679015 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.078665584 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.107136387 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.084983785 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.10724802 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.101669275 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.083825572 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.103078813 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.082481375 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.10478424 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089396256 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099738048 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.111985002 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091182433 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102425682 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.085737351 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.101147631 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.083729124 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.100247967 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083103227 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.102505485 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.102046283 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.082534664 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.107048324 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085327234 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.102663066 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084006448 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102786802 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082990308 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.102386047 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.095674426 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.082511793 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.100451724 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.082739992 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113596784 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.084244223 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.103750057 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099774122 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083321805 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.101300973 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.079113516 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.110754061 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111156366 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.083892413 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109437847 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.08175018 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.103408831 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112181545 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.077846191 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.099177528 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.080121824 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.098943848 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09070295 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.111650565 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.092238255 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.101810601 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.081940742 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098157638 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101884671 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.081996151 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.095592466 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.080036728 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10542343 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085085651 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100656475 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.083648625 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.105263409 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103058531 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093029063 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.1016367 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083688582 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.102507488 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079063276 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.099572415 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.082218246 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.105070259 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.103403695 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.081408875 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.099229955 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.082552313 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.102773572 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.084091896 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.102028703 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.083955471 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10906549 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100845845 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.085483471 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105611822 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.076827323 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.104926621 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.083246831 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.101187557 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.082748619 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.105106418 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105774168 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084309318 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.11072641 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.082045724 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101644761 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101956238 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.080441433 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101418463 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.083466639 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.102288347 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081575358 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.10421822 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090324113 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099606915 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104322336 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082572327 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.101913304 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.089380647 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103267589 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.086396287 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110262243 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.105063781 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084571598 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110617597 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.087390458 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104887718 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103387744 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.084533951 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107747126 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.081630872 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.110181542 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.083075305 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103821102 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103137297 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.080367828 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101604879 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.083325828 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100987845 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.090129146 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103491622 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081674462 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.101671661 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.082056015 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.1023829 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105553101 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090498932 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.104999878 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085471065 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098216366 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.081035464 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103467361 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.080177329 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.102772805 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105157723 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089791053 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.104558862 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083905315 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.101898532 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.110741249 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089256264 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.106888779 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.081422288 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.106290503 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.084505653 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.104554921 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.084399753 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.102826656 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10334341 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.086532054 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.103284221 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.082664785 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109199301 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.08618273 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103614653 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103967271 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.084248875 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.101643869 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078949455 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103206038 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.084935003 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107572334 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.085482537 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102489841 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114318496 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083050234 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.102398229 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086717156 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10222276 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.086865634 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097652731 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103166525 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084275233 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104167919 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078311169 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.101395138 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.081153509 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.104922791 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082377969 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097172637 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11321007 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092878262 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.105523015 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08189289 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101296142 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.07802057 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098046804 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.081744123 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103165581 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.104074824 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.093933936 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.101136306 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.083003107 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098500704 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08269117 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105697098 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.106059294 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.0802386 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098063635 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082507018 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105652767 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.088248567 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101246205 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.084280762 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106274471 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.105378573 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.08163339 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106153745 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.079832695 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.106762289 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097146657 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.103771786 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102443877 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.0898054 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11145843 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.084885987 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.09832822 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.083975487 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.106320712 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102164358 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.085187413 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104489039 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099733535 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106322633 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101067034 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082763477 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105566216 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.082882531 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.11168082 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084715865 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103492492 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107244805 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085850177 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112846091 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086327443 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111924936 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.106487224 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087176087 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101982656 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083777397 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101045647 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.082761766 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.10439395 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.084778091 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108983231 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110823308 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082328221 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11439471 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.112535663 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.087819456 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099357487 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082528865 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.102969132 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078924805 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.10470582 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081572889 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101515022 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.081493547 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.101901978 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.105962977 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090090244 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104000126 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084817526 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.104086435 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077971244 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.104484876 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.086035902 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104303275 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.079976871 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.104141657 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104023649 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.087936464 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10747464 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.083356647 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.105377485 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084928253 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103437551 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.078695186 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.109529819 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102589868 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086078524 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102676626 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083981267 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.105133051 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08688199 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109393559 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10369822 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.085985946 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115305526 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085879948 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.101176366 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.080646064 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.108519822 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100791161 seconds)
  done (took 57.686657183 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145173962 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080297908 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099124289 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079894941 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112724695 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09974121 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079075798 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099006863 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080431807 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101784341 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078495305 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098842399 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108884329 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12322163 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093100358 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103734242 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078566596 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099698431 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098307246 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080201324 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.10979454 seconds)
  done (took 2.87206287 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.103500762 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.119873978 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114536182 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118948626 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089131299 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114680051 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114404273 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114607783 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099283738 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111665207 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118194988 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113779696 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.090256748 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110832325 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109939614 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093602195 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118644967 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.1095247 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115416147 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094156336 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113111196 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114107861 seconds)
  done (took 3.228559386 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084242768 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102766977 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084785805 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097989761 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.082536236 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097866955 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087214559 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100883437 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086958727 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102410641 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082272744 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.101720834 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104025471 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079290689 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102712192 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.080834724 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.15323984 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107665531 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082854526 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104558745 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.078217942 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.106023345 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.09958189 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.078862082 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.102104907 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088293616 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104223004 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082120406 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103362157 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082462932 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102921254 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081982139 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104740268 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103413321 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083630165 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.102277226 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084585292 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103822734 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079123558 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101769458 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083807278 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099800484 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083945772 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.105294585 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.082200042 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.101146587 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085093836 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103026978 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.09873421 seconds)
  done (took 5.471401865 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.103912508 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160878797 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086044725 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143034514 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.120616928 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113437339 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088229861 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141300317 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102780164 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083042295 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123379179 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120553873 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10427928 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.09024238 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.107530038 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103709105 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085398373 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102971934 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.088583605 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103829648 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108569909 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090967299 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.118942944 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118249342 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108764147 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.082567703 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103008229 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.10988292 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097586672 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109722547 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109684761 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090273057 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120648258 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.110117394 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082957574 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.106330058 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122473562 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.084445923 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.106271566 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102072682 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.08612589 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.10952353 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110421197 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.101799429 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105155846 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109681134 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084299382 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101236699 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.118194382 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087679484 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113331441 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.12030524 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.089077815 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.105294512 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109932102 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.12056189 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084641039 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102674545 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.088262546 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.118606818 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102164594 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.08821533 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.12036024 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106625047 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.092043389 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.121276713 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109224021 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107972419 seconds)
  done (took 8.142305048 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09304075 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.1111505 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121828083 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121220953 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091985071 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111664971 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111189131 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090613124 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110704787 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116146701 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110809443 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.1335617 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086097049 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113555536 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110650262 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091489292 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111124148 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111040297 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091666089 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112740154 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.11148803 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120632767 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091083948 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120309521 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142825727 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106046629 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091594973 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.110909871 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120841492 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111155425 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124086919 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091345308 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11165398 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121209971 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123548681 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091087154 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103427741 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110734962 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.092429991 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111537632 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106986823 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100433087 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111219364 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105808344 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091265779 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.111128424 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120155945 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123455864 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114927768 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097461212 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112360661 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120783344 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111146801 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091646742 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120898635 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146387392 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121452012 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120502306 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111665989 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101349177 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121094573 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128809039 seconds)
  done (took 7.684570663 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106938005 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114794215 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.117684261 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.101363427 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082934362 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108966247 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082656562 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103330057 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113595708 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.09480775 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117688619 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109656072 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091305062 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116909686 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109392459 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11341766 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089192081 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109891497 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114904477 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087667267 seconds)
  done (took 2.924399699 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093770124 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124249213 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085419645 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113308331 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108612279 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.09148767 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107558508 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108278512 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085260436 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108079901 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09581765 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117483364 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106132377 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090798687 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117009467 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111996852 seconds)
  done (took 2.506524923 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.097592246 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117999674 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.121042625 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084190114 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104702317 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.083111728 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.10585558 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.101146247 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081330301 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120740617 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085173013 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108510651 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105054876 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.08290219 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101814523 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087571448 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101073809 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082411196 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105386769 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.120207431 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096661839 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103755856 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.106433946 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086835335 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.106110448 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090697995 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106585433 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103629596 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.08335995 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105783015 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084967886 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.112863989 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102446756 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083894604 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.10274672 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082260708 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104977609 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.08467777 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.10843996 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104296629 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083297989 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.10514507 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085179876 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106659027 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081336548 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105801871 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101697657 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091481532 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103352589 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.0861499 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.106077032 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.087150961 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106364376 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.11541523 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088767596 seconds)
  done (took 6.254093364 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099356942 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10939963 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080869052 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103736513 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088581878 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107483671 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108762131 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.08800538 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107400933 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082268878 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10698748 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089663 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107803029 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109516708 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087339973 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109293932 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081065661 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107629013 seconds)
  done (took 2.622595932 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091032692 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105756343 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092002576 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.10580151 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084863588 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107875917 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080633345 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104741367 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103848126 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084485203 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105140738 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.08770666 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104449551 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.08727634 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105646297 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08497679 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108168221 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104180681 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085001579 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101040787 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087958201 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104079828 seconds)
  done (took 2.972760772 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.117481176 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125573394 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092564067 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.23295443 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103559753 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.132356322 seconds)
  done (took 1.651197941 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109406767 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120612543 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106909323 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106964411 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116294162 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087319219 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10797489 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107539577 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118531348 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102525012 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108767557 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118034651 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118355225 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096850735 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11436518 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114715474 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108128658 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087604831 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105988727 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127767494 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087905323 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118389785 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108683757 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087055782 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109680458 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117576498 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118364412 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121981076 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087458996 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118201853 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114942687 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086972153 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118483815 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123403583 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109096718 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09905036 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10839045 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129380518 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114875276 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097174334 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109136049 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11443579 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097486751 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114675402 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117726812 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108176483 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092759177 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108639331 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108588564 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135880934 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094180253 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117014897 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114954742 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118573741 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096650371 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135443291 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121512398 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118359115 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115361128 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122010722 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117719347 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094804741 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117828805 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123890693 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115083377 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097087732 seconds)
  done (took 8.14067332 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102699447 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125708289 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108710495 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123472513 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097050047 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108707859 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108448917 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087526159 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107864376 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107312956 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152027185 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087600816 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11750312 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118377955 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086982757 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109052587 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10808158 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118032064 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087239826 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135450308 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108290044 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11890195 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116600442 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097588319 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123961866 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115355291 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108036748 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087438863 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108857086 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108472384 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094150881 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109155227 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118171231 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086942156 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117083947 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108964077 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088117695 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114631374 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108187974 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115531921 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098220559 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129027314 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108552074 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108594422 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102187574 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108044318 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10832603 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087673566 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108903479 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107638091 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102198947 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122569975 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12299096 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117325418 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108024265 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087235721 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109199929 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108692992 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088721757 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115230995 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118363692 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088160231 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135293465 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109018166 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109417464 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118121735 seconds)
  done (took 8.03908443 seconds)
done (took 155.063173619 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.21315656 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.198581792 seconds)
  done (took 1.264501895 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.087699163 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136095981 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096844604 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.170184324 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085411907 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.140624645 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138189761 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098697953 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107474946 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085611257 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.10666253 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087394496 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.17193713 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.086593266 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107060873 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108541391 seconds)
  done (took 2.673823695 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.113752149 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.254054553 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.122205665 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106475689 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089944445 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109856955 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084082142 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.112318823 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089755 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.105818571 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.088852809 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.106945506 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.084267221 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.108016843 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.08930633 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.108688975 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105598797 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088223914 seconds)
  done (took 2.826266264 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113604626 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146724602 seconds)
  done (took 1.12833649 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.246936144 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.161631161 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.241376614 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.451820281 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.271397505 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.364778288 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.19901094 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.21015216 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.160258584 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.20862733 seconds)
  done (took 3.376598234 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118098211 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180933058 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.316695999 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155558977 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107511904 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.127297841 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157009942 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.13113027 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.122969353 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100582645 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.124868967 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.118544394 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.138771454 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094894306 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.114850736 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117560715 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120291846 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.113618361 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115019727 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.095306139 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.137974376 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.08470624 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116979852 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.114363292 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.09736194 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.120170907 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.106330744 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085242952 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116954533 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094025208 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.114469638 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125242436 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.119628496 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.156799157 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.123700593 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.155346529 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.118457236 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.091715697 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.116069099 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091577182 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119979677 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118807924 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.125373822 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097731852 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.106080632 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.096888747 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106523615 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085189472 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115307214 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.119625116 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.093805848 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113607124 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.155406044 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119121714 seconds)
  done (took 7.392873158 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.787188357 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156167202 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090787382 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.880262666 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.136019159 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10390024 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.774329329 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112372773 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.255554301 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.751892497 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133497857 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096994397 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.230568688 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.261161375 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.012855592 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.29407498 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.638265693 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.126402015 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151518726 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153588159 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11782237 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114548994 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131152348 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.452444673 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.11637623 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089973353 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119201818 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.11922269 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159821929 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.124957512 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092505971 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.199064822 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.251943928 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204297629 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094134633 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110921697 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089040697 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.191077396 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263446571 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.194029365 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181040847 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108695292 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089958054 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122115831 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132917385 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086692648 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.184086008 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175530994 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.170792433 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115024829 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118487737 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097530345 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12080638 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.164714057 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121593976 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.321709258 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.314178045 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089568237 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120995313 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125639048 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.241095202 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123156399 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.22297016 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137965717 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.189494213 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.11188194 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.799500128 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.169539687 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.11084166 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095175829 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119674282 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115178225 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.099154158 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.170608352 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.391473793 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12297268 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.115208003 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090439642 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.22359427 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.103142783 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111748805 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161379961 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116538248 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119533492 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102693771 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122339042 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.168307214 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.254962867 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.101233902 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120118675 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114988611 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.102544261 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115560822 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.211407152 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218843774 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.162271104 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.229451742 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100117355 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.184962443 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.169175888 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118407246 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.171798272 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120086979 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102621297 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121905437 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217339372 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145463127 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.123187416 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093876891 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118308544 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147495317 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.12766661 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096510257 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.191856244 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.477897151 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.167157013 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.1086734 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126633214 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097120777 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.180072647 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095700129 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261183969 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121768506 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169905195 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118394573 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087004336 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120698497 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.163094886 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121822382 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.09868751 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121377973 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11801567 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.237366791 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.215188169 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120326225 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.221276031 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.18340164 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117684424 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171409347 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120701373 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166650322 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119755428 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.098246548 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117667536 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.792735628 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123300157 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098255704 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115553541 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.193915441 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09068179 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124891531 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124584073 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.08689301 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.774661468 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126570721 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121580938 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103188756 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117518261 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118757556 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095608392 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115309172 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.160709549 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229552505 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118469374 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096514499 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.124687902 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.158323044 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.11654904 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.124484719 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.12315479 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102711262 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121673016 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114504904 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102690341 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.190306258 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.162314246 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.217462208 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.572530535 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112007585 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.12401176 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.206540547 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111571916 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.288311312 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097917842 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.224810667 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182583536 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098693267 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.311502716 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.164758991 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.194830775 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.127376961 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.173016907 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.109016233 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117494519 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.16463761 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.110689023 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096591339 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.16075695 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124083879 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121897107 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.972423868 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090255579 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.222954006 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.108802823 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.171110729 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116983688 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118752542 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.275761079 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112701643 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128588198 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.164265902 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114996672 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.101400552 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.749512782 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.124272168 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.099105374 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117437479 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.221111742 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.163453116 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119288905 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118466572 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097556573 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.183950394 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.206574397 seconds)
  done (took 43.988249463 seconds)
done (took 63.509553011 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.277913688 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.217501621 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.267579266 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169496858 seconds)
  done (took 1.899546126 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.171678581 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150025352 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120755144 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107293109 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151898071 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.08497584 seconds)
  done (took 1.680875626 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.362383531 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.276257438 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.245143558 seconds)
  done (took 1.778228133 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.291796036 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.246497594 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.470742738 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.326165546 seconds)
  done (took 2.353195859 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.208563189 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132315934 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111128164 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.10314269 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.20085094 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.244948186 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141752488 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.201002083 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.097942078 seconds)
  done (took 2.381388126 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.197634757 seconds)
done (took 11.18682713 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.240071977 seconds)
    (2/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.277820128 seconds)
    (3/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.154638293 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.171380973 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.147470746 seconds)
    (6/309) benchmarking ("sort", Int8, false)...
    done (took 0.18785848 seconds)
    (7/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.263269734 seconds)
    (8/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.169144308 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.12630307 seconds)
    (10/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.109735177 seconds)
    (11/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.117156433 seconds)
    (12/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.094189002 seconds)
    (13/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.120279123 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.122323878 seconds)
    (15/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.095973197 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.115860596 seconds)
    (17/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.092474701 seconds)
    (18/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.26729182 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.213672506 seconds)
    (20/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.1653821 seconds)
    (21/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.220305864 seconds)
    (22/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.123867094 seconds)
    (23/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.121499442 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.13782825 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.14119829 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.183366411 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.112769885 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.219342229 seconds)
    (29/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.097283494 seconds)
    (30/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.11798844 seconds)
    (31/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.248441479 seconds)
    (32/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.167020919 seconds)
    (33/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.075094277 seconds)
    (34/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.191050322 seconds)
    (35/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.21191606 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.118208805 seconds)
    (37/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.230554404 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.114603925 seconds)
    (39/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.115647933 seconds)
    (40/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.092562537 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.13677248 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.109081213 seconds)
    (43/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.183450311 seconds)
    (44/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.223307596 seconds)
    (45/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.204399827 seconds)
    (46/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.127049031 seconds)
    (47/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067859695 seconds)
    (48/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.119387765 seconds)
    (49/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.204902029 seconds)
    (50/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.103975474 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.138996744 seconds)
    (52/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.11725285 seconds)
    (53/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.175771688 seconds)
    (54/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.200990854 seconds)
    (55/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.146158264 seconds)
    (56/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.190956831 seconds)
    (57/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.096259748 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.136585862 seconds)
    (59/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.084717208 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.116978647 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.094120609 seconds)
    (62/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.177733318 seconds)
    (63/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.180878252 seconds)
    (64/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.191845391 seconds)
    (65/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.160645211 seconds)
    (66/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.109926415 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.088066295 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.137998569 seconds)
    (69/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.112708381 seconds)
    (70/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.081940682 seconds)
    (71/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.116797216 seconds)
    (72/309) benchmarking ("sort", Float64, false)...
    done (took 0.14840443 seconds)
    (73/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.137536411 seconds)
    (74/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.09237713 seconds)
    (75/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.18482196 seconds)
    (76/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.140857477 seconds)
    (77/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.088246536 seconds)
    (78/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.215484393 seconds)
    (79/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.163077352 seconds)
    (80/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.067418898 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.110922857 seconds)
    (82/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.09603734 seconds)
    (83/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.120243343 seconds)
    (84/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.212055564 seconds)
    (85/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.06752294 seconds)
    (86/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.18945876 seconds)
    (87/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.175063389 seconds)
    (88/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.125658187 seconds)
    (89/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.121900071 seconds)
    (90/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066604713 seconds)
    (91/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.216278901 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.186047787 seconds)
    (93/309) benchmarking ("sort", Int64, false)...
    done (took 0.111226606 seconds)
    (94/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.066015594 seconds)
    (95/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.176827168 seconds)
    (96/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.174314405 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.138903915 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.142643443 seconds)
    (99/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.086837035 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.138179746 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.134144549 seconds)
    (102/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.077173957 seconds)
    (103/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.134123762 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.167047965 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.085438912 seconds)
    (106/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.115537654 seconds)
    (107/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.087113458 seconds)
    (108/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.195035416 seconds)
    (109/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.129097089 seconds)
    (110/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.112013928 seconds)
    (111/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.216159516 seconds)
    (112/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.122173644 seconds)
    (113/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.087714801 seconds)
    (114/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.119007501 seconds)
    (115/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.092509391 seconds)
    (116/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.17703238 seconds)
    (117/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.091557137 seconds)
    (118/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.066946398 seconds)
    (119/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.066157014 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.109681243 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.094156628 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.410338659 seconds)
    (123/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.117203862 seconds)
    (124/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.19046373 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.19312458 seconds)
    (126/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.066460397 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.132801159 seconds)
    (128/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.101500822 seconds)
    (129/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.109836076 seconds)
    (130/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.171969259 seconds)
    (131/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.06685461 seconds)
    (132/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.100791218 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.166783631 seconds)
    (134/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.091334255 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.152785839 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.109673739 seconds)
    (137/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.129408202 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.110274577 seconds)
    (139/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.176980251 seconds)
    (140/309) benchmarking ("sort", Bool, false)...
    done (took 0.180208489 seconds)
    (141/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.118851352 seconds)
    (142/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.071350502 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.092483298 seconds)
    (144/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.122578149 seconds)
    (145/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.06615912 seconds)
    (146/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.134778711 seconds)
    (147/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067017306 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.114211588 seconds)
    (149/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.14152117 seconds)
    (150/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.156489168 seconds)
    (151/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.116105663 seconds)
    (152/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.110549683 seconds)
    (153/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.134995141 seconds)
    (154/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.150506367 seconds)
    (155/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.096210937 seconds)
    (156/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.1096188 seconds)
    (157/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.117233006 seconds)
    (158/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.087097891 seconds)
    (159/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.112107685 seconds)
    (160/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.154107279 seconds)
    (161/309) benchmarking ("sort", BigInt, false)...
    done (took 0.241373678 seconds)
    (162/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.100714383 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.151401411 seconds)
    (164/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.067025221 seconds)
    (165/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.116377035 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.114475484 seconds)
    (167/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.108842529 seconds)
    (168/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094442847 seconds)
    (169/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.089690742 seconds)
    (170/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.075126578 seconds)
    (171/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.120165512 seconds)
    (172/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.093302311 seconds)
    (173/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.118250898 seconds)
    (174/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.152533886 seconds)
    (175/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.118630389 seconds)
    (176/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.140004617 seconds)
    (177/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.067703466 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.086300015 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.194946351 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.10924462 seconds)
    (181/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.191494938 seconds)
    (182/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.092770811 seconds)
    (183/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.223528795 seconds)
    (184/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.100527739 seconds)
    (185/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.192970645 seconds)
    (186/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.105924054 seconds)
    (187/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.093261833 seconds)
    (188/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.111077956 seconds)
    (189/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.081777871 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.110544878 seconds)
    (191/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.093650958 seconds)
    (192/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.121125966 seconds)
    (193/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.066131208 seconds)
    (194/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.116492472 seconds)
    (195/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.087736831 seconds)
    (196/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068932834 seconds)
    (197/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.114854613 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.112517674 seconds)
    (199/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.116830297 seconds)
    (200/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.110825124 seconds)
    (201/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.095823153 seconds)
    (202/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.13596785 seconds)
    (203/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.086445875 seconds)
    (204/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.092003096 seconds)
    (205/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.095529 seconds)
    (206/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.114932056 seconds)
    (207/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.120198492 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.10809266 seconds)
    (209/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.109786835 seconds)
    (210/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.089696654 seconds)
    (211/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.114624699 seconds)
    (212/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.066508354 seconds)
    (213/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068716513 seconds)
    (214/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.092265087 seconds)
    (215/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.066631483 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.109612693 seconds)
    (217/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066369996 seconds)
    (218/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.196286491 seconds)
    (219/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.114940041 seconds)
    (220/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.090776861 seconds)
    (221/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.090934381 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.12023677 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.094424628 seconds)
    (224/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.090804136 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.086048886 seconds)
    (226/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.06659593 seconds)
    (227/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.091836736 seconds)
    (228/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067589158 seconds)
    (229/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067818455 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.116014753 seconds)
    (231/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.066917505 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.181880631 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.109212621 seconds)
    (234/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.101912159 seconds)
    (235/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.100160513 seconds)
    (236/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.08946494 seconds)
    (237/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.137636368 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.189345679 seconds)
    (239/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.066536481 seconds)
    (240/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.121045451 seconds)
    (241/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067010298 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.11255335 seconds)
    (243/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.171688004 seconds)
    (244/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.12618283 seconds)
    (245/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.156383434 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.110961333 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.131869752 seconds)
    (248/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.192404616 seconds)
    (249/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.141381285 seconds)
    (250/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.110519133 seconds)
    (251/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.121441878 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.136355403 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.134959829 seconds)
    (254/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.165165858 seconds)
    (255/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.124427443 seconds)
    (256/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.094850511 seconds)
    (257/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.117004205 seconds)
    (258/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.066867045 seconds)
    (259/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.11883396 seconds)
    (260/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.067720706 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.144783389 seconds)
    (262/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.067114493 seconds)
    (263/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.110373564 seconds)
    (264/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.067047267 seconds)
    (265/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.068300683 seconds)
    (266/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.092267709 seconds)
    (267/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.066226915 seconds)
    (268/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.0879334 seconds)
    (269/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.101383472 seconds)
    (270/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.086455615 seconds)
    (271/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.110116633 seconds)
    (272/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.085116031 seconds)
    (273/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.111930016 seconds)
    (274/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.075936837 seconds)
    (275/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067962027 seconds)
    (276/309) benchmarking ("sort", Float32, false)...
    done (took 0.17467342 seconds)
    (277/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.119162747 seconds)
    (278/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.092882259 seconds)
    (279/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.110730811 seconds)
    (280/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.087523726 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.110829605 seconds)
    (282/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.091798278 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.10822131 seconds)
    (284/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.136117489 seconds)
    (285/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068610786 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.086910513 seconds)
    (287/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.112017513 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.094705527 seconds)
    (289/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.099638152 seconds)
    (290/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.077798336 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.131349562 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.120284877 seconds)
    (293/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.178253642 seconds)
    (294/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.110370014 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.09245429 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.13318704 seconds)
    (297/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066282112 seconds)
    (298/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.223732214 seconds)
    (299/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.113706496 seconds)
    (300/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.07735878 seconds)
    (301/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.077908976 seconds)
    (302/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.117542879 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.114712954 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.117110836 seconds)
    (305/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.067293583 seconds)
    (306/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.102090148 seconds)
    (307/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.068267925 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.15336063 seconds)
    (309/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.066897135 seconds)
  done (took 39.83601885 seconds)
done (took 40.73998803 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100017879 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.146811811 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096386926 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136346752 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.125037653 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091688855 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118403906 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098208207 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123599781 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125774091 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098255912 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094089024 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096763957 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120944724 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096517647 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139355063 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124687586 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094053947 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119403528 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085917812 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118764788 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.087510348 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.11240213 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070641427 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122344224 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093283024 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.117170228 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120415871 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086270495 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110844285 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.089786147 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117719549 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086350376 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124244927 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093711435 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118851385 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.09782453 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.12040883 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.089092949 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.11064133 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118565817 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.085954353 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117570466 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095373542 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.11616615 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092953036 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.122653819 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099015237 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.141519725 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117210922 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094811149 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.122144103 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096822289 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118353 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090838742 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119505263 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.093318745 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139567911 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.120042665 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092129755 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.119680797 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094600335 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116115305 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095219113 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119248173 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121767095 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098631065 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116443054 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096741599 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116688353 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087162018 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.120303636 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090570238 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.111003805 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096307223 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.122296571 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.086311162 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.116718488 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.118381606 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.091582738 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.111254605 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089572743 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112740006 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093486361 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113158102 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069799652 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.114441298 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093322678 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.111044531 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095685487 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117926885 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094191397 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112686146 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098501545 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.11094882 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.09288227 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111779054 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.08721481 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113629861 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091576998 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.11126805 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089626588 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120439293 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088916445 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.117786909 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123408596 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087404457 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.118055089 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086300629 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.111044139 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101797536 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.12147118 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.08779301 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116093119 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086570218 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118929081 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.08694726 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111415671 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.08758823 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.110656158 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092807232 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.111233222 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089982257 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.117821235 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125652477 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086718282 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115040912 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089284971 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110786126 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092782592 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111111122 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087326185 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113125994 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077887142 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114098638 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.08660494 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118529682 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089504095 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119479343 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089275879 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.121376936 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091426521 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117619131 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092740688 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109984628 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.07423067 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116118227 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090006303 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113243653 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086570902 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113552097 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.08740673 seconds)
done (took 16.986892237 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087779548 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.185323214 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.15333158 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.143637317 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107477525 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111692883 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122788812 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119173642 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113648921 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144167599 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110794152 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.13206866 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148422076 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086686145 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112802465 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091142256 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113185049 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103682454 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145956758 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133309262 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.16568651 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086748408 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147026072 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135642833 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121554176 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.113926554 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112947532 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091691494 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115850122 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.10330177 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.133181126 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.114536626 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087788115 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134673179 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105073976 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.11946246 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087457406 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119248484 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087970981 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111689638 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142058184 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134162403 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092949438 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117470726 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091605624 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114731943 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088863324 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121571186 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098879336 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116212908 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127389176 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.155110819 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090819978 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122627339 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.08632075 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123687575 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122237367 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090313653 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112663679 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091027299 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111892705 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091635009 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.12777915 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141669978 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.09192266 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122015368 seconds)
  done (took 8.645261851 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105205419 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140473405 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.106556386 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.130742456 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.129016562 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087932252 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112573226 seconds)
  done (took 1.782982238 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088773014 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.133802782 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111709461 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.135365626 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.1325238 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.108327204 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.1228839 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088687122 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.130898497 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089593537 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134413364 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151739811 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090823334 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120295447 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.13833834 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.08913461 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138005573 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089301525 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116543669 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112341776 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116093394 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134761918 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090665869 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113357791 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.10291485 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114002931 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162564362 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094378408 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114558852 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092392553 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112502573 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.166741417 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102040958 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124523073 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088518572 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128446233 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128025141 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088680295 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.129206476 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094364374 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.127893099 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089497012 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.1142724 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.086793308 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118070655 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124834303 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.089531696 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.11484194 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.09277645 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133962345 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090299533 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127933012 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089942362 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118392312 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090467566 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120330334 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124322435 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090536433 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134163312 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090349684 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130430588 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105112365 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128543669 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130789736 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091342227 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128611676 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102663062 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116838717 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090663167 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.116801575 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.131370876 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.086820651 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116535543 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099542772 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115940026 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112420737 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.1375354 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115819018 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.100046433 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.115447401 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.08957291 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114693581 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112559463 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11883963 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088835433 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118737951 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092807048 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112340208 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088672328 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.11754881 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087188943 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115801304 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.11711496 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.089816143 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117197144 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105570657 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115382093 seconds)
  done (took 11.841961555 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090074645 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115577034 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091674419 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114604494 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.089945143 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115771597 seconds)
  done (took 1.595975917 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.113724785 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118246397 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104391783 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121291707 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157692473 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104705146 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130775886 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124140525 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108170556 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128595636 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.13033592 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.10591668 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136917545 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.12195147 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.10431716 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121296507 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.129727175 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099798617 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128442366 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096804158 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.138070354 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121423225 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096855657 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132528922 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118655093 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096501944 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126953502 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103285656 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128146349 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124014624 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095393837 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118876272 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096063552 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123927688 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130890835 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095643435 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121895305 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120253057 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100650439 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119305763 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105798444 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122853813 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.128406773 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.09508712 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124172349 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.122160546 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095294682 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126441541 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104391175 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119740161 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119988165 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.09567029 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.11956752 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094009893 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122605528 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12407998 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.093988486 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130206597 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.095629842 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.121755721 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118748355 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094170789 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124618111 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118613228 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104559411 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119596122 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.097008961 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.121458169 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121970284 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096084568 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120827897 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092705711 seconds)
  done (took 9.268080167 seconds)
done (took 34.099862285 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.69109332 seconds)
  done (took 1.665277581 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.708896383 seconds)
  done (took 1.685568143 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.751811812 seconds)
  done (took 17.728018902 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.498433981 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.583822844 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.816156336 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.180375681 seconds)
  done (took 3.055425537 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.940928354 seconds)
  done (took 1.937192529 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.296155914 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.257950817 seconds)
  done (took 1.536501709 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.774094982 seconds)
  done (took 1.763222008 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.353895354 seconds)
  done (took 2.336819079 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.331454409 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185356234 seconds)
  done (took 1.510281648 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.546250243 seconds)
  done (took 1.539914735 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.791026295 seconds)
  done (took 7.791040712 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.258949417 seconds)
  done (took 1.263465893 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.30046675 seconds)
  done (took 1.29488933 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.522258367 seconds)
  done (took 4.519161738 seconds)
done (took 50.615132031 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099230831 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126860097 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10229134 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125498946 seconds)
  done (took 1.444354899 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100830986 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121367963 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100096158 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120814317 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126731735 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095895434 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123976227 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101268473 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121383372 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096136596 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120749464 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.121027985 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098749547 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123005165 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092594273 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124276619 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099415758 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121453353 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124639778 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096181838 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118930365 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097962671 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125342161 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094358179 seconds)
  done (took 3.66722978 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.099755039 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119035113 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096384329 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118731813 seconds)
  done (took 1.437694778 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.10051178 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.142290207 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.138655353 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100609918 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.142678443 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.137078354 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092686535 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117835336 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094842525 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126391603 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090356353 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.149883728 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.137999698 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099836806 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.127087126 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088337278 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117643432 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.137406487 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.100359882 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126686418 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.093138616 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125374303 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090873902 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.140176832 seconds)
  done (took 3.818241404 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170435506 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.151377495 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139526212 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095491912 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161422738 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141745255 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.0885535 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141927538 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088432742 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.130919443 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.119343972 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.13352232 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128605424 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088884745 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113803108 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087635886 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.12958495 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128628297 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091074042 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.145418423 seconds)
  done (took 3.483725536 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.100141018 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118157976 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088993205 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116707664 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099064111 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121171549 seconds)
  done (took 1.651118618 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091161408 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115329786 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090908836 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115264636 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.09497825 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115887296 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.08866647 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115673098 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089901636 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115325536 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090006026 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114365499 seconds)
  done (took 2.244993541 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.459656314 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.092519448 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121711926 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.112875013 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.096631708 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.115570173 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.102819837 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.119395956 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141749688 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089729051 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115273337 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092070402 seconds)
  done (took 2.666557481 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232574252 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126219226 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.286909627 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192453134 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158026382 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172207274 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152709059 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165439369 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.223049118 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157925398 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205208576 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222831589 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126056512 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214018225 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112524458 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.145429014 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225091324 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212304314 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154882146 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227841414 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200500257 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165835107 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179771099 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151121374 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139371292 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172801891 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.121489057 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104043786 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232399838 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175496832 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21436806 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162105191 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147659137 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208882165 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253022908 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220587396 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188509406 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13552513 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.146445236 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.164223854 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26297658 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137695066 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230600119 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155014373 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105437579 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216347256 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166109229 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.174983185 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.150698178 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138862083 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193605382 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239603805 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.192178756 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137835623 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163841366 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15942133 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.168258136 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154831531 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251809543 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197725022 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176972882 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.120610874 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145751944 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192433728 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182816596 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.167157075 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.207101988 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1466897 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191738075 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187183244 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164963193 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217358503 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.185531057 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139862856 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168153126 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174039994 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172227889 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255097498 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176108512 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.122383951 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168769156 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1503041 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13220326 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.168208845 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125663556 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208961417 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147122569 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.134705455 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165144911 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159401663 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161036159 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199873811 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222884936 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121778851 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.111429221 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154939688 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156098047 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190258597 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14012645 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160158451 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162621679 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.131062343 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178450631 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097974762 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200075656 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.090913761 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173235733 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180206104 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.128511684 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158174091 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151728674 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.148981413 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17535493 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196415263 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143098905 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133768907 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207966697 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175705339 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.150263625 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178093459 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.226921113 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.115338993 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149788376 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228680785 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244876961 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112774219 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227797867 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157549317 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108495922 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.132912853 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180684462 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155355312 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162741417 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134885406 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.182091243 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233158051 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.09882637 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13872267 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183842651 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133117689 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131527686 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161527044 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148845056 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.112124448 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.148238451 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.152318548 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182632759 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176720758 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1529848 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164425275 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151577478 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254365758 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142428393 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.14921867 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148541931 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.093357361 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.221026673 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199049961 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130276922 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204718243 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.171345253 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160557959 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169322398 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135483119 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177975883 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129921232 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.094816293 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221322599 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166079479 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161686229 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.197547259 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159483882 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.181791538 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.180984795 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199497959 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17466376 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.16393555 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155646459 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.112233191 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16023379 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167337122 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.124697556 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.143568498 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.107085813 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153961304 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144411058 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135115359 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195794803 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195778245 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12224583 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160672685 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150779454 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180704454 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.129156519 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174033177 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.177134935 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147958539 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.223836851 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193871508 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184062736 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14485221 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233345322 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.094531658 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12587688 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142984924 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170568591 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10710117 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13659048 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167874525 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180808654 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207073297 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178403723 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167288759 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172948125 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191622276 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.122514023 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.142029328 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213187998 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180413544 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.16344412 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138417211 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.15084828 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175949793 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158228897 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256057293 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167128567 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173400627 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234696625 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.149223725 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104941685 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152445098 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186152479 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154397228 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.205175058 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12104807 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142701177 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161862505 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.133336127 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161797993 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183313257 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164469707 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216035006 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.15120169 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185781395 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127335584 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166725373 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157972338 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165471234 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081906196 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174491079 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2327124 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149365127 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168154803 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190527636 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132134339 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.178643978 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210836306 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220376824 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137165885 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157964237 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131975665 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163072979 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198138635 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179518207 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160775229 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187397643 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158590569 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.109753871 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141264314 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148573219 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150929977 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.131604169 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148537741 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.175203036 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.112078872 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212604824 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161793913 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15770185 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172818581 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150086568 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.116931182 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151867178 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240756566 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176049959 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210533945 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.149558289 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179815269 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234157302 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098650094 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132321101 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133380596 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178783548 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136074253 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190731772 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.147780091 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160503549 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182685184 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190771631 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139851163 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.092980754 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157228705 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173567982 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167907718 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153628433 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.159270619 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230904405 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.115144344 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13322134 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17291441 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161295219 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148389909 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198551516 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079352984 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149116999 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128220747 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105605998 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164248718 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235765886 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136509756 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.159051684 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192733113 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168894861 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16449099 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150134824 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122228667 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167521015 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230104848 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180715111 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.132460461 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156270658 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177881446 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193673095 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1620153 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.140619791 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20412566 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220763687 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.197763583 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142728107 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169124421 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168187011 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157351704 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187104183 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136252669 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206197651 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135390493 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227292728 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154030272 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143681866 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176493692 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.120794691 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142084183 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217472417 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177597308 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107835015 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134291153 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170637298 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177374673 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158034242 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.127825736 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17928785 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126328617 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190563747 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259004327 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135133705 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153855413 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12110956 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136248372 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157377901 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16001505 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141414245 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.139851022 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22766023 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135172698 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193413952 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230538978 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170600358 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176179782 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145000937 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693013518 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.130394962 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193624921 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155640481 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205270084 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151848518 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172771014 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158947081 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169538032 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222486474 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162706089 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231285363 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194526769 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.177083717 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133090431 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160243541 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163032727 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144128658 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151962634 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167679463 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160313331 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.15313647 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.178395528 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170230487 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.135176667 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111959738 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227227078 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155539207 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183387973 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180663874 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138328197 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17268037 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189112846 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134714142 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.180575261 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238477097 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141683247 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123326593 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133864831 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.156835158 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261260665 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.096962252 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229465261 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176322358 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158501481 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167596665 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148045115 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190026219 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157960676 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204607889 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146529466 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159128172 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127266681 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139045247 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.130920998 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154609663 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167733497 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.147458785 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159240464 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.13852289 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190247122 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.125050365 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146164144 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159711584 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192738909 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241965733 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.108049102 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135813921 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16368138 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151596307 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.176081186 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177961517 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.13594272 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109285267 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137933655 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.156117076 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.113909844 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157604086 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157500549 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165947601 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234657435 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.109737497 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.280153058 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139991456 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153230658 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089788642 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.132453004 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150335364 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118650227 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159136055 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149917718 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261415476 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.146093776 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.105912893 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147980085 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126976002 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135823326 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137935265 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190059432 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176619081 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14433551 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081673648 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158047922 seconds)
  done (took 80.92052416 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162798551 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.131407969 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147327666 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202047386 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175218887 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270312216 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209669155 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253467398 seconds)
  done (took 2.642634812 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093675138 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.14625728 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.153093663 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133147946 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091405896 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120475793 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.333242385 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.13309363 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.091364062 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.140237066 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.147268326 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.118163648 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.512801895 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.118346495 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118673981 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.08278122 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.116369388 seconds)
  done (took 3.734704614 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.457861715 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.711964931 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.48619493 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.124604036 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.093766152 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.135887322 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.673519553 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.209917465 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.09420152 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.48730008 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.769387942 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.183384058 seconds)
  done (took 18.52156511 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.09909097 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.121388395 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.107673517 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.136333939 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.095833927 seconds)
  done (took 1.653038286 seconds)
done (took 128.879146943 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.104396106 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.401055636 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071898265 seconds)
  done (took 1.601865697 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107174366 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136826682 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108400168 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.135578851 seconds)
  done (took 1.594363255 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097251661 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127420176 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109101955 seconds)
  done (took 1.434645913 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.321889702 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.190874266 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.142274463 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.10598778 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130058451 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103155865 seconds)
  done (took 1.441090523 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097515238 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128554385 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097234234 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130995763 seconds)
  done (took 1.560508027 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094677292 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071233976 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.10129776 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074020522 seconds)
  done (took 1.442415584 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113997182 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131897543 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105074289 seconds)
  done (took 1.458383878 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.130926393 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.138937979 seconds)
  done (took 1.376370706 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.104913399 seconds)
  done (took 1.204596454 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.118727617 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.170531614 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.190010104 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.165463925 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.227344348 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.165910812 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.141945767 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.114604677 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.131366851 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.143673535 seconds)
  done (took 2.674647333 seconds)
done (took 17.650320799 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102717294 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.422609211 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.414552209 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116830371 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722292906 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380193563 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.06101069 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146418314 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166069425 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093516418 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13925052 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.67200492 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.050752964 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.373717669 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.009083472 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.370716806 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.703740355 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092875573 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120116892 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09311768 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.044374207 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091476416 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122168466 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093074082 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.702520161 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426689666 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095926712 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.370397128 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092473102 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126588952 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383214501 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122507532 seconds)
  done (took 17.017713949 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.09486721 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174354186 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098258635 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.139871185 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.12408063 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094560506 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.1242525 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093160224 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179710754 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122413103 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111215848 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.12177237 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126234294 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095080931 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142377261 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092683637 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124896698 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09263437 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121984617 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12213736 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111388006 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120037752 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095031172 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121608048 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094466159 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134893915 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123947441 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093124919 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121824164 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099648759 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126796604 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094771052 seconds)
  done (took 4.839097085 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140467619 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.1825625 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128687412 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127191224 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168966838 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124664949 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199684336 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.11891437 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182845194 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12326675 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140478135 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092585843 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157366375 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123433829 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114599512 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122724305 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097014327 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122445332 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092966365 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123247995 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141007056 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092407229 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122203364 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093126694 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123280922 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.109163777 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123885303 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122600831 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094353144 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127559923 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100297623 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124551805 seconds)
  done (took 5.17194651 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096823264 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126865224 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109080809 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139494955 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095936567 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126167345 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097813783 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.12508258 seconds)
  done (took 2.028363553 seconds)
done (took 30.160380158 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.112590421 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127539162 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106557908 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135793059 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103367703 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132285058 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091694793 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134140922 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.135250362 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102931572 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.138623735 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092744914 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123881043 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091727492 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135707912 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097344918 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132792587 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102557449 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134594751 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132825012 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094255274 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133800897 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103078062 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133672041 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104531189 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134113809 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.138383197 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100365415 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122953894 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095475185 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125097247 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103735843 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124054814 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105202979 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.126699199 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097787164 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123507814 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093990681 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132973473 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133579666 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099941304 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133947996 seconds)
  done (took 6.029492196 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107145205 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.140155386 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104139849 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081520848 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.116982718 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080795823 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138778284 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079330615 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.11056886 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108346958 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.07456657 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106200543 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078960665 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.10255618 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077041291 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075849915 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108951069 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075665508 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076787287 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106293022 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079454461 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.07257383 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.109143199 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078538712 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075184212 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110544785 seconds)
  done (took 3.593057989 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100045799 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136538292 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113022531 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.185076647 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161110163 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100222656 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.133441179 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.141355942 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.10885659 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121161453 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097342453 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149626858 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111845933 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129552393 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092878368 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136902333 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136691826 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094403729 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.127592443 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.1135187 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139916434 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102394971 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.143591019 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133285839 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.091448772 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123903311 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096437206 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135000633 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097914411 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131609638 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.097219311 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.125249136 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123010722 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104627093 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.12554439 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094075356 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142497349 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102475759 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.130680909 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092995734 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.125480339 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122988997 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114048608 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.166524744 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091070689 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.128927328 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.100253306 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.13214789 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.12187135 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110291147 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131441813 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092138888 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125322272 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091729682 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121723099 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106590079 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124725064 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095937034 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132430432 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125596583 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105327307 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.126473831 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109546176 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122133643 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100280448 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.122271187 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093521092 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.12109767 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.145629165 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094579689 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.164687978 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093625008 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124565481 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.10251924 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.130232598 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128282645 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093591195 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137775657 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10331384 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125660864 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101471629 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126094024 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095500178 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.141303181 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.095799622 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.124251865 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.093934935 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.128221976 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124832133 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093858664 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135832093 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092630537 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125307812 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.111513865 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122505251 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.094136709 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.128645338 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.13447491 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092328738 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135708038 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098735884 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.122697899 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.1316473 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093620873 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125788014 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.102982415 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.12684149 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092074954 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127125148 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099577933 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123523055 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093320343 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126183892 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.095376557 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132346345 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.098973008 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.127628648 seconds)
  done (took 14.87500546 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.228343396 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.214627428 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.239374861 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.261145854 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135167376 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114473813 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.213616559 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.157932474 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123307354 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160251384 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.162321223 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.181830072 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.13966721 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.180174442 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.139378667 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.122729577 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.11251474 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.16400204 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.217035341 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.290651794 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.112306028 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.131644425 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.161929291 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160621042 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.10638868 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.133759352 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.139209392 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.105062028 seconds)
  done (took 5.742873275 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108141052 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156077871 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098927825 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145998805 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148181468 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093202593 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127351913 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094716474 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.134927732 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135515631 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092200146 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129634985 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100467485 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132841159 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123590055 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102444699 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132593239 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094376067 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126599385 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097111024 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.129967866 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102584004 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.127584106 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.12140795 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103204081 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121944857 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086357475 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142632113 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121956687 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116904662 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121411626 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.099920841 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.133099843 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094421748 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.12328712 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094925995 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125612994 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095530781 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124524402 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091759886 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.121773389 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078162861 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.12178308 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.136505676 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.09936462 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079254869 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.129042959 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128773702 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095014804 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121205955 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095650801 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.124679039 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096897363 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129550837 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.097923329 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124871291 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096524239 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116276729 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099146247 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.124562171 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084283627 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121674671 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098064528 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118534822 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101693849 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128906831 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092342443 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125373414 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098166582 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129679821 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.09569128 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.126687705 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091102911 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.125333049 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095689636 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.128037239 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.096291463 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.122146483 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.122480737 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.093389189 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075573529 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.123520289 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074458281 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126595103 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091588606 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122477586 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095476371 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129575034 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138995372 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.094789841 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132144036 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.093895127 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122861575 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097041879 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113178837 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096438985 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.137959035 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141615488 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093639477 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121761233 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.106683763 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126297508 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092315403 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106185917 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.101766065 seconds)
  done (took 12.966277038 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.126664803 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.152338805 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095393795 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.142511357 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.155860731 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158180453 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100215111 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130309476 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095222449 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142285858 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094238554 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132466075 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.097280198 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137346496 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157605998 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.102736863 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126590894 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107911561 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.133179621 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.171212711 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112420076 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.142553413 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.10842867 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.12519871 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.12904984 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.11055668 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161677821 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.109056225 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.136917891 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142217103 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108272332 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161149514 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143926923 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098947889 seconds)
  done (took 5.503155183 seconds)
done (took 49.822795805 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.231876074 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.452817804 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.210130523 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.128325737 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.236138022 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.225526264 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.223705235 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.208443215 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.674425732 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.212588306 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.436272745 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.84479855 seconds)
done (took 60.229958807 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.255789017 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.347232796 seconds)
    (2/2) benchmarking "String"...
    done (took 1.474575356 seconds)
  done (took 3.96508316 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.564624717 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.146290305 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.469943808 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.211567714 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.2111321 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.505449968 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.888367272 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.587454418 seconds)
  done (took 28.161519243 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.21678214 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.610278093 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.949041742 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.976198274 seconds)
  done (took 18.895534654 seconds)
done (took 60.983710438 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.238064963 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.245555156 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.219301416 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.191298482 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.34798541 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.239829569 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.586874283 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.230669263 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.230453938 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.197213071 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.234845842 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.211476912 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.239487662 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.581974625 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.221947447 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.213358604 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.269784232 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.780395718 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.622332352 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.212858215 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.222340387 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.234231924 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.211588373 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.212878804 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.262262584 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.212766166 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.229170353 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.214911682 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.809181102 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.212375831 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.227596102 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.773567824 seconds)
  done (took 191.281489377 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.212057881 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.222907498 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.312825373 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.25709085 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.647290666 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.412164953 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.348723473 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.735172103 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.233226883 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.237079465 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.523650409 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.214417602 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.59716116 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.197253866 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.221426046 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.317058958 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.499889447 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.566411527 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.232010356 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.485318397 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.227505916 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.558960303 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.494189454 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.455824728 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.225908475 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.294107798 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.246620239 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.216298694 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.405861592 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.422310665 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.232657 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.273263994 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.849559738 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.070967869 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.220674268 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.236872553 seconds)
  done (took 151.049402085 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.493675146 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.214657035 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.213837544 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.214503867 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.247086557 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.214346608 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.214996211 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.784783521 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.785214763 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.716610777 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.556220648 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.278044429 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.489958787 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.216339105 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.311618898 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.229219334 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.216018261 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.230797159 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.257785139 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.218769084 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.21628276 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.788890685 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.228793418 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.477646371 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.222585839 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.215255095 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.248427841 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.607956607 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.215381126 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.249331907 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.54989196 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.265887396 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.21624443 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.591687623 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.373821043 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.333209529 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.217916738 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.249193872 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.217381378 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.496250901 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.216502453 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.216998854 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.217072204 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.219647229 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.872467863 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.216735853 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.788303821 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.218211998 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.172944183 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.217839771 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.217890309 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.629407209 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.933390333 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.234183194 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.218330276 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.219975924 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.217649116 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.217806544 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.251641629 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.7773764 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.311676909 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.235674586 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.221624214 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.251962724 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.217570089 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.469196809 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.220295568 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.683510054 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.296414426 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.330506211 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.791080187 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.219534854 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.317456112 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.339629346 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.219174296 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.218132667 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.218448125 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.218675049 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.330992749 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.219506782 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.21876544 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.645965078 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.225865574 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.221048128 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.27941998 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.31708246 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.218835197 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.634651489 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.22020412 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.218514264 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.989128777 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.318018464 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.219376886 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.219434969 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.219020699 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.219729245 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.647621124 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.792745127 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.503048886 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.222779711 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.726197401 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.22143434 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.665160439 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.784533904 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.940344546 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.22223902 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.332639933 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.22473719 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.222695765 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.220387092 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.25034168 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.237955607 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.27817681 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.220689504 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.619593062 seconds)
  done (took 349.068347457 seconds)
done (took 694.034506512 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.869738982 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.859570634 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.977825042 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.852198214 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.836188079 seconds)
  done (took 10.546828573 seconds)
done (took 11.69605939 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.409571759 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.409828795 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.283852585 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.412037105 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.250508418 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.428872065 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.389797365 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.242936986 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.324463426 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.304016583 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.323790566 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.274531408 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.248534971 seconds)
  done (took 18.454819609 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.545726135 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.531527964 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.284765888 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.561534566 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.260980015 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.526027546 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.421514911 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.431085285 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.44247805 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.255432078 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.235576012 seconds)
  done (took 16.649704115 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.548320796 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.543763658 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.288184138 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.551944045 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.263349424 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.567711973 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.425401611 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.435628938 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.43602127 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.255168027 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.235525681 seconds)
  done (took 16.704695421 seconds)
done (took 52.959806143 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.231617408 seconds)
  done (took 2.384965863 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.265660382 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.429849565 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.248531926 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.237045137 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.233358855 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.233371096 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.236963542 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.232573937 seconds)
  done (took 11.272140902 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.228358964 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.229753985 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.23227203 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.229076915 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.229393329 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.232321598 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.233565048 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.229000852 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.229418986 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.232267919 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.232168784 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.23284426 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.232313463 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.232873298 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.229192103 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.229937261 seconds)
  done (took 20.84957236 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.232002846 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.23155782 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.231299473 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.231875143 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.237244548 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.231171731 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.231795566 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.230537828 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.230148548 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.231035557 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.232123247 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.230818662 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.23269291 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.230986138 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.231699547 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.232173253 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.231832692 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.230620707 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.235931055 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.231280849 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.232109908 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.231386669 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.231846679 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.232293837 seconds)
  done (took 30.72523935 seconds)
done (took 66.383068711 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.431351987 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.012963586 seconds)
  done (took 9.601108022 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.233453634 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.23341781 seconds)
  done (took 3.62510656 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.233861476 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.23367198 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.233017791 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.234018777 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.233644573 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.233596864 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.234412233 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.233911872 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.233874246 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.233487071 seconds)
  done (took 13.495263048 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.234345929 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.234241729 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.231985525 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.235612354 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.233587658 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.232048626 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.234135152 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.235155806 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.234879645 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.232999432 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.23534699 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.232060185 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.236522807 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.23306739 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.234631886 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.232511735 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.232551492 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.233326959 seconds)
  done (took 23.366828852 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.234949798 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.235635699 seconds)
  done (took 3.627795561 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.231645426 seconds)
    (2/7) benchmarking "second"...
    done (took 1.233189133 seconds)
    (3/7) benchmarking "month"...
    done (took 1.232477968 seconds)
    (4/7) benchmarking "year"...
    done (took 1.233347572 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.232859553 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.233171189 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.233513696 seconds)
  done (took 9.788578433 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.236904962 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.422547954 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.509579578 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.850712921 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.23750527 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.240243029 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.137532337 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.239249926 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.242478723 seconds)
  done (took 14.274836799 seconds)
done (took 78.934153543 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.263500593 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.247275456 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.422970107 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.231946033 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.246382339 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.578483387 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.259309714 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.360083829 seconds)
done (took 37.767641873 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.234996683 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.987519948 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.993713198 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.240779251 seconds)
  done (took 11.382153604 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.223054575 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.180661724 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.212543811 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.268908293 seconds)
  done (took 18.046654054 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.298558243 seconds)
    (2/2) benchmarking "read"...
    done (took 1.569327817 seconds)
  done (took 5.028389215 seconds)
done (took 41.850160533 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.238159105 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.237902 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.235409093 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.237792783 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.235305368 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.235552399 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.2377216 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.238587961 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.239284415 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.23958431 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.238916533 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.23857703 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23951485 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.236725114 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.236798277 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.239469627 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.236079056 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.236285065 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.236680192 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.23636455 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.236368624 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.240035114 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.23776226 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.237224196 seconds)
  done (took 30.862951611 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.240457717 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.237152394 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.239590493 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.239400463 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.236729347 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.238567823 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.240453191 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.237126999 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.239802746 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.239815893 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.237106335 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.23858935 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.239162543 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.237883839 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.240369553 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.238264714 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.239680027 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.239027929 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240957971 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.23797261 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.241716119 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.237259083 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.237923542 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.241123917 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.238536506 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.237994445 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.241639365 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.239329377 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.240894105 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.238916375 seconds)
  done (took 38.336457625 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.245562706 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.248531405 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.240689289 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.242328551 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.241284191 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.24153675 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.24151742 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.241074036 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.24101894 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.240994189 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.241948698 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.241526082 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.241507841 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.241349012 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.241606631 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.242979573 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.2417472 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.24218846 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.24161214 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.241704394 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.243266306 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.24325347 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.24219108 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.242044986 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.242671993 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.243341498 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.242632348 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.243330306 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.243140087 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.243646191 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.242310458 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.242899584 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.243223402 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.243493139 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.243928719 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.24291416 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.248318134 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.250377135 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.243002445 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.244320989 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.243197931 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.24402146 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.242895515 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.244187747 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.244342884 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.242678535 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.24440098 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.244283347 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.243988308 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.245092325 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.243960821 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.244648992 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.244143083 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.244302806 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.24431997 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.243597534 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.243677382 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.244009874 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.244715957 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.244819402 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.243754589 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.244536432 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.245284147 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.244644745 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.245243818 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.244680579 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.245317957 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.244738247 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.24457891 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.244781031 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.245316967 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.245433675 seconds)
  done (took 90.702913288 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.244482855 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.242599998 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.243697107 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.242252524 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.243293248 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.24643905 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.24343422 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.245484344 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243065619 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.245363673 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245455763 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.242965805 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.244127373 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.245489426 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.24683165 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.243827983 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.245975167 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.243788124 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.245677835 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.246460632 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.246280858 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.243416935 seconds)
  done (took 28.548484113 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.246411172 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.248372513 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.243994103 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.246879113 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.24413669 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.246897255 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.246980446 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.249556676 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.247124169 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.245760923 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245341922 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.247299006 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.244709072 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24530723 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.243971871 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.246854786 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.248505177 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.246992258 seconds)
  done (took 23.603507944 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.245081395 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.2459937 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.249165477 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.245113972 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.245968557 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.247883296 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.246083501 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.253547332 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.247625629 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.246585919 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.248412315 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.247755166 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.24924722 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246215921 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248207181 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.248235311 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.2490358 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.247143358 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.248660732 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.246331509 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.245552729 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.248328924 seconds)
  done (took 28.616025546 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.250169545 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.249006863 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.246290309 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.247452099 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.24673109 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.248590748 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.249520744 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.246847351 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.250588344 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.249525104 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.247461 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.250322954 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.248872182 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.247900542 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.248147763 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.246755867 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.250206825 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.248859313 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.250943873 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.246945056 seconds)
  done (took 26.14267432 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.250828542 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.251343255 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.251432102 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.252021626 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.251934524 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.25184895 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.25071759 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.252668885 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.252158583 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.253166201 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.251751182 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.252541581 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.251930927 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.252492656 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.252255648 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.252513599 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.251568142 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.251916079 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.251620995 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.252861068 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.252116484 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.253210114 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.252361729 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.253157448 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.253843693 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.254151615 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.253534557 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.25321049 seconds)
  done (took 36.238236672 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.252851792 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.254320965 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.250385467 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.250718588 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.251245397 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.250065579 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.251143343 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.251453403 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.253185023 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.251586184 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.25388917 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.254633327 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.253123028 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.253509302 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.25353595 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.254226072 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.25353213 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.251458347 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.251521591 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.250448485 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.254781552 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.254331685 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.254395779 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.252158946 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.25280845 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.255055589 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.252259991 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.253064139 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.254932564 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.251751234 seconds)
  done (took 38.757895671 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.272892734 seconds)
    (2/2) benchmarking "in"...
    done (took 1.272618023 seconds)
  done (took 3.721123359 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.25190289 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.255634664 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.254410348 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.252772896 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.252692298 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.255226185 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.254581823 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.253253356 seconds)
  done (took 11.206252883 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.254773305 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.254470729 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.255129859 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.254817381 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.255643836 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.255534599 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.262279635 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.274757569 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.256149274 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.257032444 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.2618707 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.262709257 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.257787231 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.256144006 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.255390626 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.258254986 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.256218296 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.256885298 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.25751929 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.256708849 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.256621285 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.257232713 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.257385186 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.255013692 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.257306715 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.267873967 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.280905952 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.256940131 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.257695473 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.25992761 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.257947795 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.25495798 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.257062477 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.258516688 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.257652525 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.256585373 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.266703339 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.276264422 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.263169034 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.278468884 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.258057227 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.25570148 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.25999815 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.258848382 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.259698735 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.258751709 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.258807471 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.25599681 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.257638164 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.263670658 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.263716352 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.25861224 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.256366943 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.262312389 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.259249301 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.263925578 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.279239446 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.26220066 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.267898641 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.268517177 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.29106382 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.284455858 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.261927587 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.260707523 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.272249089 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.284449968 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.267982742 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.277216357 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.258187222 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.261124957 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.267856901 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.294082268 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.286948928 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.260264097 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.259073751 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.261726885 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.261351703 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.263392469 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.268927032 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.284411945 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.263028214 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.263442506 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.271976079 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.284528784 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.262220854 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.263613637 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.261956472 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.26111278 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.262211843 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.270002722 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.281402041 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.261946615 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.260756254 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.261831594 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.26227256 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.262034503 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.260508881 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.261456274 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.259133421 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.261850014 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.26115927 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.264222975 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.270700082 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.262203707 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.261066502 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.267924919 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.283181692 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.262014844 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.268149416 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.263050996 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.262144295 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.263976373 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.268399802 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.260074898 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.266386698 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.270900595 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.263118413 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.262628412 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.26305005 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.263088504 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.272552039 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.289268867 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.263383005 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.262745519 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.268095885 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.274500291 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.263415488 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.265216123 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.264371429 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.261657839 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.262371067 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.2656974 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.263835235 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.265061972 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.264670029 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.264327487 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.262266844 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.265006263 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.263889576 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.26461934 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.265367522 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.264848998 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.266013736 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.266231291 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.263887992 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.265440336 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.270424244 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.285216938 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.266578884 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.264871667 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.262924048 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.264511158 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.265342053 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.266544246 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.264998124 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.265377415 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.264998476 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.266700656 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.266112465 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.266742177 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266017846 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.268384539 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.269864087 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.26591601 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.268894729 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.265056393 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.263991167 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.266176684 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.266149009 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.266482688 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.267347201 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.265163295 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.269815332 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.274384063 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.266274071 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.265874215 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.269265795 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.266568863 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.267075754 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.266518163 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.271125591 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.274928128 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.267606581 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.272998089 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.286690653 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.267927119 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.267963789 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.266898827 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.266690122 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.267450368 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.270780439 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.274880773 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.280148246 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.29434941 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.268982085 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.271238884 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.268475803 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.272411621 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.271725087 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.268112727 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.268663542 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.268199115 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.268233194 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.268607895 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.269232635 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.268849873 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.269104025 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.269768731 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.269354141 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.268518903 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.268885163 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.270729339 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.269706179 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.265928859 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.270441888 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.27026081 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.269072324 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.266978628 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.269151333 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.269994244 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.269672063 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.270633908 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.275722798 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.267501319 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.271375721 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.271055667 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.270361093 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.269453081 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.270101566 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.271411016 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.269562951 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.276823751 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.290086731 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.270850626 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.276666547 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.289447479 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.269585891 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.272793995 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.27115626 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.267788006 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.274365828 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.27961038 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.270855739 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.271558092 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.27142579 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.272583861 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.271899582 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.276305808 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.289982863 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.270115904 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.272182412 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.272394091 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.269498354 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.272312484 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.27189794 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.272647437 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.274358669 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.272329173 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.272897708 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.272557695 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.272864074 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.27227086 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.271971914 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.27496269 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.280383945 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.27715452 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.272942831 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.275263613 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.273687084 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.276645888 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.27252168 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.274094618 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.274394273 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.28518803 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.299111698 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.278727168 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.294615506 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.273755877 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.279209591 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.294195153 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.277631844 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.275784703 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.274439636 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.273662253 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.273377103 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.271532297 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.275149824 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.274883768 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.275423893 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.276254502 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.278268463 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.274896512 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.274001471 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.274882971 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.274656017 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.274396112 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.273643585 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.275751509 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.276042064 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.276853705 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.274631332 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.275589356 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.282189512 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.294948268 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.275257853 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.275508436 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.274806367 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.275453739 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.277175358 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.274758776 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.277976423 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.282036868 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.278434268 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.283987675 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.277763838 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.28484669 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.276059514 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.279854157 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.284600237 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.273802022 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.275480946 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.275461867 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.276577115 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.283008115 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.296264564 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.278381251 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.280777983 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.276565026 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.276564388 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.276840307 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.276309242 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.276289155 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.276633595 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.285197544 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.298270196 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.28192641 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.279051146 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.273428949 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.27811057 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.277424005 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.276666053 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.280798567 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.277978652 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.277986657 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.277438161 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.277358004 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.279907475 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.278428269 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.278333153 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.275280278 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.277884725 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.285509008 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.299284947 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282285944 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.279235367 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.285499886 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.298466831 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.286232377 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.298671488 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.279694799 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.279856331 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.278899396 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.280024704 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.279792934 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.279802056 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.279924773 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.279593337 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.282611303 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.280202329 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.280884734 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.280354753 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.280457782 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.280574333 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.290190386 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.303339716 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.28221766 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.284460033 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.277480665 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.282837033 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.285675437 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.280399718 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.278722074 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.284532398 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.291629918 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.288491443 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.281375523 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.28109061 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.281176727 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.28315483 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.281520844 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.281288249 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.280848141 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.282485841 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.28229064 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.282648379 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.284792242 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.282941139 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.282090159 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.282720496 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.283825428 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.291275299 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.305324935 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.283074273 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.283099101 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.283690246 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.282660289 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.282754564 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.282252804 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.283215639 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.282427248 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.284078196 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.289918873 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.289940691 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.285896185 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.283690943 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.283931172 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.283889888 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.283435768 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.284227845 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.283888923 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282956889 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.283846106 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.283641596 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.284277072 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.282748024 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.283667154 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.28421898 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.28382513 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.286464017 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.291474605 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.283365254 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.280902949 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.285075607 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.285177933 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.283752594 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.283581319 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.291077203 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.306923504 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.296596299 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.294844066 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.288168834 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.284916203 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.287990565 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.291709638 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.283197841 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.286096158 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.285475853 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.285907193 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.287402122 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.288502216 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.285983976 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.291644797 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.306446579 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.285112326 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.29399652 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.306886796 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.286148496 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.287258169 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.290029034 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.285900871 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.284247442 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.285323635 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.286115552 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.294319378 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.3066286 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.286092811 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.287894102 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.28634204 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.287915282 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.290708518 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.286546429 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.288563421 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.284022257 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.287423604 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.286485803 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.287753672 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.283921107 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.286465781 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.287554401 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.291306382 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.293795297 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.285010779 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.289147765 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.288463758 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.288126479 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.287251577 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.288423982 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.285674462 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.285838976 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.287577031 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.289394352 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.287162946 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.290771386 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.287856196 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.289797789 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.289972284 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.289411056 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.291643798 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.298983091 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.295769045 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.286853817 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.287708643 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.289987561 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.290331565 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.288893378 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.28859759 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.289636971 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.289710895 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.29043151 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.289788476 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.289423481 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.29386 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.305767698 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.309570589 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.290053068 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.290582748 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.292553181 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.290302757 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.288692831 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.290092086 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.291958396 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.293427355 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.297950952 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.290896635 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.296983164 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.310248478 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.291656807 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.294282813 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.293045517 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.297871218 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.292855116 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.290447479 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.291120393 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.296583797 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.307370455 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.291494921 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.302673651 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.320324441 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.310752085 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.290655838 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.291827995 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.291516064 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.292678826 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.292438669 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.292470765 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.29082491 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.291770838 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.292124462 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.293004926 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.296928965 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.292698329 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.293551273 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.293430587 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.292569539 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.293668759 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.289740415 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.293242214 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.291850231 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.293148163 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.292846398 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.291970948 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.291677291 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.30624109 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.319874769 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.292231899 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.292754131 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.290920343 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.296201979 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.295906721 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.30349756 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.299706801 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.293856013 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.29276714 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.294831956 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.293743463 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.292415074 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.293436981 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.293738536 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.294006776 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.291145944 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.305327849 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.320612023 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.297888969 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.293259925 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.294614001 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.294778746 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.29494408 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.294175641 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.293382744 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.294672146 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.297932547 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.298308232 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.29461096 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.295019592 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.297684404 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.302332006 seconds)
  done (took 762.961850467 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.293412466 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.293539504 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.292655877 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.293584613 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.291961986 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.292825564 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.29355229 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.291982939 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.293691255 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.292842419 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.293518987 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.294051386 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.293723331 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.293997306 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.29264697 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.29455573 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.292770489 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.292891937 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.293501826 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.293494273 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.292979317 seconds)
  done (took 28.371342959 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.296200038 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.293502284 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.294671741 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.296674598 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.294218858 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.29653515 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.29480191 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.298454136 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.296802271 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.295175537 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.297397123 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.29670619 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.294505231 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.294759632 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.295649787 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.298586389 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.297488502 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.294782728 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.297879343 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.295182451 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.297171844 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.2952667 seconds)
  done (took 29.727448373 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.298341142 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.298218431 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.297332375 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.296486214 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.297582782 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.295606619 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.299023446 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.298183233 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.299563772 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.298740265 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.297980509 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.299191279 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.305758595 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.302265163 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.300007859 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.299008939 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.442924667 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.299554745 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.298737492 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.299472407 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.296874508 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.304469766 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.319831009 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.297941911 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.298710511 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.300049011 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.300032061 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.299597198 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.300210716 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.301416883 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.304115497 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.30099088 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.299738728 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.301547871 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.299106568 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.301853628 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.304749075 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.301198288 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.298262238 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.300013242 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.310207912 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.320493299 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.301023191 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.306247713 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.32205766 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.300101777 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.304515446 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.307960985 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.298622602 seconds)
  done (took 65.143145163 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.300578019 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.301215288 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.298542411 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.300417813 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.301612983 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.30140086 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.299898104 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.301337742 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.298291958 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.298633857 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.302100673 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.299518019 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.299120525 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.302174802 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.301313054 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.298401608 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.299826097 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.299819735 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.298597054 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.299568148 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.299128424 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.302545601 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.302558903 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.300746322 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.302414225 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.300343724 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.29899011 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.302081117 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.301240071 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.299742847 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.302497595 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.303303323 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.303674834 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.30143869 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.299568505 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.303777816 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.303884774 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.301350978 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.303803068 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.301220502 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.303651522 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.303392369 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.304718391 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.30461826 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.300651933 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.301770207 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.300940259 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.302259057 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.302295547 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.304096239 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.304157522 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.301659929 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.304661673 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.301627825 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.303705381 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.305041901 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.301902973 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.301904671 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.304400936 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.303206457 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.30314304 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.305601086 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.303180855 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.304936571 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.305592403 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.302053331 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.303928843 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.305449245 seconds)
  done (took 89.752281798 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.305017769 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.305423079 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.305783285 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.305862734 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.30566321 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.305561216 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.305800998 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.304967647 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.305852606 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.30503605 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.305386233 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.305530102 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.305576395 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.305522848 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.305561338 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.30649154 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.30603893 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.306032557 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.305457041 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.305964735 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.30601036 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.305795688 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.305953946 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.305431656 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.306727375 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.305885609 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.306180347 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.305696109 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.3067796 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.30719192 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.307675383 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.306357815 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.306842041 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.307462763 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.306684565 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.306506287 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.308257551 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.307539157 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.307579225 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.307353534 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.306265176 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.307194436 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.307676967 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.307237573 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.30896032 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.307582862 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.306726728 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.307862879 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.308046403 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.307314237 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.308176998 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.307144921 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.307696558 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.308007866 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.307956016 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.307904053 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.308439924 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.30799009 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.307938301 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.308439299 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.309491962 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.309743821 seconds)
  done (took 82.245555846 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.309172545 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.309668647 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.306891726 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.305858694 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.309396241 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.307149992 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.310385233 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.310064576 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.309210491 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.309033005 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.310976795 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.30591391 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.305735826 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.308917287 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.306313407 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.306196537 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.306470213 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.306622605 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.307777146 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.305758403 seconds)
  done (took 27.385290932 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.306267851 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.308452712 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.305652426 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.30651659 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.309072755 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.303361361 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.306962207 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.307063716 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.30419173 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.306432549 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.306425735 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.306623766 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.304771234 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.303775323 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.306446716 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.303770054 seconds)
  done (took 22.121900497 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.304709471 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.307223421 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.307937045 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.306910704 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.305064521 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.303924913 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.307471727 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.304469585 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.304265764 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.308646018 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.308249136 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.307129718 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.307036467 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.307453004 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.304646916 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.30772905 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.304970624 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.305056994 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.307295359 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.30619219 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.303912055 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.304804052 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.30645999 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.306212355 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.30449224 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.306999068 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.303693121 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.30452989 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.304244449 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.307470331 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.305660911 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.304112425 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.304753415 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.304634824 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.306322115 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.304056393 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.306442502 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.306937616 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.306451687 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.308040761 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.308162435 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.305272396 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.306575645 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.307405674 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.30447431 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.306853466 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.304818081 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.30552436 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.30472004 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.303339191 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.307215177 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.307000588 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.307358117 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.308022275 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.307115092 seconds)
  done (took 73.055826321 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.308207975 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.307682383 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.30477687 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.307706809 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.308383254 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.305857999 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.308579823 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.307748682 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.306605232 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.308309248 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.306370894 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.309906999 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.306096753 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.308041974 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.307340121 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.30923869 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.305935989 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.306789246 seconds)
  done (took 24.757943099 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.306507075 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.306460075 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.310661314 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.306613143 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.306618868 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.309118464 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.30740952 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.308555973 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.309538419 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.306126372 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.306351735 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.310525286 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.308896904 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.309093637 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.307061804 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.306359642 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.311084561 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.310236424 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.308087235 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.307724537 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.310724149 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.310438114 seconds)
  done (took 30.010107748 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.308516746 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.308144728 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.308920846 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.325215454 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.328346991 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.333323948 seconds)
  done (took 9.138811118 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318080003 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310546957 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.308057994 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312061238 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309664439 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308692978 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307215632 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307505835 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311193486 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309389492 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307715021 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31066413 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311917599 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308418689 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31104407 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311111614 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308537099 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310317646 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310474538 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312216352 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308911495 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312335693 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309645636 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310128482 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30923161 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310263935 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313526578 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30948737 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309847198 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313451584 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312468778 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309598717 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312460189 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311219469 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313542216 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311826683 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31006275 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313706856 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312779119 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31080368 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.313211021 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314375379 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31252453 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309633578 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313203181 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310787269 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311040842 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31009304 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310559026 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313834589 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314368237 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310712548 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313823559 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314102229 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313061398 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314660906 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312678774 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311886522 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313863076 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312723941 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311295057 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314009142 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312235742 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312609547 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314186156 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311765852 seconds)
  done (took 87.809717558 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31265953 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.312901611 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311681351 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313258559 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311988739 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312773937 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312960082 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31244084 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312903659 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312386028 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314940226 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312852749 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312411923 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313468005 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314592622 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313269234 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312903896 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312881067 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31430717 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315956044 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313687203 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314239333 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313657654 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312841739 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313880084 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317591841 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31409266 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313814019 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313999513 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315490417 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313134409 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315223136 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314617806 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.31317515 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313799205 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314011955 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314127185 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314568844 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3141549 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315909944 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315258895 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317668543 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31493512 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315073664 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314937142 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31405693 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314983807 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314925126 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314539 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314493952 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315294061 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314970234 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316802945 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315141606 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313266552 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315551517 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313865754 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315016567 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315302947 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320170478 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315075352 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315546636 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318103166 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315151876 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315170592 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315306781 seconds)
  done (took 87.983194227 seconds)
done (took 1778.35994229 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.321660538 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.329850614 seconds)
  done (took 13.885898001 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.476755668 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.431239928 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.31464749 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.344716986 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.31456035 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.334956433 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.328435162 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.316521589 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.314226663 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.313815614 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.314050813 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.501385179 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.371047586 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.315525049 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.314827021 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.410929565 seconds)
  done (took 42.95281222 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.344767154 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.321848025 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.437536183 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.338993504 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.344191207 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.513801128 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.373077627 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.320753398 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.496726576 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.362623797 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.926541358 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.343598118 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.319889743 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.462885084 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.339217394 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.511702117 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.567317699 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.931679812 seconds)
  done (took 30.490473927 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.786308278 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.343986533 seconds)
  done (took 9.363453938 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.321116178 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.375927332 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.343234518 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.338748535 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.342982989 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.388286384 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.389801042 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.374294523 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.366102861 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.347622718 seconds)
  done (took 64.823301239 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.338059751 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.31894816 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.319293226 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.317582837 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.323539212 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.311408077 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.3178002 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.317164179 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.034794721 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.441995128 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.318911802 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.325674478 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.336766976 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.318761663 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.315035147 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.353266075 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.469235158 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.316908747 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.314867946 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.322948811 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.317398172 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.402949645 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.359471273 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.316806546 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.444124989 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.021721672 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.320643684 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.325647013 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.49474152 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.317005073 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.317527155 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.31834223 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.318711914 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.923115392 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.795410804 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.327626044 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.34316351 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.327340852 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.316779371 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.476672407 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.319506975 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.325251011 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.317876077 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.785920815 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.445432039 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.430696984 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.560918557 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.337085877 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.320490005 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.378812603 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.32006431 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.319181171 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.34870469 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.070588497 seconds)
  done (took 110.732837784 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.344099644 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.701098826 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.479864191 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.330169558 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.158993249 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.076171184 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.329142625 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.598433265 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.358770804 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.312100729 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.605146985 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.825013106 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.332284398 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.314253554 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.894276828 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.399949368 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.312447191 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.203283794 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.326209507 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.311849198 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.806592878 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.310461119 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.307865746 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.563132203 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.349038463 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.754367253 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.682711904 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.860029525 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.32943522 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.310448883 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.773543987 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.333777877 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.357489738 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.309543405 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.564845522 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.652278943 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.643802013 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.32762398 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.336491994 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.312218621 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.334954507 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.745555431 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.654019023 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.32531935 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.320904019 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.750097632 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.325283508 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.313277134 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.315599977 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.515307119 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.191457593 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.311837618 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.641484783 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.309582343 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.692565246 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.338783761 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.331737599 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.772929115 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.32303162 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.479412475 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.325580368 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.308746598 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.311584841 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.307515906 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.310888677 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.638812247 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.647680325 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.31525475 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.635778333 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.777324824 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.324231205 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.837356349 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.21694639 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.325558129 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.361576995 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.306790036 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.864625343 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.7780086 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.338978245 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.308466094 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.618091442 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.322546326 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.579836102 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.320270821 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.307078516 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.81713994 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.315881651 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.379783782 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.306331118 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.3247615 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.07584455 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.312166941 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.579048008 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.378358354 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.305643831 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.3057797 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.35731861 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.320282444 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.309102262 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.313020355 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.814138303 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.323264675 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.274141301 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.322717569 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.306717077 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.324149156 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.306129773 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.308282149 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.529110357 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.870355492 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.330254979 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.308220977 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.307026813 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.329262382 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.554329846 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.313228485 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.592361605 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.32478284 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.307693443 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.314072774 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.021119116 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.370432412 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.320813876 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.307159965 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.175943436 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.511594805 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.323970828 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.308180043 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.309763324 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.323926015 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.464579153 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.325539975 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.340914729 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.308462756 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.992705563 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.346720941 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.320005872 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.836611106 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.311492124 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.117886859 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.330221991 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.307882767 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.588680984 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.562780857 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.536326847 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.308885723 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.324997824 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.994750253 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.32733917 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.454033389 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.325000507 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.306063695 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.505283108 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.537034358 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.30903058 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.942270567 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.30952804 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.526390212 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.309127453 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.618303176 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.787286778 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.326879544 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.317210291 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.000566046 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.996907191 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.977063645 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.311345736 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.57666324 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.282162864 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.792479387 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.310310048 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.312734959 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.885315181 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.311666886 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.315899113 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.311789199 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.312529892 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.451662569 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.482626125 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.501782319 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.311792745 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.737743515 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.334008144 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.312996579 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.314863057 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.315586017 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.659942583 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.38631147 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.315155715 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.332308121 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.313445486 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.318532082 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.761247984 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.24767586 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.313122662 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.464356292 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.924234871 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.328547654 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.313947971 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.030672145 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.64498331 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.833160415 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.370541079 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.596640888 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.329058072 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.348865938 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.042887643 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.371010297 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.763436411 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.330177446 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.313666848 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.896082882 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.329679014 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.401048453 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.313643108 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.315704827 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.834316683 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.32842416 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.316293478 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.469760215 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.33187938 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.578429364 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.313968614 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.320706512 seconds)
  done (took 1106.242157151 seconds)
done (took 1379.722662893 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.314286447 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.315876929 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.297229744 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.316861031 seconds)
  done (took 26.481596472 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.32571608 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.320330145 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.322008526 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.320418946 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.323640808 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.321201828 seconds)
  done (took 9.170535628 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.351710433 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.317443243 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.318553135 seconds)
  done (took 19.225042969 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.510783739 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.563255276 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.64878619 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.441001084 seconds)
  done (took 10.401835505 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.324143859 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.322459288 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.322091683 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.32487104 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.326055324 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.328634082 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.324292486 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.325598778 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.327919386 seconds)
  done (took 13.163717434 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.042270402 seconds)
done (took 84.719169759 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.518817411 seconds)
    (2/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.781438688 seconds)
    (3/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.398962747 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.540385245 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.159476296 seconds)
    (6/309) benchmarking ("sort", Int8, false)...
    done (took 4.333186024 seconds)
    (7/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.799544342 seconds)
    (8/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.005578629 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.569573452 seconds)
    (10/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.340727524 seconds)
    (11/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.421040686 seconds)
    (12/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.440712739 seconds)
    (13/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.359341033 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.360610282 seconds)
    (15/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.442199081 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.343765368 seconds)
    (17/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.380442569 seconds)
    (18/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.158197561 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.338016911 seconds)
    (20/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.49360824 seconds)
    (21/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.592246757 seconds)
    (22/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.446368872 seconds)
    (23/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.363512976 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.438294747 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.145325283 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.35149341 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.673197195 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.834123699 seconds)
    (29/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.327013227 seconds)
    (30/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.327416468 seconds)
    (31/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.394164836 seconds)
    (32/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.360603616 seconds)
    (33/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.671713676 seconds)
    (34/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.906176309 seconds)
    (35/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.949841016 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.423024003 seconds)
    (37/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.700159311 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.677127694 seconds)
    (39/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.396441623 seconds)
    (40/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.403761421 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.659582375 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.73502362 seconds)
    (43/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.838715799 seconds)
    (44/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.318058669 seconds)
    (45/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.40383725 seconds)
    (46/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.758375948 seconds)
    (47/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.16525175 seconds)
    (48/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.450921641 seconds)
    (49/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.648901211 seconds)
    (50/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.336359577 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.573954589 seconds)
    (52/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.347008964 seconds)
    (53/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.019785413 seconds)
    (54/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.124670539 seconds)
    (55/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.655974083 seconds)
    (56/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.322391827 seconds)
    (57/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.321851609 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.149604694 seconds)
    (59/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.442084963 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.431988383 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.600757427 seconds)
    (62/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.094677965 seconds)
    (63/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.606922987 seconds)
    (64/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.340689833 seconds)
    (65/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.044525617 seconds)
    (66/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.772192626 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.377784696 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.940238183 seconds)
    (69/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.384064433 seconds)
    (70/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.71414532 seconds)
    (71/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.365365307 seconds)
    (72/309) benchmarking ("sort", Float64, false)...
    done (took 5.591764231 seconds)
    (73/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.498267241 seconds)
    (74/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.124477183 seconds)
    (75/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.301571118 seconds)
    (76/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.35921303 seconds)
    (77/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.406093815 seconds)
    (78/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.321938119 seconds)
    (79/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.32343931 seconds)
    (80/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.853471603 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.721638497 seconds)
    (82/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.366219735 seconds)
    (83/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.448309983 seconds)
    (84/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.321791348 seconds)
    (85/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.514317105 seconds)
    (86/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.304122811 seconds)
    (87/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.305426172 seconds)
    (88/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.087953362 seconds)
    (89/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.428827652 seconds)
    (90/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.539308638 seconds)
    (91/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.633962724 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.41309325 seconds)
    (93/309) benchmarking ("sort", Int64, false)...
    done (took 5.498033614 seconds)
    (94/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.030261761 seconds)
    (95/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.449765039 seconds)
    (96/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.33698038 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.688711112 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.209470677 seconds)
    (99/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.322461798 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.212061533 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.353562338 seconds)
    (102/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.967953386 seconds)
    (103/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.339261146 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.392661445 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.725855741 seconds)
    (106/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.05661334 seconds)
    (107/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.334208242 seconds)
    (108/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.735606884 seconds)
    (109/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.104686577 seconds)
    (110/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.341179437 seconds)
    (111/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.322915553 seconds)
    (112/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.336484382 seconds)
    (113/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.3289851 seconds)
    (114/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.3515704 seconds)
    (115/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.342137198 seconds)
    (116/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.306498345 seconds)
    (117/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.308676059 seconds)
    (118/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.323094255 seconds)
    (119/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.671911853 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.715215453 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.537761392 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.324238072 seconds)
    (123/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.351632772 seconds)
    (124/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.711779718 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.338728189 seconds)
    (126/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.320813682 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.665717982 seconds)
    (128/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.457633969 seconds)
    (129/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.339037172 seconds)
    (130/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.327006034 seconds)
    (131/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.802182522 seconds)
    (132/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.450234699 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.305895477 seconds)
    (134/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.724060913 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.42370906 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.151163267 seconds)
    (137/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.624399773 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.365838574 seconds)
    (139/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.617343314 seconds)
    (140/309) benchmarking ("sort", Bool, false)...
    done (took 1.851916623 seconds)
    (141/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.366043559 seconds)
    (142/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.625212044 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.603861576 seconds)
    (144/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.432233421 seconds)
    (145/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.599835143 seconds)
    (146/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.430099009 seconds)
    (147/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.91312268 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.062237841 seconds)
    (149/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.326905091 seconds)
    (150/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.884695885 seconds)
    (151/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.606495306 seconds)
    (152/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.32641016 seconds)
    (153/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.133741824 seconds)
    (154/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.536447074 seconds)
    (155/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.32637103 seconds)
    (156/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.063178478 seconds)
    (157/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.429685458 seconds)
    (158/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.326000344 seconds)
    (159/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.499776294 seconds)
    (160/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.869059974 seconds)
    (161/309) benchmarking ("sort", BigInt, false)...
    done (took 6.327121229 seconds)
    (162/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.64932562 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.315607063 seconds)
    (164/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.922565955 seconds)
    (165/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.032926107 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.21380758 seconds)
    (167/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.050893487 seconds)
    (168/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.353826324 seconds)
    (169/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.625112622 seconds)
    (170/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.665598567 seconds)
    (171/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.414612644 seconds)
    (172/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.353523352 seconds)
    (173/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.35276164 seconds)
    (174/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.871009772 seconds)
    (175/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.350638301 seconds)
    (176/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.922891612 seconds)
    (177/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.312224748 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.931154722 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.328977693 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.169540437 seconds)
    (181/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.85037731 seconds)
    (182/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.355057652 seconds)
    (183/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.316521388 seconds)
    (184/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.579222715 seconds)
    (185/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.727860378 seconds)
    (186/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.920687259 seconds)
    (187/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.664518934 seconds)
    (188/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.611110909 seconds)
    (189/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.354749886 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.926309605 seconds)
    (191/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.339850634 seconds)
    (192/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.355272254 seconds)
    (193/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.01504431 seconds)
    (194/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.372031624 seconds)
    (195/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.430736303 seconds)
    (196/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.314560466 seconds)
    (197/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.347740384 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.375689449 seconds)
    (199/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.331451797 seconds)
    (200/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.135068867 seconds)
    (201/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.373554169 seconds)
    (202/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.331938176 seconds)
    (203/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.349175069 seconds)
    (204/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.313435939 seconds)
    (205/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.358595287 seconds)
    (206/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.357108711 seconds)
    (207/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.518821695 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.388845862 seconds)
    (209/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.33620707 seconds)
    (210/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.353411299 seconds)
    (211/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.353086268 seconds)
    (212/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.140958848 seconds)
    (213/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.314154041 seconds)
    (214/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.03769284 seconds)
    (215/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.581436399 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.211155449 seconds)
    (217/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.533670673 seconds)
    (218/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.332293788 seconds)
    (219/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.955346592 seconds)
    (220/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.687881269 seconds)
    (221/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.435884966 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.963381413 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.540025806 seconds)
    (224/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.899896739 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.9463216 seconds)
    (226/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.72579645 seconds)
    (227/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.359745645 seconds)
    (228/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.857066667 seconds)
    (229/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.204537901 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.355948069 seconds)
    (231/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.568924184 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.448494456 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.37444315 seconds)
    (234/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.645278311 seconds)
    (235/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.71482606 seconds)
    (236/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.415144962 seconds)
    (237/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.333034149 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.333548388 seconds)
    (239/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.421287138 seconds)
    (240/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.4361464 seconds)
    (241/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.635749167 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.378364001 seconds)
    (243/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.379998234 seconds)
    (244/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.047367685 seconds)
    (245/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.900352887 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.21364823 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.718507949 seconds)
    (248/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.334364574 seconds)
    (249/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.162425236 seconds)
    (250/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.536818215 seconds)
    (251/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.332235949 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.190712753 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.770560334 seconds)
    (254/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.527535953 seconds)
    (255/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.49713221 seconds)
    (256/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.361827296 seconds)
    (257/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.360967877 seconds)
    (258/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.562663859 seconds)
    (259/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.712646399 seconds)
    (260/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.328530044 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.420699474 seconds)
    (262/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.133103886 seconds)
    (263/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.417971202 seconds)
    (264/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.547134268 seconds)
    (265/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.885065556 seconds)
    (266/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.324134745 seconds)
    (267/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.532496393 seconds)
    (268/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.413133409 seconds)
    (269/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.553662984 seconds)
    (270/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.142720952 seconds)
    (271/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.674160508 seconds)
    (272/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.034893393 seconds)
    (273/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.479300731 seconds)
    (274/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.713577092 seconds)
    (275/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.639192753 seconds)
    (276/309) benchmarking ("sort", Float32, false)...
    done (took 5.343808326 seconds)
    (277/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.444929908 seconds)
    (278/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.420891586 seconds)
    (279/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.362371881 seconds)
    (280/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.381059043 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.421747464 seconds)
    (282/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.538196906 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.468216267 seconds)
    (284/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.7753775 seconds)
    (285/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.331740134 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.930095586 seconds)
    (287/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.421879372 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.139336116 seconds)
    (289/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.679967122 seconds)
    (290/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.317408213 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.697583483 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.421228776 seconds)
    (293/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.699014617 seconds)
    (294/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.574969958 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.393692041 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.717596405 seconds)
    (297/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.507111046 seconds)
    (298/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.353187305 seconds)
    (299/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.386790501 seconds)
    (300/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.583808491 seconds)
    (301/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.668914947 seconds)
    (302/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.379882661 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.343595719 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.36320703 seconds)
    (305/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.739408085 seconds)
    (306/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.087199869 seconds)
    (307/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.022899696 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.334962686 seconds)
    (309/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.654354169 seconds)
  done (took 913.868652452 seconds)
done (took 915.10701951 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.372363492 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.369197028 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.350996648 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.372291822 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.463269776 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.375849211 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.360548145 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.353745857 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.399503733 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.400254109 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.349537694 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.373982966 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.352404824 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.351084006 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.34977777 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.366768751 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.330985816 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.351802621 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.368189339 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.360325907 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.367822354 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.349778684 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.400499586 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.375215031 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.355501284 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.353334497 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.354023155 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.37221892 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.463579402 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.35565394 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.355185027 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.362848648 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.331036885 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.350473078 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.347020811 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.372837651 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.364592153 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.361410415 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.357211919 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.384484187 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.712960633 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.368275044 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.354830904 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.353395653 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.354038856 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.357212108 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.355144194 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.359726716 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.368391385 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.368607629 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.702734603 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.384990617 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.356837649 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.355031712 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.364780526 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.353119011 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.357748157 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.372306289 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.374655422 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.372442043 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.327516563 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.361667492 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.357502761 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.371272381 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.362800481 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.74170951 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.36603231 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.359637378 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.71839418 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.376616246 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.741408803 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.3793868 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.356850847 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.369402001 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.386869814 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.332430973 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.350764618 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.355274144 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.363391239 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.354290279 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.366085304 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.37008688 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.360521238 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.35579636 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.370647263 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.380108752 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.366527057 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.356785966 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.364739864 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.375733075 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.363198214 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.36833974 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.360504737 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.352811635 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.36709224 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.360218228 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.360038566 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.360967774 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.360735796 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.367944 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.717874447 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.390983143 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.353199767 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.354563474 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.355236025 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.371529392 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.7181631 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.374988166 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.379092754 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.405019306 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.359880052 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.32242198 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.360361051 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.37533655 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.367453311 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.360797581 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.353769834 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.324357009 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.711404363 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.390369718 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.358964839 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.357939978 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.376537777 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.360315394 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.356418393 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.33918045 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.360157027 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.373765402 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.479711059 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.369792856 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.391530143 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.356554337 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.361777788 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.384038457 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.376683098 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.3912996 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.362315561 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.376818773 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.377287172 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.355959219 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.371059432 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.369261748 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.361856317 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.365294959 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.354465624 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.384815102 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.374023418 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.375747522 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.380729688 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.481997835 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.356654612 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.328063506 seconds)
done (took 227.857826049 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.418210811 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.351522514 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.441066034 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.355462102 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.453996038 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.458216066 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.353356936 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.353686184 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.353769159 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.734916146 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.35372793 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.353458214 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.355178789 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.353708055 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.43835033 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.355495434 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.353693706 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.705241334 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.355610209 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.425993113 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.352076435 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.354177984 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.356642615 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.747947774 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.350194741 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.357651391 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.429806881 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.358474338 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.704522692 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.353958973 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.357801723 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.713227996 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.452454796 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.374590111 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.368275082 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.364375415 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.458463277 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.37533976 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.441528298 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.440809424 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.444536944 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.396062169 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.35784596 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.354885837 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.360307326 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.359075012 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.356908778 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.386350706 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.356275933 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.355057964 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.700249236 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.367744317 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.357982613 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.356333562 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.356333946 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.387901448 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.356662337 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.359891877 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.449797272 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.359792523 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.421443973 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.741626322 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.746567745 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.359326252 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.352265727 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.35703869 seconds)
  done (took 150.065157385 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.424630255 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.431219753 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.468092662 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.377913502 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.410623024 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.474461187 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.377622076 seconds)
  done (took 11.236374169 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.366988425 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.360688741 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.409856744 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.40946083 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.360437173 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.507278362 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.361148182 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.371282921 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.359061377 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.414513751 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.362627792 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.361076135 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.367246205 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.360165084 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.409065266 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.371512279 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.474400627 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.361663855 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.360705174 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.518093461 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.359171896 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.368153148 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.41321193 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.373257476 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.362905769 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.367177436 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.931880317 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.360987725 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.359108546 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.361282767 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.357246012 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.400254622 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.361604725 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.358663927 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.358659951 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.47775425 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.361854942 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.35996118 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.363319642 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.356004877 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.362219787 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.362735079 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.361925296 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.360562159 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.363058701 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.386300074 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.362527527 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.363714616 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.362934788 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.363863148 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.414005708 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.363622643 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.36195247 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.361227547 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.418898165 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.370186908 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.363367742 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.361865293 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.365016386 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.363421723 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.521214333 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.410783446 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.362950844 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.411895266 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.363766053 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.364768934 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.36437872 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.363741623 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.417885726 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.364951985 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.413664845 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.360921958 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.518096493 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.387140032 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.366183957 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.36606585 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.367581686 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.364363382 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.360304127 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.370675773 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.364033492 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.364968491 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.370112729 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.362134999 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.36297184 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.468905777 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.475127569 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.363139478 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.377552572 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.372547231 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.363791989 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.418563953 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.36596303 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.363671232 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.417834708 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.482608905 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.422681929 seconds)
  done (took 156.087380236 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.370880688 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.375309093 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.368297199 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.382863501 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.368414084 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.367321474 seconds)
  done (took 9.510319391 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.36856659 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.366604865 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.367294695 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.367944053 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.367117411 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.367395316 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.366232913 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.367551217 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.370690172 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.366110817 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.367308923 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.369273886 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.367693289 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.367960552 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.368424333 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.36755849 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.369177751 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.365120249 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.368750973 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.369257745 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.471845273 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.368171884 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.368949656 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.369563377 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.372475359 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.36951866 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.377540377 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.370112713 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.369188667 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.376050307 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.387978135 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.369629534 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.370268855 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.375457116 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.373070248 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.370253835 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.372660731 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.371403908 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.367460826 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.369177387 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.371124563 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.369511935 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.369427527 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.371672876 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.371104273 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.373540765 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.375514952 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.377365694 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.370474933 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.371262077 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.371353123 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.370112003 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.370908876 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.372557049 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.371982696 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.39071277 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.374723558 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.370664232 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.370053539 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.370434739 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.371165352 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.371376799 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.373077113 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.373524473 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.368839765 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.372555255 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.372023356 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.375212368 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.371919598 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.371490455 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.373727161 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.369747101 seconds)
  done (took 101.09690516 seconds)
done (took 429.261711777 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.702554682 seconds)
  done (took 7.986401705 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.532896214 seconds)
  done (took 7.817785568 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.947948067 seconds)
  done (took 21.239228811 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.403803167 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.46036198 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.793277604 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.368236512 seconds)
  done (took 27.309775695 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.679212503 seconds)
  done (took 7.964698911 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.366564894 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.365692596 seconds)
  done (took 14.017017106 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.979986282 seconds)
  done (took 8.264131544 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.911243309 seconds)
  done (took 8.202836584 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.390079984 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.391243714 seconds)
  done (took 14.338384604 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.346153864 seconds)
  done (took 7.629847731 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.128019706 seconds)
  done (took 8.413308804 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.375858428 seconds)
  done (took 7.660739883 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.42295803 seconds)
  done (took 7.70635035 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.111363155 seconds)
  done (took 9.396364246 seconds)
done (took 159.228538805 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.365835665 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.369539407 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.368427481 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.368802468 seconds)
  done (took 26.756962052 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.407016958 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.407040919 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.408156626 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.418476866 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.410487849 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.408176301 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.399731567 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.399624695 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.417312736 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.422442384 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.408581077 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.409092174 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.427415505 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.399992518 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.409600825 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.409330669 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.418272446 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.409213148 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.400339326 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.410900801 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.375015777 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.418289757 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.41075521 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.376084069 seconds)
  done (took 35.066912818 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.895617681 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.444772151 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.527828669 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.427188018 seconds)
  done (took 7.580895525 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.427216735 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.429144075 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.439705343 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.47997302 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.512702507 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.438741468 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.403142006 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.396278701 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.383386279 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.428710469 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.504517234 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.445534175 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.53956078 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.376252271 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.562560307 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.375568829 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.376053414 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.427900366 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.480279734 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.493587901 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.375962856 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.427994433 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.431356464 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.445695095 seconds)
  done (took 35.888575231 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.376277567 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.384298365 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.376029031 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.375003331 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.384198179 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.375938237 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.376330765 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.37721147 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.376296499 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.382678422 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.375235935 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.390177541 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.377714269 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.376552093 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.382333391 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.376883425 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.382373252 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.375310103 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.376604753 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.379696823 seconds)
  done (took 28.866160067 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.369720129 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.296910282 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.721864821 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.625677469 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.370941916 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.375166537 seconds)
  done (took 29.050229799 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.445473276 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.587994299 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.378473474 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.720475503 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.811253873 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.39518027 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.378279798 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.607997914 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.914101623 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.906301536 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.433292946 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.444159457 seconds)
  done (took 20.312713133 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.384719559 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.372350706 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.384761145 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.387085425 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.431091764 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.397872941 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.385527611 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.372600915 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.433412182 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.452028598 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.398400379 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.43169545 seconds)
  done (took 38.122186036 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459286699 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.417395649 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.343047765 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.139611258 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.092096308 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.58548181 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.139872786 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.803910639 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.37892633 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648083507 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374492888 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463451495 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.630640714 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380501934 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.375283896 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.335716945 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.617280049 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852726363 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377222242 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.239142993 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400046703 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.382693971 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.330132787 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.403950596 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.586699263 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.516031412 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.637634639 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.151750494 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.663190267 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.387108718 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386185016 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.375377271 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650594613 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035077555 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490935631 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386346546 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.093930208 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.922020531 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.359317516 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.319725762 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.127025696 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.378572765 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387211312 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376301047 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.30991931 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.379517518 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.803921538 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.384812282 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.087794376 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.377045896 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.388085821 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471159368 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.379683783 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.946727689 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.408213192 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.381875097 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.373998049 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384824842 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951464047 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.711993455 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384143542 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.311324964 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.769809771 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.335527976 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993941117 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.496618586 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.380741928 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.381706688 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.311599971 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.305873276 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.395214553 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.524537972 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.400015026 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.027959012 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.065306906 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.403658548 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.308497835 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9207888 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.39468194 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.311805066 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.605835704 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.153283942 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.313931961 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.325993422 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.312659629 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.086583728 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387591192 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.76860222 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.386750384 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.807793118 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.391505523 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397622899 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40336685 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.602589204 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.260948177 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379742285 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.186471996 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.524988839 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401419488 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.804342868 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.314246637 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.382936668 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634992743 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.592370135 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380048277 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.370492882 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.594391569 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381396658 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.41339204 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.380040992 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.407068354 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.942213699 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.40985581 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.708209158 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398345956 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.159778979 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.114128927 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382593968 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.484609996 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.380896089 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.622177332 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.144046346 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.540126502 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448250187 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.383439354 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.381437615 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.348347294 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.973585493 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.541264144 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.377711723 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382074671 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.411272786 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.382599492 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33063774 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.380700001 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384485788 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.159237015 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.60603323 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.387370821 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659084197 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.317462926 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.529070365 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.391503923 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.605345487 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.571375578 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.398150325 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.641754639 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391707408 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.384534391 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.398276178 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401582029 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484440175 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405330428 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.393620044 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.642315276 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.387268454 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.386886454 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.404989936 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.164382999 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386741547 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.389799347 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.232229863 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950773535 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377444029 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.392724044 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.273538594 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.40008991 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453680879 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.391394463 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.395383613 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.173869542 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.231227584 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.391745023 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.388030936 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.609191848 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.396182773 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.253716539 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.465202866 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.576957125 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.954343903 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.415280113 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.319190211 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.097081074 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.079583305 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386199086 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.586498467 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.385719317 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396797482 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.398088803 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.93111368 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.950370378 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40329 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.256164527 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.395933382 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.397272219 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.391133634 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386098702 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.145819618 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.735010233 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397407824 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.401473649 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.529504975 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.400945065 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.321839275 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.903024725 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.391822249 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.387431892 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.164253052 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421479618 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.240119563 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.86322773 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.646914597 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.09220969 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.398955432 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.42826491 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.422454368 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.388027509 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.180022271 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414645787 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.405507242 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41342078 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.399672356 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.31526795 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.752901805 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95742935 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084898597 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929482961 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.315328112 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.392169577 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.300087948 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.820297968 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.323663775 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.045602687 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.572658619 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.835924592 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334919872 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.584309341 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.571070359 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.156475895 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.399749368 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.615900399 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.303527453 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.187839998 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.422214528 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.600436993 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424716714 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.391612377 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.320261502 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.687398403 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62094728 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.13958118 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.470285645 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.819620666 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.186490944 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.189886332 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.388905447 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.72894686 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.576041839 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.935338975 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.778144071 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.392748772 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.395614462 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.866513235 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.400284497 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.915727309 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995655017 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.411615901 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.586138155 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326530394 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.401739647 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.401790831 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.387610013 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.646450079 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.39554109 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.644953262 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.402793404 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.325202661 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.398724463 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906856095 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.263689652 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.398201087 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391979502 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137464094 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.394326101 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.68394207 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.400156264 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.13157587 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411381711 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.326614942 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326908987 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.085622236 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.392823983 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367613963 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892878526 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.770974338 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.40701124 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.4219554 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.23980876 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.648492589 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.407412159 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.963880042 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.634949394 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.212031654 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416345623 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.493910583 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.263548512 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.394375475 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.274882939 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.62924146 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.237378823 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.617671982 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.37182797 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.297906701 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.393975638 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.605603351 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.276109999 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.403660383 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.646637243 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.125521138 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.398277773 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092001676 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436722544 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.402607237 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.404495344 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.788540677 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402202043 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464400031 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.405174116 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.406066859 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.406902503 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.562817451 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396732158 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.41475214 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.409730956 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488658874 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.741687801 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.145884181 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.167978417 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.973822454 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.122771806 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.983616609 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424469804 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.395444942 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406448818 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330599938 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548733748 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.92170347 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669324873 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.526651608 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.859576828 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419558392 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.377961593 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.417584233 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.628138499 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671512066 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.366613908 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397784027 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.182185572 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.555590395 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.408192698 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.607744028 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899147733 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962539179 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506040145 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.399108374 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.82356174 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672373164 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.488484864 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397288379 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.988073082 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.401548883 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.743192354 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.425796073 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409609535 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546913973 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.407838982 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083220095 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.426555437 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.553995206 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.171217232 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.292367486 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.656332081 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.84245537 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.409944388 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.974414536 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.101235207 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.665347487 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469929334 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.409266302 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.512984987 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548890978 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.40822174 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.297515207 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.399156919 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.243277883 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.109987952 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.409076405 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.974286341 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.68256277 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.396754093 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.407076894 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422436108 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.410886168 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.623458226 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.108332925 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.629065489 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.411355833 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.401029726 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.392071104 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.972838234 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.434092378 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335261877 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.404460389 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.647882741 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.655264528 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424485509 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.853602089 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.112114815 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950206845 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.37326973 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422995074 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.410680047 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.087275809 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.977534176 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.174324418 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906835062 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.061835176 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.405910967 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.675449656 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.407183835 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.416174345 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67772656 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.404846652 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.401873816 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.413436263 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.977813654 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.174148096 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.403622673 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.306636879 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.341288608 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.627746881 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.057645406 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.338801036 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.403047202 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.576121417 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.404885738 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.534511514 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413794887 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.400597932 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41863209 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.13747939 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.676116543 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.409634806 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.391713541 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.341085781 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.40533076 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427440746 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.63595582 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41053503 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.077543766 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.754722753 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.660138892 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.413300177 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.384155989 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.408548922 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403799743 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.122435289 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.414755345 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.936925775 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970994555 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.415534368 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.414987056 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.409189784 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.622008124 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616870746 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.407190528 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.417428211 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4156732 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419578276 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.304873065 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.171913427 seconds)
  done (took 1608.984816437 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.451022058 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.435976451 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.431802828 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.442907692 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.425773807 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.480663034 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.507524545 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.51060085 seconds)
  done (took 53.007065241 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.404267474 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.561318375 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.436380187 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.41674101 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.416015337 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.417735754 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.854122528 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.432432693 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.416416093 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.416869181 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.417008833 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.419516468 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.051682403 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.416931993 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.407536572 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.387324825 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.414751518 seconds)
  done (took 66.61656694 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.410316722 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.90187644 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.500047037 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.408629275 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.357288277 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.42115592 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.054347026 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.411409215 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.408671026 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.7095341 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.077866212 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.449517105 seconds)
  done (took 85.434692435 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.416635258 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.416211884 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.415943605 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.41487234 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.416276344 seconds)
  done (took 8.402278398 seconds)
done (took 2045.374192652 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.655034477 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.09698522 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.048790111 seconds)
  done (took 5.468561171 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.554227098 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.601049268 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.722624377 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.727465579 seconds)
  done (took 7.926422171 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.692677381 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.77907721 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.604612401 seconds)
  done (took 6.396221124 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.798830309 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.419308318 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.543288276 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.404641211 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.406984042 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.408220401 seconds)
  done (took 20.540409249 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.410068763 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.413093261 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.410361444 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.413796783 seconds)
  done (took 6.968115397 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.388863032 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.093440449 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.391333954 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.403061057 seconds)
  done (took 18.598769413 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.158016979 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.171091606 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.155198713 seconds)
  done (took 7.806592405 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.417161769 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.253352149 seconds)
  done (took 9.994151788 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.693881203 seconds)
  done (took 3.014963411 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.542217679 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.734651529 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.434869038 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.378031033 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.448017232 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.155295072 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.99975984 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.600445528 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.362021078 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.528351417 seconds)
  done (took 28.506320821 seconds)
done (took 128.957620945 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.150853721 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.651442367 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.611168942 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.119343401 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.640872627 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.61093234 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.628957078 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.088967634 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.631975432 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.619594501 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.121717878 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.645219291 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.575413452 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.652494392 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.575407014 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.650726396 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.642286984 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.202067847 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.808316946 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.0086563 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.631073605 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.761923233 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.954256332 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.780189321 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.641180837 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.563403169 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.338512699 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.655301012 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.976706194 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.35578466 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.562732629 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.176844839 seconds)
  done (took 195.357204455 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.409228571 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.409367411 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.410003891 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.410451973 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.426318785 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.411137677 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.409790255 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.427032626 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.416702358 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.416728153 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.420292316 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.409488754 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.428580551 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.426831488 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.426547821 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.427035415 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.430599033 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.410616306 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.411145044 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.412028751 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.426471555 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.413246466 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.42720187 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.430164158 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.411812751 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.411925478 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.411305826 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.423763513 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.411088217 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.427012708 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.412965421 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.412228334 seconds)
  done (took 206.694878012 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.424835709 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.411853327 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.429034792 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.416361946 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.413139486 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.413439606 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.414994946 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.412346343 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.43462316 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.411406642 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.411161239 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.428209408 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.428000931 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.412716394 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.415247853 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.412308264 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.429592561 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.423424517 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.413575747 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.413393326 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.430760326 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.425002942 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.427495354 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.412690624 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.413011761 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.414855488 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.428397301 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.414401801 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.431299144 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.415357365 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.414152558 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.439786401 seconds)
  done (took 206.765578013 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.616017822 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.421924647 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.422858474 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.381840802 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.422782718 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.421549988 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.418682953 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.611738338 seconds)
  done (took 15.046403204 seconds)
done (took 625.184539055 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.706166322 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.42599046 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.620354372 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.442871393 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.185387282 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.459777974 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.442715654 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.606415552 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.332405888 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.614898036 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.641828784 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.456578407 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.786857305 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.441176737 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.691202722 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.53878863 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.290330455 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.41132433 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.752671383 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.984488869 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.697422681 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.895040578 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.625250093 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.324469774 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.80307764 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.898087938 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.161305614 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.281913378 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.458726666 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.759913843 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.062641333 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.40053384 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.501686286 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.499669224 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.557642004 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.536419662 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.39419508 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.499184379 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.643774697 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.667229404 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.955326231 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.152468196 seconds)
  done (took 94.938353608 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.406605926 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.407283404 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.406231709 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.407110589 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.408797488 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.407555349 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.407733387 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.406813798 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.407264479 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.407100691 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.407744924 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.409412776 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.407585344 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.409386638 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.406467111 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.406363738 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.40831437 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.409786104 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.407156511 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.408632688 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.407403268 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.406557178 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.407433848 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.408332603 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.408255426 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.408273847 seconds)
  done (took 37.932071119 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.42835467 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.677788417 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.827963251 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.431729265 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.426887312 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.430798945 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.502076329 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.428031634 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.430765124 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.428012698 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.594106414 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.430944191 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.462959695 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.85562739 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.429807448 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.428091639 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.427529651 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.42804905 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.687162385 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.437157983 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.525431992 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.429894493 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.506528199 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.439151855 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.451223464 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.428997797 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.432582905 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.94904547 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.449143462 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.595176502 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.205620265 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.505897031 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.900705784 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.858634973 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.206812114 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.434044537 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.430450899 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.600265822 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.431957409 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.430034952 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.505401041 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.431605077 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.839337651 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.049835714 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.44571776 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.42986607 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.968416266 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.617963622 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.667014645 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.437008288 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.865205695 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.4336263 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.431361238 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.432314807 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.668390455 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.436396784 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.42844588 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.95794086 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.453697267 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.506122514 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.431787118 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.430256692 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.693589352 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.42987639 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.681151817 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.433187637 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.439623756 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.449392723 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.842862406 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.434148673 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.067471988 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.448219511 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.431542428 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.596681701 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.681009676 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.000285219 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.453266454 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.697266914 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.915103408 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.523554697 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.435042063 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.938480739 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.527614629 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.435516379 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.434716024 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.434840451 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.43244127 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.479331423 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.50603593 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.991419064 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.070434835 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.975838238 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.527905983 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.445343712 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.434349254 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.95971158 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.452479811 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.442628902 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.838713064 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.067186625 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.451692413 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.440938501 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.067993155 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.452520373 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.50990746 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.440363155 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.850230383 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.433624443 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.481942394 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.435299347 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.441963666 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.456145221 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.511749282 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.437224217 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.435721836 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.039829201 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.624210292 seconds)
  done (took 187.169652202 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.429215141 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.428383622 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.428731586 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.42776527 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.426810969 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.435781856 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.428750778 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.428792883 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.434768491 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.428134576 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.428339279 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.428900703 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.430947144 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.430550273 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.46082572 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.435418026 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.085424985 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.431665814 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.43593423 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.429678127 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.223721689 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.429132391 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.441780277 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.428519579 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.429772991 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.431983151 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.436576755 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.451998518 seconds)
  done (took 154.910368527 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.437119252 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.981699561 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.454734916 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.565020544 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.457035847 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.435611512 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.56269639 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.492721534 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.455000527 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.435372338 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.435108614 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.729267425 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.437850609 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.935827265 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.623772982 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.581034736 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.934052805 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.454728313 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.43570686 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.435591063 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.566630697 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.441233681 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.730481947 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.983046464 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.455784427 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.982909386 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.423437655 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.439456099 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.43626996 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.984873601 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.451918246 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.73136553 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.513452565 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.494939708 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.002487048 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.953487897 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.953505229 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.581916666 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.437573756 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.435281753 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.436492779 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.42217721 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.986683175 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.455464515 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.4385274 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.975974747 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.457827987 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.44043818 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.44514835 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.437005032 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.497536401 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.513306787 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.751652716 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.99271843 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.529988748 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.452127827 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.566656621 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.804073035 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.441724703 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.938395193 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.421540207 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.992865876 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.458214373 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.423036481 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.439320079 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.444824268 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.584989758 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.567277068 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.940401493 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.456401623 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.939289667 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.601492751 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.439685106 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.438989128 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.442006348 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.994617829 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.956259206 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.602362366 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.570818813 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.628972414 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.427268392 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.439388204 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.423917827 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.516463882 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.440442745 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.99493801 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.958289923 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.458663663 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.443655047 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.443034251 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.442665084 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.613713573 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.010243613 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.533318302 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.929715842 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.754677219 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.738916417 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.443610537 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.500032248 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.456434292 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.740502767 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.443690142 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.497391333 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.867145639 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.739954691 seconds)
  done (took 170.212069911 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.675495686 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.625528388 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.532495728 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.571450301 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.034080803 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.00789369 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.686028921 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.578414849 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.550772028 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.707819411 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.575070955 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.529845872 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.606753923 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.51640953 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.164391875 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.528133399 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.547952445 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.581070908 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.551592479 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.447700306 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.071213475 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.726957633 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.611504458 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.268232567 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.535033499 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.178018141 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.995354608 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.995348004 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.609227618 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.754585902 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.973365919 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.580251189 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.39558303 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.107275113 seconds)
  done (took 68.171210673 seconds)
done (took 714.661030524 seconds)
SAVING RESULT...
DONE!
