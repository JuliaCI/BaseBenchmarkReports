cset: moving following pidspec: 13620
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.364963987 seconds)
loading group "string"... done (took 0.503769986 seconds)
loading group "linalg"... done (took 8.366803378 seconds)
loading group "parallel"... done (took 0.17054218 seconds)
loading group "find"... done (took 1.344780787 seconds)
loading group "tuple"... done (took 1.922643869 seconds)
loading group "dates"... done (took 1.320514419 seconds)
loading group "micro"... done (took 0.210759368 seconds)
loading group "io"... done (took 0.544614433 seconds)
loading group "scalar"... done (took 40.59818955 seconds)
loading group "sparse"... done (took 12.661392839 seconds)
loading group "broadcast"... done (took 1.121808442 seconds)
loading group "union"... done (took 13.995232576 seconds)
loading group "simd"... done (took 4.854133888 seconds)
loading group "random"... done (took 9.703562885 seconds)
loading group "problem"... done (took 2.075126515 seconds)
loading group "array"... done (took 23.290041298 seconds)
loading group "misc"... done (took 1.069298232 seconds)
loading group "sort"... done (took 3.498783249 seconds)
loading group "collection"... done (took 20.719153757 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.57746888 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.132678575 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.143072287 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.171585212 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.199203276 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.134929254 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.153207276 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.163320188 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.018485321 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.202693283 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.138418102 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.496216365 seconds)
done (took 5.281446498 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.224049968 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082198213 seconds)
    (2/2) benchmarking "String"...
    done (took 0.123498231 seconds)
  done (took 0.904836006 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.072740604 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.170129392 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.091412405 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.108611954 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.107924156 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.089776196 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.108376248 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.10682372 seconds)
  done (took 1.486416271 seconds)
done (took 3.396146978 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.762145976 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.837972262 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.497392285 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.121767473 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.152799967 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.126682026 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.305100843 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.148778883 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.118458749 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.111399546 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.173660396 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.440614863 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.476673526 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.042196267 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.092352861 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.124537943 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.077587522 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.796886125 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.077454564 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.115023695 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.505387072 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.108283708 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.112682494 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.125350701 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.203843909 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.112097779 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.181387026 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.106233796 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.671661618 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.098901668 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.180406321 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.094353844 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.159125485 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.211433874 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.091665527 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.0890401 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.676841927 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.189998669 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.108584595 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.091044883 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.676290819 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.077658571 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.190032708 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103756445 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.106944812 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.184136288 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.096655191 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.091972295 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.08098728 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.101042511 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.155009442 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.446904283 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.103619964 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.139318745 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092485841 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.693478673 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.092258562 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.153657996 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.120579172 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.105029828 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.079164462 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.104115035 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.15666199 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.098347492 seconds)
  done (took 19.710288218 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.114317755 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.136742219 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.091160698 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.135308946 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135698134 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.07616194 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.098389888 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.074398941 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.123444973 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.17941387 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.13574172 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.141007328 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.072053087 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.091593458 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.097338955 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247187862 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.118147574 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.100666555 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.093893025 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.086687028 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.135396614 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.090814742 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106896699 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.106788896 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165038896 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.201932241 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.105553563 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12054415 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.090280331 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.095335161 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.139698753 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.157043827 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.073246985 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.090277185 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.176911344 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.103517261 seconds)
  done (took 5.025977239 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.193732804 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.097865646 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.197860885 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.170421032 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.147215137 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.158988075 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097651422 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.259234193 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.176843758 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.158688953 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.159773495 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12596574 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112618524 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075843777 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.092992531 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.076002617 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.704062729 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.164275917 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.142996127 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.119495945 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098989035 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.079368688 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.366086293 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.080864499 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.092565035 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080139672 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.085720821 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164560146 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080199266 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.218592546 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.095535097 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.105821062 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127850762 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.19211452 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124172549 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.113255314 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098586944 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078371267 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.191726327 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.0962726 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084425075 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.092684644 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.101444821 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130573095 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.130530539 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.094812969 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.086895101 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.242802154 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.07949753 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.111162874 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.007638893 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.210303338 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.090960746 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.092733184 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.332445152 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.095670007 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097850749 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077913839 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.282268771 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.11444235 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.094531872 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.074752381 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100062067 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.076545684 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.39707887 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101269901 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.97819378 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.079570758 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.150111799 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095592602 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098835077 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082512578 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080406524 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.115238642 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.075747414 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.095277959 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.075621375 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.092919434 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.079575739 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.09542032 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.094166411 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.09766564 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.075100379 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.160248693 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.115465855 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.09581465 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.121259909 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.080238216 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.092196169 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.123771214 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077752304 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.078014846 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.134536757 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102669093 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.093462697 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097223892 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.139454336 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.094081783 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.163922329 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.091961147 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.102555558 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.097534899 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124554361 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.114437364 seconds)
    (105/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.076469119 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094456469 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.079992412 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.091866173 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.075899678 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.157940877 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079066122 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.076289891 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.09723797 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.088481538 seconds)
  done (took 22.931468322 seconds)
done (took 48.36919385 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.376401141 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.105869922 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.107032932 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.106002977 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.104852346 seconds)
  done (took 1.577579942 seconds)
done (took 2.331994082 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.310355255 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.19193872 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084251415 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.168008806 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.100716804 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173572254 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.156895231 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.113697775 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.183186782 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.09722562 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.16250177 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.095963943 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083669543 seconds)
  done (took 2.69976976 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088765955 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112776408 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077284024 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087209595 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087590508 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086369007 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103045379 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107516133 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102260751 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081235326 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086636488 seconds)
  done (took 1.770507053 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087044399 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.094729339 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093859024 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085845834 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087535692 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08655294 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.102600656 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096902157 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10423753 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081842484 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086291804 seconds)
  done (took 1.757444949 seconds)
done (took 6.970835024 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.063280393 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.406693858 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.118957233 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.167956779 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.305082951 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.210811435 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.598375904 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.130859024 seconds)
  done (took 15.945379739 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.106718763 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.092365139 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.075093324 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.091195659 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.074610377 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.109462228 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.075290878 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.093762164 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.077210824 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.076811738 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.092461457 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.076676886 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.094668542 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.074195179 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.091380812 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.078056345 seconds)
  done (took 2.19622081 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.110360106 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11020652 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.098616017 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.083992627 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.096410412 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.079029858 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.098830309 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.080235554 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.095058004 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.079118978 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.09986497 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.082568927 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.097864325 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.076657072 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.09817453 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.08454124 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.09459751 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.097777417 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.083265763 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.09834405 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.083762486 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096518896 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.081421294 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.099786789 seconds)
  done (took 3.067275257 seconds)
done (took 21.959202159 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.160691907 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07932128 seconds)
  done (took 0.999245216 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096427655 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113822812 seconds)
  done (took 0.977063345 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.102524863 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.092170831 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.130661704 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.092069817 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.093554577 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.076555003 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.124868405 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.093477293 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.076271994 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.07674152 seconds)
  done (took 1.725812396 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.080037029 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080155388 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.10144048 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.113841752 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.087698447 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095209204 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.081103927 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.096569255 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.083201854 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.092405457 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.083807699 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.11116021 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.099521348 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.09714202 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.09791018 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082403692 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102479522 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097326828 seconds)
  done (took 2.451427544 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.076293186 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.077666373 seconds)
  done (took 0.920036669 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079366143 seconds)
    (2/7) benchmarking "second"...
    done (took 0.074358541 seconds)
    (3/7) benchmarking "month"...
    done (took 0.095723521 seconds)
    (4/7) benchmarking "year"...
    done (took 0.094274048 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.074789254 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.07373841 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.09166319 seconds)
  done (took 1.352698449 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.459867382 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.17682904 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.316909317 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.109323787 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.128117452 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.33514501 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.127555749 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.107041441 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089230433 seconds)
  done (took 2.658605134 seconds)
done (took 11.849091882 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.08735449 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.128313775 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.470450529 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.097212865 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.088742038 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.140510667 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.248914593 seconds)
done (took 2.034975492 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.332943453 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.117179483 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083000812 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.074641568 seconds)
  done (took 1.370314957 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.075017447 seconds)
    (2/2) benchmarking "read"...
    done (took 0.081443591 seconds)
  done (took 0.931011991 seconds)
done (took 3.071794027 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075064995 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.073438783 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.089067749 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.074179538 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.071373808 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.089060841 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.073279675 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.122920923 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.073202061 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.091701121 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.070547097 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.091929131 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073362766 seconds)
    (14/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.073915366 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090097534 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071144368 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090201177 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.071193099 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.190277257 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087797196 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073026704 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.087727556 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.072007002 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.073084805 seconds)
  done (took 2.857144128 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099556333 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.092679018 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.079931916 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.097779123 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.078022288 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.097475951 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.079854975 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.091590586 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.07948921 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.092906009 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077813144 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.095281154 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.076377719 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095037509 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076743356 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.095685156 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.080635326 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092094621 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077146322 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.095417996 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.079883456 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09153578 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.078892381 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097495584 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.077867735 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094789147 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.077226544 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.091365445 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080452645 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.095268693 seconds)
  done (took 3.39436229 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.080110883 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.071588846 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.089447188 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.082135671 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.089031629 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.076414584 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.071132261 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.08971069 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.076007644 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.088915604 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.076723474 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.088422609 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.071842712 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.075690559 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.09322277 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.078392895 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.106858216 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.07188848 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.089196497 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.076194184 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.0774197 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.088981042 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.074176838 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.089389318 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.071992686 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.071387358 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.089904441 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.072008589 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.089608427 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.072077682 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.077576362 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.095707371 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.071796341 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.101388341 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.078673499 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.088456137 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.079544809 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.089057599 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.076945232 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.071045947 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.088410413 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.071383444 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.089568333 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.08363116 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.075030338 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.090208274 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.071672705 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.093596553 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.07572709 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.095346054 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.071014427 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.072013551 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.094101629 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.076581226 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.094523928 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.071641958 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.073131013 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.088259884 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.07710589 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.089105008 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.072192698 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.071079786 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.095147107 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.073012731 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.112352261 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.082583515 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.088577 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.076541296 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.092632912 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080687262 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.094380367 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.089953525 seconds)
  done (took 6.719331732 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.076425382 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099222317 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.073604495 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.073955261 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086877977 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071809857 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.096614882 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073000821 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090357037 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.09056992 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089195642 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073839498 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074482333 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092503398 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072457924 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.09071758 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.082339562 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087618075 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.072679118 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.092855053 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073009941 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.095262845 seconds)
  done (took 2.611654958 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.214085762 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100415 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.134762137 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090300579 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108822465 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107913977 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.079153127 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097912999 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07966614 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09945974 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082195326 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095816643 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109351295 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082635192 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100291294 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.082890712 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096512029 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083138704 seconds)
  done (took 2.625931712 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.088457989 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.092431061 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.09811075 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09315182 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.07705549 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.095559922 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081711288 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108770955 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.076546229 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093004891 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.08488085 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095256274 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.077057593 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092547692 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077445293 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.091896504 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.077459882 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074904553 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102407999 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09879413 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08079265 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102604445 seconds)
  done (took 2.746085417 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092286511 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094564891 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.094807201 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097197518 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.07365526 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.093995589 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.082923773 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.09288123 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.084862193 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.095541021 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075126487 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.094827069 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.082909398 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093323042 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.081143776 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092544329 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078585496 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07603265 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094907627 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07447541 seconds)
  done (took 2.530368596 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116009676 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10792395 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090514954 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118687486 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092079075 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107642958 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117492691 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.090280887 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108096294 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.102566324 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106939816 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090021657 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118031416 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115129692 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.090374566 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118137102 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.117965408 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101693527 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107003878 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089612769 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120572344 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08932424 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.118048171 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107807467 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.089527005 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107919488 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.090032331 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114229685 seconds)
  done (took 3.733206637 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074603983 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074464145 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090072216 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.072410951 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.071926994 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090455223 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.072502899 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.089941349 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075141774 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07245663 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.092047892 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.074646253 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091991889 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.075189688 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073961985 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.092598049 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074434354 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.089977733 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071594609 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071895722 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.091915905 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074677596 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092783111 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072269694 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072348441 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.092145933 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072552229 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089568413 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074091355 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072415436 seconds)
  done (took 3.187082297 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.082708762 seconds)
    (2/2) benchmarking "in"...
    done (took 0.097625536 seconds)
  done (took 0.973326304 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.073498892 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109085466 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.072714784 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.078178193 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098498444 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.075667119 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.103334841 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080121217 seconds)
  done (took 1.480508183 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.09886686 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.113109183 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.081146954 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.105090423 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.093297332 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.111738262 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.15702611 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.080961624 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.101059944 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.076906928 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112303247 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.075638863 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.083724559 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099864085 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.085360862 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108363577 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.076039682 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.103351112 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.082965188 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.095961333 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081587121 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109870571 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086315544 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.101512533 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.079072177 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.105430689 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.089541159 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.105896264 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081702263 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.105769184 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.083279789 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.087846763 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.079992418 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099856334 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.076728325 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.111715574 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093827251 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.099284072 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.084317818 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100538104 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08548908 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.092015412 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.085703575 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.100892383 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087494998 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.099957935 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.081676516 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.092087382 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.076865319 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.079386626 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.092857434 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080372756 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.088323112 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085759011 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.102652174 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094105753 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.096263357 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.080467451 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.098141542 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.078708155 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.101024879 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.080484066 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104355685 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.080052037 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102917822 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085896023 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.102488671 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.074378897 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.069909285 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.095276947 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.085018121 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.117901186 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.105140031 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.081740363 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099275976 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.077547077 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.080961359 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099900686 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.082939851 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.104817638 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.080928362 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100441157 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.085730522 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.097305957 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.080973661 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.100748245 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.078005349 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.097037756 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.076920693 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114172133 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.078765518 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.095808073 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.076552766 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.104661802 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.080550134 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.079685902 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.095884744 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085638462 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.087849636 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.082274404 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100310177 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.081937559 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.106299984 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082203091 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10053796 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.085140335 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.104685697 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081230584 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.097529399 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.072690909 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100471874 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.078227228 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.083277944 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.087559471 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081727641 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.098412916 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.081124946 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.105568811 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.077827719 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.098210474 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086416244 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.105312988 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.078388808 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.089949097 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.080240903 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099471496 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085544046 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.105683982 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.078234745 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.092474668 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.074955732 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.084654738 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.098433064 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.082819454 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099648243 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08147439 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.089736872 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.077185766 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.099600282 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.086386002 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.098402004 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082938851 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.10400137 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.083676413 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.097493552 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.086164701 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.098035921 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.076525083 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.104318105 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.080511942 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.074957966 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.1036914 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.098090866 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.078213407 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.081202522 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104381972 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.080529169 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.100370699 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.079755627 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.099175254 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08251136 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.094580514 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082151786 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.096746255 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.087977627 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.098968117 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.075163663 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.073242303 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.100676953 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.076817072 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.099234355 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.076774287 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.09864767 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.082514805 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.095678537 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.079874043 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.080942999 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112101203 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108006185 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082575957 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.101756022 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.088070998 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.080578708 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.101500989 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.081690343 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101669369 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.081882322 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.103543895 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.084445064 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100991657 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.080723284 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.090588958 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.083999358 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105935357 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.077401204 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.078482975 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.095222663 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.081914778 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106516757 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.081068348 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.099944647 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079104662 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102237821 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086470827 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.098891036 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.080824985 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.094614954 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.081674485 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103545476 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.082095601 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.082795184 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.106223049 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.081830621 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.093838874 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086267213 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096992725 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.084322084 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.093671683 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.078163165 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.096230122 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.082230324 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.097664936 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.07977391 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.070970179 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104754853 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086550158 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100534209 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.076466771 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.099761314 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.08962939 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.098589286 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085186712 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.099907108 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.084713789 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114354396 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.077413051 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.100055189 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.08908673 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100228512 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.070939795 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.103064783 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.078684515 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.093925518 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.08839493 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.078293648 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10052366 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.0830168 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.101314272 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.070352978 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.098568665 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.079030847 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.095787493 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.075354794 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.104588693 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.081447189 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.081098889 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108503173 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101967429 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.081952478 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.082627323 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.098236714 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.082451063 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.102324778 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.082213908 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.100392222 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.080028618 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.095027684 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.080815177 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.095183139 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.076705933 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.097823367 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.081692215 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.081874573 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101130091 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.080100412 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103991956 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.081651562 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.10128125 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.117367723 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.079033609 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.095810426 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.083135539 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102104596 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.081933127 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.079785287 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.094952724 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.085994409 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.100751681 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087322603 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.098718593 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.074543592 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.100106428 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.081278473 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.101511138 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083797737 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.100975843 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.080062167 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.080829718 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.099137024 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089598204 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.096522327 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.087351991 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103525332 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083856757 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.100590668 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.081701412 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.098679693 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.077195569 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.099791311 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.082832353 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.100775247 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.08167042 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.102824943 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.081310143 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.10050455 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.079127905 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.082274727 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.101195648 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.083171793 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.090021267 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.077405426 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.095621714 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.081684567 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.103487797 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.083672979 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.098328187 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.079735109 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082553871 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.098947093 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.073501895 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.103507445 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084025207 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.100946492 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.089926279 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.095657581 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.082286847 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.109278151 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.0705801 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.097701337 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.077157772 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.077863878 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105448665 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.082440629 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.106265236 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.081807775 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.09619465 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.074318483 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.10242027 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.080172897 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.090674952 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.077890681 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103404451 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.079236333 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.079026494 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101265692 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.084900521 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101602816 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08522777 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.098717513 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.081101218 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.100946291 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.074296229 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.096424947 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.077469149 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.080660688 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102842833 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.078438595 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.093395099 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.081604774 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.10013058 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.082381709 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.098634734 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.080377268 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105346365 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081794081 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.080822402 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106183935 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.071357594 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.100314115 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.081101513 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.100448685 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.077826208 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.101696234 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.083593815 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102782642 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.086178825 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.099550704 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084660064 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100408905 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.078802858 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.08083184 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100361817 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.081828318 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.096794478 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.083796917 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106573779 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.078538608 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.100747422 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082229624 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.097503841 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.083164468 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.101852114 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.082187171 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103875034 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.081693867 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.082535581 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.10321928 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.082243013 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.101239662 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.082992563 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.098536837 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.086412404 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.096285347 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.088687479 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.101512273 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.08356423 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.09950523 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.077771859 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100138403 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.080706097 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080665309 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.105912414 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.083386306 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.096420105 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.077780369 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.096899492 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.082232203 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106341344 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087327996 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.101008746 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.083449943 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.094722412 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.074354365 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102007145 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.07776846 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.08046114 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.10262186 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.085468623 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.100849199 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.079880234 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.099467937 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.086733852 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105420563 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.084555579 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.097972893 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.084303325 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.102568106 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.08200105 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.097990327 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.081192116 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102488018 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.083567348 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.081375602 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.097004272 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090896047 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.105535946 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083784623 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.099695789 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.084641271 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.099919028 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.07591292 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.10317811 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.084905863 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.104469134 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.0825307 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100518232 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092348771 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.096770914 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.080423781 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105951452 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081080422 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.106748949 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.076164272 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.10162335 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.083845111 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102659935 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.076997692 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.078309237 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.097244221 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.082377744 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.096264129 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.076340781 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110280728 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.086525796 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.10237415 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.080853721 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098003278 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.077213769 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.075777574 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.097597109 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.083635527 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.100410652 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.090485861 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.097198858 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.078514891 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.094707212 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082406273 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101906463 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.084193371 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.074165894 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.095267306 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.077462668 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.102779772 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.088573491 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099947688 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082233894 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10212138 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.08183315 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.097591668 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087967393 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.092708443 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.082740841 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111743539 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.083880786 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104038685 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.085249725 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106967846 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.082776269 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.095091508 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.083522402 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.082929869 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.101746633 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.084065763 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.102910457 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116887022 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083309725 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.077012954 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.099673263 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.082406765 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.097175323 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.089759501 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103825635 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.083539592 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.103204064 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.08030158 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103171032 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087799819 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103995814 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.082642702 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.101691161 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.079925911 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101227727 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.079665489 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.079693317 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.102776376 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.083954892 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10067817 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.08456179 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.097268643 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092114649 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.108127563 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.083898219 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.093300076 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.07821693 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.097352318 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.077240404 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.084015356 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.095580926 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.080240834 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.09965935 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.081622245 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.104554316 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.084217994 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.101957483 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085179116 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.081183569 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.091628258 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.086298873 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.102092826 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084660553 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.094688475 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.082478867 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103858151 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.088097028 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10826752 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.08162351 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.10221193 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.081605782 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104119007 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.077596312 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.08545556 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101518482 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.081303662 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.098256837 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082956602 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104230995 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.084163189 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103380467 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084664981 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.102850334 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.086617516 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104515329 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.075610574 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.07465531 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.10469938 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.079561437 seconds)
  done (took 54.888018325 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122437346 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102647494 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073606009 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093392742 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118989055 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077792487 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072440613 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096491585 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.0777095 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106753885 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.073001249 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093347376 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113238508 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.101431066 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118251618 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106564155 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073509668 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.097268218 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074577442 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.096662543 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.093965819 seconds)
  done (took 2.826680543 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.099121642 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11114769 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090228857 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.116296274 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103699491 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.092272751 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109784328 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111245254 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095201739 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106239902 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.114883356 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092218855 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.105640498 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.10522975 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087017275 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107611861 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.095166357 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104046796 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.112379529 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090209775 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109432094 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.109005469 seconds)
  done (took 3.11083094 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.086009535 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.081352458 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.106582643 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.073157207 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101196303 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.073573236 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.107137926 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.077263955 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.085360967 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.102007922 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.080558829 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.102797245 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.086382416 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.092379875 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.080804811 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.094711682 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.086469566 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.081657339 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103063277 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.075620564 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.121366255 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.095288192 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.076258922 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.079382832 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.111258974 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.082577169 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.101651298 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.082213252 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.09814261 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.082467742 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.074652099 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104496805 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.084467491 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.099192298 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.07986283 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.100816111 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.081872776 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.095645114 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.078916602 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084027465 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.096107872 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.082808423 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.108361453 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.077997624 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.094827117 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.083897621 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101706522 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.07320499 seconds)
  done (took 5.153413718 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.112511774 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.129884451 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.101667852 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.139942233 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.1155677 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.091682776 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.103087545 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.139469493 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.075395175 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.079254761 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.11983034 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.116063548 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.081540458 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.108195443 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.10463476 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.082380419 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103985085 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.077361517 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.107722567 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.078373973 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.106628595 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.084570186 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.117666544 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.112984002 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.087371358 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.09992424 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.079241292 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107666774 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.112892465 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.08840669 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107686843 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089398076 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.116538294 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104174856 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.078574647 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.104329114 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.099217567 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103393747 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.084173841 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.096377432 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.084944196 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108051807 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.084949532 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.119765318 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101762743 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.083710221 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102081719 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.075656269 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.114442659 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.085019631 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112635781 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.115643143 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.087619983 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104014056 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.087635389 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.1173592 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.101990582 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.080301117 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.105660768 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.095816097 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.096303082 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.086301909 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.115231432 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.103577704 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.092253631 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.114719799 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.103693483 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087471431 seconds)
  done (took 7.806421167 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110701171 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.107325651 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.098810087 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118520878 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107636359 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.087221789 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10735392 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.08818168 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.10721574 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113170744 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.088042866 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.154966099 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.084656509 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114323418 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.106965904 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.087697834 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.107178187 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08796162 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107342933 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087923985 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.107891185 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.117799306 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.088078863 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.118253012 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119866256 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085217525 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106788625 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.08770051 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118952431 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.106523761 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10024435 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.107169783 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.087393043 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.118722369 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.119406424 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.107354578 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.081603422 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086931238 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.108521538 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.107205098 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.085115046 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118013316 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087479146 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.1036822 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087022004 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.107380572 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.11847619 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.098888524 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113670351 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114816958 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.08800273 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119528431 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.108012451 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.088270761 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.117893973 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.127503276 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09897874 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119219337 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107902159 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.098956554 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119512243 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.127219342 seconds)
  done (took 7.364147334 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110050028 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.113640057 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.119548811 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.074280024 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.097690765 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087515465 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.095684932 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.077359916 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113478655 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093978407 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115623252 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106657728 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090530192 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116562157 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086177232 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110946119 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106860926 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086134708 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113439656 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.105914689 seconds)
  done (took 2.875467252 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.08772511 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.118847838 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.080353397 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106987567 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.082377014 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.106562961 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.081882036 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101176787 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079996992 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101991525 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092125067 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.112889731 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079543519 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107166346 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.112024935 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.087212462 seconds)
  done (took 2.392390441 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.099516789 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.12035067 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.125126584 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084663259 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.076522113 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.103996733 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.081217495 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.096144376 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.075255217 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.108428387 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085936146 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.105689676 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.08218412 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.076630731 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.10101025 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.085305583 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.095003173 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082918266 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.101731805 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.103097409 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.104266968 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.08246638 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.103619354 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.080498191 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102777456 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.084190398 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107193021 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.076115387 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.098658578 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.083218506 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.102938254 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.087719012 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.096618742 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084418807 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.097236276 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.077677501 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.101807353 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.083383957 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.105054618 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.082268716 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.077771247 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.102288085 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.081625786 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.101208695 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.075338854 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.102709571 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.074921819 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.105902782 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.081176571 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.101343792 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.082116587 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107782465 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086346114 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.110268529 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089989465 seconds)
  done (took 5.974771541 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094827192 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103209634 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08543099 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.097016768 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082799989 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.086912575 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104584509 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.082578045 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101773458 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.076778427 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10226983 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.083919287 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101970958 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.084446175 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.10305256 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083653391 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.094365694 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.081329293 seconds)
  done (took 2.514497858 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08491203 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078864455 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.107057798 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079266912 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.099691038 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082152425 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095768597 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.078466855 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076923503 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.099322766 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078919195 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.101300659 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078417479 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.101103654 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.080261705 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099474492 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.081833307 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076835665 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099760102 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075330209 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100904891 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078439598 seconds)
  done (took 2.800761518 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.09733873 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.131396906 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.093980545 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.141897449 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.08277176 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.106227252 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.092389737 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.105747565 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.122038013 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.083749722 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.081979568 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.104583879 seconds)
  done (took 2.11013891 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103733002 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137332232 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.08122772 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10332087 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093316371 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106420439 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083976278 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105509639 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117639789 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098913336 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106934242 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11833121 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09940344 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116327088 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112795563 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094275096 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105911885 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083619391 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102860313 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127508965 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085074871 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119287037 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105129914 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085684871 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1046106 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09581873 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118003154 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117837315 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084144616 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118819334 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112926802 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084676948 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118625392 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118550336 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082761953 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118723227 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105018212 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108178456 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114449239 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116472661 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08276213 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11413342 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119303599 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092845294 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118200565 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083898342 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113633408 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105184408 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085345043 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132910109 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113262755 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116288914 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093275894 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118271743 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118548162 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134532682 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098098846 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11712539 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113405551 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098452939 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116895969 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113816849 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116725635 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096399654 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113148813 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11747434 seconds)
  done (took 7.927192332 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118778273 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102130378 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084758299 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122614305 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116640526 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084690743 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105800834 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083838396 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106990992 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080997338 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151000289 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106367724 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115912668 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096994533 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106601562 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104584722 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086608246 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115637403 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082240285 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133386614 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105564298 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096255735 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118455095 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117176847 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118489631 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093994869 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10628202 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084379032 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105894663 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084792891 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113567547 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104833759 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095504486 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101782419 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117401255 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086335954 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105301149 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092159454 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106428591 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113941771 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097304758 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12816765 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105715655 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085693326 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119575351 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084779014 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106454804 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081371054 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106864775 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102246188 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09788756 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118273709 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118839139 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117604654 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08543923 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105747606 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085494058 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105828762 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085941101 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114327107 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116693544 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085795037 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135572964 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106162611 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085719537 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117359316 seconds)
  done (took 7.747390155 seconds)
done (took 149.127227083 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097998751 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136426987 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.094719685 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.16441555 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.080353887 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.135431784 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.114470287 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.116086139 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.081398024 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.081116068 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.102325873 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.084055638 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.166457204 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.081148494 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.100929108 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.084205967 seconds)
  done (took 2.590537394 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.175847536 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.281030981 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10026554 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.107888235 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.086496987 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.103572754 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.086018476 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.107277673 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.082769783 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.112656095 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.083219497 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.103374759 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.091732946 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.10285984 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.081608305 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.101805899 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.09221672 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.102519711 seconds)
  done (took 2.881575115 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.110371327 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.144510626 seconds)
  done (took 1.13075946 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.116789785 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179598782 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.293040696 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.13333251 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.370036045 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.12347546 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156435395 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.10068609 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.199082856 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.125020305 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.125908023 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.086064511 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.134395946 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.113480661 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.090440002 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.107066932 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.113865968 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.110386899 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.087477858 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.110240329 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.132584138 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.087911994 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.113030644 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.088170225 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.182813296 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.123783842 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.086377061 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.108562286 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.108555162 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.088667472 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.112873656 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.100846693 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.122874192 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.163211881 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.113921651 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.159902697 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.114662449 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.085271687 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.108812613 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.086210251 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.111964351 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.110861617 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.101525315 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.106990412 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.088482789 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.114572428 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.086941376 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.108000263 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.094254301 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.11613172 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.114531453 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.092394766 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.158107244 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.116738812 seconds)
  done (took 7.56284833 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.785449411 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.149552591 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.085858154 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.893137815 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111371636 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122840141 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.794668587 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.107155912 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.230114037 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.804388317 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.100661812 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121842689 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.227554938 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.249509788 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.137005625 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.308338888 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.667756376 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.123760198 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.13594484 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.122418144 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.115654136 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134055878 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.103892571 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.446257203 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.109719244 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.084618693 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.114481074 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.116658287 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.157317818 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.085543518 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.110840916 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.177462102 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.262854881 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.177064314 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109510844 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.083348978 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107002093 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.169147944 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266730655 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.191964326 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.171322712 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103284524 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.085157039 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.118720884 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.104730967 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.104394562 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.160028723 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.169974853 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.169957515 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.111984464 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.096055611 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.116958677 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.116887369 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.159974519 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.083074785 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.335051574 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.336421009 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.084951809 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115604611 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.101241862 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262721911 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084426042 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.22611563 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.13451138 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.187593779 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.107873043 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.755565621 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.186617679 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.084436198 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.114467647 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.092112096 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.112470706 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.094779602 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.165478031 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.386695541 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120937662 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.088963091 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106915873 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.203505047 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.10636083 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.084950986 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160177604 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.109553104 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.093593251 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12120191 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097909436 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.189756795 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.246827595 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.09802064 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116591279 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.088830179 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.121491249 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.109258472 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.209168302 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.19348385 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.177888344 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.207167091 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.096122392 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.182831096 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.164384614 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09447778 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.190185333 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.093999901 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123312655 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096818348 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.21367135 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.139272855 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086255993 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.113602989 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.092218022 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.141050636 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.110312076 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.092741501 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.165628861 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.501997655 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.165374687 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.08184335 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.112024764 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09528627 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.158357398 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114590968 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260321693 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094873268 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.163943347 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115925014 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.081570282 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118279839 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.16002805 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121542911 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.094662425 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120158638 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.115382293 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.24728463 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.196248947 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121401989 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.214336363 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.176816894 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.116664275 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.170762235 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.116241772 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.165724133 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.09530849 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118718002 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.086482216 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.782241672 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121269847 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.093692388 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112874124 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.190946988 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.085636599 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086672048 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.108186203 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.082261215 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.79870708 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08760907 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.106134767 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.086787287 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116103522 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.093363518 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.114893907 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.090312295 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.17885001 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.207045542 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118223545 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.092068166 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.10731273 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.158715261 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.109739993 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.085203541 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.085445054 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.108494706 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.093572312 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.111582963 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087593453 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167790137 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.181729923 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.196240243 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.575324299 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.084953912 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.107215909 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.203374575 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108489592 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.302974758 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093893565 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.224323596 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.16296412 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.082199376 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.334478915 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.165200395 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.191348213 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.111795024 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.170644984 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.082506442 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.114988539 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.159715834 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.08461308 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114655827 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.156349222 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122111079 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.098648905 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.138057775 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.106727472 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.22479576 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.082536508 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.166794323 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.110187533 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095219535 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.305607079 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.084294739 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126679447 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.158925459 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112664409 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.086253434 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.730753794 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.086010796 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.118240693 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094817573 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.221026714 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.161388635 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116663216 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092853547 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119566104 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.158237822 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.209284828 seconds)
  done (took 42.897690576 seconds)
done (took 57.936584688 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.299021376 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.252499445 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.246017351 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.185677394 seconds)
  done (took 1.958155491 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.173089776 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.123220282 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.140518624 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.104082536 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.125304907 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.104478753 seconds)
  done (took 1.676369982 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.409879688 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.332310658 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.278556646 seconds)
  done (took 1.923268699 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.24219262 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.264470907 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.318749566 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.389801715 seconds)
  done (took 2.22202182 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.199173778 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.096452435 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.119197583 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.111620276 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.165401692 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.203049149 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.13902566 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.147303077 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.102766209 seconds)
  done (took 2.235185129 seconds)
done (took 10.92387461 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.271113698 seconds)
    (2/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.208327741 seconds)
    (3/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.226748068 seconds)
    (4/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.26114293 seconds)
    (5/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.236213869 seconds)
    (6/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.226962259 seconds)
    (7/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.220770109 seconds)
    (8/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.183698844 seconds)
    (9/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.253350484 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.146685339 seconds)
    (11/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.182812589 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.122400151 seconds)
    (13/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.185360269 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.090825397 seconds)
    (15/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.181124865 seconds)
    (16/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.193981814 seconds)
    (17/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.206324359 seconds)
    (18/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.088609002 seconds)
    (19/286) benchmarking ("sort", BigInt, false)...
    done (took 0.223127254 seconds)
    (20/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.152691117 seconds)
    (21/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.192305414 seconds)
    (22/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.11321484 seconds)
    (23/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.234197687 seconds)
    (24/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.110573339 seconds)
    (25/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.071657984 seconds)
    (26/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.119423654 seconds)
    (27/286) benchmarking ("sort", Float64, false)...
    done (took 0.143350884 seconds)
    (28/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.117322225 seconds)
    (29/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.120434514 seconds)
    (30/286) benchmarking ("sort", BigInt, true)...
    done (took 0.238256178 seconds)
    (31/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.165895533 seconds)
    (32/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.138441283 seconds)
    (33/286) benchmarking ("sort", Int64, true)...
    done (took 0.226868929 seconds)
    (34/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.181084869 seconds)
    (35/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.240898293 seconds)
    (36/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.094060363 seconds)
    (37/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.136850753 seconds)
    (38/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.185870695 seconds)
    (39/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.07116185 seconds)
    (40/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.114455961 seconds)
    (41/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.098570463 seconds)
    (42/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.121208905 seconds)
    (43/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.087813287 seconds)
    (44/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.132749627 seconds)
    (45/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.091533011 seconds)
    (46/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.113137929 seconds)
    (47/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.105089325 seconds)
    (48/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.111402468 seconds)
    (49/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.098915119 seconds)
    (50/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.169251168 seconds)
    (51/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.114960371 seconds)
    (52/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.115962473 seconds)
    (53/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.150023062 seconds)
    (54/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.227004431 seconds)
    (55/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.22808397 seconds)
    (56/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.096371339 seconds)
    (57/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.115057388 seconds)
    (58/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.134110157 seconds)
    (59/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.23129069 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.139554444 seconds)
    (61/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.141139654 seconds)
    (62/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.167794844 seconds)
    (63/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.093754604 seconds)
    (64/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.099907681 seconds)
    (65/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.120787796 seconds)
    (66/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.084417203 seconds)
    (67/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.124791074 seconds)
    (68/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.192981335 seconds)
    (69/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.074342452 seconds)
    (70/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.117405491 seconds)
    (71/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.095099019 seconds)
    (72/286) benchmarking ("sort", Float32, true)...
    done (took 0.234879592 seconds)
    (73/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.114355655 seconds)
    (74/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.097056624 seconds)
    (75/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.1210405 seconds)
    (76/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.097983538 seconds)
    (77/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.093814462 seconds)
    (78/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.113828166 seconds)
    (79/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.150272392 seconds)
    (80/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.086968321 seconds)
    (81/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.109488555 seconds)
    (82/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.096818903 seconds)
    (83/286) benchmarking ("sort", Int64, false)...
    done (took 0.105752432 seconds)
    (84/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.095196756 seconds)
    (85/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.112877507 seconds)
    (86/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.072191112 seconds)
    (87/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.18039246 seconds)
    (88/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.0911031 seconds)
    (89/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.184292317 seconds)
    (90/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.083200462 seconds)
    (91/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.197857314 seconds)
    (92/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.119110919 seconds)
    (93/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.088659284 seconds)
    (94/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.112529957 seconds)
    (95/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.145429796 seconds)
    (96/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.098441748 seconds)
    (97/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.096301701 seconds)
    (98/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.191868705 seconds)
    (99/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.178194888 seconds)
    (100/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.116236298 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.112973041 seconds)
    (102/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.12173249 seconds)
    (103/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.122429115 seconds)
    (104/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.081950629 seconds)
    (105/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.146355882 seconds)
    (106/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.177676862 seconds)
    (107/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.194408749 seconds)
    (108/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.089375966 seconds)
    (109/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.073680902 seconds)
    (110/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.198724473 seconds)
    (111/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.1208209 seconds)
    (112/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.189807812 seconds)
    (113/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.13820257 seconds)
    (114/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.184156941 seconds)
    (115/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.080064609 seconds)
    (116/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.170659142 seconds)
    (117/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.107782723 seconds)
    (118/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.074287993 seconds)
    (119/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.18737062 seconds)
    (120/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.072087149 seconds)
    (121/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.108192931 seconds)
    (122/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.07268363 seconds)
    (123/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.093869872 seconds)
    (124/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.095531559 seconds)
    (125/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.072304525 seconds)
    (126/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.095266721 seconds)
    (127/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.100423038 seconds)
    (128/286) benchmarking ("sort", Bool, false)...
    done (took 0.178396243 seconds)
    (129/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.118748509 seconds)
    (130/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.122261925 seconds)
    (131/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.135268351 seconds)
    (132/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.073337943 seconds)
    (133/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.113641026 seconds)
    (134/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.072356534 seconds)
    (135/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.119256691 seconds)
    (136/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.099159302 seconds)
    (137/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.171559663 seconds)
    (138/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.11843724 seconds)
    (139/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.155329346 seconds)
    (140/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.098945455 seconds)
    (141/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.090138226 seconds)
    (142/286) benchmarking ("sort", Int8, true)...
    done (took 0.225106399 seconds)
    (143/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.122045509 seconds)
    (144/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.11080066 seconds)
    (145/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.107463845 seconds)
    (146/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.091848755 seconds)
    (147/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.114200276 seconds)
    (148/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.079606873 seconds)
    (149/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.241479127 seconds)
    (150/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.08345008 seconds)
    (151/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.123507364 seconds)
    (152/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.087696359 seconds)
    (153/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.189759883 seconds)
    (154/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.094003672 seconds)
    (155/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.096654393 seconds)
    (156/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.15620597 seconds)
    (157/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.087030809 seconds)
    (158/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.113252902 seconds)
    (159/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.083307349 seconds)
    (160/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.111790666 seconds)
    (161/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.087630727 seconds)
    (162/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.147641896 seconds)
    (163/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.075554034 seconds)
    (164/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.079562583 seconds)
    (165/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.145109884 seconds)
    (166/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.145802485 seconds)
    (167/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.179497672 seconds)
    (168/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.091124145 seconds)
    (169/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.072359456 seconds)
    (170/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.122259258 seconds)
    (171/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.096740637 seconds)
    (172/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.115783588 seconds)
    (173/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.086789918 seconds)
    (174/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.095086868 seconds)
    (175/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.088606943 seconds)
    (176/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.110935559 seconds)
    (177/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.070878751 seconds)
    (178/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.120884614 seconds)
    (179/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.087967523 seconds)
    (180/286) benchmarking ("sort", Float32, false)...
    done (took 0.170858478 seconds)
    (181/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.089295282 seconds)
    (182/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.112972378 seconds)
    (183/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.133952974 seconds)
    (184/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.115097103 seconds)
    (185/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.166802062 seconds)
    (186/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.092384337 seconds)
    (187/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.120495118 seconds)
    (188/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.090406018 seconds)
    (189/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.114702895 seconds)
    (190/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.105663503 seconds)
    (191/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.163049058 seconds)
    (192/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.072799536 seconds)
    (193/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.099123774 seconds)
    (194/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.086330248 seconds)
    (195/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.070499372 seconds)
    (196/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.112221314 seconds)
    (197/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.109271251 seconds)
    (198/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.11986801 seconds)
    (199/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.089536746 seconds)
    (200/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.09851683 seconds)
    (201/286) benchmarking ("sort", Bool, true)...
    done (took 0.225418634 seconds)
    (202/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.08660924 seconds)
    (203/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.130530739 seconds)
    (204/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.19242952 seconds)
    (205/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.122303788 seconds)
    (206/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.111093536 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.089661396 seconds)
    (208/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.12129707 seconds)
    (209/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.099050688 seconds)
    (210/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.098893453 seconds)
    (211/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.089657243 seconds)
    (212/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.110403277 seconds)
    (213/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.109124965 seconds)
    (214/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.099777488 seconds)
    (215/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.072822794 seconds)
    (216/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.090271406 seconds)
    (217/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.130853186 seconds)
    (218/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.091614244 seconds)
    (219/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.108973493 seconds)
    (220/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.074016811 seconds)
    (221/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.109838327 seconds)
    (222/286) benchmarking ("sort", Int8, false)...
    done (took 0.188395534 seconds)
    (223/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.096533007 seconds)
    (224/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.196762 seconds)
    (225/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.132271727 seconds)
    (226/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.072462627 seconds)
    (227/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.11130959 seconds)
    (228/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.088727317 seconds)
    (229/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.096018152 seconds)
    (230/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.098674509 seconds)
    (231/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.114987946 seconds)
    (232/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.084135463 seconds)
    (233/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.07332626 seconds)
    (234/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.096506771 seconds)
    (235/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.085543427 seconds)
    (236/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.098970724 seconds)
    (237/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.074899275 seconds)
    (238/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.095545245 seconds)
    (239/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.085666765 seconds)
    (240/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.083330735 seconds)
    (241/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.129980562 seconds)
    (242/286) benchmarking ("sort", Float64, true)...
    done (took 0.237064095 seconds)
    (243/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.086200104 seconds)
    (244/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.097976547 seconds)
    (245/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.091323245 seconds)
    (246/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.097189581 seconds)
    (247/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.091561952 seconds)
    (248/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.11404636 seconds)
    (249/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.097017074 seconds)
    (250/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.123043948 seconds)
    (251/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.088551011 seconds)
    (252/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.096854171 seconds)
    (253/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.10608258 seconds)
    (254/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.09671073 seconds)
    (255/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.079781578 seconds)
    (256/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.11247489 seconds)
    (257/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.166313422 seconds)
    (258/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.134424835 seconds)
    (259/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.090251168 seconds)
    (260/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.099513199 seconds)
    (261/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.081016424 seconds)
    (262/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.103433725 seconds)
    (263/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.073366447 seconds)
    (264/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.122540608 seconds)
    (265/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.076499037 seconds)
    (266/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.084452813 seconds)
    (267/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.097805215 seconds)
    (268/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.073409511 seconds)
    (269/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.095131832 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.09257125 seconds)
    (271/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.071681415 seconds)
    (272/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.108127357 seconds)
    (273/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.089806133 seconds)
    (274/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.109897762 seconds)
    (275/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.076107454 seconds)
    (276/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.121148415 seconds)
    (277/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.090917236 seconds)
    (278/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.115953783 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.090464647 seconds)
    (280/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.110632734 seconds)
    (281/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.077201464 seconds)
    (282/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.107820726 seconds)
    (283/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.084384188 seconds)
    (284/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.101613142 seconds)
    (285/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.074943814 seconds)
    (286/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.110131917 seconds)
  done (took 36.351231833 seconds)
done (took 37.267632884 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.097790017 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.150481804 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.094780794 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136537641 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.097725795 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.12255506 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.093279692 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.120281877 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.096371646 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.123462204 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.096295582 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.102963158 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.093603679 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.118100957 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.09486561 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138918136 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.097282483 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.113783924 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.086934754 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.109349701 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.08654616 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.110506793 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.087891514 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.102190921 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.094478395 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.116545161 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.089626589 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.118190481 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086415339 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.108920809 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.0848934 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.090030368 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.10902856 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.096626588 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.112784504 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.087103385 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.11857479 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.09321207 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.112002894 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087207275 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.1152332 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087071497 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.113978971 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.091593244 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.110337416 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.085541704 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.086533592 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.121470204 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140159403 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.088401447 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.091144038 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.1184976 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.094055468 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.115617407 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.084567397 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.11155833 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.087572046 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139922071 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.085957331 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111884021 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.090957352 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.116278802 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.086060258 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.110867748 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.08782789 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.117366807 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.094520347 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.109382355 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.094748192 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.089688681 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.106833403 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.087430634 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.108657005 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.084439502 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.117117073 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.094269173 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.105831826 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.087000281 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.089930079 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.113213979 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.086622724 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.109607775 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.08813185 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.111216648 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.085861397 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.102923253 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.085026895 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.112807835 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.086005466 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.086221724 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.113103904 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.090083 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112949693 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.094915645 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.11119066 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.08797634 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111918948 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.088018166 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112687046 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.085624548 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.106152067 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086563649 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.091913929 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.10926481 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.088465466 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.121553912 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.085755115 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.113750748 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.085972368 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.11064885 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.099933773 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.117783603 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086980609 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112345769 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.084188752 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.113954243 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085060063 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.085272198 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.10942249 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.087127459 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.113116003 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087255305 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.109777652 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.090503494 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.121958594 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.100573523 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.109141439 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085550337 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.087205257 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.113824438 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.086327877 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.108802222 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.086200331 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.105849288 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.08557683 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.108135238 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.090206084 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.108951042 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.087523894 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.086756197 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.111789115 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.088987522 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.112242629 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.087446783 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.10792101 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.080024775 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11467623 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085642903 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.088419438 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.110676443 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.086901872 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.107817495 seconds)
done (took 16.31332751 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.093276765 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.187158276 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.145874253 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.146853696 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.119462186 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.128960493 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123291261 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.117685825 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.120585342 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.141419649 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.113725992 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.134126081 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148184397 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.094284368 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.129836769 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.119281928 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.092541349 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.129235149 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.127522181 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.138194637 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.143403249 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.094202719 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.140058717 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.138787961 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.09343524 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.149009731 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.121363674 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.093385795 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.121466958 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102492067 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.135553515 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.120909763 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.096706367 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.131306419 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.101478618 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.11832248 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.105404074 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.114959203 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.094717065 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.119721422 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.133016903 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.10563109 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.116361861 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.101261941 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.119164448 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.121908105 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.093441853 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.117278847 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.09477029 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.113653326 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.098623039 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.138819639 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.092319845 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121419471 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.118983702 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.093875368 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120538219 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.097167001 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.121625966 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.097506687 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.119259765 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.121070076 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.098656332 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.135799127 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092805491 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121447653 seconds)
  done (took 8.755218356 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.10829084 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.145914657 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.12693616 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.101446063 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.12255354 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.083515956 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.083204213 seconds)
  done (took 1.742401845 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.084968689 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.137981114 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.1173978 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.141244914 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.108697885 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.144768381 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126166182 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.084965291 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132885928 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.094780741 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.137387906 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.16295423 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.084915003 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120869929 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.118154818 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.109254528 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.120337836 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.109386559 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092698124 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.142639595 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.092708256 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.131397637 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.123297629 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.085394785 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.13129121 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.08634745 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.174375363 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09532535 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.110178733 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.089526877 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114498999 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.178404282 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.106245978 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.11992313 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.082192413 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.137918314 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.130360949 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089138946 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.133659837 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.089313724 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.130593921 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.091377682 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116707313 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.09084755 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.116542379 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.099497784 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.122268584 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.092401909 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.115478424 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.112210757 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.121184404 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.106062261 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.111313279 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.0888054 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.120979096 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.090771736 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.12429908 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089609798 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.138766755 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091790842 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135846071 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.136011463 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.105482196 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.136395238 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101501669 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.132357038 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.130543246 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.090443561 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091403256 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117624559 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.136253905 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088425401 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.120477862 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099728998 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119134625 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.111996023 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137314408 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089504474 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.123430299 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.088985083 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.112717143 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.085582876 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.137973751 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.088288184 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111989643 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.10194633 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.12172267 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.090848725 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.113857734 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.107199719 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.114399381 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.096584106 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.121839355 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.088177491 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12570313 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.13848449 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.095599533 seconds)
  done (took 11.972245903 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.087479 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.086965869 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.117270102 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.088195348 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.112086589 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.087109601 seconds)
  done (took 1.569512513 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.116655901 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.114911153 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.101320323 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.118082412 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.127886128 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.135166747 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.135543379 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095914367 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.131171774 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.099851825 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.136568993 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.111208292 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.140307831 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.118292684 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.109860607 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.11762706 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.110294729 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.115097184 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.098968066 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115481311 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.102489063 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.11879486 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.089255688 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.134161618 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.094451829 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.119357926 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.093431948 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.126729578 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.100066541 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122326469 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.09272011 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119433893 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.093441413 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.121861771 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.13525938 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.093810272 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113691592 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.096065135 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.119670667 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.094405922 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.136882718 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.089464289 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125280126 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.09556666 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.122940902 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.092933167 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.123188327 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.093577026 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.135473863 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095715316 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.122197016 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.092954106 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119903146 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095230756 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.120801824 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096158116 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.121877971 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.110651351 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.118270294 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.118709968 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.090280046 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093869045 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.121532635 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119379991 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.094365105 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121451773 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.093483603 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.115641632 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.089972781 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.09261709 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.1219784 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.089454264 seconds)
  done (took 8.995888271 seconds)
done (took 34.001759567 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.669748462 seconds)
  done (took 1.653772933 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.815459131 seconds)
  done (took 1.801656105 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.344664515 seconds)
  done (took 18.356615975 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.463918145 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.554128707 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.968786346 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.160147035 seconds)
  done (took 3.13440525 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.946416709 seconds)
  done (took 1.95481296 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.289506689 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.232150067 seconds)
  done (took 1.51336523 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.817275534 seconds)
  done (took 1.82076754 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.493623361 seconds)
  done (took 2.492067859 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.334413737 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.169096528 seconds)
  done (took 1.511872658 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.559035967 seconds)
  done (took 1.566775724 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.029851141 seconds)
  done (took 16.036485045 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.237552985 seconds)
  done (took 1.249116097 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.292117732 seconds)
  done (took 1.293246075 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.61107256 seconds)
  done (took 4.613411129 seconds)
done (took 59.995346605 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.096278361 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.099394531 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.125642204 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.095651883 seconds)
  done (took 1.412616204 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.10022861 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119758804 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.096983729 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.1186487 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.100413649 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.119460942 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.092234687 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.164143938 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.092974996 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.12190065 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.094007171 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118833994 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.095220795 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.118976291 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.090779331 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.120835372 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.095980541 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120385261 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.09442938 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120172974 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.090763786 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.120674761 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.09531115 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.118064373 seconds)
  done (took 3.631242765 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.09627419 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.089366368 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.118807983 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.089648014 seconds)
  done (took 1.402519798 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099050722 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132318068 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.106260146 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126247239 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.106995345 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.132045419 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.088756896 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114921126 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.090011924 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125698926 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090295285 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.136371637 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.105335041 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.11158668 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.0996857 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113397851 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.086077247 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.131865024 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.099408382 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.12673649 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.088854052 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124699111 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.096141513 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.129520183 seconds)
  done (took 3.675329512 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.169504093 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128215666 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138218529 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.09515981 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.165206631 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.114013098 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.113892757 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140272436 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088160946 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.126254806 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.092625292 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.166237511 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.098056996 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.11908575 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.08916505 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.122460691 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.097832674 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.124617059 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.09143209 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.127854205 seconds)
  done (took 3.419528459 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.096765302 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.089507379 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.111817091 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.088143537 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122658456 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.091425794 seconds)
  done (took 1.613243083 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.085858505 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.085336529 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.111316264 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.083894552 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.115598561 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.084856935 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.083075674 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.111034889 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.084899228 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.084949318 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.110127834 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.083536279 seconds)
  done (took 2.141567667 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.370885217 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.114242316 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.090468079 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.112892597 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.092924342 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.113451887 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.100313891 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.115127073 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.117109913 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.114812171 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.087073996 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.117869531 seconds)
  done (took 2.565891782 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202641708 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093107288 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260210808 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.344555388 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153235341 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162051106 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.27599202 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160493171 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.181335017 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133870167 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190004138 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125689994 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149672142 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174846181 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137586574 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.173169576 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170771044 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194929582 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117758589 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226873009 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15836948 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13613572 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175750674 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147804047 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134320238 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153661347 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.089508591 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124934096 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169721215 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165569853 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170882685 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145476993 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10836349 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195199358 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229765145 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176306639 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.299168171 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128717227 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.183935898 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.180080004 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224980424 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138303926 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192448266 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151739494 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098333721 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176900437 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153555346 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.177753528 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.128856679 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110535462 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208874827 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172665107 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.17760761 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106095207 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.32450272 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118865056 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145788807 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179780288 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183505207 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187777413 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164253227 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.090753312 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.207750416 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178511418 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17676166 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.115268766 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.162690166 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123507037 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171234126 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191125679 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175198323 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162064927 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.182215832 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132209228 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162210473 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165766075 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149092242 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145390424 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156367897 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.119187149 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120446047 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134925819 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125542087 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.156218788 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121975708 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199559984 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133453555 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.186698421 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198353199 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154593415 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130724027 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160106392 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161995894 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144954757 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.089895143 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142863266 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.159398804 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154922593 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100623962 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154072204 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140816317 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.096239972 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148678313 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.121635592 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155023995 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.104119722 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164571927 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161731193 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.097545925 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159915941 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147622204 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.154825028 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167493789 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18329934 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102265093 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130210173 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190480189 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156025716 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104213651 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170799781 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181579171 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.162210684 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137129741 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165259191 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189942569 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138725345 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183255509 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10967902 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130820268 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.148127757 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154821121 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125675891 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.154702344 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127699248 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.121019855 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215752494 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.097073448 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135048616 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171092988 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096739403 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126837072 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111907406 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132782565 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.139845393 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.117062429 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.133739152 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155589984 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156983441 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149798241 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128045863 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13933462 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185579659 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131903117 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.156598812 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117047933 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.117297918 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.175778807 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181394177 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097675563 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222451772 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.166130557 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193658153 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16196556 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100202318 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172723623 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1259143 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.089266549 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160253944 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159127111 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15963891 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.180117698 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189112085 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.161953793 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.150968708 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147627303 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164907671 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.171016772 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153006219 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.113939317 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159656799 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156830162 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.091732016 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.121821413 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.124694162 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11186361 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12856358 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10185472 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177133282 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160091874 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.209804254 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130001248 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139050167 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178671539 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.1238776 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16142039 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.170439259 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10863432 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.180945079 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17757655 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165120522 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14063825 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170922062 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.08915981 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120697772 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.102986459 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161650437 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130676586 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102544903 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14145167 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177704161 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17066168 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147438946 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198782222 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162754225 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189020494 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.120375288 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.132807293 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166548681 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154759411 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.181087915 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104139758 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.155743881 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174613582 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139084166 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187089206 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15837256 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165107106 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195750293 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.153699013 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099030776 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148775644 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162854014 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138364424 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134963555 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143728746 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134364681 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150024004 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.103135099 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123950021 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177424632 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112189711 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205158621 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.124842523 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199586025 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095324805 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141342508 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157007073 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114850601 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.115099149 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166823079 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183405332 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141026229 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155102409 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169761266 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098973083 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.307959012 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18280638 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18070418 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134431763 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139312832 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12879103 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156872005 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160783401 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176040659 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140671484 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176112094 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126088177 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.140481466 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132949754 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115339544 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147712894 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.150130062 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.13022064 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.121428027 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139944902 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179340243 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139966345 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154982174 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132520573 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.145085293 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.146001141 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110863354 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195810703 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156352548 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174318171 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151998344 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.163397227 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19489815 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122437343 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097899163 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.124431825 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176461374 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101846948 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158950463 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.181960909 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191594463 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154810551 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161786554 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135640214 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.088848306 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15665306 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146843967 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193585565 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138028423 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.105495769 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213809161 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.118633524 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128582525 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160406149 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279550964 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114145484 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169764297 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.115760098 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.275841883 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09435923 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126369051 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155779283 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165528994 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.107582999 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.179498753 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161398704 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113351267 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156891235 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135047712 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18603318 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199617928 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16401427 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172146599 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.141476982 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155471886 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159603921 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173010576 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112461788 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.143029924 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158832598 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178782605 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.185555123 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.102027453 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160038229 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160821734 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15777302 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171520024 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130737348 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196226726 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099038225 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160748521 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138638351 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11985191 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125863192 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.182523901 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129665885 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172210666 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154855873 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1008493 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124897946 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149383428 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155688313 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111043881 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.126648108 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17490603 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.094300182 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159672148 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177243332 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127596577 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122427477 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144342742 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137039684 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110740777 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144571903 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133377981 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.14008426 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17681535 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.129237358 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17307056 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172659522 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161278439 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156259125 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112386249 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.663948275 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.096669075 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177505817 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1443031 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180995079 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146738988 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163732432 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157261405 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116795081 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162482573 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147924016 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.220555118 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162347814 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.154563569 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100529179 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143060518 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111287811 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.128516128 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148840754 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159446255 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109788479 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.134978307 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.154873218 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113040294 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.141806764 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135559681 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178846949 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116144459 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177584378 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176983487 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136099519 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164305353 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172138855 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097588582 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.157507889 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168423013 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139828025 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146945524 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.100198686 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.13216846 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176698386 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.093034498 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157637709 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157548463 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157550159 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160084162 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.102335679 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157791563 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140730374 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155920979 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09950378 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.152166673 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153844658 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102388601 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.126856608 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150809528 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126409073 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.155881274 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124522115 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.141208529 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175283652 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123768056 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101925924 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.280881267 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152918824 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18808418 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.149437857 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101955384 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140654771 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145700313 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.150364542 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12784894 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.126887511 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099780362 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.128667336 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.178873269 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.151673455 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124251982 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180479101 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158139749 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194473229 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.132854234 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.260971484 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10643276 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153092575 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.127498422 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.098384587 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140157263 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101675445 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140555748 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187179046 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174338382 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.149176533 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.141203177 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095564498 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.12511964 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101390454 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15866563 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152539814 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154720952 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110754248 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.114997021 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111918295 seconds)
  done (took 74.049726189 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.173667899 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.158776521 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.150332149 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.193712751 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.163613093 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.240227078 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.202683015 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.22288085 seconds)
  done (took 2.609744582 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.098179644 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.156110286 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.13599291 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.120906796 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.088349039 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.32790621 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.134999285 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.121017115 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.11705118 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.133242459 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.11378369 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.524378929 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.120238183 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.093987755 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.109947973 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.112306145 seconds)
  done (took 3.60116548 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.272997519 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.534178624 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.117442625 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.225177188 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.221025583 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.170820056 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.726759904 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.179058826 seconds)
  done (took 12.544808409 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.11888158 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.109318934 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.160358104 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.160737065 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.116612821 seconds)
  done (took 1.772818855 seconds)
done (took 115.437343499 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.092523381 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.09483668 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.121880758 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.096223143 seconds)
  done (took 1.49849795 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.107038952 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.077241829 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.109405881 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076674789 seconds)
  done (took 1.478319789 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.41609985 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.076780326 seconds)
  done (took 1.631351502 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.112577205 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.13197271 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.10367427 seconds)
  done (took 1.46368054 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.099951694 seconds)
  done (took 1.211737762 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.093898115 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.096515594 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.137833702 seconds)
  done (took 1.438413722 seconds)
done (took 9.830629543 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.109085484 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.428952072 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.382608929 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135302889 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.690834695 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.406435781 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.011843604 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.153433314 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165480254 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.087690786 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134111286 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.668100584 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.023293461 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.343198238 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.012362411 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.337956294 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.700859677 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.089423294 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123023953 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.089578081 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.020529326 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.08693277 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.117142026 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.089864314 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.668370272 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.420809176 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.087087184 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.384999822 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.086953186 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.122393598 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.373916382 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117823179 seconds)
  done (took 16.766724461 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.093252338 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175680326 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.096593747 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118409121 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.091269935 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.118445716 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.09812762 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.13063397 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178231397 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.087884006 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134573113 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.087630661 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.092512626 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.118771006 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.107696828 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.116590832 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.090666904 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.118774408 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094738419 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.118981725 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.107126677 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.116474866 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.089816982 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.089401054 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.116668087 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.100340311 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.118149243 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.101292293 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.117665375 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.094223463 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11982627 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.08921685 seconds)
  done (took 4.638658429 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.138077441 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.185475468 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.096507825 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.15247003 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.166530351 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.089447825 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200429277 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.156564375 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181259703 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.087418122 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.136826811 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.087815688 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.152570161 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.089144051 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.139425063 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.087705974 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.119956759 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.089807159 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123223887 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.090038411 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137025934 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.087980804 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.118290165 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.090755308 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.088329027 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.130634264 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088214109 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.129934609 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.087942784 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.123525654 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.09185642 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.118412863 seconds)
  done (took 4.979526772 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.095784645 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.096580125 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133247584 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.133899873 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.090649429 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.095482791 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.125507429 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.090393489 seconds)
  done (took 1.974313391 seconds)
done (took 29.46758932 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.105532012 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.093460922 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130861673 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.100871979 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.127306511 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.102178662 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.115500781 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.099574996 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.12912357 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.097390943 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.103624991 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.116960987 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.089269783 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.115527055 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.101345604 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.092923992 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132330884 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.096385743 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.137217504 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.103789103 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.118921356 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.098360073 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.127151763 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.107176321 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.137861823 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.107306445 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.133182858 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.094077272 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.11745404 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.088757088 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.134482915 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.109710859 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.119395381 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104841538 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.121307418 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.09212128 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.089073975 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.119220975 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.103653381 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.128712072 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.094211878 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.128926614 seconds)
  done (took 5.773417091 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.115323167 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.161448008 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.08907176 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.119192583 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.089222201 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.156562836 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.12376581 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.119264854 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.088859737 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.141852345 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.113248127 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.118245533 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.089305538 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.118290989 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.088763762 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.08909393 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.140787787 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.143914672 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.117936601 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.148226127 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.162638232 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.119916312 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.15339153 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.11212582 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.161324628 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.152666827 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.10992091 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.154403598 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.115096242 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.117105778 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.118351839 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.149588092 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.088043399 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.118831211 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.15772436 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.124118865 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.145608739 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.158104586 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.119145283 seconds)
  done (took 6.031264832 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.096921672 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.103279629 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.13817255 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.181867899 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.126755828 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.128136359 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.098724448 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.136346714 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.104925839 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.118447051 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.090555946 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.148528703 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.107421367 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129993563 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.08885944 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.102235518 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.139001231 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.090041955 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.122563775 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107509637 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.137026132 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.100716796 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.131697159 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.098557454 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.11790572 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096727313 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.121358171 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.103558986 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.124009394 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.095827009 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.12250494 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.093436582 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.091239667 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.129469856 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.092696514 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.125057043 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.110137956 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126314773 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.098145196 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.119451487 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.099900887 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122623467 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.109745221 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.157112237 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.088988707 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.124543359 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.095375662 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.126726641 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.087788747 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.135318282 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.09947646 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.088413288 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.133736306 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.117840455 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.087928638 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.103393806 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.12021067 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.091977983 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.126575978 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.095807218 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.137629802 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.093341595 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132659124 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.08976873 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.094074284 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.118238254 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.088066048 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.123749414 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.110427294 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122123921 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.12726413 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.118467391 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.094977328 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.125601442 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.094468381 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.137249932 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.088330141 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131978809 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099178234 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.122515206 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.099094883 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.092378887 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.122800948 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.106409643 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.132581646 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095521171 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123988402 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.094526289 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.121571207 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.090086605 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132723629 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091826879 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.122471429 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.104677643 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.119567006 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.092384438 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.09466073 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.124184917 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.088171043 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131663537 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.093938798 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.119367385 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.098642553 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.119879556 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.093071151 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.127021969 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.093220466 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.087719958 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.124048681 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.095438177 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.11826198 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.09193167 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.122793064 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.091367414 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131399029 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.09523119 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.090554865 seconds)
  done (took 14.169983718 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.232122253 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.214753227 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.189202913 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.296664807 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.109305944 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.145723221 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.211518148 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.163672119 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.089466386 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.157662401 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.176472489 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.184871526 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.174930181 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.188647742 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.172131449 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.089413904 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.107489188 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.171362375 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.213562366 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.293467746 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.108607505 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.134858041 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.161250485 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.158671663 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.106833907 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.135234223 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.111744773 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.140213659 seconds)
  done (took 5.783304098 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.105085378 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155218586 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097040834 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144486826 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.145775041 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.089454066 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.093690536 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.121252721 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.102056799 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135193001 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.091075994 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126755533 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.095292344 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132907408 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.089211256 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.129857768 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.099281589 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.129845648 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.092252951 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.122304889 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.103454805 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.137602707 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.09354118 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122340638 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.10534715 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122608775 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.091482968 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140836759 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.127641995 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.114024297 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.115635477 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.09799196 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.102800234 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.118882639 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.092160922 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.122664775 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.090898873 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.121125837 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.091024158 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.08557273 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.119248608 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.080040712 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.120830273 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.103965839 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.125894763 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.08622637 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.124363076 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.093007396 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.126277622 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.085348574 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.090921343 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.122557081 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.093510631 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130529433 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.092571976 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.126886145 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.093035911 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.091547044 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.128499833 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.092184548 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.117461561 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.091440503 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.126159045 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.09354769 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.129231238 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.095015024 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.121555194 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.091888665 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.093909651 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.125543128 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.092170777 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.129076798 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.085595281 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.121752825 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.099125893 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127706411 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.092808691 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.090017199 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.123173039 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.087959079 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.108460122 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.088355592 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.076349496 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.124161044 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.088171864 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.12135749 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.092148199 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.124910122 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.104973095 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.128325535 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.096022639 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.119841042 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.091281988 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.123645174 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.087328904 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.093800286 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.137358991 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140117244 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.087781204 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.087253053 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.134697268 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.090022239 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.118393223 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.080717012 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.129732713 seconds)
  done (took 12.585353886 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.128948741 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.16951505 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.120459971 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.107908149 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.153647896 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.131183112 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.128101014 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.096543885 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.121336342 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.107352394 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.123531622 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.098552689 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.092541686 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.133843729 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.161607838 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.098931762 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.121367759 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.103580285 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.124478553 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.141995224 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.140750326 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.15956742 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.129369666 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124177649 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.095176397 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.157105106 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.165294604 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.103293569 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.131910567 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.130681254 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.134459462 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.165175195 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.130978994 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.125682645 seconds)
  done (took 5.510839998 seconds)
done (took 50.973578924 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.243404182 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.428569123 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.205335442 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.203790143 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.270031936 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.225852157 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.205509377 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.209227143 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.956238032 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.205063135 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.205060273 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.205616825 seconds)
done (took 27.704221669 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.283863131 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.368352643 seconds)
    (2/2) benchmarking "String"...
    done (took 1.538166406 seconds)
  done (took 4.045285222 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.208739095 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.206987281 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.451316699 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.207360989 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.223066893 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.223656351 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.206356032 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.2269405 seconds)
  done (took 15.884084211 seconds)
done (took 25.561815149 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.208709684 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.417182197 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.468371069 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.237413579 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.208784482 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.218173803 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.210517969 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.263524667 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.21691534 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.208876435 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.208474638 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.481134415 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.223866464 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.587881062 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.214453854 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.221615889 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.227054478 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.444288176 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.224452053 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.257233862 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.194148591 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.215970194 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.227737745 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.228297983 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.21686972 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.224658854 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.244051942 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.213176242 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.408973922 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.222188444 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.25102764 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.210751223 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.247668111 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.219453887 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.321804796 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.234559537 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.40249619 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.221499936 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.197759251 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.219858693 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.399611996 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.622037758 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.210611935 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.239584861 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.210252642 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.305031564 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.201681231 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.943451224 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.214005368 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.224265607 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.258625315 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.598870054 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.214612331 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.219092802 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.220276063 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.465440351 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.213705273 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.266137587 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.245154295 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.222064967 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.210578123 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.228998615 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.264672169 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.216917234 seconds)
  done (took 144.22889567 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.210924526 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.21056402 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.211510008 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.234242177 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.211687972 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.210935769 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.213130905 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.211525645 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.212426628 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.213078729 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.211968886 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.211209656 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.215986163 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.188367208 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.211960034 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.234486985 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.217132589 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.228735448 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.230341101 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.213408071 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.232640539 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.21234263 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.22980217 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.213430605 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.214348897 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.30061669 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.250350788 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.22796699 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.215827084 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.212867983 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.258346054 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.217843571 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.84651857 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.070659112 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.232554532 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.243169767 seconds)
  done (took 80.626927597 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.21243121 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.213231271 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.213853382 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.2468044 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.213255835 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.805692202 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.814817471 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.925725287 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.566216269 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.216976558 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.640899645 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.541210862 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.218076418 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.310924773 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.228966428 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.215341359 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.229764178 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.240259566 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.218474943 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.213971319 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.811780607 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.231863207 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.348614107 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.395309812 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.229892395 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.248252129 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.613297798 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.21491772 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.24865308 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.552527427 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.264905556 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.214546647 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.634824533 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.978492824 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.330649501 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.21658539 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.24835496 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.215430734 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.499553437 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.214976681 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.214339839 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.216847988 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.21808518 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.927119987 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.21954234 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.805486575 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.219425639 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.158010207 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.215827123 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.216685833 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.873006612 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.993180555 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.220223883 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.216779594 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.219264925 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.215149827 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.215880116 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.248480072 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.049234913 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.318182656 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.217179923 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.218574498 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.247538577 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.215574593 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.686511832 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.215710522 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.424376643 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.277518245 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.329278005 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.811320599 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.220521383 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.314113016 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.33772496 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.21550678 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.215187921 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.216968293 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.215439917 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.327594933 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.216128547 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.216115396 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.646462322 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.393534391 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.23266162 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.637110948 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.320181337 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.216128443 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.66639186 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.222243865 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.21736149 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.980665737 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.315153473 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.216177843 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.21703667 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.216335906 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.649700396 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.811822148 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.525511592 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.216738021 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.24608671 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.221403493 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.657223032 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.794808263 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.994305492 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.222751334 seconds)
    (105/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.217344928 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.331859531 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.396182128 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.234608886 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.217294122 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.645746854 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.223444037 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.275846091 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.222434625 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.617407044 seconds)
  done (took 370.690948759 seconds)
done (took 596.684897074 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.860551629 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.849462265 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.95585973 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.842052907 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.803339474 seconds)
  done (took 10.461543602 seconds)
done (took 11.61272114 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.410245191 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.913743353 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.279455454 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.411395323 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.252645796 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.42852382 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.394655011 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.23856415 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.322224238 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.301231313 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.323769366 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.272857016 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.254481514 seconds)
  done (took 18.953251075 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.564570116 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.219731418 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.283021932 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.568120713 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.259915941 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.555513646 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.429046342 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.245916061 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.418440495 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.234444321 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.234107864 seconds)
  done (took 18.163693941 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.553265025 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.221002788 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.285779226 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.57828214 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.261016921 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.55127826 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.435850374 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.250058232 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.423091425 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.233862133 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.23203817 seconds)
  done (took 18.175705453 seconds)
done (took 56.442958521 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.263905886 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.389421444 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.243412832 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.232717642 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.227921224 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.231394735 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.234054123 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.229830171 seconds)
  done (took 11.204831612 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.225452723 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.226095733 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.225322219 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.2243225 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.22628789 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.228048835 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.226653133 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.229225748 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.229317162 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.228746983 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.228246744 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.228603862 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.228539947 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.22559082 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.226995542 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.228687522 seconds)
  done (took 20.787842609 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.228082206 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.226387269 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.226509381 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.22696376 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.226174964 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.227689434 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.227949349 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.226569156 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.227723887 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.226459328 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.227931957 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.227239026 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.226694927 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.22781172 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.228137662 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.227558099 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.22754384 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.227225414 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.230552328 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.227806379 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.227723618 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.22701534 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.228167543 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.227527874 seconds)
  done (took 30.613475609 seconds)
done (took 63.75622008 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.222240153 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.228477769 seconds)
  done (took 5.60355075 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.287811759 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.290336061 seconds)
  done (took 3.732346328 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.230816873 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.230861139 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.230940331 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.231278922 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.231241965 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.231076451 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.230484965 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.230891273 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.23027331 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.229812757 seconds)
  done (took 13.460602719 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.230811772 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.231143788 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.229345399 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.23130774 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.231227831 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.228898895 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.231659308 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.232118023 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.231050038 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.228972035 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.231990476 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.229364273 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.232247894 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.229769128 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.232169933 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.229609189 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.229684222 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.228912825 seconds)
  done (took 23.303668915 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.244410238 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.25268834 seconds)
  done (took 3.651315343 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.359220781 seconds)
    (2/7) benchmarking "second"...
    done (took 1.270629592 seconds)
    (3/7) benchmarking "month"...
    done (took 1.340337561 seconds)
    (4/7) benchmarking "year"...
    done (took 1.328424619 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.272890526 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.251757865 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.272785531 seconds)
  done (took 10.251661562 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.233694114 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.421475833 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.530146142 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.790154659 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.235071063 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.236413484 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.091700919 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.237595447 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.240635917 seconds)
  done (took 14.172264986 seconds)
done (took 75.328515396 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.227687536 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.245044244 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.24156752 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.245043404 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.572104855 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.256243236 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.232614875 seconds)
done (took 16.177099416 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.214755779 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.216817177 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.22259261 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.243070552 seconds)
  done (took 10.053636774 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.226759804 seconds)
    (2/2) benchmarking "read"...
    done (took 1.549488654 seconds)
  done (took 4.931436499 seconds)
done (took 16.142266799 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.233546438 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.234898959 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.231152297 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.235648397 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.231819305 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.233991817 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.23455487 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.231908796 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.235027267 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.235132286 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.231741533 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.233436019 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234945174 seconds)
    (14/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.23510926 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.232511054 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231451967 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235807104 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.2320355 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232770554 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.232495864 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.234655623 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.232403062 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.232856966 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.235422448 seconds)
  done (took 30.763749163 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.235363595 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.233464806 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.235107145 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.235461042 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.232977782 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.234314547 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.235177566 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.233024134 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.235775118 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.235119349 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.234349286 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.233805002 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.23563357 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.232430808 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236029232 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.23340178 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.236676365 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23424652 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.236504371 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.234263737 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.236437453 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235423348 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.235508453 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.237250497 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.234069954 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.234501182 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.236934327 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.234838034 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.236837966 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.235021028 seconds)
  done (took 38.208279055 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.242517973 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.244576929 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.236514865 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.237732517 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.238149687 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.236735254 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.236750352 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.237359723 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.237361401 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.237606801 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.237950364 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.238060674 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.238848563 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.238109441 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.237033917 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.238034099 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.237771453 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.23692131 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.238946828 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.238025368 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.237654615 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.238950326 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.238415324 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.237375933 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.239025749 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.236797526 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.23789333 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.238231231 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.239651483 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.237717 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.239595667 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.238819695 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.239013644 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.23850553 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.240142145 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.238901726 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.244331781 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.24604474 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.240261686 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.238746479 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.239625048 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.238336293 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.2378144 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.240588884 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.240401059 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.240423711 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.239823549 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.239304957 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.240227674 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.239839359 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.239561903 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.240448927 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.240061438 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.23941021 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.239876613 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.240922619 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.240492784 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.240521788 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.240933565 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.240966971 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.240156732 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.240108908 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.240613271 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.2422706 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.242069322 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.241673985 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.240446805 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.24155665 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.241005544 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.241994126 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.240648977 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.242273059 seconds)
  done (took 90.408763036 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.240766226 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.238873398 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.239492129 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.239287793 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.239318802 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.241352686 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.239368688 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.242035365 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.239559813 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.24255298 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.242102132 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.239559437 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23960455 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.243292073 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.241948431 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.241208623 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.243211417 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.24004088 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.242518549 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.242966011 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.243022525 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.241402582 seconds)
  done (took 28.468914231 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.243862591 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.246750068 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.239715862 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.244228078 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.242524549 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.244863958 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.242692195 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.245123012 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241929716 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.240457868 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.240565371 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.242075645 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.242279287 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.240919201 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.241579599 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.242631644 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.242976481 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.242561165 seconds)
  done (took 23.533815768 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.240871595 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.241060045 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.243331475 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.241662388 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.241601236 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.244791238 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.242442039 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.244492991 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.244685994 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.243505234 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.244789169 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.243674418 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.245367832 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.242665317 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.24457571 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.241934582 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.243985606 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.241901154 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.245245386 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.242422479 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.242714382 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.245227978 seconds)
  done (took 28.51991724 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.245813208 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.244999961 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.243534093 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.242692616 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.242441497 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.246679421 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.245553954 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.242919875 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.247168025 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.24596185 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.243490277 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.246381028 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.243893956 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.242769732 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.244199814 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.243554925 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.246431946 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.244517201 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.245302977 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.244029066 seconds)
  done (took 26.060566289 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.247390884 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.246065363 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.247801597 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.247817418 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.247639652 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.24844244 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.247803354 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.248090202 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.247622384 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.249716895 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.248998077 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.247422595 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.248932148 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.247244823 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.248612963 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.249059462 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.250078571 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.248451782 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.249257719 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.249229861 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.248668925 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.248766199 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.249380376 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.248604157 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.249274504 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.249077709 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.249182653 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.250250094 seconds)
  done (took 36.128105373 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.249363656 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.248817803 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.247088302 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.247460412 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.246052852 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.246073242 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.246692822 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.246483463 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.249719764 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.248023351 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.250266272 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.248184399 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.250226684 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.248706695 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.250039845 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.249939701 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.250885643 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.248290812 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.247835214 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.247253677 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.249344659 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.250689837 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.250108049 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.246860621 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.247788616 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.249939074 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.247264137 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.248603432 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.251084289 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.248880973 seconds)
  done (took 38.629135673 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.290693409 seconds)
    (2/2) benchmarking "in"...
    done (took 1.296156486 seconds)
  done (took 3.758365297 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.251181844 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.253067632 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.251541016 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.247349106 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.248427189 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.249638349 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.252435944 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.250207585 seconds)
  done (took 11.177270066 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.252732148 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.252433401 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.251622486 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.251379543 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.252043926 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.250861934 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.258320432 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.272500502 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.252664364 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.252694834 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.259203534 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.260039003 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.255280237 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.252713025 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.252696472 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.254258154 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.252347802 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.253980482 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.252614982 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.252750354 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.254681141 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.253715022 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.255571664 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.251477059 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.255176151 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.263633225 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.25656624 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.254326156 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.252908264 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.25619964 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.252767044 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.251834367 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.25314864 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.252431973 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.253346461 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.253570095 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.262795153 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.275176363 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.259243007 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.253650102 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.254910211 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.251261733 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.254921355 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.255809012 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.256347489 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.254907782 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.255021573 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.251871635 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.254467462 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.258954518 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.260472208 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.25413576 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.251599424 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.258757299 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.254898093 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.261473461 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.275342578 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.25776972 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.265817922 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.26693959 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.267325754 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.265064139 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.258057826 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.255979807 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.266947567 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.27836677 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.263956291 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.273140292 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.252124806 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.255675664 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.261759572 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.267984809 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.283516563 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.255940848 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.255823858 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.256529474 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.255670485 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.256235282 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.263419921 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.27822056 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.256644743 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.25790717 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.266910276 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.279764899 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.258092663 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.257278283 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.256777227 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.257279211 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.258036323 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.2673433 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.277411191 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.257534807 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.256876865 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.258581375 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.258746544 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.259141048 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.257147468 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.259693655 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.255504342 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.257807384 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.25895788 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.26228552 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.265614085 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.258326505 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.257851628 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.265581485 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.2595942 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.258581011 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.264787207 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.258942412 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.258879757 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.260753723 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.263976719 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.255717931 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.261797881 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.266852736 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.258199827 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.259713923 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.258705181 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.259482542 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.268563729 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.283991272 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.259631402 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.259520251 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.26419816 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.270853813 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.258601691 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.26200177 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.259084871 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.257251004 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.255979269 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.261641 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.260184812 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.260202484 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.260586345 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.259845075 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.256960567 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.25935789 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.260675602 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.261472148 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.260950026 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.261804941 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.26214569 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.262935462 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.262146903 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.261728638 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.265779923 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.260771115 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.262246139 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.261748835 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.258499243 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.261999461 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.261882005 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.261721593 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.261005374 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.262587232 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.263047952 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.262084696 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.262484297 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.262774264 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.261562069 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.263140534 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.267178573 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.263936059 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.266663934 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.263080734 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.260329466 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.263203169 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.262946435 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.262960188 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.263157077 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.261119862 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.266678796 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.270975326 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.264099426 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.263465948 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.266434406 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.263637577 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.264227739 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.26476463 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.267329886 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.27351191 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.264084794 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.271074721 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.26381402 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.263573754 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.264967497 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.264245571 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.263171816 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.26406425 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.267142395 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.271748869 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.276348391 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.290031351 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.266206163 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.26830628 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.265979991 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.269189622 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.268827375 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.264893305 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.265571068 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.263984905 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.265109365 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.264871098 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.266361921 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.265733013 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.264038189 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.265709144 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.267886746 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.265586135 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.265633347 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.265940454 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.265740267 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.262788514 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.266327934 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.265715932 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.26611988 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.26373771 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.264996883 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.267136747 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.266256348 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.26592563 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.273278979 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.263828943 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.267149082 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.268217236 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.265316571 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.26544623 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.267255693 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.268090745 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.267221579 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.27375539 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.285842477 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.26641737 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.27281973 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.285778365 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.266809407 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.269536507 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.268312465 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.264576185 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.27082424 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.275659359 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.268173277 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.268161014 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.267474961 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.267732399 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.26975248 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.273980775 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.266517268 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.267932389 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.26841775 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.269045842 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.265568988 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.269345621 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.268494857 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.269494246 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.27215632 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.270639674 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.269866453 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.270383552 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.270597521 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.269394817 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.2688295 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.273198982 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.277790053 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.273882043 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.269336364 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.271370728 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.269160014 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.272333709 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.269833573 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.269110019 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.26832325 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.280867021 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.295526915 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.276609892 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.270922864 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.270898186 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.275605829 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.272356131 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.273370378 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.271023533 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.27051462 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.269976638 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.270208596 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.267972114 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.269401382 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.269968899 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.27107479 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.271514003 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.27468304 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.270494308 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.270039312 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.272164711 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.270401733 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.270794604 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.269368801 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.270978409 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.272478257 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.273073721 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.269021604 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.27075142 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.277935218 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.290910133 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.27144742 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.270780168 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.271021823 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.269543972 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.274025755 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.272962853 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.274836972 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.280136071 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.276400934 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.279259463 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.274294015 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.281106723 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.271366892 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.275354298 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.280922408 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.269683926 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.271404719 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.273110981 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.271818288 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.280461041 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.291917669 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.274752397 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.278238692 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.272562837 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.274336972 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.273708989 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.273023332 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.274403705 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.274224437 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.281734421 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.296980514 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.276553405 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.275615232 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.269962686 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.273895137 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.273448062 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.273071362 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.276098025 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.274344644 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.274828513 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.272960006 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.273480307 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.274075505 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.274488105 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.273731466 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.271638667 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.274165443 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.281541547 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.296060983 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.279169888 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.275312866 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.282592743 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.275435276 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.281933868 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.2943499 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.27658447 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.275159023 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.274557774 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.276150984 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.274315224 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.276002934 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.275460099 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.278037639 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.279232358 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.27624223 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.27700645 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.276260526 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.275518856 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.274777669 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.287036337 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.300065876 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.277964269 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.280878192 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.272935325 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.277097452 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.281791645 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.276674517 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.274726174 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.280633847 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.286534156 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.283519008 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.27716282 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.277153767 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.278455194 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.276566407 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.277497131 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.276769768 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.276683838 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.277954247 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.276914462 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.277399895 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.27912629 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.277160771 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.277728375 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.278450752 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.278422857 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.289342065 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.278471399 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.278455538 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.278183662 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.280010585 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.277716965 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.278689575 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.278760829 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.278050389 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.278242155 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.279936544 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.286041855 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.285096854 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.280774758 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.277952975 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.2785647 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.278437868 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.279718402 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.279377642 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.279019414 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.280107311 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.280554979 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.279919497 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.280838511 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.279184796 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.278835374 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.279248607 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.279388633 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.282263261 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.287299664 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.278649541 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.276836739 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.279318964 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.27963925 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.277748872 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.28048756 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.287015557 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.282172761 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.290726628 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.288023021 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.283564131 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.280618349 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.284220873 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.288024695 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.279241657 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.281118349 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.279239116 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.282506265 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.279922655 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.283948736 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.280730125 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.286418547 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.279781243 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.280420849 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.289865825 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.30351177 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.281213852 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.282741253 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.285902125 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.281474762 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.279470031 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.282175349 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.282203577 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.288309551 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.301883757 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.281898208 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.282510834 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.281676119 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.283571024 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.285776045 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.283244347 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.283721531 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.279868701 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.283631484 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.282682132 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.282656568 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.280443438 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.28114516 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.282775721 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.285437337 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.289914276 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.28065544 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.284998537 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.283262664 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.284453526 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.284337654 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.283546798 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.281723508 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.280235401 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.28339491 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.284992088 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.283408594 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.287173369 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.283727705 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.284700859 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.285185136 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.283152033 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.287387359 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.295576684 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.291596237 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.281898068 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.28414526 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.284265757 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.28658262 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.284781975 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.284723682 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.285560278 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.286716137 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.284542838 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.283858401 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.284504759 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.288820289 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.300748276 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.307598412 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.285245421 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.28490587 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.287909643 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.286676179 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.282903992 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.285700584 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.286562229 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.289729455 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.293988179 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.285825024 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.292617249 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.30754611 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.287414103 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.28983457 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.290199457 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.293867412 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.28877188 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.286282411 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.28606627 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.290972239 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.303347912 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.286877592 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.297152816 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.31629827 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.306795561 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.287795019 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.287684011 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.287223586 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.287047189 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.289039558 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.288308674 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.287011901 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.287818091 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.288036381 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.288671222 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.292664031 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.287521728 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.28883379 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.287266323 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.286310895 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.288379314 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.285276055 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.288186162 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.288251818 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.288544447 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.289220913 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.288724465 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.288259059 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.301081978 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.317529936 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.288546265 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.288795005 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.287530179 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.292413617 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.293217505 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.301435496 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.298278632 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.289472571 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.290735679 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.290539411 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.288982875 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.289254254 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.289468838 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.289172086 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.289099785 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.287398729 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.302270854 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.298263298 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.293735276 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.289312004 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.29011271 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.290804109 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.291233059 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.289894272 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.289767497 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.29167989 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.292508598 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.294261812 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.290399711 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.289892526 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.295436055 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.298107904 seconds)
  done (took 760.292286227 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.287966434 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.287765461 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.288706518 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.289345275 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.288515135 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.28753948 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.287081359 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.288308729 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.288349271 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.288547805 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.2896038 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.288713568 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.288954698 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.288114172 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.289279989 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.289710587 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.289054489 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.289617091 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.290087338 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.290169155 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.290256791 seconds)
  done (took 28.274259791 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.291283503 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.28964739 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.291476092 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.291816053 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.288957522 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.291851178 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.290659675 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292434806 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.293587171 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.290953116 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.293168222 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.293679269 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.289382655 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.28971268 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.291140579 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.293515879 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.294036746 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.291595671 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.29244082 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.292380958 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.293931743 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.291447862 seconds)
  done (took 29.630169111 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.294366924 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.293560752 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.294084784 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.290777745 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.294607641 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.292174176 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.293883717 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.294205615 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.296775382 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.295647698 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.294899637 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.295597363 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.303217152 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.299922368 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.296618508 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.29422543 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.295032917 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.295479832 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.296584933 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.293431565 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.300580405 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.292296261 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.293250993 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.293244162 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.295554832 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.295533017 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.294546595 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.294969554 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.29690379 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.299422345 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.296922511 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.29463511 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.297282699 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.295208923 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.295634764 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.298871336 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.296601315 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.292163107 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.294943144 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.306138631 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.31800604 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.295165656 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.301103724 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.297793113 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.29597139 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.30024743 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.304650042 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.293183798 seconds)
  done (took 63.448637976 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.295999615 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.296859394 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.292185199 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.297384015 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.296215613 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.296647791 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.296126973 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.297234085 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.294794779 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.294297094 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.297020037 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.295840708 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.295560717 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.297701368 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.297490608 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.295866656 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.295978767 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.294250295 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.295503452 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.294892556 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.296718849 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.297684386 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.298745766 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.295465768 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.298984661 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.297140544 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.294910067 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.298230823 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.29691942 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.295772343 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.298193063 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.297560405 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.298737968 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.296626053 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.295084459 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.298060312 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.299810306 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.297105533 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.298721299 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.296064805 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.298996468 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.300431208 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.299583289 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.299369902 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.297466341 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.296647906 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.296141172 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.296675491 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.298118211 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.298961719 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.299753754 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.296664174 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.300093558 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.29744492 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.298667119 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.299988696 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.298553034 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.298448401 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.300935035 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.298302786 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.297486692 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.298998978 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.298803049 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.300357529 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.300327637 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.299648244 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.298126607 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.29988808 seconds)
  done (took 89.445525809 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.300525573 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.300636266 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.302464081 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.300381493 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.299963586 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.301354043 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.300787542 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.301593412 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.301792531 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.301553624 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.30189833 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.302735164 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.302308258 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.301417754 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.302101057 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.301489886 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.302230267 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.30189575 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.300786355 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.303066778 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.301532083 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.302482705 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.302712757 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.301219629 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.304136753 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.302546752 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.302850678 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.303217415 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.303870376 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.302360812 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.304657305 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.303813744 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.30404024 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.302715371 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.303395173 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.30302196 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.302621978 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.30346609 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.30380564 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.304658507 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.304127509 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.304759291 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.303909517 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.303415131 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.303523444 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.303863645 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.303607096 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.305698817 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.304441339 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.303462404 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.302936463 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.304312245 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.304903017 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.304207707 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.303723351 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.304175766 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.304202329 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.305086905 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.30332362 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.304212429 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.305222336 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.305297054 seconds)
  done (took 82.006796745 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.304219244 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.304698851 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.303448835 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.302588374 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.304083502 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.302873296 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.304337454 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.304644056 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.305533983 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.305257304 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.305638281 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.302722914 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303027792 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.305759696 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.30175907 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.304532655 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.30407027 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.30336462 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.30637761 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.30337332 seconds)
  done (took 27.30464659 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.303442993 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.306682055 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.303911413 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.306082777 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.306292084 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.303402369 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.305408504 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.306313262 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303847384 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.306883975 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.307576655 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.306568805 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.303771332 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.304243131 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.306380875 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.304670372 seconds)
  done (took 22.10763122 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.304139372 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.306712875 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.306794765 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.307116992 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.30394842 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.304185899 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.307870522 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.304662742 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.304332931 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.307510756 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.306868459 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.307445543 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.307860757 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.307413963 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.305020796 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.308224809 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.304835222 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.305448679 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.307920011 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.308320794 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.306534506 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.306214802 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.309703808 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.308637856 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.305859199 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.305944481 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.306609511 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.305952533 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.306283264 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.309342276 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.30571365 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.307729568 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.306559428 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.306373457 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.308957516 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.306788941 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.308177041 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.309491533 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.308892642 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.309041045 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.30815244 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.30765456 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.308723593 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.309175451 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.307111669 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.308825056 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.307248051 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.30758883 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.30767776 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.307698839 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.310218561 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.309376388 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.309416265 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.310543512 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.309081407 seconds)
  done (took 73.129665815 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.309969655 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.310739627 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.308179005 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.310075024 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.30969458 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.308167825 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.309893267 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.310405385 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.307681462 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.311031709 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.309177113 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.311879406 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.308397381 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.312308959 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.308200412 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.312065671 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.309537987 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.309507581 seconds)
  done (took 24.803970138 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.309170341 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.3097025 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.313433316 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.310248844 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.308898549 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.311972652 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.310430268 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.311767209 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.311737204 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.31071093 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.310114678 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.313376522 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.312661359 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.31179738 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.311644759 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.310066719 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.313415967 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.312597518 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.311846963 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.31080492 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.313304253 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.313005084 seconds)
  done (took 30.081562997 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.311713137 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.311443123 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.312423294 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.32951715 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.331783416 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.313564956 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.311979027 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.312025427 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.335114807 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.366833307 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.359704826 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.331573472 seconds)
  done (took 17.157437137 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310832902 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313301005 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.312169614 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314344137 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312773512 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311840747 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311669146 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311306949 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3139235 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312480075 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310516005 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314659251 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313861024 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312208667 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313856819 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31355321 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31278686 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312284322 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312377088 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314866723 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312775173 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315539716 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312237992 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312483624 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312158449 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312923959 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314971422 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312252924 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313888452 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31499971 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314374794 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312790415 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315559146 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313863081 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316699448 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315752955 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314008775 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317640583 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315530341 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313591189 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.315079962 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315614311 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315265653 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314157658 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31609178 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314147234 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31574675 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313463143 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313735511 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317661112 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316682045 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315455385 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318572755 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317572445 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317855658 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31773952 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316136199 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316028591 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318132009 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316013606 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314788095 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317980778 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316590073 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315751089 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318729104 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315974222 seconds)
  done (took 87.993161032 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316109262 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.315318497 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315703923 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31778743 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316404205 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31582102 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315781045 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316170397 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316166822 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315847508 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317923973 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316902485 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317057508 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316326716 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316728951 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316211417 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318091707 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31654594 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317653409 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321113809 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317780259 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316669408 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318191948 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317790874 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316883115 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319765558 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31791695 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317353587 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317193412 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317654598 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318395971 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318246951 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318138983 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.317860396 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318277618 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31749468 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317027629 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318036963 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317810223 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321822779 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318891315 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320968232 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317100697 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318737794 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319660004 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319105349 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318508806 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317655693 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31899672 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318269448 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319545369 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318851448 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319670325 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319460818 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318993504 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320644176 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319505543 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32015533 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32016374 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321323351 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318920101 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319501694 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323448851 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319869007 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319205992 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320002605 seconds)
  done (took 88.24022284 seconds)
done (took 1780.731309743 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.485556423 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.438697113 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.321213316 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.330381469 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.321038953 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.314223292 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.333605715 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.322588758 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.322840097 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.320872155 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.322564521 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.509075326 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.315233199 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.32212558 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.320961209 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.415775486 seconds)
  done (took 26.95723876 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.351046053 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.328312789 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.448103871 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.344619104 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.351714999 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.524854715 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.386657034 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.327430991 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.510685793 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.369655786 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.325114637 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.351141768 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.326639404 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.320191189 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.346192895 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.524499642 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.592997987 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.327995208 seconds)
  done (took 29.297681653 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.823654602 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.334844463 seconds)
  done (took 5.399044327 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.347587418 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.327537045 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.32908429 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.326217187 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.334076653 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.317531466 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.325920061 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.318145359 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.327283786 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.469641778 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.327343044 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.337685852 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.349223357 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.328903492 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.324129099 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.366240331 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.505811498 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.325942145 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.323988203 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.334119325 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.327965862 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.435957719 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.372801556 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.325353822 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.463513806 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.327634644 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.336613737 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.33604396 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.468797771 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.327303487 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.327632395 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.32732663 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.329675041 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.256521787 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.86777104 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.326544856 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.355172503 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.338005345 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.326567556 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.482154277 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.330079117 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.33723469 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.328339499 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.842171281 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.47046813 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.452633338 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.340104151 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.337117342 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.332000319 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.395974864 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.330193201 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.330779921 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.375331015 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.131685998 seconds)
  done (took 85.190479092 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.330289437 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.322976966 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.49973345 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.345229721 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.321334268 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.323611449 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.340128531 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.637918134 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.328246177 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.324324178 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.682263087 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.896995006 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.341819261 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.396784225 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.191887291 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.378824526 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.325442132 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.322393875 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.342732996 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.327069285 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.893331164 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.324641941 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.329961629 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.576475833 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.363819231 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.849308335 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.324002553 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.343968112 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.324453678 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.323739913 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.857395779 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.344794904 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.385669286 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.323677398 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.597095656 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.726563208 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.692769117 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.335815731 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.353796649 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.328015771 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.343659833 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.845916582 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.710373192 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.325586936 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.342437848 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.850871413 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.326831961 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.333458382 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.334143882 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.576609155 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.326488421 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.326926156 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.325597216 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.32437443 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.324863984 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.392262271 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.409086539 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.850876397 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.324914723 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.325449636 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.355467745 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.328868988 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.336371969 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.331094517 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.327161879 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.713762266 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.485116549 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.33410003 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.711442768 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.85472482 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.351251028 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.926720472 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.34425016 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.35356946 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.339474204 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.326863158 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.328258273 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.848252535 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.358730893 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.326961534 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.695400245 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.330682243 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.661405646 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.344232406 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.328341251 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.920885766 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.339509071 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.417788162 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.329940691 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.327238266 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.32869315 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.33368691 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.611013846 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.399034027 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.329611625 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.327540515 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.37335425 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.329530937 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.346787197 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.330593561 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.927083349 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.357444696 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.332607916 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.331080264 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.32773426 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.350563433 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.329626841 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.329623347 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.5969594 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.329987382 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.335532231 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.329928802 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.32887582 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.33299956 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.576442965 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.332871372 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.667661775 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.333578246 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.331799227 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.334516918 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.331123384 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.38468086 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.330251929 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.330121302 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.265963291 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.624889263 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.349590847 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.329072059 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.328938492 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.329573273 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.34502777 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.330021073 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.349830181 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.33307468 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.114507491 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.372510591 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.356584988 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.329485012 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.335904616 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.341879636 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.332125953 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.330540501 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.625551139 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.611572075 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.483187272 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.331574424 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.331740978 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.083176224 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.390519077 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.512293647 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.352385244 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.332035886 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.576633276 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.537562954 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.335449844 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.338169593 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.334542403 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.60562076 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.332299169 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.661001396 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.88836111 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.35007445 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.34027791 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.116108443 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.079157128 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.333699009 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.334375352 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.670356138 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.350674138 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.334396848 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.332541277 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.333962041 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.33415447 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.337662758 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.33737 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.332471348 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.33328828 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.466152481 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.526036787 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.352735815 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.343271089 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.857998452 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.418500286 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.334120142 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.354448025 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.338623032 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.334395945 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.406892736 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.337996491 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.36135854 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.335268415 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.345227196 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.921566688 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.335574915 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.336487827 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.526640154 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.041057981 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.352521809 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.333704307 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.335847881 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.205318613 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.885239395 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.358053793 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.6755208 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.335004485 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.376317332 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.335226069 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.440271658 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.88234428 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.337136818 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.335454812 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.002185002 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.353997276 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.882531378 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.336974148 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.338213626 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.950778701 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.355721177 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.336456092 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.335408078 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.354146367 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.652964973 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.336982462 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.356446485 seconds)
  done (took 499.003767887 seconds)
done (took 647.086601352 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.33513767 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.335459662 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.329787154 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.343292188 seconds)
  done (took 10.599046921 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.345974154 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.344245508 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.343605399 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.343266898 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.34553819 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.343788615 seconds)
  done (took 9.323517596 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.336783944 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.338044576 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.344906756 seconds)
  done (took 8.277688493 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.565743505 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.368337806 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.70495443 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.361703945 seconds)
  done (took 9.25941923 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.345245249 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.34543885 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.344599654 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.346841678 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.347812978 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.348273941 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.347384107 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.34760558 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.349094932 seconds)
  done (took 13.37794496 seconds)
done (took 52.094443914 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.33364003 seconds)
    (2/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.324858992 seconds)
    (3/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.328225855 seconds)
    (4/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.378688622 seconds)
    (5/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.961846704 seconds)
    (6/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.3267173 seconds)
    (7/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.470624659 seconds)
    (8/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.159922494 seconds)
    (9/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.32404387 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.605602888 seconds)
    (11/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.343262662 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.379171311 seconds)
    (13/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.745327945 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.366217022 seconds)
    (15/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.325127223 seconds)
    (16/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.333310959 seconds)
    (17/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.325111296 seconds)
    (18/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.41613412 seconds)
    (19/286) benchmarking ("sort", BigInt, false)...
    done (took 2.337787602 seconds)
    (20/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.345054031 seconds)
    (21/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.32741239 seconds)
    (22/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.42665108 seconds)
    (23/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.32557474 seconds)
    (24/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.341621807 seconds)
    (25/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.257139827 seconds)
    (26/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.354911489 seconds)
    (27/286) benchmarking ("sort", Float64, false)...
    done (took 2.34032309 seconds)
    (28/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.38684077 seconds)
    (29/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.350882761 seconds)
    (30/286) benchmarking ("sort", BigInt, true)...
    done (took 2.340899568 seconds)
    (31/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.34193702 seconds)
    (32/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.767174772 seconds)
    (33/286) benchmarking ("sort", Int64, true)...
    done (took 2.357506386 seconds)
    (34/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.324529218 seconds)
    (35/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.346287737 seconds)
    (36/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.473940803 seconds)
    (37/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.76248787 seconds)
    (38/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.458944039 seconds)
    (39/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.745150796 seconds)
    (40/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.366457077 seconds)
    (41/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.385786379 seconds)
    (42/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.466404945 seconds)
    (43/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.450779663 seconds)
    (44/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.340034422 seconds)
    (45/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.397374546 seconds)
    (46/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.71113552 seconds)
    (47/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.303743628 seconds)
    (48/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.715046211 seconds)
    (49/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.346987975 seconds)
    (50/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.33244136 seconds)
    (51/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.459449501 seconds)
    (52/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.961514335 seconds)
    (53/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.230211767 seconds)
    (54/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.351535932 seconds)
    (55/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.88557314 seconds)
    (56/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.59906766 seconds)
    (57/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.368246796 seconds)
    (58/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.336768941 seconds)
    (59/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.334556974 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.342658887 seconds)
    (61/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.348000073 seconds)
    (62/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.278772365 seconds)
    (63/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.349589724 seconds)
    (64/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.477909212 seconds)
    (65/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.384181013 seconds)
    (66/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.405174342 seconds)
    (67/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.341637027 seconds)
    (68/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.329746867 seconds)
    (69/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.33483855 seconds)
    (70/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.430818676 seconds)
    (71/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.427272826 seconds)
    (72/286) benchmarking ("sort", Float32, true)...
    done (took 2.342978909 seconds)
    (73/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.369932209 seconds)
    (74/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.368958913 seconds)
    (75/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.481654613 seconds)
    (76/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.343672705 seconds)
    (77/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.031226816 seconds)
    (78/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.392723097 seconds)
    (79/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.235911222 seconds)
    (80/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.428299402 seconds)
    (81/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.543884055 seconds)
    (82/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.34407036 seconds)
    (83/286) benchmarking ("sort", Int64, false)...
    done (took 2.341896296 seconds)
    (84/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.338623314 seconds)
    (85/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.345226007 seconds)
    (86/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.846977276 seconds)
    (87/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.330077745 seconds)
    (88/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.374977485 seconds)
    (89/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.212145852 seconds)
    (90/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.368263442 seconds)
    (91/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.35593046 seconds)
    (92/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.447013192 seconds)
    (93/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.42792891 seconds)
    (94/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.860642772 seconds)
    (95/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.449526333 seconds)
    (96/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.330456498 seconds)
    (97/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.463347423 seconds)
    (98/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.337910236 seconds)
    (99/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.345460688 seconds)
    (100/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.350087204 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.774300803 seconds)
    (102/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.349270932 seconds)
    (103/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.344681049 seconds)
    (104/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.616979723 seconds)
    (105/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.539478428 seconds)
    (106/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.331879316 seconds)
    (107/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.891874175 seconds)
    (108/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.172242882 seconds)
    (109/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.332028632 seconds)
    (110/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.373149648 seconds)
    (111/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.577452034 seconds)
    (112/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.344532847 seconds)
    (113/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.344560291 seconds)
    (114/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.369437803 seconds)
    (115/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.340428935 seconds)
    (116/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.338166747 seconds)
    (117/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.839523678 seconds)
    (118/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.331133264 seconds)
    (119/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.353998933 seconds)
    (120/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.332100515 seconds)
    (121/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.449586612 seconds)
    (122/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.894211781 seconds)
    (123/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.447476656 seconds)
    (124/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.338892817 seconds)
    (125/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.347369928 seconds)
    (126/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.332766993 seconds)
    (127/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.360600189 seconds)
    (128/286) benchmarking ("sort", Bool, false)...
    done (took 1.874682507 seconds)
    (129/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.368119464 seconds)
    (130/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.54248844 seconds)
    (131/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.602988139 seconds)
    (132/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.333225752 seconds)
    (133/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.175599134 seconds)
    (134/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.349247952 seconds)
    (135/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.626220163 seconds)
    (136/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.355262936 seconds)
    (137/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.331712913 seconds)
    (138/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.457041632 seconds)
    (139/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.332344656 seconds)
    (140/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.335647135 seconds)
    (141/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.572467649 seconds)
    (142/286) benchmarking ("sort", Int8, true)...
    done (took 2.364560229 seconds)
    (143/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.490259722 seconds)
    (144/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.35815357 seconds)
    (145/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.195841452 seconds)
    (146/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.373553816 seconds)
    (147/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.37318956 seconds)
    (148/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.73124736 seconds)
    (149/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.349979206 seconds)
    (150/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.186600769 seconds)
    (151/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.347847848 seconds)
    (152/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.349825232 seconds)
    (153/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.45839955 seconds)
    (154/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.56771159 seconds)
    (155/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.371395249 seconds)
    (156/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.340288828 seconds)
    (157/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.411542827 seconds)
    (158/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.346864499 seconds)
    (159/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.182035341 seconds)
    (160/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.432042581 seconds)
    (161/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.356932956 seconds)
    (162/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.037212383 seconds)
    (163/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.344743549 seconds)
    (164/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.740404745 seconds)
    (165/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.364816006 seconds)
    (166/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.54463484 seconds)
    (167/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.367005335 seconds)
    (168/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.295493415 seconds)
    (169/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.230395976 seconds)
    (170/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.117886202 seconds)
    (171/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.389637321 seconds)
    (172/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.375777203 seconds)
    (173/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.368534739 seconds)
    (174/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.038422123 seconds)
    (175/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.4196501 seconds)
    (176/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.357796761 seconds)
    (177/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.337040224 seconds)
    (178/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.103493171 seconds)
    (179/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.382460491 seconds)
    (180/286) benchmarking ("sort", Float32, false)...
    done (took 2.350881218 seconds)
    (181/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.772402015 seconds)
    (182/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.053570779 seconds)
    (183/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.220056597 seconds)
    (184/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.375552434 seconds)
    (185/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.37542288 seconds)
    (186/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.430601585 seconds)
    (187/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.390596936 seconds)
    (188/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.025122096 seconds)
    (189/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.3737445 seconds)
    (190/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.351818798 seconds)
    (191/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.35339154 seconds)
    (192/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.337224662 seconds)
    (193/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.337087391 seconds)
    (194/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.369919201 seconds)
    (195/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.766232877 seconds)
    (196/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.442230143 seconds)
    (197/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.364852732 seconds)
    (198/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.447084524 seconds)
    (199/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.285876233 seconds)
    (200/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.337165996 seconds)
    (201/286) benchmarking ("sort", Bool, true)...
    done (took 2.348923239 seconds)
    (202/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.407187629 seconds)
    (203/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.350775666 seconds)
    (204/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.337615678 seconds)
    (205/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.275573574 seconds)
    (206/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.415549499 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.292643461 seconds)
    (208/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.56165334 seconds)
    (209/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.349282686 seconds)
    (210/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.339899774 seconds)
    (211/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.370499471 seconds)
    (212/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.41112779 seconds)
    (213/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.415644664 seconds)
    (214/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.339304053 seconds)
    (215/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.643503785 seconds)
    (216/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.379100907 seconds)
    (217/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.351527799 seconds)
    (218/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.383415171 seconds)
    (219/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.376167039 seconds)
    (220/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.429802972 seconds)
    (221/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.418463909 seconds)
    (222/286) benchmarking ("sort", Int8, false)...
    done (took 2.351332905 seconds)
    (223/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.361198845 seconds)
    (224/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.340939801 seconds)
    (225/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.397358864 seconds)
    (226/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.275264584 seconds)
    (227/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.442711244 seconds)
    (228/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.458138427 seconds)
    (229/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.34253811 seconds)
    (230/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.365046079 seconds)
    (231/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.352645083 seconds)
    (232/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.358443458 seconds)
    (233/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.338995516 seconds)
    (234/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.339524752 seconds)
    (235/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.351589365 seconds)
    (236/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.34103688 seconds)
    (237/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.340541084 seconds)
    (238/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.352019205 seconds)
    (239/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.385729467 seconds)
    (240/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.579296776 seconds)
    (241/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.388632886 seconds)
    (242/286) benchmarking ("sort", Float64, true)...
    done (took 2.353871743 seconds)
    (243/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.461156927 seconds)
    (244/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.34102225 seconds)
    (245/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.379982065 seconds)
    (246/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.340508899 seconds)
    (247/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.369007874 seconds)
    (248/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.354923843 seconds)
    (249/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.743182134 seconds)
    (250/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.378977935 seconds)
    (251/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.378716798 seconds)
    (252/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.340299035 seconds)
    (253/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.390714077 seconds)
    (254/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.354433068 seconds)
    (255/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.352132386 seconds)
    (256/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.387056886 seconds)
    (257/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.292207123 seconds)
    (258/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.39164653 seconds)
    (259/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.440500245 seconds)
    (260/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.341653748 seconds)
    (261/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.343008081 seconds)
    (262/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.754894576 seconds)
    (263/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.343015085 seconds)
    (264/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.36938694 seconds)
    (265/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.341507719 seconds)
    (266/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.370926094 seconds)
    (267/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.36040412 seconds)
    (268/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.343115407 seconds)
    (269/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.062962519 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.443058909 seconds)
    (271/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.342692895 seconds)
    (272/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.453649376 seconds)
    (273/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.370007063 seconds)
    (274/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.468123318 seconds)
    (275/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.342215908 seconds)
    (276/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.373189675 seconds)
    (277/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.402608093 seconds)
    (278/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.369474883 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.356411622 seconds)
    (280/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.397013859 seconds)
    (281/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.345722514 seconds)
    (282/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.648437953 seconds)
    (283/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.479122419 seconds)
    (284/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.343369056 seconds)
    (285/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.375188889 seconds)
    (286/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.37866347 seconds)
  done (took 574.371509285 seconds)
done (took 575.630450119 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.393382262 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.386487978 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.369536119 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.394190786 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.481012867 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.545683234 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.380307349 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.37281065 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.418593786 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.419124588 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.367560127 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.544371091 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.371324201 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.36945331 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.370423628 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.385733449 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.369354145 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.369796271 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.386097735 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.3805914 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.38661331 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.368853987 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.42053969 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.546357017 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.374436795 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.373842552 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.374064584 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.389701372 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.482741065 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.373808681 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.374593234 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.381859708 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.36867553 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.369312515 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.367482954 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.390258955 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.383223828 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.382526952 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.375552482 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.404416388 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.375598357 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.37090255 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.370752123 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.373096134 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.373535025 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.37750458 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.374018213 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.379132056 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.385628443 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.386918805 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.367154778 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.386556317 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.375687623 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.37400057 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.385824083 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.372003242 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.377414171 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.391014165 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.392255397 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.39098999 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.361105333 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.380773732 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.377010602 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.390086753 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.379314034 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.370312691 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.370338667 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.379956322 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.362106823 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.399186317 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.370296934 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.381542533 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.375943301 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.388978257 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.405994079 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.368614483 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.375184584 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.373558319 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.38312479 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.371677661 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.384880258 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.389062754 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.380546296 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.375756085 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.390245926 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.550592294 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.386587699 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.376535398 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.38566142 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.394134814 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.383455223 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.386818582 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.379731989 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.371260138 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.387195167 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.380305378 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.379163288 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.377426658 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.383533204 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.387505763 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.380659913 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.393885958 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.373252879 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.374203229 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.37704085 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.390080018 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.364501831 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.394112294 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.398198067 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.424847911 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.378818034 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.368658878 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.386201561 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.393503505 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.385814535 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.381854475 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.372009685 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.38047975 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.376935331 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.391444568 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.380084166 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.374764299 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.395051365 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.379474005 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.376367807 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.377655872 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.380899908 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.392877485 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.499055322 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.38829812 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.4094644 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.375633657 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.380493586 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.410172454 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.394966292 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.410316197 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.382219676 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.395609283 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.393862083 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.375480646 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.387527172 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.38995272 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.38038061 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.387022679 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.373734375 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.40859784 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.391859107 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.392410754 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.4005642 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.499503518 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.37639956 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.367436533 seconds)
done (took 228.538517087 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.434610813 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.372769415 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.458606384 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.373308165 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.475119093 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.482323941 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.372747179 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.371397048 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.371611364 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.752020613 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.372825581 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.373962833 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.374532921 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.372373277 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.456725118 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.37653336 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.373246437 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.715622126 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.376435871 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.446391255 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.37325904 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.374090076 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.374996824 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.756940399 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.374237446 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.369140191 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.456336458 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.376681211 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.724124763 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.369328597 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.372664156 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.723878706 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.477785754 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.393634651 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.387615454 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.382924156 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.483262972 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.395276817 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.465395099 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.456054511 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.46050356 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.415137942 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.372035005 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.373564397 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.377882519 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.379543414 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.37524152 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.404079604 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.375641258 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.374316983 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.72052162 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.386859303 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.376648948 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.376417824 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.375585767 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.406615408 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.374879297 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.378793564 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.467928484 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.379367279 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.45099517 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.786529934 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.756367304 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.377151736 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.375817061 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.376168124 seconds)
  done (took 107.352604233 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.444273174 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.452633578 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.497228849 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.381519549 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.431500364 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.503947068 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.380599679 seconds)
  done (took 11.382642309 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.385291084 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.381168692 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.430091588 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.429841461 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.379259241 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.589548216 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.381431155 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.390147927 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.377848419 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.461230122 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.381355213 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.380310377 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.388084167 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.3777791 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.42810505 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.391450937 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.495195555 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.382394292 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.380783487 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.532440683 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.378257603 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.388070977 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.453848758 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.393832692 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.382014703 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.387483585 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.331682153 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.381899519 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.379703824 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.382717148 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.377739587 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.482694764 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.382613673 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.379914226 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.378735587 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.548677078 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.380143615 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.380666475 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.382588088 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.373604271 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.383707238 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.381560651 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.382377577 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.380457275 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.381949956 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.405502636 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.382100967 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.38364622 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.382064261 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.383328985 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.45551096 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.383102031 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.381340141 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.381132101 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.4632238 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.389052228 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.384232454 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.379307827 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.384663762 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.380483215 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.534406392 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.431031259 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.383615274 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.430698375 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.385146783 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.383692246 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.384212292 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.383644122 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.477193732 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.382933893 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.432641824 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.381914727 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.622316924 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.407547719 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.385504579 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.386738999 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.387582308 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.383889441 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.381504711 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.390887964 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.38004159 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.386379432 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.389978433 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.382058815 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.380520803 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.568223327 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.548464021 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.382830182 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.397174068 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.391541543 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.382094616 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.460342323 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.384474882 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.382738467 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.438038743 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.499520974 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.463524444 seconds)
  done (took 142.948891508 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.391215286 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.393941401 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.388461704 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.409429282 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.387562656 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.386766785 seconds)
  done (took 9.654140161 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.388883811 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.387997465 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.386103989 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.386238845 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.385289139 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.38682901 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.38707575 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.389005457 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.390438863 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.385411541 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.387798632 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.387464175 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.388253358 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.387797717 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.387203662 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.386958364 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.388109946 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.38415504 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.387715466 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.387288478 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.387974027 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.388001664 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.389207288 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.389321087 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.393976498 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.387712064 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.39508038 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.38904047 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.388557252 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.393285369 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.39028552 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.389255102 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.389812965 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.396305063 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.39212267 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.390016995 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.39317321 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.389857234 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.387163767 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.389580912 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.391488226 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.388858071 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.388063842 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.390459845 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.391594647 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.395311839 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.395610045 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.397126295 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.390843412 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.391012374 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.390639337 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.389367847 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.389048988 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.390306861 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.393931874 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.413808684 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.395927163 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.391133017 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.390868108 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.392187966 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.392783731 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.389617318 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.39262764 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.393614918 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.387454872 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.391707691 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.391818257 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.395461694 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.389846849 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.390751633 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.391285412 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.388686395 seconds)
  done (took 102.408347744 seconds)
done (took 375.031735654 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.388456565 seconds)
  done (took 3.689799682 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.50523721 seconds)
  done (took 3.807327428 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.17149182 seconds)
  done (took 24.481718945 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.503518554 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.420777555 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.413257791 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.397936093 seconds)
  done (took 11.041562398 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.701698608 seconds)
  done (took 4.006792651 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.38726503 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.388763082 seconds)
  done (took 6.082962973 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.750118257 seconds)
  done (took 4.055886174 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.819010045 seconds)
  done (took 4.130682157 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.401846007 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.4031784 seconds)
  done (took 6.117279197 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.372645547 seconds)
  done (took 3.676981113 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.790493045 seconds)
  done (took 18.094556491 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.399678441 seconds)
  done (took 3.705622418 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.410823025 seconds)
  done (took 3.714197339 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.302795408 seconds)
  done (took 6.607829804 seconds)
done (took 104.515054535 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.387568549 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.389855372 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.389326892 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.388315143 seconds)
  done (took 10.858803922 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.428617243 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.427213745 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.430709137 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.439737 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.431857309 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.428247496 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.420711224 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.421747933 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.439403776 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.432604823 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.431159041 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.429580142 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.430637782 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.422073252 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.430361016 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.430777756 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.440924631 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.431486897 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.42215676 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.431376141 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.397366557 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.440888614 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.434264962 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.39649222 seconds)
  done (took 35.576589751 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.894092364 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.468412677 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.548759999 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.447535006 seconds)
  done (took 7.664023915 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.447649585 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.449856277 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.461969149 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.501525799 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.531348025 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.459412501 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.421344766 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.417754273 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.404916628 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.450965556 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.525714429 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.467157963 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.542674054 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.39589306 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.582886266 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.397273698 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.394812852 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.447375726 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.499372031 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.519625311 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.396105131 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.448686957 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.452266114 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.466048786 seconds)
  done (took 36.388591859 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.396678023 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.413270969 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.396453472 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.397443794 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.406272797 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.397099381 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.397585279 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.398793892 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.397879965 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.403770859 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.395811113 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.409120796 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.396135771 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.397610877 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.403991799 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.399024885 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.404369494 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.397082269 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.397102959 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.404103585 seconds)
  done (took 29.317563682 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.392075831 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.390873121 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.745487851 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.649882623 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.392215794 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.39061821 seconds)
  done (took 14.270306963 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.478945356 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.62637217 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.399333385 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.809801395 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.881635799 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.400195182 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.399204107 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.669251146 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.033953555 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.030708585 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.465290938 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.473871087 seconds)
  done (took 20.97938445 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.402521276 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.398967719 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.402497647 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.417152589 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.462346362 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.403593905 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.406823003 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.39345358 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.465169854 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.466911842 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.410465546 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.463587975 seconds)
  done (took 22.404215604 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482078477 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.394801466 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.394232118 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451788711 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393973923 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.607088437 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.478246625 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.158183313 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.424754997 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670421967 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405344969 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483979252 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.653018422 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395582166 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.402422443 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.397260803 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.622214979 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937084573 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396338847 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396124936 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426046981 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.397575165 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.416894318 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.646598632 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.608529749 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395310217 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.656925671 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.395864363 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.716914955 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.41115455 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407760274 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397699877 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671784767 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.101838047 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515005092 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.636053218 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420526439 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.398116927 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.398507812 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.41261726 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413524141 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.399737674 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408278536 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397085816 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.396368681 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39602639 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.17072715 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.424279244 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.394616767 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.397565809 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.698255974 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495335739 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.401860576 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.398121404 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486082156 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398305861 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.401932453 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.498829467 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971225935 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397420178 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401810169 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.422548138 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.420894107 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41658571 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087956924 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.405292607 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.403337314 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.403587104 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398318903 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.399025049 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.443553027 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399772262 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.427439782 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400266789 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.179883954 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.417697103 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401016326 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000500385 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401478526 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.420348664 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.629159531 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399949023 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400513502 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.398899998 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.400906731 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.18147307 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409144769 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.387117365 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423786807 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.164973406 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.664820871 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41907106 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424669376 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.625923485 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.386813827 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400077458 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.412272995 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402850647 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423125682 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.168772201 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422909158 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.405845963 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.660438476 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.612994705 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406767786 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.392774344 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.952281939 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428910228 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.418738547 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.418324014 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.648374584 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.053165257 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.417708412 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401761771 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425331991 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.403444801 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.221978326 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403763457 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.412343315 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.416602155 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.691270399 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.281962356 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403480401 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471019008 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409053342 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.40324511 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403154509 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404971339 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.402836103 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.637700856 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.42766167 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.420694087 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.404853153 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403301804 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.408054039 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404208911 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.404961154 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.629068777 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407703072 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68270507 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403994742 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403770671 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404734737 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.627761168 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.401000186 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.428238683 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.665987962 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40374164 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.431884257 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.42355551 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42477022 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505293732 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427362748 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.42087385 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.671056374 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.411183485 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.412613371 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405259893 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.409711973 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411906372 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.411880477 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410693074 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.059440233 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37817252 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.412524315 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.30100793 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.421867793 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475198987 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.4139199 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.650611732 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.414106617 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406240397 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.411677985 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.409933049 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.630174438 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.418679038 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.405765928 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.490336462 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.934155827 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.083257932 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.422213697 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.408061934 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.405084828 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.404126219 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40746238 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407156819 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.406945258 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.64820129 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.422110782 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.417222861 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.06427724 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409571683 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.407205404 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.417845911 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.421905219 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.414506489 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407978379 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.415155246 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409521862 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.432480485 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.426787116 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55353556 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.420910791 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.409074574 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.926085093 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.413465437 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.409904107 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.408247249 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442636026 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.40761243 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301966423 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.670053626 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410033664 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.705812396 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.409959936 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.428595845 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.40689596 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42691627 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421542155 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.431982317 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418309639 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.420402697 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.40865709 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414322437 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979014026 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.224105512 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.011264115 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419105785 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.418776865 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.414451035 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.180279821 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431548932 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410471324 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670597432 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.176509728 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431553846 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939877556 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.428729314 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.262263013 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.708718674 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.640245746 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416021593 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.411999294 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.736181909 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.625359103 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446106068 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.418907069 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419442038 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.395723001 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.021512613 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.431930811 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.511960299 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.184171139 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432601523 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.432550675 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.450349712 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.412904476 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868254591 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.433750243 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411449214 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.423150905 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.419435757 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.281359099 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.420999404 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412942677 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.099571016 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.414943218 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.94779041 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435037875 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.659454526 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.424389841 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.417991568 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.421603343 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.421780729 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.677067918 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.712899969 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414463166 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.411977339 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.02475674 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.278219399 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.420231904 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413757914 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.235474021 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414313315 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.759682494 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.415395675 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.428260773 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422950989 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.41500681 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413505366 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.411877053 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.421713286 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387548543 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961293752 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.419445957 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41784651 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41796319 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268453944 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.674497374 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.431501238 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.070422566 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.644189333 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.427649662 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43874717 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.419041774 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417280202 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.403946315 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.415879006 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.652932093 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44015605 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.642892834 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.424478011 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.40324832 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.475096766 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.62995123 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.415216583 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.415348003 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.688285815 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.414516015 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.44237829 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.213145877 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442172345 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.415588549 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418708473 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.428630483 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439637413 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487718836 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.663685913 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.430479584 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.428238539 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876568826 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439213651 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.4193038 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.431889389 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.511538435 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41707828 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.419376618 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.209828625 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.07957223 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.236292711 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.080505931 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.726887779 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.421669722 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421319366 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420283098 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.566154461 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417823438 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.691848885 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418296617 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.423065328 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.462277155 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422587987 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420624131 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.636215083 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.694394033 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419977354 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421021584 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425739682 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.419191979 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.432550728 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.632774263 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971179138 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029774293 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422812808 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.419930745 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.197005098 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.716402946 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419809041 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.420034509 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419725595 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.42180718 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.421223577 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.429453923 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428172701 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.568597019 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.717592537 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137724866 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.454047731 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.448740407 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.196102633 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423312415 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.681426372 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.42650345 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.66990495 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.082248525 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.207340253 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.686549165 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490682257 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.667055457 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.42194303 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.569672443 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.429712398 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.421483139 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.423327949 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.271253692 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.418488648 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.43169353 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.089221822 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.687614694 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.424672102 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.427674766 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.445905623 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.432780858 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.645980497 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.218375332 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.647905536 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.434479671 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.42928041 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.422451087 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.087569143 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.732073133 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423978422 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.426542355 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.693346156 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.660590716 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.449028121 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.87745046 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.421429719 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047029804 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.39973576 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446367443 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435401324 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.219744601 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090367188 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.423328963 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975466538 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.426084903 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425812275 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.701890214 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.429407306 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.434858668 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.705273664 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.430111287 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.42424482 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.697765695 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.082927897 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.288350847 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.427088112 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430914133 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.430242641 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426005183 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508432991 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426720768 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.43246922 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.90589462 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.446325343 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426100768 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.436598965 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.436087488 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437267943 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.42904648 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42555156 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.432110958 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.439240791 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.412156432 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.43876341 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.533288252 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.043464342 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45183117 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.103989039 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.755867854 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.684907047 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.428962376 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.418323307 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.430561768 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427670744 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427646597 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427224543 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.432440153 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038998327 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.430600698 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.442848338 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.432459142 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.64459111 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.64035676 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.430525632 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.676767108 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428635625 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.447896199 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.415605325 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428330584 seconds)
  done (took 995.177385364 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.433627242 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.470759404 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.475253924 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.480445098 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.444215145 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.490586789 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.523004996 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.468604269 seconds)
  done (took 21.127811483 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.433450439 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.43805458 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.428139522 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.439201899 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.433857732 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.949003632 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.4490484 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.439147992 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.440546617 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.433842064 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.430283795 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.139613465 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.439724816 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.432973055 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.424258206 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.447617471 seconds)
  done (took 33.546221892 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.795467112 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.699549087 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.988322924 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.511264601 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.485233537 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.436677653 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.814752212 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.448902519 seconds)
  done (took 28.524844944 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.44127343 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.443788842 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.442725537 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.442199145 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.443602795 seconds)
  done (took 8.556969135 seconds)
done (took 1265.697523502 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.435247731 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.438676544 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.43449793 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.437610429 seconds)
  done (took 7.089720466 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.417551681 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.420939328 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.420414567 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.439712614 seconds)
  done (took 10.04400695 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.244651785 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.156035394 seconds)
  done (took 5.746512927 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.434229215 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.194219419 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.16743664 seconds)
  done (took 8.139470453 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.743755216 seconds)
  done (took 3.088994777 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.838808624 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.817558952 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.623167591 seconds)
  done (took 6.625150289 seconds)
done (took 42.077337685 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.446478768 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.686951247 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.588955527 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.439690179 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.595737058 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.589242058 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.207991296 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.432536592 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.431665801 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.43267853 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.461012657 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.59567436 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.189418072 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.6885916 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.191106637 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.691102596 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.59668758 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.436178776 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.432691276 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.444462205 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.20715902 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.444866815 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.446323804 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.432851106 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.616910889 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.578859356 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.442006004 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.689677092 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.438213587 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.44782158 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.579840505 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.449657253 seconds)
  done (took 84.698950108 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.439213458 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.434038281 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.43486385 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.454710211 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.439320442 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.451767365 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.449996665 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.433516181 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.433619177 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.433058589 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.456271988 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.440968355 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.448125452 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.444454 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.436005933 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.465098123 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.435221001 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.446473978 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.43766916 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.434904936 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.476836795 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.434359443 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.435141021 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.435311777 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.435668774 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.437583706 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.471773544 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.443831399 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.434977619 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.455085066 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.456190014 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.454777244 seconds)
  done (took 79.568479517 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.451811772 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.444721719 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.440329166 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.444356867 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.449012887 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.439059937 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.439127495 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.44207347 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.43610301 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.436546287 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.436942675 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.44915817 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.439012994 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.437534852 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.45563031 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.443843746 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.443906881 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.43643886 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.471233735 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.435280516 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.437498609 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.437041761 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.435486471 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.437489041 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.445528415 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.440403431 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.46636757 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.442142814 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.437567279 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.446726169 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.437752293 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.463475509 seconds)
  done (took 79.549545964 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.635065092 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.443671134 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.444673586 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.382488318 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.444941421 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.445220816 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.438074619 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.635423742 seconds)
  done (took 15.22145728 seconds)
done (took 260.383454449 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.438812529 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.441540097 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.653976235 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.465474753 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.448721684 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.467301356 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.465164474 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.656180563 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.434901866 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.663151876 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.439823828 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.464200465 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.437839903 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.463991361 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.739069939 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.573848144 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.424957901 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.439486225 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.807134685 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.461233506 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.722709162 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.440033341 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.683411268 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.440800276 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.460590143 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.458986542 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.458139844 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.41618976 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.466702461 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.815296099 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.451350625 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.430752908 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.516985235 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.519352797 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.581320142 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.575319403 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.460341595 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.516983882 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.660165901 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.455106768 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.441872667 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.261546379 seconds)
  done (took 85.974056438 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.448952367 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.560274151 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.449338516 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.448493101 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.449463153 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.55061629 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.531679361 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.44821985 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.449577759 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.448076312 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.448347742 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.449361907 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.448985373 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.449233019 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.448055029 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.449519414 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.448697836 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.451712718 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.45096889 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.486667931 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.553667111 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.453274512 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.443597827 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.449495588 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.536316028 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.551179297 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.449121935 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.443325692 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.482790974 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.451825764 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.45373332 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.488855151 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.451270138 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.451254046 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.550566309 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.535351151 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.453568441 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.447899742 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.551409162 seconds)
  done (took 58.871454791 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.451678971 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.716536877 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.915672848 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.458960971 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.451278362 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.456829461 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.542484284 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.452693886 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.456861988 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.456009121 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.621024831 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.454725751 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.489169384 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.947018723 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.4564029 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.452421275 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.452088975 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.452964888 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.723938785 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.463119277 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.565763027 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.453737894 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.543868635 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.464979588 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.480383015 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.454123126 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.457441729 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.040485587 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.457220001 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.619151932 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.386949498 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.544931774 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.014656592 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.934599382 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.378968249 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.459415712 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.452604149 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.625943754 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.458752963 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.453629009 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.543252949 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.455035235 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.924703214 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.159438057 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.477503494 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.455128094 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.065521228 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.623805622 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.738018086 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.464350517 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.95567203 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.459220861 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.456487543 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.457498195 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.737470411 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.46250121 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.454361465 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.095758234 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.479741965 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.544813961 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.455915267 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.456885628 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.734934725 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.457005836 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.7212666 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.458584608 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.465008216 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.479165021 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.925794414 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.458681777 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.187766124 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.476371845 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.456210163 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.621701258 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.720977445 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.106064251 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.461466828 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.740015138 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.028027227 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.545219952 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.461387612 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.030793714 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.548997522 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.461058956 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.459190969 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.460259058 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.457114391 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.508327143 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.543798004 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.116207672 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.178728368 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.1289324 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.567094924 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.472409186 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.459667097 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.100456087 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.478682146 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.457186386 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.931425375 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.187165948 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.479780917 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.464819446 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.193193519 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.480307565 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.547171763 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.46673218 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.951221198 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.465396831 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.508443446 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.456995569 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.466961074 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.485689682 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.54803582 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.463594224 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.459380403 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.154154467 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.65339619 seconds)
  done (took 192.702701662 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.454264102 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.472488604 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.470216515 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.452394517 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.4518607 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.461286056 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.450841182 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.452828666 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.458282032 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.452092839 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.455187698 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.458037293 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.456818652 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.456327224 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.466927822 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.463587779 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.45541047 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.455876628 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.473043206 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.455085325 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.453106547 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.479533472 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.472459822 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.455847114 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.457106719 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.455766424 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.456719457 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.457613308 seconds)
  done (took 66.226096802 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.46236122 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.102081107 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.462591753 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.612775368 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.486427931 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.458381613 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.610051177 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.52669258 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.464251775 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.461473231 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.461993656 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.805097002 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.463847682 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.047682218 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.69404024 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.616502455 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.046417559 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.483845723 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.463258039 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.462020111 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.620421733 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.481493485 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.807085728 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.10267343 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.463816254 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.104708674 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.453050495 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.464249205 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.463854199 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.106893393 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.46174453 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.807428466 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.550850691 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.530348212 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.10547736 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.052193616 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.070042084 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.634505531 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.465632788 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.46060433 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.462374951 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.45355329 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.14216223 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.471323149 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.465621549 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.119034792 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.487108088 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.465420793 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.470524518 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.46236254 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.531828884 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.534384895 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.829353566 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.155204964 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.557130065 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.475244624 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.614237406 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.870423404 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.467517832 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.050809978 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.455085375 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.112707718 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.486757158 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.454449313 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.463601228 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.469158354 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.634064147 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.614090441 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.055052983 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.487829527 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.051695732 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.657574778 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.464563517 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.465214266 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.466562492 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.148014894 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.056369573 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.656163382 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.619059664 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.694814889 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.463658452 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.465165864 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.457718726 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.553363867 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.465056073 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.112940375 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.074820631 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.487270339 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.466882598 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.466397686 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.467654197 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.670596742 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.1153837 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.555264211 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.053071304 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.834866849 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.817332943 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.468838112 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.535149413 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.486961209 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.818463846 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.469662476 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.531293206 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.939626722 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.818275844 seconds)
  done (took 175.964610303 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.741620728 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.494816115 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.565730316 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.627722791 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.124183938 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.083386451 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.46278058 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.598919217 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.590138809 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.751057575 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.470296466 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.555881705 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.702264169 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.550995266 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.253837936 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.547286157 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.567593852 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.637352639 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.623407905 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.463750095 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.152647959 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.801167478 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.675314558 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.50328723 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.581548029 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.343466814 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.084997698 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.067121957 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.664885773 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.465282246 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.025765281 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.481343261 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.464155491 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.198122905 seconds)
  done (took 68.296386501 seconds)
done (took 649.387509463 seconds)
SAVING RESULT...
DONE!
