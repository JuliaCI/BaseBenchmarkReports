cset: moving following pidspec: 9957
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.361666278 seconds)
loading group "string"... done (took 0.505234378 seconds)
loading group "linalg"... done (took 8.372247802 seconds)
loading group "parallel"... done (took 0.170276729 seconds)
loading group "find"... done (took 1.344521614 seconds)
loading group "tuple"... done (took 1.925569109 seconds)
loading group "dates"... done (took 1.315886903 seconds)
loading group "micro"... done (took 0.209014003 seconds)
loading group "io"... done (took 0.54572889 seconds)
loading group "scalar"... done (took 41.662521931 seconds)
loading group "sparse"... done (took 12.942693644 seconds)
loading group "broadcast"... done (took 1.046608883 seconds)
loading group "union"... done (took 14.364973559 seconds)
loading group "simd"... done (took 4.863553057 seconds)
loading group "random"... done (took 9.70800686 seconds)
loading group "problem"... done (took 2.06809916 seconds)
loading group "array"... done (took 23.286800295 seconds)
loading group "misc"... done (took 1.070219035 seconds)
loading group "sort"... done (took 3.503782067 seconds)
loading group "collection"... done (took 20.727435509 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.579838486 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.133459473 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.143903206 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.171731056 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.200377343 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.135875253 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.153111898 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.163694686 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.043393463 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.201844843 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.139074347 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.496547527 seconds)
done (took 5.32646323 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.222255144 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08109973 seconds)
    (2/2) benchmarking "String"...
    done (took 0.124656633 seconds)
  done (took 0.906728261 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.073008219 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.170815449 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.091107033 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.10875934 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.107298912 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.089966535 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.108287245 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.105494446 seconds)
  done (took 1.489533703 seconds)
done (took 3.405526128 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.74998858 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.836629858 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.491052531 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.124043145 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.154782565 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.127393493 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.300585124 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.1420175 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.128328822 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.11535302 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.17331272 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.358616273 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.481664769 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.928788733 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.093807168 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.126929277 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.077945961 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.696786513 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.07976121 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.116169622 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.506412763 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.107764848 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.112566777 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.126476145 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.204273289 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.112595288 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.180852033 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.106126487 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.66696699 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.101672547 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.180738349 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.09441624 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.159804993 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.212541498 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.091602406 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.089640517 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.676963442 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.188044783 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.116152821 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.09316938 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.680390299 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.078018532 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.192500781 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103877859 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.10783114 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.186362256 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.103201608 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.091740831 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.080057606 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.100198238 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.151942787 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.493736075 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106154402 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.142684403 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.091978601 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.700689564 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.092866594 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.153160538 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.12311241 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.107725845 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.079462967 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.10342411 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.158759944 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.103485536 seconds)
  done (took 19.516518162 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.114053194 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.136152682 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.090742895 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136755309 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135682906 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.076275655 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.097644015 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07432674 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122435156 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.179953997 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.135964027 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.140330879 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.071995211 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.091606951 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.096998507 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245788453 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.115415632 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.100784972 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.093396783 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.087185546 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.136952851 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.09147299 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106244461 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.106743894 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165257304 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.204457418 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.108271707 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123513493 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.09213663 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098391352 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.139282836 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.160044161 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.075094126 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.090934523 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.176185736 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.104323577 seconds)
  done (took 5.041407664 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.191894677 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.098369252 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.197316836 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.170696467 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.145809904 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.15749824 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09849156 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.259769505 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.177181988 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.160770398 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129595889 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.11660816 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076952924 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.093070237 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.075102018 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.698980887 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.166255204 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.142888002 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.118738884 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099467559 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.078373462 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.371964772 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082426629 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.094839248 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080027261 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.086273349 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.166008402 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078962436 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.213694014 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.095777532 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.105613321 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12713449 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.191704746 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.12606947 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.112614861 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099093276 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.076390717 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.191714037 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104207515 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.072969032 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.119853342 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127744999 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.11313191 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.09583894 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.10365841 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.225842012 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.094620551 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.094837431 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.006414635 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.19899758 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.140970997 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.07485229 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.331338124 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.114257906 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.080321366 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.094972162 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.27974938 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.114812822 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.125706213 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.092362073 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.075279802 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097690474 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07683041 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.383477075 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100129366 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.078449693 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.093924463 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.150797043 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.323378119 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07939728 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099407772 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080512126 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099836619 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.095871016 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.093635778 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076131852 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.093024699 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.07480594 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.096936014 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.094152022 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.097899658 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.074026142 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.159011376 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.11565022 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.095934642 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.121369494 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082249692 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.092015418 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124081632 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.078361012 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075042234 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097088711 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.138390513 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082361355 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111493675 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.094608243 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.123053992 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.094552095 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.165968337 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.093248335 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.103739725 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.097902275 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124740667 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.115862667 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075284091 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.096652624 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.073851099 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.093917853 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.143737324 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.094221018 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.076566094 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.095151012 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.077733019 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.105811931 seconds)
  done (took 23.276655932 seconds)
done (took 48.537537872 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.374800228 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.10467909 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.106856305 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.105539526 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.105317267 seconds)
  done (took 1.575879571 seconds)
done (took 2.330230569 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.30944565 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.189583664 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083017774 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166950949 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.100183225 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.171920896 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.15653153 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.113664861 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.183025835 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.096531058 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.162353543 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.095124659 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083432051 seconds)
  done (took 2.692612447 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088674709 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112130035 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077018328 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.0868671 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087930484 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086746602 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10276175 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107189223 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102174933 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082011336 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087220725 seconds)
  done (took 1.774564392 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086868631 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.095021159 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093687001 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085651417 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088114602 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087090029 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.102618509 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097067792 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103383637 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080914015 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087448116 seconds)
  done (took 1.759521594 seconds)
done (took 6.972717296 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.063665379 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.360515473 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.119440775 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.167596544 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.303813736 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.211211369 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.597661941 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.130875572 seconds)
  done (took 15.910698391 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.125619964 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.096082065 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.076448331 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.096052753 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.078280225 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.092435381 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.076211667 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.091496048 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.078153013 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.075354367 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.092633592 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.076456096 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.095029404 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.077281107 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.094559311 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.07515329 seconds)
  done (took 2.223760498 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.112579938 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.110054726 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.098401016 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.084132055 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.096836613 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.080268601 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.098816503 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.080566825 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.094586154 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.079660045 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.100732174 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.081720169 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.097629376 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.077569538 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.097826058 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.084998272 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.094691306 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.097618364 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.082468857 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.098057456 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.084174658 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096340598 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.08137185 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.099329975 seconds)
  done (took 3.084242301 seconds)
done (took 21.974982316 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.162182157 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079953778 seconds)
  done (took 1.009124249 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097079615 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114528503 seconds)
  done (took 0.983942879 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.103432446 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094135002 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.130321531 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.092419429 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.094246683 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.076064693 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.125278135 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.094518484 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.076426934 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.075983898 seconds)
  done (took 1.737403873 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082305792 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080441802 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101362617 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.113255638 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.088236149 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.09498472 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.081400364 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.096945218 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.082876321 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.091987422 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.084491582 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.111531046 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.098877623 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.096766325 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.097264814 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.08235131 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102389956 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.09657597 seconds)
  done (took 2.455068549 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.075426526 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.078099362 seconds)
  done (took 0.9183546 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.078226318 seconds)
    (2/7) benchmarking "second"...
    done (took 0.074232042 seconds)
    (3/7) benchmarking "month"...
    done (took 0.096098111 seconds)
    (4/7) benchmarking "year"...
    done (took 0.094923473 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.074914261 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.074104408 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.092353188 seconds)
  done (took 1.353610091 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.517223799 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.196601846 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.358552728 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.157551974 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.127895824 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.475010949 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.130687882 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.207431796 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.2038622 seconds)
  done (took 3.181954408 seconds)
done (took 12.410572518 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.08732941 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.128176736 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.468790914 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.0968267 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.089045282 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.140244361 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.252653492 seconds)
done (took 2.039283056 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.334186268 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.117474541 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083350214 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.075024099 seconds)
  done (took 1.384062923 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.07637298 seconds)
    (2/2) benchmarking "read"...
    done (took 0.081334654 seconds)
  done (took 0.935711283 seconds)
done (took 3.101828283 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075646864 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.126684503 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.073776585 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.07318298 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.090794427 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.071398242 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.092323974 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.071352142 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.071124764 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.092198137 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.073183087 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.091673756 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.073548987 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073606083 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087812902 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071446525 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09004574 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.071455525 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.191486707 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087953668 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071251604 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09108434 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.071774349 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.07149374 seconds)
  done (took 2.870208215 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099790441 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09253098 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.080220136 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.096692688 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.077780839 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.096768954 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.079069039 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.090536493 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.08052699 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.093584673 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079085035 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.094625973 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.076252644 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095172863 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076232793 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.094660931 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.08002294 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091803717 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077427681 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.095019491 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.08055515 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091204424 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.078950347 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096325532 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.079265439 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095605833 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.076670972 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.092098448 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079634607 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.095488875 seconds)
  done (took 3.395986888 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.082287058 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.071844885 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.088899027 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.082712341 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.088673429 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.076067126 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.088416132 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.073080477 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.077082368 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.089417371 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.076506173 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.088729703 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.071233474 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.075800906 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.093451451 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.077793501 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.107527024 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.071243859 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.089431723 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.075595627 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.076714259 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.088531873 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.074412586 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.089238974 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.071762956 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.071987884 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.089812481 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.071668331 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.089817255 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.072137805 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.094300676 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.079968098 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.071423034 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.101814357 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.077924545 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.088904128 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.079383575 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.0889266 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.076838625 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.071830701 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.08932873 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.071618584 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.089107343 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.082593316 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.074626119 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.090733499 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.072127452 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.094063477 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.076178176 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.096773089 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.071698709 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.07135387 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.095262167 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.076606255 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.094469123 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.071297245 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.072407023 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.088298254 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.076575904 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.089181246 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.070945508 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.071352594 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.094508712 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.071956211 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.112298079 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.082838783 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.088781539 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.076764805 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.093254708 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.079856706 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.094869173 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.090269143 seconds)
  done (took 6.726524069 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.078186878 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100369244 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.074792082 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.073236726 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087866859 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072863799 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097092316 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072412104 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091623136 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090740359 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08946787 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07404841 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074255062 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093241957 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072745188 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091185656 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.082219022 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087086231 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.072282273 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.093006521 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073253503 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.096338352 seconds)
  done (took 2.624420677 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.21789991 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103965011 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139149152 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093852547 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.111896566 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.11031965 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.080739756 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101355802 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081238106 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102696025 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084601372 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099360131 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.112562732 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084457303 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.1029279 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085991982 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099055367 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086407348 seconds)
  done (took 2.684177997 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.089058677 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.092877774 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.09917161 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092491776 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.074590073 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.095543465 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081161143 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108510502 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.076623381 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093049389 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.085752711 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094628113 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.076864209 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092757493 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076922847 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.092044673 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.078040338 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075618846 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102020522 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098742924 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.081935334 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103209033 seconds)
  done (took 2.756618456 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092475495 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09440804 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.095835309 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096701706 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.073951741 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.094302848 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.082784746 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.09229092 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.084312075 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.094511521 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075217792 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.094548584 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.083352333 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092931189 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.080973521 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09290534 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077398662 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075658738 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095814608 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.074558683 seconds)
  done (took 2.535902627 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118038878 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10794477 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090210668 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11850084 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092582535 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107956526 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117427939 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.09010898 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107792818 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.101851569 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106547907 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090493145 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118350775 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114357769 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089314862 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11869694 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118475712 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100243761 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107484652 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089481427 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.119306606 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089331558 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.116777206 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106720143 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.089997832 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107532431 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.090293186 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114368002 seconds)
  done (took 3.73281868 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076735699 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074268345 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090709526 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.071865224 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.072363761 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090242617 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.072204053 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.090135856 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075134001 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073042231 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.092485786 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.07497824 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091724104 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.07455347 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074419117 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.092530188 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074328721 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.089586489 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072726557 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072551736 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.091214169 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07550027 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092040063 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.0723042 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0717782 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.091460443 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072433038 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089894259 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074921911 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071994633 seconds)
  done (took 3.195313946 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.084798449 seconds)
    (2/2) benchmarking "in"...
    done (took 0.099335979 seconds)
  done (took 0.983994016 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.074655166 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108556119 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.072673641 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.077794479 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098033067 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.075292507 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.102148454 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079734051 seconds)
  done (took 1.484632584 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.101863505 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.115606416 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.081098285 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.10509388 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.094166324 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.111666101 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.154835535 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.081731409 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.103453214 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.076503971 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113416814 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.075415066 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.083525117 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099617278 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.085435822 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108615187 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.076291076 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.104237953 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.083831383 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.095111643 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081747805 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109403889 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086579048 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.102164032 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.078817951 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.10560775 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.089713486 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.105143852 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081672935 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.105870624 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.082706161 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.086872094 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.080755915 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099665421 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.076179218 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.112029375 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093015732 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.098918522 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.084864529 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100142023 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086254318 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.092495684 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087037826 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.100971582 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088722819 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.098820465 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.082680938 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.092439463 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.076805785 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.079406456 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.091976863 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.079947015 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.08775224 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085241902 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103004728 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094697319 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.096058585 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.081285901 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.098533059 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.080099486 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.100637213 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.079867578 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10428928 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.07926096 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102845561 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.084991676 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.102411375 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.074267526 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.069012943 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.094203993 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.084630866 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.117846702 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.105617337 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.082053915 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099934345 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.077197463 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.081664746 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101619281 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.083675977 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105088549 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.080201006 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100172873 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08609048 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.096392088 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.079504246 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.100565822 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.078728916 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.096704736 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.077625471 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113726802 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.079714268 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.093936671 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.076818211 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.10550249 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.080620196 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.079498734 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.09509546 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08517975 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.087445428 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.082556796 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099609493 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082012258 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.106092624 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082140461 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.099266279 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.084747813 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.104719306 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080943858 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.097110288 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.073078337 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100822217 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.07834617 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.084197474 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.088613957 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081005656 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.098514422 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.0823172 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.104879102 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.078994779 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.097893275 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087036213 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.105284996 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.078660633 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.090163387 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.080740379 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099097034 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086871468 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.105827353 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.079651679 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.093115845 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.074975782 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.085115096 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.09916964 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.083264002 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10096533 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.081984801 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.088613772 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.07819655 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.099394214 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.086664434 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.097741783 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.083565138 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104466979 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.083030713 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.097627074 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.08576403 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.097432249 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.07696672 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.103792866 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.080147464 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.074925371 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104091036 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.098557798 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.079010691 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.081110788 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103790231 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.080703547 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.10026689 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07903613 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.099618481 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084139311 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.094429424 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081234777 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.097710847 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.088884263 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.098563987 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.075272396 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.073889171 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.101680832 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.077363676 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.098048364 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.076287845 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.09934117 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.082529906 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.096062353 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.080207143 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.080227402 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.109137664 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107437793 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082130158 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.102151806 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.087137118 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.080159427 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.101546432 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.08102756 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101220674 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.082414838 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.10396209 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.084217309 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099211532 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.081191643 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.090770686 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.082811268 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104764221 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.076097982 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.076494374 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.094780714 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.080514163 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106238225 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.081039876 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.099438675 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.078123332 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101548614 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086379502 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.09898557 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.081329639 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.094171677 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.080684253 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103363448 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.082559485 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08322616 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.106583639 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08149791 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.093539015 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086636223 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097277818 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.084414272 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.093125825 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.07783024 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.096009942 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083173169 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.097824276 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.079661297 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.070413771 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104665784 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086846851 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.099801125 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.076534672 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.099290332 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090777803 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.097960832 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084119986 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.099672313 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.085274464 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113340894 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.077429801 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.100132476 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.088472571 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.099721318 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.071609808 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.102144576 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.079270373 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.094579486 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.088296377 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.078338521 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.100081614 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.0831395 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.101782736 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.070764885 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.098511721 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.078816605 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.095720911 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.076318392 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.10460554 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.081558885 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.08071156 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107993602 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101904221 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.081649465 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.082466888 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.099256549 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.083278077 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.102305828 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.082431637 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.100440682 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.078922477 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.095311776 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.082410698 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.094893958 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.078329344 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.098391381 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.081477894 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.082316345 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.100682533 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.079729973 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103974682 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.081113369 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100640007 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.117756976 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.078373399 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.096429205 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08243122 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101810281 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.080536355 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.080648804 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.094052455 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.085961483 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.09911944 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08713913 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.098714396 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.073759049 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.099963911 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.082724925 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.100594965 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.082321765 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.100837601 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.079830061 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.081328748 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.099945237 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089952544 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.096232212 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.087160701 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102591801 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084870216 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.100269024 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082643968 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.098903156 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.076649931 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.100187862 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.083048291 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.101289201 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.080775196 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.101975764 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.082727822 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.099426906 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.079584801 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.082231997 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.100136017 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.083685819 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.089348889 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.07721449 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.09562847 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.082996461 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.103301542 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.082888002 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.097958469 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.07923937 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08304948 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.098010106 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.072720643 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.103258413 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084351744 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.100744388 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091301799 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.095987016 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.081765508 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.109253493 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.071073243 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.09730244 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.077652115 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.077887175 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105695064 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.082855687 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.105871742 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.081673626 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.096438011 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.073805073 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101615886 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.080898099 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.089968397 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.077858885 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103995635 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.079591073 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080117549 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101902664 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.084599868 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101890298 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085034233 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.09919236 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.081585154 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.100290146 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.073769821 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.096203328 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.0773491 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.0815221 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102931551 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.077476604 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.093206905 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.081661122 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.100162495 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.082131634 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.099228338 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.081001938 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105746257 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082219362 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.081784818 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105922152 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.07110889 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.100695917 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.080433177 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.099501135 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.077466172 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.101639313 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.083928736 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101406016 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.086058333 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.098876561 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084060357 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100352926 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.077824283 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.080787211 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100784531 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.082252119 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.096209712 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084321902 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106277738 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.077844232 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.101114506 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082231225 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.097715906 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.083857706 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.101781493 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.081700743 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102371584 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.081987141 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.081345846 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.103664182 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.081240068 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.102682819 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084674129 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.099461656 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.086869734 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.095823718 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.088366605 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.102052304 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.084280615 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.098923445 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.078826164 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099717082 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.081538727 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.079258086 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.105896837 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.08349511 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.096940905 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.077524486 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.097176621 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.082347609 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105687766 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087682045 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.100904019 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.083018673 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.094446843 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.074831079 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102177661 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.078555546 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.081012817 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.103155414 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.086235006 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.101053628 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.079309906 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.098966798 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.086886114 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105299852 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.084269601 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.097236572 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.084025422 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.101812801 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.082848574 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.097690617 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.081713295 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102524626 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.084026794 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.080223663 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.097870059 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09015618 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.1070925 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084177881 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.099430143 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.084502996 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.100462511 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.07616561 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102694654 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.082213766 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.104530236 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.082312407 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100950152 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092541145 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.097442235 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.08148568 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107305693 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081661953 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.106435098 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.076875133 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.101357566 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085681814 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103570838 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.076316544 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.078124858 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.097771347 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.082327978 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.097259233 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.077131081 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112164481 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.08677534 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.10173641 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081229497 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099256723 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.0769782 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.076740198 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.098346269 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084319027 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.100241765 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.0901509 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.097647384 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.078347944 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.09513843 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082242199 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102066445 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.085255371 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.074923601 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.096077254 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.078893524 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.102347352 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.089676294 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100433245 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082980036 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10286195 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.082589339 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.098344777 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088455344 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.093246229 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.084238478 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112772133 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.083821973 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103547262 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.086109261 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107307303 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.084475906 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.094704266 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.084060705 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.083148054 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.1030433 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.084468262 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104133074 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116482908 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083923922 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.077886049 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.100511532 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.082468406 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.097788568 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.090049941 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103295489 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.08386728 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.103266479 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.0822898 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104435467 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090206593 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103567052 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.083739258 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.102671728 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.081378298 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101319913 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.080373222 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.080895688 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103659855 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.084883256 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100894427 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.084989641 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.097917811 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092734679 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.108480217 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.084187645 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.094403323 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.078769264 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.097750736 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.07716091 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.083473021 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.095974322 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.080591087 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.099175269 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.08091207 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.103875907 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.085351181 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.101358817 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084663582 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.082846321 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.092253907 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.085934761 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.102103635 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084619939 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.094565191 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.08328344 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103055767 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.088059101 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107788001 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.08101599 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.10314154 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084532824 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104512077 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.07765289 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.084848964 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101353458 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.081426875 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.098900235 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082686965 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103594244 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.084621623 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103252119 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085203024 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.101951709 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.087356438 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104702225 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.076591444 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.074530016 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.10399204 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.079324575 seconds)
  done (took 54.944441105 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123132092 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103107188 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073334848 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092524793 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117566478 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077993552 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073099083 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097271261 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.078150094 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10619157 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.073733454 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.092878653 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113394824 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.101986525 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117805588 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106780823 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073732393 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.097421004 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073568849 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097204205 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.094545951 seconds)
  done (took 2.830251193 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.100725834 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.111279278 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089944552 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.115488622 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10374419 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091870026 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110999028 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111171528 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096177536 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104940036 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115001938 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091209276 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.10498214 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.105341648 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086408051 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107170634 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.095545692 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104886648 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.112228301 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.089726148 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107923796 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.1087332 seconds)
  done (took 3.112717329 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.089926519 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.081883573 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.106155486 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.073206266 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.100740954 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.073544582 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.107032106 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.075685378 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.105583136 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.082935556 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.079531064 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.101916917 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.086870512 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.093501871 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.080774181 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.09434749 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.08752446 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.081180589 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102267107 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.075528276 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.121211135 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.095751464 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.077639033 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.079327693 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.111641151 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.082815584 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.101359034 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.081624061 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.098357641 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.083471388 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.074942656 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.10429394 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.084546869 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.100056032 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.079352139 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101167016 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.081765173 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.095506291 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.079189149 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.103566562 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.077245311 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.082436556 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.107714179 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.078643048 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.095376207 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.083698972 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.1012121 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.073317738 seconds)
  done (took 5.160669235 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.114024309 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.128781564 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.101366756 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.14079864 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.117371709 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.092176418 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.10239142 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.140629621 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.077477931 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.079896453 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.120325017 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.11560814 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08179101 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.108284945 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.104317014 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.082168948 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103115779 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.077287053 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.106650829 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.078970985 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107835453 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.085713436 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.115686314 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.113837662 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.086631361 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100617586 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.0785509 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106401788 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.113746858 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.089578463 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.10767933 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089344424 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.117091134 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.103701435 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.077968662 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.104480959 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.099829323 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.102048522 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.083917855 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.096374058 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.085514824 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107833472 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.08532143 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.118683395 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102356253 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.084259985 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101370011 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.076458533 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.114350877 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.084430267 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113491616 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.114816395 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.086948662 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.10323275 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.088174173 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.117670366 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.102041103 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.080625776 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.105793442 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.092712512 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.095835008 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.086415502 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.115184482 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.103949328 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.092029058 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.115804845 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.102695311 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.086623665 seconds)
  done (took 7.809196621 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109993662 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.106896003 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099204354 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119131325 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106648181 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.087396253 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108332958 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.08704487 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.107603355 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114244153 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.088140784 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.155482257 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.084196189 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113818811 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.106248124 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.087820079 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.107343064 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086834655 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107163824 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086745997 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.107253224 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.118545901 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.087896743 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.119072421 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.11971277 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085375144 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10709112 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.087562342 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119568971 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.106846039 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099941257 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.108001206 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.087083955 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.11911856 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.119048327 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.107381375 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.081833429 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086690653 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.108761932 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.107022444 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084945627 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118199114 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087525949 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104529192 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087836622 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.107822961 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119392931 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.100538469 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114268283 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113589935 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.087576764 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119199134 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106918255 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.087825751 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.118441083 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.127965037 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099475173 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119972248 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107646948 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.098565472 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.11923814 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.126842812 seconds)
  done (took 7.370098062 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110837592 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114486959 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118754869 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.074719765 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.097474852 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.086921114 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.096057359 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.076707833 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114134222 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095340827 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115712785 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106422289 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090545001 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116456383 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085763464 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111329803 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106115725 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086913424 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113965658 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.105571829 seconds)
  done (took 2.882026479 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.087810153 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.119068208 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.080162761 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106504056 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.081968026 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.10694168 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.082322 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102611414 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080759807 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102134069 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09385552 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.111190739 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079695777 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106854265 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.111579189 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.086503794 seconds)
  done (took 2.399478534 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.098886257 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120041274 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.124434392 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084476449 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.075998934 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.10384676 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.081864243 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.095372034 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.077473568 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107716843 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.086020662 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.105259773 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.082913889 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.07703572 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.100992443 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.084778721 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.095825341 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082747246 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102312197 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.103344166 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.105649415 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.081897328 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.103752296 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.080748171 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102567223 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.08383024 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.10757161 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.076933257 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.097852799 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.082598726 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.102493194 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.086821809 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.096134795 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084924662 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.097490402 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.077299384 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102003176 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.083876525 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.105793415 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.082573346 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.078268932 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.10259704 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.081109081 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.100802281 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.075461514 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.103164311 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.075710431 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.105046106 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.082096639 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.101789445 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.082663097 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107695859 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.087249657 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.110694836 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089605745 seconds)
  done (took 5.980499754 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094639958 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104165718 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085171506 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.097245672 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083076541 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.086358023 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104307525 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.082429398 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10244003 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.076508882 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102461008 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.084940133 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102109631 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.084220363 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103031246 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083940405 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.094396033 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.081764256 seconds)
  done (took 2.519622495 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.086342395 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078702534 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.107663685 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.078731613 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.099744981 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082247313 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095938832 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.077940553 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077016959 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100213891 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078967111 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.102047457 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078890818 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.101411694 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.080599945 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099949002 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.082338769 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077567229 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099661968 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075302395 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102071085 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078485637 seconds)
  done (took 2.813389523 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.097722711 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.13131374 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.094181606 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.143134548 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.082642149 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.105432221 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.092216649 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.105664416 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.121523376 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.083762738 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.082298475 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.104483744 seconds)
  done (took 2.115893272 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104328896 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136705991 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.081203478 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102670369 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093240122 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106128981 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084869642 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106041433 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118781617 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097669277 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105456995 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119451857 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098961234 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116874253 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113801877 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093195483 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105087461 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084880352 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102227678 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127082188 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08497857 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11952267 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105547858 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085779211 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105662616 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096618043 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119486042 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118025692 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084186793 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119954341 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113156696 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084783649 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118397971 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118326792 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082927771 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119605825 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105086194 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107393272 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113986698 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116428612 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.083053329 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113561146 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118720443 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092496453 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1185036 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083734937 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113968885 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105251659 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085308096 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133938916 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113684423 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116650648 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094251478 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119771006 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118194645 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13425096 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097498238 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117178965 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114039482 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098320349 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118019027 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114163799 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116981959 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098263809 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113791638 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116577075 seconds)
  done (took 7.941370947 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119406701 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101975416 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084050208 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118829479 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117208452 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084887896 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10556467 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084188754 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105647553 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081396703 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151870013 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106204304 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1169853 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095691687 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106204977 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105504108 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085602074 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11822226 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081693939 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135112844 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105238721 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09553804 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11655123 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117923631 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117802898 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093838713 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106536981 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085253693 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106160167 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083913613 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113623695 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104870225 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095113363 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103180262 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116654724 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085001276 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10565799 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092769264 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105309603 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114488872 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097119942 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128141646 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105447878 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085363 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118253747 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08524747 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107135934 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080556509 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106529273 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102094805 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099243174 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118844471 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119079315 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117482094 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085677404 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105975358 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086342684 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105439113 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085980889 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114498718 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116886893 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085844058 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134762773 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106297989 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085000762 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117016068 seconds)
  done (took 7.745327824 seconds)
done (took 149.395118037 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.099148686 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136611912 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.094778024 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.164736019 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.080796569 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.135359465 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.114011085 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.115583276 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.081114023 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.079411116 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.101780187 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.083315712 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.16649407 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.081162522 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.100841615 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.084493288 seconds)
  done (took 2.592415058 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.176797448 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.282329023 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10109179 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106905249 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.087583102 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.104527773 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.085354366 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.107476699 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.082799073 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.112590647 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.083337661 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.104316782 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.092580475 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.103335083 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.082615623 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.102959979 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.09201853 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.10309653 seconds)
  done (took 2.893748332 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112520123 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145138471 seconds)
  done (took 1.133827913 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.117054944 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180866272 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.293043803 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.374275324 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.130987325 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.123671871 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15549785 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.100646267 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.199106879 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.124612436 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.125027463 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.085895521 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.134120466 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.112923198 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.092153397 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.107990273 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.113652986 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.109745448 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.08751344 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.109917719 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.131419413 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.088350286 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.112125044 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.088744237 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181453796 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.123718673 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.086174291 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.108836909 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.107743049 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.088658965 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113032186 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.100994699 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.12258527 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.163865143 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.113332233 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.159764684 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.116473878 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.085529418 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.108548778 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.086011199 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.112231455 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.111875849 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.101490525 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.106562267 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.087231083 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.115218627 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.087984021 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.10770629 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.093941076 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.116009799 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.115299125 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.093041343 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.158610215 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.116162263 seconds)
  done (took 7.565134983 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.785858743 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.148320214 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.085866983 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.89076327 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111957854 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122140004 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.79384332 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.106908486 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.229796286 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.80794626 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.100291227 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121879693 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.226563459 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.249563858 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.137446162 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.310852054 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.668714707 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.122485427 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.136975771 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.123209463 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11606838 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134106199 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.102950872 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.423812662 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.109577448 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.084966463 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.113788697 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.117210956 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.156935744 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.085588819 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.111013481 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.175969247 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.261347839 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.178999739 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110122263 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.083316162 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10707419 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.165530537 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263751646 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.193032097 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.174010575 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103748361 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.084180222 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.11865015 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.104380221 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.104023647 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.160297346 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.171373099 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.168373914 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.111059535 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095335292 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.117113218 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.117316875 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.160018419 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.083178435 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.3399371 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.336808727 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085385525 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115710957 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.102293528 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261022939 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084876454 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.222614287 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.133256227 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.188400505 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.106935271 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.751850946 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.186224174 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089482862 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.114524986 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.092418607 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.112321953 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.095288148 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.163071795 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.402416078 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121067025 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.089747572 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106361655 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.204675116 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.106559035 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.085369283 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160026021 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.109364239 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.093853764 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121174638 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097366457 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.189104704 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.247434575 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.097580217 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117137601 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.090247921 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.120321354 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.108148014 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.208696337 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.193681927 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.17761182 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.210618426 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.096861805 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.182632615 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.164206556 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095404627 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.190378605 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.09206744 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123566434 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096389328 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.214616716 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.138152169 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085306566 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.112224337 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.092625116 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.142063256 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.110687775 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.092944462 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.165733244 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.476578629 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.164937027 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.081703412 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.111999335 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093949269 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.158172283 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115538281 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.256938374 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095180825 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.16398242 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115818501 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.08174014 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.116786682 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.162169083 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121200039 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.094133507 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119606526 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.115523823 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.247197431 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.195405764 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121256094 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.217024558 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.178199338 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.116053853 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.170735663 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.115578271 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166616886 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.094834624 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118616526 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.087092961 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.769850151 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.120213898 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.093480439 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113488736 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.184648772 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.084636557 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085984129 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.108115567 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.082157018 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.775307915 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.087921429 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.106152044 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.087370995 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116477437 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.093500259 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.114053376 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.09027609 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.179841185 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.207259965 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119890493 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.091801463 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.108787428 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.15830078 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.109919645 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.086297369 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.085248098 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.108457957 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.093561186 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.113621816 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087548494 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168237333 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.178870757 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.195859587 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.603963092 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.085764878 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.108056662 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.204987561 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107616708 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.304840758 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094587225 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.222601437 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162198282 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.082582099 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.335950504 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.164535778 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.184118345 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.111163954 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.169070473 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.082678801 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.113870402 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.159373173 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.084071247 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114719592 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.156777348 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123678874 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.097954218 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.146259134 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.107486841 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.224780907 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.082471135 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.167312701 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.110521382 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095653414 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.308722095 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.084156596 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126639236 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.158403928 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112227015 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.086342198 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.861751338 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.085661719 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117923519 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094672561 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.220347749 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162399355 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116420267 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092873959 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11902773 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.159436893 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.207170807 seconds)
  done (took 42.986187524 seconds)
done (took 58.045262791 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.300064998 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.252280971 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.246210863 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.184900082 seconds)
  done (took 1.96497156 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.174021994 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.123646421 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.141212576 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.103979044 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.125588516 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.104595924 seconds)
  done (took 1.681178876 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.410034302 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.331390956 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.277761272 seconds)
  done (took 1.926185868 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.244689354 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.23837062 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.342208768 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.393737684 seconds)
  done (took 2.23402119 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.200438847 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.096734757 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.118723667 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.110607435 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.163929298 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.202022213 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.138372215 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.147584742 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.10308099 seconds)
  done (took 2.240330101 seconds)
done (took 10.957328685 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.169181199 seconds)
    (2/286) benchmarking ("sort", BigInt, false)...
    done (took 0.223607716 seconds)
    (3/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.249757956 seconds)
    (4/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.207416025 seconds)
    (5/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.266237507 seconds)
    (6/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.167950001 seconds)
    (7/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.12289996 seconds)
    (8/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.217887383 seconds)
    (9/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.150515722 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.111618389 seconds)
    (11/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.219515046 seconds)
    (12/286) benchmarking ("sort", BigInt, true)...
    done (took 0.238054043 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.098552151 seconds)
    (14/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.188619864 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.113512872 seconds)
    (16/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.088324236 seconds)
    (17/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.179173601 seconds)
    (18/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.268636667 seconds)
    (19/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.144695195 seconds)
    (20/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.190433062 seconds)
    (21/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.222598122 seconds)
    (22/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.096446229 seconds)
    (23/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.123434032 seconds)
    (24/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.134036347 seconds)
    (25/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.221513205 seconds)
    (26/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.168710092 seconds)
    (27/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.194701403 seconds)
    (28/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.193406907 seconds)
    (29/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.075241015 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 0.227319364 seconds)
    (31/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.205750181 seconds)
    (32/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.099320938 seconds)
    (33/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.148729533 seconds)
    (34/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.260035576 seconds)
    (35/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.103969118 seconds)
    (36/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.217980145 seconds)
    (37/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.119280466 seconds)
    (38/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.177423991 seconds)
    (39/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.245821621 seconds)
    (40/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.184099743 seconds)
    (41/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.179687669 seconds)
    (42/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.192909942 seconds)
    (43/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.138369648 seconds)
    (44/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.201640608 seconds)
    (45/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.092315248 seconds)
    (46/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.135359303 seconds)
    (47/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.110958289 seconds)
    (48/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.179195689 seconds)
    (49/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.134031801 seconds)
    (50/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.156934321 seconds)
    (51/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.179304268 seconds)
    (52/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.169049278 seconds)
    (53/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.109280127 seconds)
    (54/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.097924503 seconds)
    (55/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.113912752 seconds)
    (56/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.123102816 seconds)
    (57/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.155858527 seconds)
    (58/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.087379884 seconds)
    (59/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.132384022 seconds)
    (60/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.072157502 seconds)
    (61/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.11827904 seconds)
    (62/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.087540408 seconds)
    (63/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.118384535 seconds)
    (64/286) benchmarking ("sort", Float64, true)...
    done (took 0.23565752 seconds)
    (65/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.169584244 seconds)
    (66/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.193398444 seconds)
    (67/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.098319497 seconds)
    (68/286) benchmarking ("sort", Int64, false)...
    done (took 0.083639924 seconds)
    (69/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.126675425 seconds)
    (70/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.093584989 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.113414618 seconds)
    (72/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.096652726 seconds)
    (73/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.120448944 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.11663491 seconds)
    (75/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.123768007 seconds)
    (76/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.111037272 seconds)
    (77/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.132100108 seconds)
    (78/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.193783904 seconds)
    (79/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.071845489 seconds)
    (80/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.169586504 seconds)
    (81/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.118130928 seconds)
    (82/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.088362064 seconds)
    (83/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.070502391 seconds)
    (84/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.111670493 seconds)
    (85/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.183503411 seconds)
    (86/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.121435693 seconds)
    (87/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.095192741 seconds)
    (88/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.089605501 seconds)
    (89/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.181308629 seconds)
    (90/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.180016797 seconds)
    (91/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.124819055 seconds)
    (92/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.120207822 seconds)
    (93/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.07315697 seconds)
    (94/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.109575887 seconds)
    (95/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.089103612 seconds)
    (96/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.071143311 seconds)
    (97/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.136686148 seconds)
    (98/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.080025269 seconds)
    (99/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.121117875 seconds)
    (100/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.080782276 seconds)
    (101/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.120309966 seconds)
    (102/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.195508325 seconds)
    (103/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.100324174 seconds)
    (104/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.136167592 seconds)
    (105/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.075146281 seconds)
    (106/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.118387015 seconds)
    (107/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.083339468 seconds)
    (108/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.103582083 seconds)
    (109/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.08743278 seconds)
    (110/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.109655434 seconds)
    (111/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.09211436 seconds)
    (112/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.129011343 seconds)
    (113/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.074830403 seconds)
    (114/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.134219357 seconds)
    (115/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.07509722 seconds)
    (116/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.195844219 seconds)
    (117/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.09790559 seconds)
    (118/286) benchmarking ("sort", Bool, false)...
    done (took 0.178953291 seconds)
    (119/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.120266115 seconds)
    (120/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.085907143 seconds)
    (121/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.193242363 seconds)
    (122/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.107682748 seconds)
    (123/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.112410123 seconds)
    (124/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.189628231 seconds)
    (125/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.113342765 seconds)
    (126/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.090134683 seconds)
    (127/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.119476437 seconds)
    (128/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.119756986 seconds)
    (129/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.126198326 seconds)
    (130/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.073569451 seconds)
    (131/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.118914012 seconds)
    (132/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.072870726 seconds)
    (133/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.181588363 seconds)
    (134/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.19083046 seconds)
    (135/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.074432622 seconds)
    (136/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.112623381 seconds)
    (137/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.072371603 seconds)
    (138/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.083103222 seconds)
    (139/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.105113354 seconds)
    (140/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.090951052 seconds)
    (141/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.179963517 seconds)
    (142/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.07345836 seconds)
    (143/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.123888373 seconds)
    (144/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.153378547 seconds)
    (145/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.088053447 seconds)
    (146/286) benchmarking ("sort", Float32, false)...
    done (took 0.169869332 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.098999159 seconds)
    (148/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.123112986 seconds)
    (149/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.132797219 seconds)
    (150/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.114529498 seconds)
    (151/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.072099746 seconds)
    (152/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.095565012 seconds)
    (153/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.0933695 seconds)
    (154/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.118811215 seconds)
    (155/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.092572634 seconds)
    (156/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.072124066 seconds)
    (157/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.112308404 seconds)
    (158/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.070779855 seconds)
    (159/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.110094469 seconds)
    (160/286) benchmarking ("sort", Int8, true)...
    done (took 0.225979413 seconds)
    (161/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.080087317 seconds)
    (162/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.098339918 seconds)
    (163/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.09143073 seconds)
    (164/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.094360973 seconds)
    (165/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.185352496 seconds)
    (166/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.183587888 seconds)
    (167/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.074057273 seconds)
    (168/286) benchmarking ("sort", Float64, false)...
    done (took 0.16858355 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.090184812 seconds)
    (170/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.124073185 seconds)
    (171/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.133822389 seconds)
    (172/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.090550075 seconds)
    (173/286) benchmarking ("sort", Int8, false)...
    done (took 0.18940237 seconds)
    (174/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.114497642 seconds)
    (175/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.098792724 seconds)
    (176/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.108553333 seconds)
    (177/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.110201816 seconds)
    (178/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.09706541 seconds)
    (179/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.090822916 seconds)
    (180/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.070750944 seconds)
    (181/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.114901762 seconds)
    (182/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.072698144 seconds)
    (183/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.120642931 seconds)
    (184/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.09886038 seconds)
    (185/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.12123718 seconds)
    (186/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.176054606 seconds)
    (187/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.072761329 seconds)
    (188/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.077820791 seconds)
    (189/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.096567858 seconds)
    (190/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.089960585 seconds)
    (191/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.108463495 seconds)
    (192/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.071989111 seconds)
    (193/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.114950723 seconds)
    (194/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.087866105 seconds)
    (195/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.131289127 seconds)
    (196/286) benchmarking ("sort", Bool, true)...
    done (took 0.227181871 seconds)
    (197/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.086694363 seconds)
    (198/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.113517336 seconds)
    (199/286) benchmarking ("sort", Float32, true)...
    done (took 0.236083843 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.090459995 seconds)
    (201/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.110657141 seconds)
    (202/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.090570865 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.098472533 seconds)
    (204/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.121645533 seconds)
    (205/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.118092524 seconds)
    (206/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.088831916 seconds)
    (207/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.083660587 seconds)
    (208/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.179641487 seconds)
    (209/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.096225207 seconds)
    (210/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.130932285 seconds)
    (211/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.098695677 seconds)
    (212/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.091581968 seconds)
    (213/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.112101511 seconds)
    (214/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.09127487 seconds)
    (215/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.096359673 seconds)
    (216/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.089884531 seconds)
    (217/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.172679933 seconds)
    (218/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.086393323 seconds)
    (219/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.110863878 seconds)
    (220/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.071206824 seconds)
    (221/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.105127178 seconds)
    (222/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.071451119 seconds)
    (223/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.08852413 seconds)
    (224/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.099320596 seconds)
    (225/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.089339248 seconds)
    (226/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.122458728 seconds)
    (227/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.072700344 seconds)
    (228/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.112460787 seconds)
    (229/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.089438412 seconds)
    (230/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.239853243 seconds)
    (231/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.114462747 seconds)
    (232/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.074977197 seconds)
    (233/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.097402266 seconds)
    (234/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.093322379 seconds)
    (235/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.087926917 seconds)
    (236/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.104078223 seconds)
    (237/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.084088613 seconds)
    (238/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.111476246 seconds)
    (239/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.091649933 seconds)
    (240/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.115244072 seconds)
    (241/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.16031548 seconds)
    (242/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.121702447 seconds)
    (243/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.075606136 seconds)
    (244/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.122508231 seconds)
    (245/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.108313054 seconds)
    (246/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.122136277 seconds)
    (247/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.083520478 seconds)
    (248/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.182117845 seconds)
    (249/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.072987015 seconds)
    (250/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.096475219 seconds)
    (251/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.08943957 seconds)
    (252/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.113319407 seconds)
    (253/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.072798144 seconds)
    (254/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.099097499 seconds)
    (255/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.075527964 seconds)
    (256/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.120975921 seconds)
    (257/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.071321457 seconds)
    (258/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.083478105 seconds)
    (259/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.098459182 seconds)
    (260/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.084139756 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.115937356 seconds)
    (262/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.085771689 seconds)
    (263/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.115036183 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.086350612 seconds)
    (265/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.120094712 seconds)
    (266/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.075431465 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.109218626 seconds)
    (268/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.088330494 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.121473688 seconds)
    (270/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.092958808 seconds)
    (271/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.108191161 seconds)
    (272/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.090441812 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.109080974 seconds)
    (274/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.090666293 seconds)
    (275/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.072604154 seconds)
    (276/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.116697773 seconds)
    (277/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.073741794 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.114270961 seconds)
    (279/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.138177724 seconds)
    (280/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.095722837 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.085629333 seconds)
    (282/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.111260029 seconds)
    (283/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.106683081 seconds)
    (284/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.097014483 seconds)
    (285/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.091048523 seconds)
    (286/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.107834542 seconds)
  done (took 36.373117759 seconds)
done (took 37.295606125 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.09896383 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.150114545 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.0938865 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.137366177 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.09749195 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.123215366 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.092262661 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.120010298 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.097017418 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.122151485 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.095358516 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.101685512 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.094622021 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.11846501 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.094480972 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138964714 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.097038608 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.114363542 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.085838824 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.109404213 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.08631749 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.111265952 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.087583526 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.101460587 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.094867507 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.116517517 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.090879341 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.11879683 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.08741305 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109274198 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.085939656 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.090419885 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.109324472 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.096822363 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.113061191 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.087123204 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.119418753 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.092908009 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.112244293 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088081809 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.115839925 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087600149 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.113683251 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.091672031 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.110448792 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.085489264 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.086729001 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.121942269 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140620399 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.088201586 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.091445383 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.11841356 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.093725464 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.115708259 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.085734651 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.11093462 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.087187705 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.13922516 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.085899465 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112299014 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.091489291 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.114498935 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.086127495 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.110790576 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.087109349 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.117871565 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.094974064 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.11008673 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.093669544 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.089741388 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.107135613 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.086607756 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.109450836 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.084333168 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.117034031 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.094512686 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.105647942 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.087464491 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.090113507 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.112589971 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.085861722 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.108808379 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.088883021 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.111524018 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.085328712 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.103221274 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.084938402 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.112749875 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.086728295 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.110694302 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.090714375 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.089718853 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112700182 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.094885313 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.11077224 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.088576023 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111099625 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.088095405 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112586797 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.085445577 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.106500895 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085946163 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.090782575 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.108779907 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.087394425 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.120497778 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.085748738 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.113600104 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086545563 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110253711 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.09980817 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.117231624 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.088171457 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112108082 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.08346164 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.113771268 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085229364 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.084551038 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.109195658 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.087275053 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.111972618 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.086948717 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.110013267 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.089963934 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.121519557 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.101723866 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.109720814 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085511318 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111204481 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.089910804 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.08712821 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.108603072 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.08593362 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.107069673 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.085795905 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.10806059 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.090340692 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109561711 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.086504352 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.08649906 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.111045785 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.088662451 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.112024898 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.088000026 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.108414172 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.080336242 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111923281 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085624875 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.112166291 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087816181 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.087329988 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.108060839 seconds)
done (took 16.323152487 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.095544653 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.185873646 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.144625091 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.147789666 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.119662315 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.129615958 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123255504 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.117731464 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.120706339 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.141526929 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.114010922 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.13383704 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.150141443 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.095255519 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.1296788 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.118101232 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.092455223 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.128464968 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.12722918 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.13870649 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.143646196 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.094835105 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.140134662 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.138217994 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.093144697 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.138770683 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.120810447 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.093978152 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.121670997 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.11130334 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.134992637 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.122881881 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.096310555 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.130862921 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.102279396 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118030193 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.104847387 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.115469589 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.09384909 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.11884311 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.133755096 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.105348835 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.117006316 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.100566278 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.11879913 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.121988776 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.093304477 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.118063324 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.095055575 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.113357459 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.099181282 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.139496188 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.09172984 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.12204548 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.119662571 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.093895245 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120442748 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.098105421 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.120874166 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.097102888 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.119758396 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.121338103 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.100027994 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.136571813 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.093590542 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120675799 seconds)
  done (took 8.769938525 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.111473352 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.147769095 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.126247572 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.101002685 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.123923025 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.083510615 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.082992344 seconds)
  done (took 1.757201003 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088914275 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.138849853 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.117596663 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.141786791 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.108382707 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.144831722 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126364098 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.084881612 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.134058592 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.094555405 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.137365396 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163656592 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.085236913 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.12143498 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.118402216 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.109911102 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119563722 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.11009616 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092935396 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.141726916 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09197384 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.131124773 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.122971836 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.086413983 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.130694179 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.087620141 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.175627503 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096168896 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.109281047 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.089649339 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115620061 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.179428953 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105933338 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.120146793 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086217836 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.137375177 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.129504058 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088999666 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.13358486 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.090062291 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.130612963 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.09106447 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116276469 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.090572226 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.116803623 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.099753898 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.121484325 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.092630691 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.11515511 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.113211933 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.120822854 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.106006545 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.112316777 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.089179096 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.12023714 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.090889722 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124177271 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089418068 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.137486497 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091829479 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.136029503 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.135766277 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.105303114 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.136063504 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101980018 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.131651271 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.130174603 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.089753839 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091781923 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117558388 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.136268835 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088363637 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.120817198 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.09956829 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118061773 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112454 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.136949809 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.088919556 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124001405 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.08911822 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.112179929 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.085249824 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.137300654 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.088258306 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111937855 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102337584 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.122573947 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.089913668 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.11453761 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.106330513 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.114754376 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.095981531 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.120659591 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.088424697 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125622944 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.137326305 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.095281185 seconds)
  done (took 11.989347678 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.092348965 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.08794963 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.117171939 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.087257566 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.112533189 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.08784646 seconds)
  done (took 1.583226641 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.120864421 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.114250772 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.101552592 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.118386022 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.128970791 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.135280925 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.135369482 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096203481 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.131346104 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.099439657 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.136085792 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.110386528 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.140688828 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.117628313 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.109721367 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.118481832 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.110346957 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.115143084 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.099514961 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114829576 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.104336062 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.118965104 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.089754884 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.133204101 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.094131133 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.11954769 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.093326944 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.127190784 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.09954462 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.12164283 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.092070624 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119821215 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.093421533 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.121772303 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.135393184 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.094661662 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115211597 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.096035805 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.1188339 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.094766076 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.137836259 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.089396628 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.124786057 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095587355 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.122353613 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.093675989 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121533654 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.092781816 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.135910818 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.096053472 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121719627 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.093240189 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119199698 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.096235386 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.119713955 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096229558 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.121550259 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.109695926 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.118421459 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.11907537 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.091060749 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.09363931 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.121058441 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119010205 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.094118595 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120859833 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.094391013 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.115151259 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.090589444 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.092305814 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.12095656 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.089935113 seconds)
  done (took 9.006126022 seconds)
done (took 34.084220823 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.67851685 seconds)
  done (took 1.668149264 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.820570081 seconds)
  done (took 1.814193602 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.68460216 seconds)
  done (took 18.703616533 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.468073375 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.554912042 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.964222895 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.160346942 seconds)
  done (took 3.141567129 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.960628279 seconds)
  done (took 1.974287422 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.293612185 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.232031275 seconds)
  done (took 1.524669112 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.8123488 seconds)
  done (took 1.821668187 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.510828926 seconds)
  done (took 2.513833073 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.337003885 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.170148755 seconds)
  done (took 1.523902476 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.564484096 seconds)
  done (took 1.578125568 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.169197251 seconds)
  done (took 16.184350396 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.241044977 seconds)
  done (took 1.264006378 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.294890246 seconds)
  done (took 1.305958486 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.63188828 seconds)
  done (took 4.642470299 seconds)
done (took 60.666161211 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.09978201 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.098722165 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.126561608 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.095616031 seconds)
  done (took 1.428539003 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.105920876 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.1187526 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.097510992 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.118833124 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.101593474 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.119705995 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.093155881 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.164063067 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.093130908 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.121337393 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.093187826 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118916527 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.094230052 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.119169831 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.090830743 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.121390427 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.096554251 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120415669 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.094437618 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120216267 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.090294217 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.120872622 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.095215066 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.118405975 seconds)
  done (took 3.649033816 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100217201 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.090493127 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.118663689 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.089589632 seconds)
  done (took 1.415994818 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.102245167 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131817023 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.107846296 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126079984 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.106396613 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.131688728 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.089503951 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114733047 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.090813255 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125742437 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090718777 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.135989677 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.104801399 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.110974953 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.100551043 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114091796 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.085451407 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.13276796 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.09892618 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127822386 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.088405128 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125393359 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.096081963 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.130974596 seconds)
  done (took 3.688539244 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.17184793 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127543967 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.136910143 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095482537 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.163604918 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.113421904 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.114400476 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.139352192 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088500058 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.125935352 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.092215522 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.165455371 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.097165661 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.118849435 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.089039611 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.12156432 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.096829272 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.124048695 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090436879 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.129119806 seconds)
  done (took 3.416998372 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098596516 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.089024705 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.111487763 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.086628599 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.12171034 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.09138588 seconds)
  done (took 1.620195482 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.089175118 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.083929578 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.111349819 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.08426137 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.115205538 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.085393937 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.08290905 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.111489829 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.085029546 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.08530444 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.111008796 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.08287994 seconds)
  done (took 2.152737731 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.373848605 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.11410517 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.090354668 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.113443865 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.093861062 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.113842211 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.101283484 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.11612716 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.117405613 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.115863195 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.087306242 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.117959666 seconds)
  done (took 2.582627418 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206701696 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093658657 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259769321 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.347211316 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152418127 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16246376 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.275997676 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160418472 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.180587625 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134193477 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18966638 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126301813 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150241423 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173523421 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136295418 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.173304434 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170739579 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195841053 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118494341 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226528659 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160053578 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136449545 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176889062 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148331027 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134961145 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155123641 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.090036839 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126224437 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171057635 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167209126 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171150971 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147059107 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108805277 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223105911 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203390537 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176134986 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.300453504 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129012171 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.185898417 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.178214687 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225019442 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138734882 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193201099 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152116603 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099508274 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17762542 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153417033 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.177466257 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.129629153 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110601196 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208272193 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173669095 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.177862523 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105662502 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.325942186 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118841074 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.143622301 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178896458 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184077215 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186784322 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164622119 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.118010526 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181718636 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176440026 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176424685 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.114551723 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.163575559 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122206022 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171806867 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1921208 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174008015 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162067812 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.209020284 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104340389 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161919654 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166079347 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151075083 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174599376 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128765328 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.119446585 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147644477 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107494898 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12617259 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.156895618 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120859793 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199152153 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133851045 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.189716255 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200401594 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155371743 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157253742 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132370239 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162188186 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144965809 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.116491384 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11530338 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.15995389 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155135234 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10191375 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153647262 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140259104 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.125682416 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121703622 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.122061309 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155650596 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.103837808 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164328104 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161988936 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126320051 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133523879 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147570845 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.155480744 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167174409 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182202384 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101958607 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12843448 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190266791 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154796391 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103616763 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170256963 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181835862 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.161661345 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135429367 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164606785 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189653129 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14065806 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185251971 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109517824 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130738047 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.148108496 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155961376 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154099721 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.125620448 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127999241 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.149652764 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189601161 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.096443816 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135094971 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171072439 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097109228 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126858816 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138916302 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104682651 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.139775698 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.143921213 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.106079878 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155582849 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157425444 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150918898 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128301249 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139923483 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185607822 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130912046 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.157614009 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116730365 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.117270421 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.17614533 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181547104 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126500873 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194731903 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.165775071 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192611873 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15959626 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128647669 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146815942 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125734021 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.089107028 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161204606 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158526471 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159370853 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.180483856 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189664163 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.163807185 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.149334218 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147115982 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16394119 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.171310553 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153440601 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.114252394 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159132129 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156172969 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.120373903 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.093711747 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.125527693 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11122577 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128709639 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101201046 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205524013 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131960007 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212217217 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156687016 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110450501 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178053808 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.124463071 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162367827 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.169476587 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108068626 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.179499959 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177120172 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164816499 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141299882 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169839315 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.089322777 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121734957 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.102320408 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161684657 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130535771 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102906343 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140131054 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178006865 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170383687 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149011723 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200410605 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16133374 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186664656 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.12056784 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.134202268 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165927085 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154433353 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.180587349 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105534646 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.153449665 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174314484 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139017933 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185800169 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158667147 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166484794 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195613515 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.15445667 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098826877 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147470699 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163905658 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1386098 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162248124 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11428301 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133753675 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150741276 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.102961627 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125168056 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176710225 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141437803 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17812508 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.154333383 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171021955 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095816679 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141228636 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157543237 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114177586 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.115143076 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166806358 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185242752 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14242495 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156014488 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172417767 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098879374 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.307235945 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183360619 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180281759 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13479139 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140551447 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129654503 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156303804 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160809438 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17575226 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142288535 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176715169 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155217788 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.111699011 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133924784 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11534498 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147622957 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.149321891 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.129493937 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.121309337 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139810327 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180404993 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141467018 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156452396 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16100002 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.11700619 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.148035121 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11132508 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225038479 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126369393 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174485409 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.15237339 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.164367934 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194861827 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123211702 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097746702 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.124660524 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176032759 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101710385 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157588736 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.182003717 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216885173 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12758221 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162200771 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13611026 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.089013812 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15753363 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147256314 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195167374 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138426068 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.13341067 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187122036 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.118281673 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127957848 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160370095 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.280956481 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113068891 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168626099 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.115586035 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.27853484 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094215137 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127489478 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156896576 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166981247 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.107392475 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.179789985 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162310523 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112993976 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15699984 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134671803 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18550691 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200407637 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165510252 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171082518 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.14129233 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154858682 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161074918 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17322259 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112699155 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.141990073 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160267402 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178352719 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.184354116 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.100751484 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159430199 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159741867 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156737979 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171262766 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131114821 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195598751 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099749418 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159778169 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137709044 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120676742 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125861958 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.207773129 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102727799 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172521366 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15579306 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128594557 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096006206 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148525048 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158283397 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110132024 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.126778054 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176336468 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.093884129 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160426873 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17744418 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127822507 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121491778 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144045522 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135827886 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11058204 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143529428 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133786195 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.141680774 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174869978 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.129414064 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17379017 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172540867 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161385228 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158254405 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112923994 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.663669691 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.126658445 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148358924 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143523306 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181708481 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145928086 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1643784 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157347197 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119441515 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162343922 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147218645 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.220370268 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161306251 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.157417705 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099424582 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143622248 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139892209 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.100255135 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149032495 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159822903 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109508258 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.13469437 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.153775448 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112526157 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.141105353 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13655195 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180029248 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11594548 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178593576 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176729225 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13603313 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164579501 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173426319 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12807755 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.127892046 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168974473 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138545295 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148417906 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.09979343 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.131735376 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177495292 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.092320535 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158105029 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158110854 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157288045 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160652228 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.102463431 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157662338 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140484837 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157479859 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098804156 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.151622251 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154156338 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099059841 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.126565865 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152281794 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155932495 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.126120174 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124300164 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.142704372 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175210066 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123567145 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101447627 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283042469 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151894499 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187834035 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.150055987 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132208915 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111115313 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144908753 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.151207594 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157041808 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.097982015 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129575138 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.100337745 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.1787836 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.151120623 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151583049 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181216117 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128055376 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224838971 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.104368463 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.265403998 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106563395 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153540149 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.128110102 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.098375536 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140506626 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131581639 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111654201 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.214127282 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147159114 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.148067115 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.141799083 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095448399 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125630858 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100804303 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159403897 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152373986 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156054051 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110639236 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.114994318 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141478614 seconds)
  done (took 74.154657755 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.146266474 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.129313239 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.145704684 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.192897061 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.16291801 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.239115971 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.202242235 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.223245179 seconds)
  done (took 2.550155133 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.101256594 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.165980731 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.144220083 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.121864438 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.0891352 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.328942386 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.140846321 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.127666423 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.143996317 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.129866357 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.089477177 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.521907542 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.126450301 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.12690781 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.083361492 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.11278263 seconds)
  done (took 3.6546138 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.339650499 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.562224319 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.172491062 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.264191554 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.250413447 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.169393138 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.770118347 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.200214966 seconds)
  done (took 12.835698315 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.121557255 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.109038162 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.160207953 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.160501727 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.116651248 seconds)
  done (took 1.783991423 seconds)
done (took 115.939936341 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.095116053 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.0944789 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.121581021 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.095722782 seconds)
  done (took 1.507588442 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.107937068 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.077720555 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.108572033 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.077695183 seconds)
  done (took 1.490051664 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.413591329 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.076272589 seconds)
  done (took 1.64079515 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.116496117 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131659714 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103036262 seconds)
  done (took 1.473279403 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.103179919 seconds)
  done (took 1.223277595 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.09842894 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.09705387 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.138680831 seconds)
  done (took 1.454840184 seconds)
done (took 9.908797772 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113513854 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.440110357 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.382539176 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13467731 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.690951661 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.40525942 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.002496786 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.152686167 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164979674 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.087832596 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133853393 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.667716952 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.018063397 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.3378139 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.004622292 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.334730285 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.699776871 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.089112118 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123028372 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.088622509 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.011579219 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.087197587 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.117006053 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.089700409 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.667996402 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.419689189 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.087391459 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.378594637 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.087124784 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.122201167 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.374238383 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117378095 seconds)
  done (took 16.736627705 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095533167 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175529886 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.095365146 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.119091337 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.092054157 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.117861964 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.098398134 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.129302305 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178464245 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.087694173 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135585074 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.087504267 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.092046514 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.117704582 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.107260416 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.116656035 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.090122325 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.118777976 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095099398 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.119273552 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.107226956 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.115774846 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.090677817 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09004716 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.116994513 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.099769956 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.116657288 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.100666867 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.117591004 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.093381752 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11970556 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.08864414 seconds)
  done (took 4.645823935 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.138951888 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.185198271 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.095606173 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.151051217 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.16623924 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.089519293 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199998307 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.155388562 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181891338 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.087941001 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135895533 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.08737958 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.152924526 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.087774548 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137851117 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.088467136 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.119841794 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09042022 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123604021 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.089642739 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137415678 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.087124971 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.118128956 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.090950592 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.087833285 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.130549072 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088295994 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.130182842 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.087733642 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124224847 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.091498502 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117717443 seconds)
  done (took 4.983971159 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097743586 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.097103752 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.13275288 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.133480018 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.090662487 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.094974986 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.125709791 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.090249477 seconds)
  done (took 1.984579787 seconds)
done (took 29.466383903 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.107764278 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.093755603 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.133149837 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.099718856 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.127145269 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.101244531 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.11646879 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.099366037 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.128181281 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.096836183 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.104197698 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.117153238 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.08927971 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.11506356 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.100960721 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.092778017 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132155845 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.097170257 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.138637153 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.103555406 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.118525549 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.099792121 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.127360524 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.108454858 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.137642606 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.108502987 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.133343454 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.094668118 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.117875971 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.089103391 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.132051172 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.110358622 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.120484137 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104927365 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.121554612 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.092072424 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.08880263 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.119707535 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.102996032 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.12854127 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.09353057 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.128698106 seconds)
  done (took 5.7886994 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.11641887 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.161609888 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.088767671 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.118200959 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.088853659 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.156197021 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.122624931 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.117484162 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.089799437 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.142879017 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.114000175 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.118268074 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.089075388 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.118777792 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.088523115 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.089292511 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.141062949 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.142061038 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.120585358 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.149114435 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.163065155 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.120604211 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.153363424 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.11156874 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.160316049 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.153874058 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.109564638 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.155209862 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.115223162 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.117924848 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.118134834 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.149959354 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.08785234 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.1183265 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.158034115 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.124278954 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.145078491 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.158018465 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.118927407 seconds)
  done (took 6.046617072 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.099760016 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.103195542 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.139401339 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.181455492 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.124267823 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.127036943 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.098497616 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.135987798 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.104431904 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.118051219 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.090034239 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.148784094 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.105589032 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.126951153 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.089448934 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.10214969 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137705169 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.090554973 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.121986229 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107259672 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.136440157 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.100958773 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.131089523 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.098550004 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.118531339 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097140634 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.121900617 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.10320545 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.12290887 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.096470945 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.122384428 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.093785926 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.091895332 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.129460586 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.092132094 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.125915886 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.111139026 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126739437 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.097602841 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.120615984 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.100176309 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122472704 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.110475074 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.157951842 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.088351242 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.125770917 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.094993288 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.126861637 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.08852113 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.135168353 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.099028884 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.088716782 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.133645881 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.118408615 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.087705245 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.102466612 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.119746867 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.092039646 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.126592329 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.095721188 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.137746839 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.094014692 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132317358 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.089690417 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.094129966 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.118824184 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.088233394 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.123789347 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.110654142 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122562346 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.127521555 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.118478471 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.095959646 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.126244696 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.095041683 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128075626 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.088135166 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13129224 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09983218 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.093040077 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.128938568 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.091764978 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.122660868 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.10603356 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.134108057 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095752146 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.125025387 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.094830041 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.122299955 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.089591463 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133236114 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091327848 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.122746876 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.104227471 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.08929932 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.121821755 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.095072193 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.122853901 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.087617155 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131142766 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.093775806 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.118215406 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.098646182 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.120505412 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.093840596 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.097796057 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.12237927 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.08898064 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.123771522 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.095705923 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.118265044 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.092301747 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.122659047 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.091194905 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.101725074 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.125981365 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.091438402 seconds)
  done (took 14.174289049 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.234921208 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.214543432 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.188157729 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.29646513 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.109664339 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.146557233 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.211033529 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.163315482 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.088883857 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.157982837 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.176985024 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.1862489 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.174352094 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.187424106 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.171847203 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.08931451 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.107996857 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.170246023 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.214619741 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.292909362 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.107644594 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.133614997 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.160641138 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.159882493 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.107674742 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.136255852 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.147645389 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.111365572 seconds)
  done (took 5.799986915 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108693421 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155817234 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.096438688 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145308434 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.146209461 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.090871719 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.093732175 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.121358329 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.102273413 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134187477 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.09026072 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.127276416 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.094966201 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.130308635 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.089850712 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.129087406 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.100022884 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.129205812 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.091004842 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.123063912 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.103053532 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.138461724 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.093297213 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.12202643 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.106266222 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.123196588 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.090546652 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141179346 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.128411981 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.11411774 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.117148048 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.097843343 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.103128497 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.118876583 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.092373069 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.122560347 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.09128482 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.121088745 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.090702007 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.087109664 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.118548657 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.0799684 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121887064 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.103577619 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.12637871 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.087881062 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.124722287 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.093699147 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.125965579 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.085458055 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.091633483 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.123435158 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.094201989 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.13165746 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.092597753 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.12849254 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.093244267 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.090731077 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.12816174 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.09248693 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.117547409 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.091452707 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.126992658 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.093449315 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.128638682 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.095276844 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.121050297 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.092013674 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.09473946 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.127084188 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.092012368 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.129419799 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.086280475 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.121855287 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.100101163 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.128599572 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.093398441 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.091560173 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.123452915 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.088869341 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.108969606 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.088642934 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.077384975 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.123601326 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.088273854 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.121176323 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.092338026 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.125600545 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.10654843 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.13023164 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.096756467 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.120335716 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.091907994 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.124645936 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.087618992 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.09466414 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.136748043 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.139851144 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.088110689 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.087371391 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.135585346 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.091203684 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.119589396 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.081705595 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.130186356 seconds)
  done (took 12.63220743 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.132969862 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.170074572 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.121090714 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.10963087 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.156195774 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.130851296 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.128709024 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.096823973 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.12077903 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.108019223 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.1239748 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.098547787 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.092403258 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.134317956 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.161776766 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.099516779 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.121118106 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.103844738 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126396255 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.142858191 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.140222332 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.159288112 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.12915029 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124588959 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.096281437 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.157667915 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.165137046 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.103416738 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.132762597 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.13111658 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.134189438 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.164633941 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.133040313 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.12670697 seconds)
  done (took 5.537838883 seconds)
done (took 51.109969669 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.234154663 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.460367184 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.214654687 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.218840515 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.267416533 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.260394336 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.216749986 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.235967497 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.003949094 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.217252079 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.218460768 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.218026104 seconds)
done (took 27.914385533 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.30224571 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.384321988 seconds)
    (2/2) benchmarking "String"...
    done (took 1.551775476 seconds)
  done (took 4.08518644 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.222872013 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.222767756 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.466072991 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.219416275 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.234176333 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.232232753 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.220917112 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.225089413 seconds)
  done (took 15.965786549 seconds)
done (took 25.72538535 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.295314736 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.425672796 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.49860548 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.235306351 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.234181385 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.229755111 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.218642718 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.276496097 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.222935196 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.219872698 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.224520535 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.486810318 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.249176809 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.606410602 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.222719069 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.239035154 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.233414658 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.458674226 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.238182286 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.211692923 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.221236019 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.225569152 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.234702905 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.248926771 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.233228686 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.218937775 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.25479432 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.22965247 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.418191925 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.225708013 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.269731599 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.223531098 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.265783257 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.235905373 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.329877891 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.24720784 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.411617935 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.232116875 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.210387044 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.223343235 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.419040229 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.636818699 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.223478338 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.220049929 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.229833696 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.301066882 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.207461658 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.96179263 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.225036169 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.234022957 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.231276849 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.610883142 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.227449039 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.223723902 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.234549684 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.482804328 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.226247777 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.273871067 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.264681785 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.22706953 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.230450151 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.227565284 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.287816875 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.236827826 seconds)
  done (took 144.981606756 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.226466975 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.227650931 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.223528663 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.225167542 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.228153743 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.227282521 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.22810735 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.225131461 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.227873205 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.236819503 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.228607605 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.22246561 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.228334823 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.193584398 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.227091754 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.25051185 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.227693695 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.245435943 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.225223033 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.227313354 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.23630803 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.228741516 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.223175124 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.223465881 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.230616743 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.309935836 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.270294176 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.237252694 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.228489892 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.229061327 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.225559583 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.233436732 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.862243725 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.081118551 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.243495445 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.252567261 seconds)
  done (took 81.02108142 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.22751666 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.228653164 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.227964911 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.260733401 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.225448638 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.826217427 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.829182219 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.951209207 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.804642605 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.656629072 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.5518487 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.229252512 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.325267755 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.241634218 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.231095149 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.246709608 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.255828566 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.229466195 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.231045726 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.827529761 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.242276356 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.236227876 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.408777261 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.242350391 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.264292723 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.631337279 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.225993876 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.263557993 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.569259823 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.276758155 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.227091015 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.638937667 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.072633113 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.346163968 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.228990461 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.263708007 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.23215997 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.519333763 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.228568974 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.230893025 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.2340989 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.934258286 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.2320229 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.832977495 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.229567194 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.236149405 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.232886608 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.231259721 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.330107359 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.977578546 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.231585287 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.230794809 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.234389381 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.230533423 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.227947584 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.264192757 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.257651418 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.327694935 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.233785501 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.229922446 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.236547458 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.261927108 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.232381209 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.289810498 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.232061225 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.233257045 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.289141955 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.337283059 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.90270412 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.834999484 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.233316102 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.331605382 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.349095798 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.228744723 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.232505643 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.232883342 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.232674024 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.346120158 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.227875372 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.664713807 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.408336299 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.245159448 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.675629561 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.332010134 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.230356995 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.644988455 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.234467822 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.232923222 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.04872522 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.23295075 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.331159202 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.2279014 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.231829358 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.231173403 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.666818316 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.832217785 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.497775238 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.234935705 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.507175732 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.23604837 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.681807804 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.805415111 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.960916426 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.235215346 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.349581277 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.408828979 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.247579835 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.233481574 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.678082482 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.234697312 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.291873245 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.2341053 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.234308573 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.634268831 seconds)
  done (took 370.499572121 seconds)
done (took 597.64920892 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.914455007 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.906766114 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.012636869 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.895828337 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.857751477 seconds)
  done (took 10.747424604 seconds)
done (took 11.907565522 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.432806229 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.928795736 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.29667108 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.431144366 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.268339246 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.454250194 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.414387747 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.255070481 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.342424173 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.316643935 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.342574647 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.286328489 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.272144166 seconds)
  done (took 19.201387604 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.580384162 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.231400927 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.296038969 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.563355648 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.273012702 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.574055994 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.463073473 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.250059422 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.453299351 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.25076376 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.248004885 seconds)
  done (took 18.347403412 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.574579845 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.233824385 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.300430951 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.608220078 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.273608128 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.58238217 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.441420109 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.256724133 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.438116954 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.24719105 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.250864083 seconds)
  done (took 18.370359756 seconds)
done (took 57.08021334 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.278612952 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.406859304 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.261800503 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.248010866 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.244919659 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.247775687 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.247738667 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.246805368 seconds)
  done (took 11.344570078 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.245497222 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.243032659 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.244150932 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.246918397 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.246776969 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.242891335 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.242803347 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.242862198 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.245966833 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.24303833 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.244870615 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.244763414 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.2467743 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.244880042 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.248437639 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.24454461 seconds)
  done (took 21.08350129 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.247108969 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.245285634 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.245381415 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.243117558 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.245475304 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.244910503 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.245695845 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.245507513 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.24508758 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.245629354 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.246520789 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.24585211 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.244863153 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.245120419 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.245558605 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.245572811 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.246434366 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.245661934 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.250604745 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.245041739 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.245368063 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.246523811 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.2466808 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.24697963 seconds)
  done (took 31.066631296 seconds)
done (took 64.654943424 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.241831701 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.254329366 seconds)
  done (took 5.661544545 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.306194105 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.309733751 seconds)
  done (took 3.783261561 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.246087321 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.249219803 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.249933036 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.25032887 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.248478478 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.249867928 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.250655386 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.248767418 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.250249856 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.246376398 seconds)
  done (took 13.654278936 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.247737768 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.247303989 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.2481277 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.250038408 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.250938244 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.246046942 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.249703954 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.2489186 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.250667838 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.246948695 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.251890265 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.247173087 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.250077062 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.2479416 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.249504837 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.248186169 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.247245034 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.246806832 seconds)
  done (took 23.64413194 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.261306796 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.269823866 seconds)
  done (took 3.699396796 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.377892015 seconds)
    (2/7) benchmarking "second"...
    done (took 1.289070312 seconds)
    (3/7) benchmarking "month"...
    done (took 1.35795255 seconds)
    (4/7) benchmarking "year"...
    done (took 1.343985896 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.290477808 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.269490855 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.290425115 seconds)
  done (took 10.387349179 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.251023828 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.436554418 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.552600548 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.814657122 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.253618369 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.256707994 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.138466963 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.255624508 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.259421241 seconds)
  done (took 14.387031574 seconds)
done (took 76.384138272 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.246327096 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.2635857 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.25319332 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.255455057 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.595966639 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.277045056 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.245041002 seconds)
done (took 16.30699718 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.243085726 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.231834613 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.232965276 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.246964997 seconds)
  done (took 10.123361125 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.256590149 seconds)
    (2/2) benchmarking "read"...
    done (took 1.558236526 seconds)
  done (took 4.982616628 seconds)
done (took 16.276370049 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.252032794 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.251790941 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.252965602 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.253709712 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.251094125 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.250029661 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.252603662 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.250286968 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.251300263 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.252495329 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.252055182 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.251809916 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.252078338 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.251465076 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.250263496 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.25144562 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.250919341 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.248973629 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.248343793 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24912141 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.250891528 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.253757071 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.25119641 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.250549869 seconds)
  done (took 31.200497466 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.251486697 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.251679476 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.252153906 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.254294361 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.250255107 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.254906363 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.255332748 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.251566233 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.252998143 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.253815298 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.25290432 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.250832623 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.255708502 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.252202937 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.254820118 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.252446133 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.255699958 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.251859393 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.256214688 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.251487077 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.255776799 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.254961627 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.253712925 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.254956898 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.251054031 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.250858913 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.257694876 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.251039684 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.254698421 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.253956304 seconds)
  done (took 38.77235117 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.261882706 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.260257912 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.256827718 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.256320676 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.256997978 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.25462928 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.254632672 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.256390415 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.257012439 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.256507062 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.256143061 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.253845154 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.254422152 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.258475383 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.258705102 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.257300177 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.255878781 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.256103151 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.256402421 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.256389321 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.256287201 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.256555555 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.255866175 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.255722782 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.257363026 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.255914705 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.25464591 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.25560471 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.255314945 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.257456696 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.257300077 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.256996974 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.256096248 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.256038991 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.255540331 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.256248496 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.262581399 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.265930584 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.256082888 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.258483384 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.257019334 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.256349989 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.25787634 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.257994784 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.25661855 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.259212358 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.256736971 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.25913301 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.257921365 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.258675528 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.259118846 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.260658888 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.259119241 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.259490936 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.257952496 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.258558725 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.260644291 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.257108819 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.259032592 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.260254472 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.261068432 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.261260381 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.259419212 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.259329475 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.259863982 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.25781398 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.259024819 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.26020813 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.258853542 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.258959372 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.260480594 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.258445579 seconds)
  done (took 91.736314314 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.26074138 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.257582611 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.257864291 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.255038992 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.257750183 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.260036555 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.258183228 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.259395702 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.25976084 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.260766245 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.260231841 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.26064632 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.257359225 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.262548055 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.259834201 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.258288989 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.259879613 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.259137587 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.261848737 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.258992116 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.261989265 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.259117467 seconds)
  done (took 28.886795074 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.261160101 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.263624388 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.257529362 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.26411965 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.261793715 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.263936261 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.263982708 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.262062755 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.260679853 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.25818392 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.257678209 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.263645278 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.259735556 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.258520637 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.258901575 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.261404308 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.262741529 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.257330279 seconds)
  done (took 23.87586813 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.260295644 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.259082233 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.263681426 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.261182083 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.258183102 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.262366382 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.259716911 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.263978013 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.260533749 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.261446043 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.261664037 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.262676346 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.261940527 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.258473849 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.263553494 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.260169786 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.264912334 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259286474 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.263130478 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.263041306 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.261805084 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.26292273 seconds)
  done (took 28.933312006 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.264241575 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.262113813 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.261221318 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.261037521 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.262779149 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.263525926 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.263843865 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.262521054 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.265102115 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.263444165 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.261138122 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.262632423 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.263121829 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.263020112 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.261935061 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.260470888 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.263884869 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.260382001 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.267403427 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.260663789 seconds)
  done (took 26.435787677 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.264224967 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.263968708 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.264382816 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.26599433 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.268969267 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.26534141 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.265280983 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.267824253 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.266399831 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.268719013 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.26526487 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.266279003 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.264816845 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.267311734 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.265678415 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.266505579 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.267060651 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.269038658 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.267169937 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.265634631 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.266662295 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.267836938 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.267802439 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.267358847 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.267620877 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.264710995 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.267907271 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.26800253 seconds)
  done (took 36.646492681 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.266385288 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.265920852 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.265631959 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.264750469 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.264422887 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.264555366 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.264804929 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.266048118 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.265764596 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.264665435 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.268768639 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.267935632 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.266793093 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.267570647 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.268769812 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.267120203 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.26723011 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.26390029 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.264382095 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.267785893 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.266430062 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.269623213 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.26630881 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.265179315 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.266322179 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.268318665 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.26530464 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.264973233 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.267809653 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.266026072 seconds)
  done (took 39.174406308 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.306371772 seconds)
    (2/2) benchmarking "in"...
    done (took 1.311432568 seconds)
  done (took 3.803312746 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.267088676 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.270969523 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.268721076 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.268134611 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.266701101 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.269502709 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.270296157 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.267342099 seconds)
  done (took 11.33576481 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.270319957 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.272185818 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.26861352 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.270539015 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.271151651 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.269962523 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.277736223 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.2869101 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.270927744 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.271315301 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.279124828 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.276505032 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.274929068 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.272545797 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.271606521 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.273210495 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.269961462 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.272225478 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.271332527 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.270217718 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.271049431 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.274738429 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.273175845 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.269436954 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.272856566 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.280360237 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.274792931 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.270951095 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.272844664 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.275173514 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.270625447 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.272906101 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.272353303 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.272468371 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.2727895 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.272526078 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.282478219 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.29331914 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.2776918 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.272186112 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.273433654 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.268489993 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.273998569 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.273713558 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.275969862 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.274568441 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.276687048 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.271357328 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.272563163 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.276537472 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.277064316 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.273896705 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.27136715 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.275680237 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.270550048 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.281271434 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.294613836 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.277489154 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.281141602 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.282593014 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.284141629 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.282985215 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.27757518 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.273277524 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.287023857 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.298370817 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.282378847 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.290917696 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.272363161 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.27418799 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.28129894 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.283782839 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.298347042 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.276146806 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.273578947 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.274215823 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.275523355 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.270751833 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.282781427 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.291963615 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.275444372 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.276401212 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.286193656 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.297014714 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.278033923 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.277062281 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.275993718 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.276249531 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.277852671 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.284786454 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.294806099 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.277348646 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.274929567 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.275602944 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.277528834 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.278263813 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.27677042 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.275903831 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.271924168 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.277943222 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.273751324 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.279728505 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.2853919 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.278731368 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.279466862 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.281671229 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.277136673 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.280595278 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.280951402 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.27685073 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.276807468 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.276740667 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.281667958 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.273202109 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.279757597 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.282568463 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.275901574 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.278122259 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.278438383 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.277422659 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.289971092 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.302112571 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.277863332 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.277829408 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.282654183 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.288053397 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.280080657 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.281315537 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.279421632 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.274827157 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.277295861 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.279523707 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.279359257 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.278585039 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.279381083 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.279063556 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.276427676 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.276798104 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.278010402 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.281260336 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.282377989 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.277746158 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.28038818 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.282298882 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.279448223 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.281505855 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.284163831 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.27532659 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.282346979 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.278036391 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.278089233 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.280422892 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.281407197 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.279720623 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.281233832 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.280243609 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.27931613 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.278426376 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.278022805 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.278849196 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.280768612 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.281426399 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.286599511 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.280043449 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.284926564 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.283187685 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.279107986 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.281626197 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.28207767 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.280729966 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.282933031 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.282289595 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.284936323 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.284507285 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.280810933 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.281289833 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.285484063 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.27898331 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.281515907 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.283797435 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.285779671 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.290169356 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.281345285 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.288811595 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.28118907 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.284102184 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.284666721 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.28229403 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.280466614 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.28319572 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.286997904 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.289429566 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.296836852 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.307951974 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.284956561 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.283955082 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.285111214 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.289448228 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.287068068 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.283442658 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.281507122 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.284602501 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.283759766 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.28238797 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.286558018 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.28379254 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.28404826 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.284035721 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.284247244 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.280809786 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.285732616 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.284876371 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.28602484 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.282576935 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.283251531 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.283197376 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.284477656 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.282569928 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.284378624 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.284521905 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.282990168 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.286307733 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.290130521 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.278719518 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.288084684 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.2874195 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.287929253 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.282676468 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.287493082 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.28702841 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.284426791 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.294462948 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.303595354 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.286022008 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.291994227 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.303507456 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.28446654 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.287330297 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.285342221 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.284571184 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.287854493 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.294307299 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.286669908 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.285526362 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.285330924 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.286327978 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.285934341 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.291634928 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.279810741 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.286958431 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.287457602 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.287462298 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.28553394 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.288755589 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.28693238 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.290019896 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.288429572 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.287114334 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.28712324 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.290066571 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.286929467 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.287902115 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.287528157 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.292741392 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.297997442 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.293187108 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.287349327 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.291565439 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.2884408 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.292474304 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.288338115 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.287693886 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.286893099 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.299763755 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.308578992 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.294172321 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.288146759 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.289494434 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.293274893 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.288505272 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.295280978 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.288767928 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.289501314 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.290156526 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.287514243 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.288400128 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.29042844 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.28900477 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.291340739 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.291064039 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.293122373 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.291096543 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.28887769 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.289475733 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.28973481 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.290895418 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.290694071 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.289397488 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.291688003 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.291695826 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.290755215 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.294690832 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.293974942 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.308446127 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.291287428 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.290275789 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.292394984 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.291378419 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.290171659 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.291908832 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.294589483 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.298970426 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.297244535 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.301159481 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.293426001 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.300413898 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.291065191 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.295880188 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.298811136 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.288838435 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.292303786 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.29227575 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.291292315 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.297164447 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.309059835 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.294185578 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.295109615 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.295364028 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.294422315 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.293206646 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.292391755 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.294035123 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.291345453 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.300692572 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.312792769 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.296621079 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.295363265 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.289377232 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.29381707 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.292549534 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.292202382 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.295800531 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.291409122 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.292272013 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.293311359 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.293527047 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.292362748 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.293315795 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.293530952 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.28764765 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.293394356 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.298801212 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.314208903 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.295994815 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.294918824 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.300562195 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.293753672 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.300416615 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.309098813 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.293335237 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.295508326 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.292932195 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.296167489 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.294718309 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.2929288 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.292633099 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.295500438 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.297254094 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.294597728 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.296270388 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.29619607 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.294463918 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.295549292 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.306625893 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.315619042 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.297951516 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.298010646 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.290694484 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.29536632 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.300658983 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.295132616 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.29598185 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.2999234 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.3068897 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.301217144 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.295431781 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.29391041 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.29597987 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.296107782 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.296560146 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.29746705 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.294842979 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.297531387 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.296517448 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.298160255 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.298936661 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.295635953 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.296899376 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.297933179 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.298256452 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.307199412 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.29559035 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.298018773 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.296760318 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.295409356 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.299055094 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.298016043 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.29854752 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.300399245 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.297891281 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.299752941 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.307484678 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.301862841 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.300976802 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.29838324 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.297983326 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.297911827 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.298090996 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.299193546 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.297972729 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.296129996 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.298517627 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.298660792 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.298402122 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.297082277 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.298154243 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.297943343 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.300304172 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.301210747 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.305740592 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.300336146 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.295153622 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.298466489 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.29985044 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.299189829 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.299837283 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.307334324 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.299704257 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.306893459 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.306599205 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.303192644 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.298759942 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.302191161 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.308074045 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.299214413 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.29913067 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.297804443 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.300556039 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.300408438 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.305513583 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.302470892 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.307593838 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.300087683 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.301424835 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.305904287 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.324411959 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.301123894 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.302682764 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.303996995 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.302572865 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.300042377 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.300887705 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.300832765 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.309603979 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.317222682 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.301219334 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.30214407 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.299248828 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.300101481 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.305342853 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.303565678 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.302294713 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.299240605 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.300621106 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.300974054 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.300584444 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.298201475 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.298738015 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.297834738 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.304028349 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.306744822 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.29708104 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.301458966 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.300777453 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.300548758 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.302071479 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.30088132 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.302276955 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.302786414 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.298701211 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.301728384 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.300950208 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.306637342 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.29987388 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.29969207 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.30154421 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.29993835 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.304980149 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.311099704 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.303733586 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.297335892 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.301878905 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.301097056 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.303216037 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.298894721 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.299261618 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.300387943 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.304023067 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.299510589 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.301750799 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.299567429 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.305665169 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.312097651 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.319992402 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.300717633 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.300831033 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.304570204 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.299858641 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.30032486 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.300451577 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.300522518 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.304348679 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.305791808 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.300283324 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.306631796 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.319538165 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.303291784 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.305364782 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.302898103 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.307582751 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.300804617 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.298032515 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.299569081 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.306560348 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.315025622 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.294384031 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.310543513 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.326219559 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.319795328 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.301155093 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.299593169 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.299841895 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.296701112 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.300518659 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.29991235 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.300613832 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.301501968 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.303146399 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.300765984 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.308481226 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.302448944 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.300841026 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.301845865 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.299648146 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.301470007 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.297041454 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.300613829 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.299752099 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.302471465 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.298472398 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.304382294 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.302163509 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.313850145 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.328508965 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.301723437 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.302640947 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.298308474 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.302657507 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.305155422 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.309970499 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.307229872 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.305126605 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.302521173 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.30570221 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.300830337 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.302310334 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.301386581 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.302389637 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.3019095 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.298628061 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.31244386 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.311671641 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.309843718 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.302082372 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.302262003 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.301286863 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.305456642 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.300250603 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.302711829 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.30372032 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.306543875 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.304144019 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.303909677 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.303653761 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.309261128 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.310425718 seconds)
  done (took 770.862567568 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.302878573 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.302055811 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.298330095 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.299448635 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.301236989 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.301403608 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.300975596 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.301140099 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.301990777 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.300834301 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.300755951 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.301985118 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.300827885 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.301061837 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.302266917 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.299828555 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.303263564 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.303148044 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.302877994 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.301553694 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.302881704 seconds)
  done (took 28.550555388 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.30292879 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.301530832 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.303984776 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.305085614 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.302681099 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.307036086 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.306717179 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.30750993 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.307359464 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303761854 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.305448597 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.304893772 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.303274324 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.305853358 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.306188249 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.302828094 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.308145966 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.30385807 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.306509209 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.303446805 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.308082341 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.302791351 seconds)
  done (took 29.928671481 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.3054212 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.308780757 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.306872217 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.301359652 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.309560731 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.303568491 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.307056966 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.308016267 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.309731911 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.307293536 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.301945395 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.309468071 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.314700196 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.312350141 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.309713215 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.305191666 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.30603255 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.30666388 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.305258721 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.303254103 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.313140407 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.300606579 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.306506019 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.306374342 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.307593311 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.307275698 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.306348463 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.310341222 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.309386889 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.307291077 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.30630869 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.308070176 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.310129799 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.303758602 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.307289435 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.309354407 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.306928167 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.305537983 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.307929136 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.318148597 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.327374848 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.309378238 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.315695964 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.308406853 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.309383087 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.316207953 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.314604871 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.301973828 seconds)
  done (took 64.023877251 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.30677525 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.307567202 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.304615651 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.307542979 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.309990355 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.30756116 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.304659175 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.307937256 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.300871545 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.303587428 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.308783231 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.305336501 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.307146956 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.307088832 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.305825857 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.305886969 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.305468119 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.302912423 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.30415978 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.309515891 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.309249537 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.308203523 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.308479826 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.30571468 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.311388909 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.308453473 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.309212017 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.311039972 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.312512318 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.308626105 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.311052366 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.313052982 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.313460367 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.310905187 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.311533781 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.316522935 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.310969289 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.308299587 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.310275014 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.304379933 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.309065539 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.309306862 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.313536974 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.30861713 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.304707394 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.306476731 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.30325057 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.300893375 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.306643458 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.306250762 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.308859988 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.30377825 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.307618201 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.303178893 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.305139051 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.306913447 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.302790174 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.305462952 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.307808556 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.302686484 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.302968547 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.305827919 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.303322988 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.310440948 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.306481727 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.304557373 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.306796278 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.308518562 seconds)
  done (took 90.123051941 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.306911108 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.30621212 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.307206934 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.306331215 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.305807315 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.307267148 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.307430931 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.306876789 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.308304334 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.307137348 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.306872955 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.309751409 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.305991481 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.306318809 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.307548411 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.309999246 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.308224041 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.307707088 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.307752445 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.309717573 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.309389432 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.310169142 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.305917199 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.308260556 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.306890543 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.310815462 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.312816914 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.309010272 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.305829364 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.308587514 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.305676502 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.308959117 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.307803647 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.307063409 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.309498635 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.309837844 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.309978364 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.307401968 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.308967001 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.31269945 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.31070263 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.309509707 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.312325227 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.309968269 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.310539854 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.312369566 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.31020809 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.313682482 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.314229413 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.313032571 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.313338641 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.311558047 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.311686605 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.314441982 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.308930003 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.310371412 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.311731143 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.30987226 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.310894478 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.311705658 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.311387963 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.310857191 seconds)
  done (took 82.404575739 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.31194818 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.311015789 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.310531998 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.309172427 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.310449449 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.307037601 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.311189989 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.3121773 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.312541818 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.316475527 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.311417861 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.305504185 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.311664598 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.313446692 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.31226873 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.311993443 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.312842015 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.311839471 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.313656928 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.309501312 seconds)
  done (took 27.452586464 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.311219539 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.310623659 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.310902159 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.310399819 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.313047457 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.313034073 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.314932303 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.312723589 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.309471058 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.310710702 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.314435602 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.313869304 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.310592869 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.311397503 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.311071729 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.311008895 seconds)
  done (took 22.216036492 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.311843453 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.317939059 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.312474157 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.314879175 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.308579843 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.314164504 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.314326373 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.308765045 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.312245534 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.313461008 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.315679348 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.313298492 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.317453044 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.313503818 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.310233709 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.317851127 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.314608778 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.312656099 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.316313646 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.315755143 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.314242669 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.313417608 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.314348278 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.317441686 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.314294354 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.314671625 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.31163376 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.31259534 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.309937289 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.315098734 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.312434285 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.312737558 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.316123522 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.313824244 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.317254642 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.313171698 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.31837386 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.317174142 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.319046921 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.31882592 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.314691374 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.310488563 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.3173013 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.315828203 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.314958234 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.317343989 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.315854206 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.313273459 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.315080616 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.314858551 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.317915807 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.320279242 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.313522922 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.319184692 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.31893493 seconds)
  done (took 73.539481947 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.31811779 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.318047389 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.315349545 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.318019544 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.316893762 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.318151904 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.319217532 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.319283279 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.317088575 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.320126076 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.316363105 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.322904701 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.313935594 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.319043865 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.316225827 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.319273348 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.315794234 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.315280471 seconds)
  done (took 24.94677986 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.314368534 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.317776272 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.317501151 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.317389727 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.314045679 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.319004866 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.313394063 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.319396182 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.319824453 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.315930806 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.317960566 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.318949249 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.319599553 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.321816472 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.3182902 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.31360759 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.320011438 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.320698701 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.319843182 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.31802685 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.32158142 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.320759991 seconds)
  done (took 30.230901427 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.321214219 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.319317836 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.315937554 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.335800419 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.339868978 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.318125963 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.318250633 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.319335994 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.341078468 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.377268419 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.37037807 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.339643164 seconds)
  done (took 17.2469367 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321844719 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321783401 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.319753462 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323207636 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319360853 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318159615 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318339676 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318520605 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31956995 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319999939 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31945929 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322446298 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319062165 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318627418 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319645574 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321838211 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320887637 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32242895 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321314819 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.326115692 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319328367 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323555488 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32095563 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318797789 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319744961 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321486838 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.326565733 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322145483 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323550712 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324488637 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322083822 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320384734 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323684344 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319023878 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322568447 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325044443 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322570344 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32580257 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324790114 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322888186 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.324103619 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323949503 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325460899 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32302413 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.326270176 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323233398 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319175116 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323272033 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323521868 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325303567 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.326726277 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323142342 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.326654184 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326651526 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.324805616 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328288503 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.325161134 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325974264 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.326322988 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323844593 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323480175 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326688497 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.324429377 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.326018327 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330012396 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322108809 seconds)
  done (took 88.545603178 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322085703 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.324453254 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323729922 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325875607 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.324880077 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321541348 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322648979 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319377757 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320676153 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324869947 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327526668 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325953454 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.324645394 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325806769 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326974889 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.324852781 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325758429 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325427472 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325247332 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327274768 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.325074588 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.325815455 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325469056 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326462593 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324329845 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328399382 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324647631 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.326062924 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.326440307 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32757991 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.327403374 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326110916 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326449585 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.325144674 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325321134 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.325728522 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325674662 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325402748 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32579379 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328312848 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.324198349 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.331507372 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32691111 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.327858433 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32771988 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.326128656 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.327765265 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.324938415 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32464711 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327281714 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327225413 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32752099 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326477897 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326847575 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328270548 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.327803245 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.329790956 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.330290059 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329379764 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.331244328 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329406488 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329075671 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329854198 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.326464448 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328913137 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.329120974 seconds)
  done (took 88.776038896 seconds)
done (took 1800.81640441 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.492467491 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.440311054 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.321179737 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.33171722 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.325656937 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.350194023 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.336242949 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.323889609 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.327806983 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.329659396 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.327821371 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.516275916 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.32359076 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.327277811 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.330285925 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.422985525 seconds)
  done (took 27.069229166 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.362567982 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.332795899 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.449434302 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.34545217 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.358148561 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.523819703 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.386269569 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.336931767 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.509876615 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.372886457 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.333906963 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.355271367 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.330414054 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.329102202 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.349126918 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.522681386 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.585585023 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.327449305 seconds)
  done (took 29.352686229 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.801303374 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.358860774 seconds)
  done (took 5.405165508 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.353530375 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.330313827 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.335799738 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.332337803 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.323051619 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.3233932 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.334764381 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.326560382 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.328084362 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.459179043 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.330170749 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.341459115 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.354728267 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.335806081 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.331187578 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.372849209 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.492478449 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.329681711 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.33480576 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.338973145 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.338360055 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.425642737 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.375213153 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.330978846 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.464829102 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.333293695 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.334433511 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.338294495 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.470189059 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.333047146 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.339288036 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.332099581 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.338202475 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.251467836 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.789432939 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.325929134 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.360956117 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.344138652 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.337050073 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.501578235 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.337366331 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.343859278 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.330824318 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.769165248 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.475171303 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.451796168 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.338972072 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.336745628 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.340534558 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.398604519 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.333482716 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.335626272 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.382027886 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.112467858 seconds)
  done (took 85.210830123 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.381386977 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.327369482 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.511469244 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.348193041 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.325401867 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.325524082 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.342004038 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.623806559 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.333679198 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.341685059 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.609082216 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.880895581 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.347703902 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.369902556 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.223471901 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.381784211 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.332029591 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.32683861 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.329541581 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.32972342 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.887128568 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.327203251 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.324018684 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.483070305 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.366028502 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.833047986 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.32838586 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.327588491 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.331659098 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.327288952 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.852636544 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.343218722 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.38503471 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.328741279 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.598950349 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.717867034 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.675874617 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.327218477 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.374239313 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.330022206 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.337684509 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.833554056 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.692767174 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.327670696 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.34784398 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.833299256 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.329037544 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.343894689 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.332901573 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.579879502 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.333643054 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.333076602 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.334516759 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.326751001 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.33267417 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.3348463 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.393133026 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.835675174 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.327417203 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.329815269 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.372650697 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.324998184 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.331272278 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.325023685 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.333234437 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.689434213 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.463165996 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.331519837 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.693575507 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.834089911 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.342056258 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.908154704 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.34554443 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.328261104 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.399907943 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.326059601 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.341938636 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.828006523 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.347257649 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.32538395 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.680499585 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.326577524 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.605173092 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.341718529 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.33069934 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.893240816 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.32902103 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.406183015 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.32738908 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.324735275 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.324754409 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.331625976 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.602201438 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.363083372 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.323825562 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.324164733 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.328951665 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.33694715 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.321955591 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.331055935 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.892899955 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.346185958 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.328926157 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.323166006 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.328396666 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.325695118 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.327300521 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.330459007 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.590995444 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.325845974 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.326775904 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.328237737 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.325018733 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.336676548 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.470281173 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.336237334 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.635315156 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.327962011 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.328585963 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.331851311 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.329402679 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.351467098 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.328316822 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.333502215 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.222862645 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.582105103 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.348445191 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.327567625 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.33426956 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.333199686 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.325331253 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.327472676 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.354804667 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.327401054 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.07001217 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.340743948 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.341096199 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.325153512 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.335867952 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.328725101 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.332026714 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.329403193 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.615667075 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.590791438 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.454844311 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.326372603 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.323636597 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.065842699 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.348032794 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.503842423 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.350750215 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.32270984 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.574074033 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.484067681 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.326839054 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.321545616 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.32872033 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.584680476 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.329554261 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.6241903 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.848415104 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.339130585 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.328393245 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.066174569 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.017504921 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.330125413 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.332924206 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.598506309 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.340947129 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.330370432 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.325117331 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.326806712 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.324545382 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.348847144 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.329578554 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.324409894 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.326414938 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.538945264 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.517576258 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.34585875 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.33491917 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.808283951 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.329416759 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.321504921 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.338670735 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.324423396 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.323261916 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.377850779 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.326196301 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.32772005 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.32521257 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.334891778 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.825375875 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.321318455 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.328218488 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.515478737 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.984673785 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.334134838 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.328113552 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.32903375 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.218932131 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.829419635 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.344912906 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.6224319 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.324274391 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.361762971 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.326714212 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.381751615 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.82743212 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.322526475 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.324456486 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.955607053 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.33695168 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.990521834 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.322855745 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.327376122 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.881660945 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.337197086 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.329780533 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.320378481 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.329760216 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.611684574 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.328893566 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.348148961 seconds)
  done (took 496.457563219 seconds)
done (took 644.734415011 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.323804813 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.328786228 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.317834204 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.328354075 seconds)
  done (took 10.53895603 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.33839947 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.334663785 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.334337423 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.335283874 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.335939595 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.333486446 seconds)
  done (took 9.2535022 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.329519629 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.330871186 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.330504427 seconds)
  done (took 8.231405173 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.530026485 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.34502669 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.643529235 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.352288704 seconds)
  done (took 9.114279938 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.334586112 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.335846863 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.336728724 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.337685208 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.338635813 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.336663408 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.337081981 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.337734803 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.339287365 seconds)
  done (took 13.276901488 seconds)
done (took 51.656104475 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.439772833 seconds)
    (2/286) benchmarking ("sort", BigInt, false)...
    done (took 2.32951518 seconds)
    (3/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.317439388 seconds)
    (4/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.465126418 seconds)
    (5/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.311915018 seconds)
    (6/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.350580602 seconds)
    (7/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.328230181 seconds)
    (8/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.675875721 seconds)
    (9/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.309556832 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.573354874 seconds)
    (11/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.329691388 seconds)
    (12/286) benchmarking ("sort", BigInt, true)...
    done (took 2.326144171 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.365612435 seconds)
    (14/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.317195554 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.356697897 seconds)
    (16/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.346601235 seconds)
    (17/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.690475258 seconds)
    (18/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.310765932 seconds)
    (19/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.335884316 seconds)
    (20/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.906744865 seconds)
    (21/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.328082033 seconds)
    (22/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.324062451 seconds)
    (23/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.331863471 seconds)
    (24/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.343545548 seconds)
    (25/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.328770815 seconds)
    (26/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.326301188 seconds)
    (27/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.311304453 seconds)
    (28/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.317478018 seconds)
    (29/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.31185644 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 2.32549862 seconds)
    (31/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.166638836 seconds)
    (32/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.436777581 seconds)
    (33/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.181669486 seconds)
    (34/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.84109981 seconds)
    (35/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.801526503 seconds)
    (36/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.31991306 seconds)
    (37/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.436246556 seconds)
    (38/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.317597578 seconds)
    (39/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.31268764 seconds)
    (40/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.321411174 seconds)
    (41/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.311854187 seconds)
    (42/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.476147482 seconds)
    (43/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.725145328 seconds)
    (44/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.332976367 seconds)
    (45/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.461575731 seconds)
    (46/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.594743019 seconds)
    (47/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.340670799 seconds)
    (48/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.312181887 seconds)
    (49/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.455137913 seconds)
    (50/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.316157126 seconds)
    (51/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.318584369 seconds)
    (52/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.330758689 seconds)
    (53/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.384152421 seconds)
    (54/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.477011395 seconds)
    (55/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.360230032 seconds)
    (56/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.694168997 seconds)
    (57/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.707045506 seconds)
    (58/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.343921551 seconds)
    (59/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.329440368 seconds)
    (60/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.313115199 seconds)
    (61/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.529586768 seconds)
    (62/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.392664442 seconds)
    (63/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.332429253 seconds)
    (64/286) benchmarking ("sort", Float64, true)...
    done (took 2.33685774 seconds)
    (65/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.798776331 seconds)
    (66/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.316501352 seconds)
    (67/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.330065728 seconds)
    (68/286) benchmarking ("sort", Int64, false)...
    done (took 2.329189298 seconds)
    (69/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.336755332 seconds)
    (70/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.329395953 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.231815479 seconds)
    (72/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.313322712 seconds)
    (73/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.412830839 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.334495597 seconds)
    (75/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.339452727 seconds)
    (76/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.394311742 seconds)
    (77/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.5168961 seconds)
    (78/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.31561536 seconds)
    (79/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.132928717 seconds)
    (80/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.323703502 seconds)
    (81/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.50756251 seconds)
    (82/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.320967772 seconds)
    (83/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.911205799 seconds)
    (84/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.353833157 seconds)
    (85/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.329394993 seconds)
    (86/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.331839279 seconds)
    (87/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.335822383 seconds)
    (88/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.05689929 seconds)
    (89/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.32241828 seconds)
    (90/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.205039811 seconds)
    (91/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.915900574 seconds)
    (92/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.416893025 seconds)
    (93/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.323026443 seconds)
    (94/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.392870948 seconds)
    (95/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.422050597 seconds)
    (96/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.334235011 seconds)
    (97/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.341279467 seconds)
    (98/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.061167346 seconds)
    (99/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.346512625 seconds)
    (100/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.321645827 seconds)
    (101/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.34130486 seconds)
    (102/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.314039182 seconds)
    (103/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.73490182 seconds)
    (104/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.569365812 seconds)
    (105/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.320688731 seconds)
    (106/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.475988233 seconds)
    (107/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.318171162 seconds)
    (108/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.321983007 seconds)
    (109/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.351172107 seconds)
    (110/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.416590819 seconds)
    (111/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.36082976 seconds)
    (112/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.33490563 seconds)
    (113/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.314619047 seconds)
    (114/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.347777676 seconds)
    (115/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.317083386 seconds)
    (116/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.33035768 seconds)
    (117/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.049617284 seconds)
    (118/286) benchmarking ("sort", Bool, false)...
    done (took 1.857430277 seconds)
    (119/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.359579888 seconds)
    (120/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.448775554 seconds)
    (121/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.318097215 seconds)
    (122/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.758239052 seconds)
    (123/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.612182546 seconds)
    (124/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.320818416 seconds)
    (125/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.343906913 seconds)
    (126/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.050276182 seconds)
    (127/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.589411026 seconds)
    (128/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.33510346 seconds)
    (129/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.351608633 seconds)
    (130/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.318368488 seconds)
    (131/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.436518234 seconds)
    (132/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.322375226 seconds)
    (133/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.907531435 seconds)
    (134/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.352186243 seconds)
    (135/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.327555343 seconds)
    (136/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.416201773 seconds)
    (137/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.817906381 seconds)
    (138/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.070613789 seconds)
    (139/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.322056017 seconds)
    (140/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.376832483 seconds)
    (141/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.323430342 seconds)
    (142/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.347617873 seconds)
    (143/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.488367647 seconds)
    (144/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.692619455 seconds)
    (145/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.32451547 seconds)
    (146/286) benchmarking ("sort", Float32, false)...
    done (took 2.336539138 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.16379698 seconds)
    (148/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.341733898 seconds)
    (149/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.323634988 seconds)
    (150/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.357044324 seconds)
    (151/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.278923921 seconds)
    (152/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.348268384 seconds)
    (153/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.435870254 seconds)
    (154/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.361971629 seconds)
    (155/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.36042496 seconds)
    (156/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.575372816 seconds)
    (157/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.735568794 seconds)
    (158/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.339375721 seconds)
    (159/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.332224985 seconds)
    (160/286) benchmarking ("sort", Int8, true)...
    done (took 2.34549082 seconds)
    (161/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.06891328 seconds)
    (162/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.316979063 seconds)
    (163/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.362296031 seconds)
    (164/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.435316244 seconds)
    (165/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.366649671 seconds)
    (166/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.447585325 seconds)
    (167/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.327589212 seconds)
    (168/286) benchmarking ("sort", Float64, false)...
    done (took 2.332285685 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.209532051 seconds)
    (170/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.896618738 seconds)
    (171/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.376775013 seconds)
    (172/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.201301654 seconds)
    (173/286) benchmarking ("sort", Int8, false)...
    done (took 2.332904513 seconds)
    (174/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.335463372 seconds)
    (175/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.444450432 seconds)
    (176/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.330061744 seconds)
    (177/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.343728464 seconds)
    (178/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.276970349 seconds)
    (179/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.362367875 seconds)
    (180/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.937136579 seconds)
    (181/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.36622695 seconds)
    (182/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.84855951 seconds)
    (183/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.050064173 seconds)
    (184/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.381191525 seconds)
    (185/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.379519141 seconds)
    (186/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.325239905 seconds)
    (187/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.596036843 seconds)
    (188/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.323709718 seconds)
    (189/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.206625196 seconds)
    (190/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.420109648 seconds)
    (191/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.418912342 seconds)
    (192/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.521771852 seconds)
    (193/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.342999463 seconds)
    (194/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.428475687 seconds)
    (195/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.356350268 seconds)
    (196/286) benchmarking ("sort", Bool, true)...
    done (took 2.34065854 seconds)
    (197/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.398538627 seconds)
    (198/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.582056437 seconds)
    (199/286) benchmarking ("sort", Float32, true)...
    done (took 2.355078655 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.341423099 seconds)
    (201/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.395379858 seconds)
    (202/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.086960712 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.332999948 seconds)
    (204/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.542522931 seconds)
    (205/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.340813012 seconds)
    (206/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.386770986 seconds)
    (207/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.54512832 seconds)
    (208/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.342911581 seconds)
    (209/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.326731766 seconds)
    (210/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.32762612 seconds)
    (211/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.327341814 seconds)
    (212/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.468746632 seconds)
    (213/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.364435494 seconds)
    (214/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.341479319 seconds)
    (215/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.322756537 seconds)
    (216/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.763525084 seconds)
    (217/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.343546082 seconds)
    (218/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.355663899 seconds)
    (219/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.376773158 seconds)
    (220/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.29441866 seconds)
    (221/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.345779326 seconds)
    (222/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.325565452 seconds)
    (223/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.366922955 seconds)
    (224/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.331406457 seconds)
    (225/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.223875526 seconds)
    (226/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.347323011 seconds)
    (227/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.334321387 seconds)
    (228/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.689976253 seconds)
    (229/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.483639741 seconds)
    (230/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.341531961 seconds)
    (231/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.970581301 seconds)
    (232/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.333093851 seconds)
    (233/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.345611102 seconds)
    (234/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.44167297 seconds)
    (235/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.397712627 seconds)
    (236/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.696993672 seconds)
    (237/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.54902567 seconds)
    (238/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.370122035 seconds)
    (239/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.37136421 seconds)
    (240/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.370831491 seconds)
    (241/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.465551071 seconds)
    (242/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.365318138 seconds)
    (243/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.332238005 seconds)
    (244/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.523195345 seconds)
    (245/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.189615862 seconds)
    (246/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.74070514 seconds)
    (247/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.131314964 seconds)
    (248/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.333757392 seconds)
    (249/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.326319264 seconds)
    (250/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.164773322 seconds)
    (251/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.339136636 seconds)
    (252/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.348251633 seconds)
    (253/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.33121154 seconds)
    (254/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.325749542 seconds)
    (255/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.333710606 seconds)
    (256/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.3521797 seconds)
    (257/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.156767228 seconds)
    (258/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.063432605 seconds)
    (259/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.330066008 seconds)
    (260/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.421559216 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.438661 seconds)
    (262/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.368617063 seconds)
    (263/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.370941907 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.425944173 seconds)
    (265/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.34691604 seconds)
    (266/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.342835005 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.457831163 seconds)
    (268/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.410203159 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.343746421 seconds)
    (270/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.339500737 seconds)
    (271/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.173127971 seconds)
    (272/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.228228421 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.382943613 seconds)
    (274/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.373233856 seconds)
    (275/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.332353347 seconds)
    (276/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.372735835 seconds)
    (277/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.331227102 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.689643713 seconds)
    (279/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.362225113 seconds)
    (280/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.555167981 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.363021436 seconds)
    (282/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.470109672 seconds)
    (283/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.359737576 seconds)
    (284/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.332125685 seconds)
    (285/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.967591447 seconds)
    (286/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.34807948 seconds)
  done (took 566.545661592 seconds)
done (took 567.789071659 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.379530947 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.377726111 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.361080576 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.382547055 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.472604844 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.537628231 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.368708739 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.362676791 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.407531342 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.408176162 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.359099998 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.534467197 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.360933208 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.35823192 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.360251008 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.374561161 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.346957217 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.357051909 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.377163132 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.369718544 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.374812951 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.359197198 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.410666978 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.53532771 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.366259385 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.365202894 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.363612713 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.380165248 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.471938421 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.364839023 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.363538616 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.370162815 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.348941984 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.353948502 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.357385771 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.382081052 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.371674231 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.371195913 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.365154927 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.393136201 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.350382718 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.361709529 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.361069833 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.364027443 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.361870826 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.363493407 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.362877935 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.367090265 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.376115002 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.376272532 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.349753659 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.374392082 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.36369713 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.363807311 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.375953474 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.361445744 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.363236547 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.380131862 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.380293614 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.380343242 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.354512466 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.363467181 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.366759296 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.37997904 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.368339198 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.357939449 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.35826549 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.369562538 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.35199487 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.36984774 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.35928957 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.370469713 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.365863153 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.376454063 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.39602165 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.362938623 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.360325557 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.364837639 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.37205744 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.36215094 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.375364112 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.377132663 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.36821312 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.366927209 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.381459592 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.540818125 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.373664708 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.367470962 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.374956002 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.384820934 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.372939368 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.37737233 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.369119164 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.361111676 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.374445877 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.370404193 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.369234014 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.367586336 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.372226865 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.379219299 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.354643937 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.383984155 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.364798022 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.363583533 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.365266455 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.380208588 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.35319253 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.36813992 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.389455845 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.411808406 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.369782077 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.359676513 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.363803074 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.383114257 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.376469983 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.37127176 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.363797861 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.363023971 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.349821818 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.379872756 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.367965424 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.365025319 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.384639103 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.369510446 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.362849458 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.354968056 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.363052745 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.382908886 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.486596999 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.376542658 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.398695727 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.365321314 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.371313153 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.398559552 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.381832053 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.395573225 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.370670936 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.382519612 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.382586987 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.366993397 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.377091521 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.37831619 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.368771669 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.375771703 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.363643242 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.400153737 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.381476525 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.381288454 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.389330141 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.491682776 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.363815954 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.366042563 seconds)
done (took 226.766883699 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.424977578 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.363028849 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.447517115 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.362446262 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.462667281 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.461243789 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.356558052 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.362264138 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.357557085 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.740850282 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.358843162 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.360349023 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.36168116 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.361947164 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.443303884 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.362233116 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.358499809 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.709348746 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.366732311 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.43244091 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.361854742 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.365045091 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.362509478 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.743631647 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.3625915 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.359473372 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.437096825 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.365028906 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.708899758 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.359481579 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.361258593 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.709870313 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.453746141 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.379996904 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.369633675 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.368931647 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.46227264 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.379097324 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.44311041 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.443540804 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.448905694 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.405500287 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.35602503 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.364560738 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.364638111 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.362824777 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.364139645 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.391382023 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.365178803 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.365176575 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.71358344 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.374254895 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.362922857 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.361329755 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.360383944 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.390857073 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.362144117 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.366427405 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.456601054 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.36887183 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.430619295 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.747190876 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.748712333 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.367222209 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.362555835 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.364514386 seconds)
  done (took 106.449739014 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.433281958 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.437763902 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.471337206 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.370375539 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.413215456 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.482966828 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.368915071 seconds)
  done (took 11.250012813 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.371871304 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.365057986 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.413469641 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.415041866 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.36409068 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.576032325 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.366016783 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.377708858 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.365716896 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.439044675 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.369928583 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.371265381 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.376166599 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.3665529 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.417009661 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.37747609 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.485654777 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.36815429 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.364629583 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.515835347 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.367622884 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.373772163 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.44000125 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.380023345 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.366792851 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.378366527 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.299452212 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.365582671 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.362876705 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.362956931 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.36217352 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.46676837 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.367325735 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.363869734 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.365719698 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.529247143 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.369133872 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.359993273 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.364734998 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.368757704 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.368506671 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.365103197 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.367816232 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.367985426 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.369450428 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.391220144 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.37213045 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.372142086 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.366622375 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.36960345 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.442197196 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.372320563 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.36322214 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.368663858 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.446582127 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.38150577 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.373707751 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.365334751 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.370247625 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.365459631 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.519336437 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.41816995 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.367745568 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.418619794 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.372778811 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.368367401 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.366382199 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.366871436 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.463820389 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.368240298 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.412425005 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.371191289 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.597165953 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.398026678 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.373935279 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.376286805 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.375754023 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.372672516 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.369035956 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.377590971 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.368835195 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.368917302 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.376870659 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.368204421 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.368529962 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.55688887 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.532408414 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.370999198 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.387515549 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.380474811 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.368894503 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.447673949 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.370135041 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.371776303 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.424682579 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.490269065 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.449517348 seconds)
  done (took 141.575679701 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.379286732 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.377727895 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.374286147 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.392399911 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.371532916 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.369668597 seconds)
  done (took 9.543166433 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.373398437 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.374105951 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.37043834 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.373744508 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.370732059 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.36867322 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.375255841 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.369637852 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.377624808 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.371361433 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.376244391 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.376705546 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.375135155 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.368940884 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.370855233 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.373573867 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.377059056 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.368023183 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.372234041 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.377245285 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.37362201 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.376885244 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.367838352 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.372511154 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.375846343 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.37031837 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.378976764 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.375255264 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.371272101 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.376805981 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.371448254 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.377931135 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.379533103 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.382608939 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.377724602 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.37287649 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.376133711 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.376057072 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.369180691 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.375596399 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.378504817 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.374580702 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.374267558 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.373625584 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.375876024 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.378862652 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.38316713 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.382585178 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.373258023 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.375319938 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.377807398 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.376480048 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.374069269 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.375056987 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.377654688 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.394748836 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.374980537 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.379635876 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.373088056 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.375909095 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.379085666 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.375111649 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.379776174 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.376196547 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.372918734 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.376416731 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.377907055 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.380140046 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.373805332 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.374403275 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.37565615 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.379484437 seconds)
  done (took 101.311469776 seconds)
done (took 371.394061392 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.786934124 seconds)
  done (took 4.06670527 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.463169446 seconds)
  done (took 3.745963966 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.547296766 seconds)
  done (took 21.839409801 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.4165567 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.385424652 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.396276217 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.379561946 seconds)
  done (took 10.858551714 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.590380793 seconds)
  done (took 3.875512905 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.372863157 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.365660741 seconds)
  done (took 6.024379191 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.675771748 seconds)
  done (took 3.958977753 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.780778669 seconds)
  done (took 4.075826536 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.395900896 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.379606734 seconds)
  done (took 6.068498902 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.355661768 seconds)
  done (took 3.642326953 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.55781594 seconds)
  done (took 16.841538651 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.365503264 seconds)
  done (took 3.651567766 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.410765657 seconds)
  done (took 3.696299986 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.804561976 seconds)
  done (took 6.089302392 seconds)
done (took 99.718640185 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.371860267 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.368515573 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.369638637 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.366898273 seconds)
  done (took 10.762377991 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.406819366 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.407419678 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.411608506 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.420742059 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.413285752 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.410307853 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.404829848 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.403463601 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.422610609 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.41381371 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.416239264 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.41476521 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.411525209 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.401751698 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.419385406 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.407741478 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.425551835 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.41049037 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.403565567 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.418439259 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.37709656 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.421177005 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.416932311 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.378570198 seconds)
  done (took 35.12598864 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.876576074 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.452691081 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.532065372 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.431977176 seconds)
  done (took 7.578969811 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.430824145 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.432444027 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.440827214 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.482552966 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.511688009 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.440851151 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.408332174 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.401389901 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.38696507 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.432037887 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.507004058 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.447122567 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.515591131 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.379709734 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.564978068 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.380727622 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.379064555 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.432811749 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.48280034 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.492664369 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.38205192 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.427492113 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.434827304 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.448986122 seconds)
  done (took 35.931232291 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.378709314 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.395656914 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.381617345 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.380919037 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.388824166 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.377129194 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.380492667 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.377686016 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.37533301 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.383455142 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.378139191 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.391318859 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.375045624 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.378722148 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.383887405 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.382247465 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.386089792 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.377607942 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.380145516 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.386423347 seconds)
  done (took 28.927005961 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.375293414 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.372231074 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.723647333 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.630559376 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.376523454 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.3724718 seconds)
  done (took 14.14169413 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.447377475 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.585654901 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.379490403 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.723689377 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.810068066 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.388955958 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.378950473 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.621983635 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.921861871 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.904297009 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.443961033 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.448499783 seconds)
  done (took 20.346160133 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.384420529 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.376123156 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.381300731 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.394980896 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.434265594 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.39279889 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.38828198 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.371840968 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.439198679 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.440617491 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.391611417 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.436507448 seconds)
  done (took 22.124967128 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461571867 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.377288879 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.386705279 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399536884 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377590801 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.587526084 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.410344149 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.092918563 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.394337107 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652041954 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374327164 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466297318 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.632318528 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387592273 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.382252811 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.367544638 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.607442119 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869526904 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383618603 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387760028 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40058915 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.38156246 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.381347205 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.596019449 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.588838769 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380919819 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.639890732 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.381802193 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.660216658 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.391285014 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389587763 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384672354 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659525426 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042187786 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493766927 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.595166167 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377419095 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.378818558 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.384679734 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.386159167 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384753423 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.379592397 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391867776 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382188943 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.383454733 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394703893 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.099477607 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.400666971 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.376973988 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.38474315 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.644074177 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473860771 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.388362928 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.382466536 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475655085 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384533527 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.386742013 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.480829323 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958032002 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395079214 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399806097 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.386198442 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.380744446 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399215713 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995985536 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.391242836 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.387930945 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.390300132 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388531444 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.381553155 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.402389506 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386782598 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.405275464 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38388591 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074394942 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.391585159 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38179295 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928553915 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398736253 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.383761677 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.615627641 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380814275 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378849979 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.379541253 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.385391291 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.091249445 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395459763 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.390392397 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.411375687 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.092887081 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.60557307 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401859716 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406261321 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.610758853 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.37107484 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38536369 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.37985641 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401319254 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402893307 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.100683327 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397975846 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.385811531 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.64498282 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.601064692 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386385558 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.382752304 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.865923655 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412269196 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.405429321 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.398820921 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.600214063 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.952848797 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.404082004 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399628652 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40815252 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.388461418 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133509638 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401517958 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.395623684 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.390197874 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646781536 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.174719856 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391847843 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454945465 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392748365 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.391399132 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395391888 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39073051 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.388206514 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.588504417 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400158659 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.399527299 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.393372748 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39148974 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.388465623 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390837965 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.383038834 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.609569704 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399443481 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668835795 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390414167 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390251585 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382441247 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.606280784 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.386592978 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.386727499 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.645081249 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385596429 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.391926315 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.403432012 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409058613 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4866077 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410489861 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.403257347 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.647102138 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.39019203 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.397626436 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397296057 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394283902 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396220237 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.393456517 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399201145 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.957702707 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369965106 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.390636296 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.279386534 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.40396271 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460402023 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.396974104 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.601119257 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.386310854 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400559663 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.392774719 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.389765895 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.617944982 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.398525664 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.398691158 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.472481149 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.865011023 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.976931294 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406299716 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.395657168 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.386827453 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.38990762 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391911151 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395053393 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.385686965 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.606398184 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.40039616 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.40662773 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.962660052 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398703704 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.394772615 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.398818562 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.401306346 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.397233731 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390614431 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.40127489 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39654053 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.422592684 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.403249921 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.540208032 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.408290909 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394424595 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.909113809 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.399262554 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.390858496 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394924705 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428054168 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.404252379 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.209338751 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.647580335 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401080008 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.655177455 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.396948418 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.409799537 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.392959204 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394910206 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39869565 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.406206202 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415806145 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.406056767 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.401427443 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395720763 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957300065 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.116534236 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922338979 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397919978 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.393789208 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.399848297 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.109880188 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408172411 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390606123 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.625005989 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.111284274 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404888141 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.86836071 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.403145633 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.150642801 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.65404718 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.622228084 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393325867 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.393328859 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.653748772 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.603889719 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430206421 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.402706326 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39934773 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.3797617 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.954929336 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406603831 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.472460683 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.117702592 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406090083 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.394579925 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.484337893 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.40211838 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807884093 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.415840731 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398364961 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.399052354 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.409443985 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.203420639 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.402885177 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402141284 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016699296 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.402956227 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.879664547 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409253797 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.609784193 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.411963329 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.409122974 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.405186612 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.411626304 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.658387407 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.658974481 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397199898 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.403426278 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932757899 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.258403546 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.411048008 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401236313 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.145114107 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411283596 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.684612184 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.396423844 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.400983455 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408815933 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.398340364 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399185065 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.39760431 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.408914207 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380280833 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883727184 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.407590978 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412401389 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397590557 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246716747 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.656226204 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.40929714 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.974987317 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.63293233 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417311418 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419473008 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.404401084 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41096345 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.382998727 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.404907294 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.640961131 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485390994 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.628999771 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.398232837 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.414114678 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.423783472 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.617866844 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.40409442 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.41458838 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.639577738 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.396591392 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.420316972 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.122567311 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432124866 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.414539178 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399175907 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.405446957 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422452839 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476451726 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.619300861 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.414113794 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.415115389 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.81164441 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433821344 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398704911 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.417723516 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50021211 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40229903 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.404961099 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.178475394 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.983091311 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.140755209 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.989397617 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.670200242 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.399742611 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407916099 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404810584 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.545684468 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406842797 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674648447 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399769013 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.412620446 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423339188 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41505763 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399681824 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.619682458 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.680532189 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406319464 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411620601 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410344026 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.405254127 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.420282386 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.618906266 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898651699 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965187256 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410768315 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.40344516 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.132057415 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.689709461 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411274595 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412129212 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406786688 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.42900094 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.419601373 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.414996209 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406251061 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.550382433 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.663063686 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069805292 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.436300129 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.432957835 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.183496409 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407034031 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.679132087 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399753349 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.626796206 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.994299138 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.107310738 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.670926903 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473516112 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.623633478 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.409500383 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.552780597 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.404655921 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.411795373 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408119211 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.258717583 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.402948799 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.418012014 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.993701057 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.672454822 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.41046954 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.411024138 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431090714 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.4209161 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.634236032 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.123446233 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.63663026 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.414786009 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.419884771 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.411393652 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.99605197 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.678294695 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404668146 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.409853988 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.651246122 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.649235783 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.432392308 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.861505585 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.407306845 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972249377 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.38455442 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428544401 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420580909 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.106875099 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995294295 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.413775029 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907997211 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415748585 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406833252 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.707512019 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.41958413 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.415499464 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.689581423 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.416120111 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.410507048 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629454852 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.990960476 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.167502664 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.43163468 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421304062 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.403608471 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405246302 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.450987789 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411399996 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413528824 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.836790938 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.430637293 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416076334 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.41504508 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.408668301 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424126727 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.412624361 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413406717 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.411902713 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.42686332 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.415589052 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.416892066 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.514919239 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.979499592 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426808402 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.116773154 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.74430459 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.666942806 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.413034024 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.402097423 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.42158629 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410778204 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415993432 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41013018 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.409144342 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96425819 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.423449664 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.427208202 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.417392384 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.630740943 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.622506044 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.409734211 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.623109062 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414016793 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.431486981 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.403310242 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415756333 seconds)
  done (took 982.440612729 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.435935479 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.451048165 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.44050052 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.43975489 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.442341138 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.453735875 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.48279968 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.430645043 seconds)
  done (took 20.90195683 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.419780229 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.428322737 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.415947951 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.430103552 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.429783722 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.882196758 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.433319308 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.419919737 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.430963503 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.429527246 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.412318744 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.052810779 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.428910644 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.41757268 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.405811915 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.419204795 seconds)
  done (took 33.186737447 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.35461857 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.54352152 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.253722424 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.441397744 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.456576206 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.41537346 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.63012645 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.437842873 seconds)
  done (took 26.857906239 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.429425985 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.428152509 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.429621132 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.427399119 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.42303875 seconds)
  done (took 8.461460818 seconds)
done (took 1248.07278934 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.421265209 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.421549238 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.421451953 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.420886776 seconds)
  done (took 7.009077371 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.404675751 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.398037617 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.39798927 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.421174462 seconds)
  done (took 9.947142098 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.106622528 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.042448896 seconds)
  done (took 5.473693113 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.41777141 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.17544813 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.156119258 seconds)
  done (took 8.072867288 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.718886487 seconds)
  done (took 3.04337535 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.833906889 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.796654828 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.616550934 seconds)
  done (took 6.570229673 seconds)
done (took 41.440582708 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.417424893 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.658434194 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.573099106 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.417140454 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.587693763 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.576020463 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.160938976 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.424947048 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.422654132 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.41818995 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.41390298 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.589124529 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.145846765 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.668223193 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.140736265 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.679254731 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.582866901 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.418885998 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.426766273 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.413528833 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.167472585 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.418354655 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.437389014 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.412924025 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.574991505 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.565056558 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.429716426 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.661739999 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.427492335 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.411177854 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.573280118 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.420295482 seconds)
  done (took 83.959013924 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.434400665 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.414834565 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.422275784 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.412671878 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.414735756 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.421457645 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.412590568 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.41358019 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.414436537 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.413573099 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.414123144 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.41470639 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.41601304 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.423383286 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.413664692 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.421359682 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.413294602 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.415837524 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.442434029 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.414283644 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.414834959 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.420974344 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.415020231 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.421887427 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.415650622 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.440847681 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.423176284 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.421439369 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.413946388 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.430401923 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.428062913 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.416662202 seconds)
  done (took 78.753510845 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.422034975 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.42832245 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.416514647 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.41614159 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.44133565 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.417943117 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.417451736 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.430549876 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.429965825 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.415548289 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.439010823 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.416548424 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.415963402 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.415904293 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.416399807 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.426760044 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.427693902 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.417255451 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.417230633 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.430340893 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.417173157 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.417393607 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.415128611 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.418812013 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.431240643 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.419240174 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.416475175 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.415790021 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.422640567 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.412448844 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.415240926 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.416123921 seconds)
  done (took 78.803852307 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.618925216 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.426701725 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.428844809 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.364685379 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.430914609 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.426799481 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.422163768 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.621098239 seconds)
  done (took 15.069860368 seconds)
done (took 257.908899779 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.43248762 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.421340556 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.62389668 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.455549382 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.425053139 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.445214091 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.448062867 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.620185728 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.368494517 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.615359572 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.420563075 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.444783713 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.432998762 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.44869664 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.697578695 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.549741613 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.310569316 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.417086597 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.764577997 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.442918371 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.683963359 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.439263352 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.620366158 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.372131818 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.437027647 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.419237034 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.435408417 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.301641568 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.445577815 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.771862288 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.432262685 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.422520068 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.490501586 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.494799297 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.556122507 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.549067148 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.448345208 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.494246035 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.640345289 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.437534317 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.432287295 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.184049833 seconds)
  done (took 84.625753513 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.433723958 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.536917315 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.434492675 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.433424944 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.436136786 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.530698106 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.510060576 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.431557692 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.42774395 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.427520532 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.432649804 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.433673663 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.433929742 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.43326665 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.432673472 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.434122141 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.433958318 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.435707837 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.430365876 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.465154943 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.528585953 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.436095215 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.426052375 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.43657783 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.520365978 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.528847662 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.430783518 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.425244964 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.471074311 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.431403839 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.439060006 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.470698319 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.431473944 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.436337393 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.538975773 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.518118141 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.43515687 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.42657942 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.537947852 seconds)
  done (took 58.170787678 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.437344129 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.683093071 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.855560409 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.443141304 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.433617226 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.437311319 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.507169155 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.4392842 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.433250625 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.435315778 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.604718856 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.438787706 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.467774282 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.875208161 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.44014469 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.433170504 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.439065001 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.437431712 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.691014052 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.447347686 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.527280225 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.442088162 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.512645111 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.451326041 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.453409954 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.436746553 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.440877126 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.005592806 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.439301222 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.604192915 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.217754056 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.512198049 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.984626119 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.859906082 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.217710834 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.43866831 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.439174927 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.608724819 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.443126606 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.439864666 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.515323371 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.444436466 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.859914997 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.124499811 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.451977654 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.44039324 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.025599547 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.605919861 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.669821748 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.450637455 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.883277369 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.445094933 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.439644601 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.443827027 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.680137114 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.451293543 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.443189366 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.052880627 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.463547322 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.521119122 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.442973147 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.44310783 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.700545239 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.4442448 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.688339784 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.445718764 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.447402392 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.455669899 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.862613142 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.444904744 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.147036301 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.461636032 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.435628715 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.610480481 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.691202598 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.07350644 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.446619949 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.70607782 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.001729542 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.512233791 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.447995088 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.995594429 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.521226153 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.451202197 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.438708201 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.44261153 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.442394532 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.542445487 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.517125342 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.088885773 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.134313047 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.07720068 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.538371438 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.459673649 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.443814434 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.056496362 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.45975357 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.441165732 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.863733297 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.141071752 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.463459145 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.450304359 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.139964715 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.465543372 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.523109074 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.454199232 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.873176032 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.445351524 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.491629423 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.442538132 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.453146759 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.467284419 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.523011915 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.449777912 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.445194399 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.116226505 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.639485841 seconds)
  done (took 189.417129315 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.452343044 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.428349987 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.45038186 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.430554947 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.438392072 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.447564748 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.435498592 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.436580393 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.44398194 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.434861414 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.43808256 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.44186934 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.443756262 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.440654039 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.444849991 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.443002942 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.432819881 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.439883424 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.444945126 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.435019952 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.439836039 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.464747489 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.444176312 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.432209039 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.442473358 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.441327831 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.450546691 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.436137559 seconds)
  done (took 65.698696135 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.449303491 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.999820328 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.449374702 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.569986019 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.465214433 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.441291047 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.571779768 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.504761904 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.452490489 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.439905598 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.445307842 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.745321176 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.452005747 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.946174976 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.633878007 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.576036732 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.954521942 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.463199814 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.444830402 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.446392248 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.577250251 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.45365659 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.741874844 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.001788471 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.452954699 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.997987656 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.438649282 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.447227868 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.447509927 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.001084773 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.445340867 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.743210314 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.526222697 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.508756103 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.0062299 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.957121878 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.972953505 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.595028397 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.444120443 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.444540578 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.44189267 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.437196551 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.000729383 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.448715495 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.445149257 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.99541858 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.465651505 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.449494806 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.454125121 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.447570778 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.500190532 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.507838343 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.75369894 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.010402868 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.525764417 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.455600981 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.57501487 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.817696927 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.445103808 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.952862013 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.44430923 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.004105794 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.463102257 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.439967327 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.448306372 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.451059543 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.597982453 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.573043247 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.951441434 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.46818981 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.952184101 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.615829424 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.446533762 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.450112244 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.453133146 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.001169779 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.951780647 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.611737999 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.574318623 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.638159543 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.44565777 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.448392247 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.440061387 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.526185647 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.476887582 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.999167054 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.969180798 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.471580176 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.453665485 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.45298065 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.453625526 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.619351175 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.009639059 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.51976169 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.952704918 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.768561233 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.744870371 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.446730902 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.509177179 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.471142502 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.755096785 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.446964397 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.5029506 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.894655865 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.746357045 seconds)
  done (took 171.193043711 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.686265695 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.471917636 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.543934117 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.613940308 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.047233299 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.035433778 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.439720137 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.564539107 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.562114051 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.706839013 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.453892319 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.548024927 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.66489565 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.522138014 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.182706948 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.514425376 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.546911525 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.614657217 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.593165765 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.443316576 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.159599189 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.757141563 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.632382619 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.467455548 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.557620366 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.245476373 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.02549415 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.978501239 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.632981155 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.469519312 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.992252563 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.443180265 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.392051267 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.110234357 seconds)
  done (took 66.971437397 seconds)
done (took 637.405647272 seconds)
SAVING RESULT...
DONE!
