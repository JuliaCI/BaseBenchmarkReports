cset: moving following pidspec: 20303
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.234077252 seconds)
loading group "string"... done (took 0.462706672 seconds)
loading group "linalg"... done (took 7.587092137 seconds)
loading group "parallel"... done (took 0.171014778 seconds)
loading group "find"... done (took 1.158344115 seconds)
loading group "tuple"... done (took 2.090901716 seconds)
loading group "dates"... done (took 1.331586496 seconds)
loading group "micro"... done (took 0.245839666 seconds)
loading group "io"... done (took 0.650996274 seconds)
loading group "scalar"... done (took 40.861079662 seconds)
loading group "sparse"... done (took 12.497780159 seconds)
loading group "broadcast"... done (took 1.113408109 seconds)
loading group "union"... done (took 13.724341065 seconds)
loading group "simd"... done (took 4.794742865 seconds)
loading group "random"... done (took 9.675051413 seconds)
loading group "problem"... done (took 1.992581308 seconds)
loading group "array"... done (took 22.548307784 seconds)
loading group "misc"... done (took 1.440573597 seconds)
loading group "sort"... done (took 3.598238886 seconds)
loading group "collection"... done (took 19.468620716 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.515245619 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.137399531 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132787549 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147725781 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.203363396 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.143834946 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158185176 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.114078151 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.97758413 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.181750176 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.15462123 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.513913831 seconds)
done (took 5.141192545 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.22316487 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095027791 seconds)
    (2/2) benchmarking "String"...
    done (took 0.102943986 seconds)
  done (took 0.881842137 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.07716342 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.147150731 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094405829 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.07878743 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094592272 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078143423 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094824483 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077620786 seconds)
  done (took 1.352591634 seconds)
done (took 3.231840748 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.732962988 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.284777759 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.205622985 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.46160372 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.198364684 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.214004239 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.672321058 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.348771166 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.252015283 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100058838 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.143112446 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.388814019 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135484633 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.678320916 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.0893672 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.124367806 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.177907869 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.46231287 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082749443 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.11038747 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116598971 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141170324 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.130366697 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090242053 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.185550242 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081865487 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.193694019 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107503307 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080630043 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.290482373 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201948705 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.68669396 seconds)
  done (took 10.899301372 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.113287627 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134638689 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096807786 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138892775 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.132966108 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099079062 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084811048 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096799056 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121272496 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.175920901 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.115806486 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.135914593 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094705776 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081690996 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115013619 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.243709939 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120116143 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.104064207 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.10088476 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103341896 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121467462 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.11274528 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108535222 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093467791 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167762027 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.220637899 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.11041096 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125532588 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096741465 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.115189994 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144388293 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142860135 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094267127 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080418008 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171855312 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12359959 seconds)
  done (took 5.142301388 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.186812597 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.119842759 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167834403 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.163290438 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.139861527 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.159625424 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112732497 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.24399887 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.12062275 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163792429 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.140273972 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.115086828 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080052833 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.097775532 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.09486542 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.631748902 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.163263617 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.134281375 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.113860817 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10267958 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083747125 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.368037384 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102282383 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.079536484 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098821357 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065004575 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158518811 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098889739 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.141621915 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.12068901 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085751991 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134456538 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.210185153 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109141109 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134941076 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095486021 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079013201 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.179167134 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.156577688 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.105721701 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.0785373 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.122258147 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096881342 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118634063 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132580369 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099627635 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.096645242 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.203782609 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.095517008 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.09890439 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.975249825 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.180464872 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.089646418 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.095677039 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.322939233 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.10051638 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097407399 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077323447 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.290357804 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.182233611 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098619119 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080234117 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097122657 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080437808 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.402567108 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085223786 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.753289585 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082427893 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.105935525 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083426017 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09634273 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103087912 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086817031 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114398605 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080713306 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099393112 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079179277 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096206923 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080945541 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108200752 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101917466 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080062738 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.164510084 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.079455288 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.114816134 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126491345 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083753741 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094409119 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129716263 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08282594 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097860705 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132624247 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080726244 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.108976253 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099393876 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141793825 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.080797537 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.19767397 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080956697 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.12504103 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098742267 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.078003904 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130107926 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112324679 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082569054 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101787067 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077937295 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.096231513 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.14846963 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.093340486 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080715103 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099463048 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.076091802 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110808794 seconds)
  done (took 22.650573155 seconds)
done (took 39.380731258 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.328759667 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.101839287 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102184201 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.10300398 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.10064838 seconds)
  done (took 1.50029642 seconds)
done (took 2.233560235 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.289611971 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.173081122 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095048423 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.167412959 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093542107 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173856874 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.160320559 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.111360929 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.219033308 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.078141639 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.163568621 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.094035389 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07647336 seconds)
  done (took 2.660128609 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096268214 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115023966 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081939939 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110721225 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076750533 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.11107795 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092227884 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116817692 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108816925 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084866106 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093442623 seconds)
  done (took 1.820207762 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094614664 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112951006 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082679161 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10994055 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076806978 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110615172 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093072495 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114929839 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109148765 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08480892 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093457004 seconds)
  done (took 1.814586077 seconds)
done (took 7.018312276 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091526129 seconds)
  done (took 0.819712746 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.923800511 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.964866224 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113514058 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.149776028 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.298425572 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.192523393 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.476767101 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.124715434 seconds)
  done (took 11.182154816 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.114568055 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.102018332 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.113192834 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.084432261 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.100320718 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085520715 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.101509742 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.098459437 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082723282 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.102267466 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.086552225 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.100794705 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.1017417 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.083681304 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.099918126 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086807273 seconds)
  done (took 2.340712854 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119955753 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.119189527 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.106528611 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108967783 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087206245 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104854513 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106554476 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088851648 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.102191723 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104044458 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090800108 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105664448 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104074616 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079605305 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105609139 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.10736618 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085486555 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.10585412 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106973125 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090571123 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.10595395 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.09588654 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087257666 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106283439 seconds)
  done (took 3.266780885 seconds)
done (took 18.338922043 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.161310938 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108700949 seconds)
  done (took 1.006066301 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096308014 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112826345 seconds)
  done (took 0.948527487 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.099359706 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095244791 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.122884151 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109676201 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080325692 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095919601 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.120018758 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080508549 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095414287 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080257192 seconds)
  done (took 1.723345097 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083555404 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.10968159 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102848929 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095325636 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.104670187 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094950107 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.086567726 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098773944 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109681624 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077322457 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102888937 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.115232313 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086005939 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116172799 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104664342 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084335129 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.101291551 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098472075 seconds)
  done (took 2.517491715 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081046037 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.09680759 seconds)
  done (took 0.922610505 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082422314 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094351278 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081964329 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097326267 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094265694 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076733355 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094731998 seconds)
  done (took 1.364798232 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.472662176 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.13516838 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.252118124 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.085138555 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.120060515 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.303196329 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097934423 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084844867 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102943257 seconds)
  done (took 2.454354872 seconds)
done (took 11.676827119 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094065969 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.117029927 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112194684 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.46527091 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.10730149 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.097624181 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.159825081 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.248380161 seconds)
done (took 2.149162551 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.153372365 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.32496262 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.112999057 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066723138 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094770697 seconds)
  done (took 1.349093279 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08100149 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099947913 seconds)
  done (took 0.927385319 seconds)
done (took 3.183343371 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081317729 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.131146586 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.080433828 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.095934625 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.079799756 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.095051839 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.077463721 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.096058732 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.079559484 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.0962292 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.096115833 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.077635887 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.09679828 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080478195 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094252403 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077986233 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096665543 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.078177277 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094195949 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.080011871 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09483493 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080352784 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.094816081 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.078486941 seconds)
  done (took 2.919793054 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100984697 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098970436 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102289433 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085672095 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101345236 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085900263 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102672946 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097247733 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086123679 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100491234 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100960806 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083856649 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098648042 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084147412 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098892514 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100586168 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085446248 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097518666 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082448525 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100769909 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.102364847 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080371994 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101534131 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102314912 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.08398029 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100910834 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082511323 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.097204541 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102770887 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083457431 seconds)
  done (took 3.586706796 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086198784 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094319606 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077543602 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101784643 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.076984651 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097099483 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077233386 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096521944 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078244981 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094382288 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079702198 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094939479 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078301765 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.095911519 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079326586 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.098024771 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.107144043 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077678597 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094414279 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079691229 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098019254 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077930946 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095199328 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078031174 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.09513828 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077728619 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.095946987 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078109841 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.09604736 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078443967 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098475531 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081931608 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095083491 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085674217 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.098944283 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077913417 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.098935833 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.094185847 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.07864597 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094836244 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077378216 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095320054 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077502881 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101910263 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.077891565 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097511322 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077308049 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097521306 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078865609 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098233277 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078215869 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094414448 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080092461 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095457655 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.099695647 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.078573804 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.096328203 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077298442 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097194049 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078221647 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094583466 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077552921 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097080691 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.07854319 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110670562 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084966838 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094519544 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079292762 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.09606914 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080353596 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096279347 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.109362926 seconds)
  done (took 7.151185174 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084865313 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106935056 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080841491 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097409118 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076650142 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.096651209 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099513274 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078480364 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097295928 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08655395 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095912497 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080139454 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096725729 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107884352 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079341655 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097028786 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085931903 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093566538 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079298513 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099214868 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079659388 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.099512641 seconds)
  done (took 2.75722816 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.211239457 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104645284 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141771993 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107112039 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084893706 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106415605 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102518259 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086692076 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102083331 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08349027 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100336811 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102927432 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083045015 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099565129 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100551885 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084318513 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102105262 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084915309 seconds)
  done (took 2.650222178 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.094522875 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098390509 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102853069 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098281099 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099819861 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084031214 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104600185 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108505652 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083627272 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098184649 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091556187 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099784387 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100374603 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081259933 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101330003 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081504048 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.10119001 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082021058 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10803234 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104254443 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.10482076 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090083912 seconds)
  done (took 2.881610926 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097996933 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100601941 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118744834 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084338351 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094804955 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080114754 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105308918 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081391769 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.10598877 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100256754 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081452576 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097091962 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088864031 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098052885 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103777613 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081102497 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100533379 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081884688 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101046797 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07797542 seconds)
  done (took 2.645159624 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103968777 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100640445 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100310356 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092308382 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0996477 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082811383 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10968349 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100214897 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08294981 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124820913 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099721994 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082369043 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109422309 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105224668 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099525045 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092155825 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.10836538 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10898964 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083612785 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099821629 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125644749 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082297741 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109786023 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.209349938 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08238616 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100130178 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100834026 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088877017 seconds)
  done (took 3.654309055 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082602932 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098964577 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078154629 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096571903 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.078583012 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096863652 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078928712 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096535274 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081433068 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096614685 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.08144675 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098040773 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081498479 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098294072 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081078059 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098929065 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083748961 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.096084166 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078812122 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095931306 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081256115 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098498005 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081077985 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095576647 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079316156 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.098571003 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078801402 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095767291 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080885528 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095918181 seconds)
  done (took 3.435257513 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.092034546 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10636714 seconds)
  done (took 0.970061021 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.08034719 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115503434 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.07862631 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102178048 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086090632 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099957992 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.10717566 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086652483 seconds)
  done (took 1.527146075 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097683934 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110378144 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084483974 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112516799 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.110576051 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.095535695 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.159702392 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100574556 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.08742315 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.097943293 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112795356 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081106281 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105399256 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081924443 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105704375 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088563847 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.09704228 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087483789 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.102313323 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098184371 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083402089 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111057088 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085200411 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.096196868 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083222325 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.109923732 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.1098496 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.083943051 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102006267 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.109102288 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087421562 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093485693 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081614656 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100873885 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079863414 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.10840346 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111452438 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084604352 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108593963 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083404026 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110645005 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095464197 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087226256 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105843166 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092441414 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100874813 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.083339374 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094470589 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097705169 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084099752 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095810358 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081829408 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093923533 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089143411 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103846871 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111875496 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081071981 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101323645 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085326959 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.10233618 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088386013 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.101820614 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084665895 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.098139856 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106129504 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086324642 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107455286 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077804364 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093743925 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080125392 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.108114691 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.122818269 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.090578948 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.100557433 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083413995 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.097989624 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102811817 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08469711 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106897225 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.090633904 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.100218537 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107463086 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090454649 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099451908 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084427697 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.108168136 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098028325 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084505411 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.098128487 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096983119 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.099182984 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079975275 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.097293495 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.108509819 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085281071 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099988667 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080250878 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10762876 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.079907208 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101253571 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083570522 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10004256 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.109625417 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088818149 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106185525 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.107786842 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.089170307 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100049792 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085083406 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096575331 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084590534 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.102184609 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.107054784 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077169088 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102722875 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083726578 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.100467993 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090029001 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.098424979 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.082325639 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10736682 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.107578492 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081119463 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.096380872 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.085429735 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.100748581 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086358198 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.106343957 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098963805 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077645344 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095604481 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.086070915 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.10069045 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087097288 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105193293 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103203845 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076758955 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.09852998 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.086816 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.107330203 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.10056219 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.08225552 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104889338 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.084223544 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.098863553 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.087627541 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.10234345 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081941956 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.103675743 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.102660611 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.07720245 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104419889 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.085647741 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.09882662 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085659625 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104063953 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.103171106 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.083297564 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099230738 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.08837982 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10250402 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080896226 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100034722 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.099100642 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.09149551 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.103194529 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078803906 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097317479 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.09009256 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.098109909 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.081766652 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.099398443 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.102953442 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083376417 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098135693 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081987469 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.102215354 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113035869 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086960171 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102085682 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088142814 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.110776652 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082448458 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.101999282 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.100373972 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083676644 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101836185 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089235884 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105392773 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105775774 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.08531222 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.096749036 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088159285 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107764177 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081637112 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098217752 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.082162975 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.104582066 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.107460661 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087141 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101435408 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080800511 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101153005 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105591326 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085139637 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.1005442 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081315319 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105493514 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081959418 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.107917089 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102141003 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.091472038 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104201937 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.07776021 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104351298 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098342853 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.088848151 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095866804 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080678383 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.099568172 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083380992 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099450652 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085248782 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094476808 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090381701 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108332016 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100769097 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082067917 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100935182 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090928047 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.103297381 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08552296 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.103684219 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.105549372 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095341268 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099723299 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.086030369 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.11067148 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101491472 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076559224 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.10742556 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081090623 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100395783 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081999559 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.098529618 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085720808 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109300392 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.105595768 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076481791 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.103648057 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081181902 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.100374018 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078414149 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.107294307 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104552313 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.083640418 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110257573 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084031573 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101892457 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104582598 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.082700045 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.102127541 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084232124 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104554978 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084164733 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.103485954 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081941237 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.103057949 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.099653609 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080508212 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.102921667 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.082808306 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.100927656 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089373752 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.102984179 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084247719 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.10432657 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.103049197 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084191847 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.102583888 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.082609928 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105059573 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084539114 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.101748504 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085243898 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096206729 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108447279 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082403228 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109796256 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083534108 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.097962391 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.08828539 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.103934223 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107039118 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084023086 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102046086 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084149278 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.101093055 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.086700909 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109569415 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099344297 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091488323 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106890369 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084028332 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.103710444 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082895768 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.103135485 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.100608417 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084697056 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.10223401 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.083687853 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.10063218 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.088016892 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.104284617 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.083898129 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103396816 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.10210777 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082959702 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.103401645 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077646434 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.101239787 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.082865966 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.10135691 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090988861 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102955725 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.104233669 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081994143 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103643476 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082160648 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.098362323 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.092122602 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11275071 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.102884451 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09129184 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.101156957 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.085286492 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111990147 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095658075 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081578036 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.100155477 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.081361853 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10992282 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084472763 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.109737579 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.10218147 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.083031299 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098399745 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084599602 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.1007412 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077735952 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.098858339 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086558985 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.104229615 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081997119 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.102572749 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.104526695 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085072203 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109075298 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.082414593 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.102723094 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.083889688 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.099038988 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.081778086 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.10136927 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.1045293 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.08429301 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.099542351 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080950297 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.100866257 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.085047246 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.110691882 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.083611391 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.104156388 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089995386 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10206291 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.104281109 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087740563 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096494821 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.086679493 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.101248853 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.083181635 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.101675355 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.105916146 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087513547 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103298896 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.090485973 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.102564179 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084515567 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102002446 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.100215623 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.083936648 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.102043735 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083805553 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.101341682 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084961911 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110670608 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081856242 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104175425 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101762326 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083805687 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.106665404 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084751219 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.104219204 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110104925 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086657953 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.103963996 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.090420666 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.105674749 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087199791 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103525048 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.103411446 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089609199 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.100485176 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091938374 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.102501791 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.084450023 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.104657249 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.080516774 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101822438 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.102167714 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081884526 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.107239375 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084773694 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.101692436 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.082813884 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.100575106 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085211397 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106341131 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110127944 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.086004156 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104678727 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.078809811 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.099510192 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084858185 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099774723 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084917397 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104684521 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107939457 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.086537533 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.102190234 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.083303789 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.110191501 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108712757 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.088504159 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.100000649 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088957108 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.103818682 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087395653 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.104121956 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083460122 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104160793 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.10796567 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085954245 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.101280333 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092013963 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.106248092 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084682427 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103851521 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.102345345 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.084041828 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097143309 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.085389429 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.103855944 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090043709 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.105487859 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102377159 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093201005 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.100978312 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.084011947 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106684852 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082943487 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.1087485 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.098239592 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.084952295 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103449588 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08540399 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097263733 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.083947154 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.100584405 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.0868874 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.101815777 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.079511259 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111715945 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.109642786 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.085874521 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101989952 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08254459 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097707831 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.07855626 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.102053334 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104156456 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.085853297 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.111262083 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.083113485 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.101488329 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.078921727 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10338829 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087899007 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.10635326 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080653455 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098819744 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.101358291 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.08653722 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.109018907 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082962506 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.102239212 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087393544 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.105279812 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081144494 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107408398 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.099513013 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.088041273 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112800795 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084206033 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103297873 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.108254391 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.0919348 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.103417741 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079982709 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.104229142 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.086181669 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.103569691 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.103739032 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.085002159 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116848182 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087408273 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101864194 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082555414 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105526021 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.101801937 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.091295953 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105000497 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.085736636 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107347474 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085883144 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11255088 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104945448 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090140399 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.104574915 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086343014 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.102728115 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102193124 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.081613545 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.101624837 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.084753899 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103787496 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089007519 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110982672 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.102117389 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093372055 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.110988925 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.08926957 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099181622 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083211284 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.1017993 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078653484 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104164449 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.101410394 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.082694248 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.101104641 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.082709749 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.103203159 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089824942 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104831871 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085503507 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103366995 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.096730654 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.086403239 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.105944648 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086204503 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.100254889 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084679372 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104046225 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.090632002 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110624885 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.104131524 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085611485 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.104918367 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084607257 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097964818 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090594385 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101762995 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086747098 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102614293 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084027648 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104981789 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10657384 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089783867 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.1046407 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086218146 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.116279289 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105844343 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.081040336 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100469013 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089169339 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101235973 seconds)
  done (took 57.748860328 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.149155502 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081647321 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09876367 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079632193 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114348563 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099492122 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080205261 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09917982 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08144913 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102393667 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.080402842 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099631533 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109646746 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125288759 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093511965 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103595084 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098164875 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080752013 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099195403 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080731576 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109563769 seconds)
  done (took 2.890863779 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.10804365 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117254749 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115357518 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.120219775 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089837858 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116152473 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113899079 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115113979 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099276849 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111411286 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119333543 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115108305 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.09207003 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110878944 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110592839 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094332174 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118966849 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108464145 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115575457 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095354779 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11251892 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114697535 seconds)
  done (took 3.236679823 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.086780628 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102122002 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086095103 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097871371 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083699938 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098048574 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088716092 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.101117741 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.08764419 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102311539 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082358411 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102458257 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.10393703 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.07947531 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102174795 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081875177 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151458865 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.10704408 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083103078 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104596735 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.098763576 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085569373 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.097793106 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079471541 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101848241 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088639021 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104154723 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082010694 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102568227 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.083435869 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102917425 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080524245 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104384483 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103647348 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083792843 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.102094646 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083739793 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102447824 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079766933 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101093308 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084347012 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098390616 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083972673 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104670927 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.082233649 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.101162928 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085002194 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102541647 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.098062653 seconds)
  done (took 5.467896407 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.107548577 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161255625 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085861695 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143126825 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121334604 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112781909 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088050417 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142552918 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.10195942 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.08267249 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122576949 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120786709 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104463932 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089987383 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.107869319 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103855742 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086322282 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103235738 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.090035294 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104702554 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108619261 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090298757 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119817078 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118091951 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108222643 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.08333364 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103164533 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108336753 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097890985 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.1091871 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109169305 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090596712 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121680744 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.10845667 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084081542 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.107242296 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122217427 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104435003 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087999645 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101759525 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087367537 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109010449 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.11040296 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.103308617 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104446872 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.1092547 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084642538 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101227122 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.11783817 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087204786 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112903349 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120753663 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108931257 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085095308 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108930345 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.12093397 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085860603 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101603175 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.088089146 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117831723 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101411015 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088899928 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.120516093 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.10609282 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.112534519 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.098569682 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.10942284 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108339085 seconds)
  done (took 8.140474681 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.095765575 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111096258 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120657204 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121652032 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091270624 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111695943 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.11162994 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090968796 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110147295 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116852422 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110646973 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.133718431 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085563403 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114594267 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110963678 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091029701 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.1109618 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111280497 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090920808 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112741717 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.11116396 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121785381 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091971815 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120734963 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142442164 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105246063 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091017241 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111186641 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121650927 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111513639 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12323708 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091597439 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112214486 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120992771 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.12392465 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091410662 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103948199 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111494684 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091946979 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111720062 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.1057571 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120794768 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.092074551 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105661194 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.111778556 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.092062998 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121323749 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124889968 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114326891 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09730317 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.111215573 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120726422 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110215513 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091786797 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121263494 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147191341 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121440214 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121274177 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111542162 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.121242102 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10210389 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128886765 seconds)
  done (took 7.695144925 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110143527 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116294379 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.117906021 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100419355 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083392269 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109542647 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083540823 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102537392 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.115143933 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094564816 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117731765 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10869752 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112964249 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097588219 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109496524 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112961024 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089844623 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10868545 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114961636 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.109337422 seconds)
  done (took 2.952273897 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.096794311 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124805154 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085916491 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113386323 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.109154932 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091749591 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107610103 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108311063 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086748507 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107833501 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096985267 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117368854 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105230308 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09225268 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.11747163 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111468248 seconds)
  done (took 2.510551523 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.098813602 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117880155 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120836748 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085088503 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104600822 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081048403 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.106211665 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100998435 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081463769 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120850166 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.086446099 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109328639 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104508685 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083190884 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101377942 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088790884 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101526344 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082602679 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106253328 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.121734563 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095938621 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104167008 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105398465 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087855605 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105435981 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.091593366 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105914561 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103074033 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083671159 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105206976 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.086338482 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.112987549 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102257611 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.08396696 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102922426 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.08348273 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104582806 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085741227 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109609075 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104946642 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.08467628 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104756915 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085351265 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106869775 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.08085025 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106437142 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101145414 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091620156 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103718698 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085808646 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105839626 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107544284 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.087337765 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116258557 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088800743 seconds)
  done (took 6.266290254 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10258145 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109032393 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081330488 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103536369 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088446625 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108202415 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.109105341 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087764093 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106658079 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083619267 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107448545 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090114056 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107741207 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108211842 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087464694 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109250291 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080739668 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106507402 seconds)
  done (took 2.625770124 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.093314934 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105216972 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093171949 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106156846 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084831298 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109126365 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080546238 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104743401 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103586563 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085678644 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105315935 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087686436 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104478136 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087242192 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106125098 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084769989 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.109109998 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103718329 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.08650233 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101507187 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08803343 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104048375 seconds)
  done (took 2.980397734 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.121165984 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125415482 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.093227476 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.228266099 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104853887 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.133047447 seconds)
  done (took 1.652675236 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113123563 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121301738 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106313269 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107998017 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116098202 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107638597 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088911325 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108427954 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119017552 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102858562 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108370154 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118713142 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118780292 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097309015 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115751504 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114943545 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10725764 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088245159 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105772774 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129310962 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088283569 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118482763 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108411529 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087470153 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108811435 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118840534 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118724735 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121941385 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08821667 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118572038 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114786118 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088411591 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119474159 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123772602 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110400703 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098495307 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107936511 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128904076 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114588014 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097947065 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109314897 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115963421 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097999362 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113706771 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118845022 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108138149 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093825566 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108666791 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10848238 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135805533 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094615227 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117696031 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115798709 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119797945 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118379598 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135310253 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101723729 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117715077 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114989956 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123577696 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117766292 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095695968 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118287974 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122960508 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115572664 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117561029 seconds)
  done (took 8.1870259 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105905171 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126164486 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108387599 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123914761 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098740227 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108575592 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108257703 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087788379 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108271115 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106411425 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152219306 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088451846 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11869973 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118323051 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107857201 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08833328 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109127334 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118564368 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087618611 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135796172 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108829956 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117725371 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117795741 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098548656 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123930601 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11478448 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108915986 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087895765 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108340553 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108158944 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095347572 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109420482 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117692847 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086666088 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118223477 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10880234 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087955933 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115759122 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109531824 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115079659 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099517651 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129296136 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109391467 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10869558 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123383163 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089792534 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108290764 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08766517 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108798994 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107007967 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122338127 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103976345 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123388728 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118234982 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108910213 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088195587 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109886443 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108814644 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088463406 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115885984 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118556541 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109267111 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136685131 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088412729 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109909317 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119720127 seconds)
  done (took 8.063882479 seconds)
done (took 155.344125037 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.102328007 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136532029 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096620144 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168853085 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106516237 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119819711 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.13835743 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097896046 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107212132 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086090587 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107821353 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088211442 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171838177 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085021081 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107423064 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107878666 seconds)
  done (took 2.681288873 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.202252508 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.254848681 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103215996 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106296836 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089338961 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110800768 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.105392289 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091643613 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.11012081 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.086004421 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.10901805 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.087318722 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.106173447 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.087365646 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110437978 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088357034 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106028528 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088846306 seconds)
  done (took 2.90282846 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.117079184 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145950315 seconds)
  done (took 1.128435733 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.122726527 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181155266 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.296293735 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155526366 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118534914 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.127547523 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156844118 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130940089 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.197003937 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.123233719 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122657591 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097796983 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.1402532 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.115535949 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.095556881 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118664119 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.141462156 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.09353366 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116379693 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116043021 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117310556 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106722632 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.114995151 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093915616 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.182007994 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.120418547 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.08534614 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.108207524 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116100561 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094900991 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113825272 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125214038 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098333229 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.175494043 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102765812 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.177006987 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098382355 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.11211732 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114977884 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091984798 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120100515 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119025827 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104763684 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.119352472 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.088023433 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.118873116 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106882805 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085944154 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115873235 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.09718322 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116429712 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.1134172 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.155936319 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119793372 seconds)
  done (took 7.559834548 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.797400312 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.164950809 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090335317 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.882347863 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139222122 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104461988 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.77855308 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.133474073 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.237103645 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.758766336 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.1351279 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.123093161 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.230174838 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.238482243 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.965476773 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.313579868 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.671695572 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102381763 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150071714 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153486872 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11934393 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138108339 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131630476 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.431029842 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095723324 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113294907 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117894385 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.1004696 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160141706 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.127035222 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115341525 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.179285124 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.270374123 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.185445798 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116379671 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090452839 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11278297 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.170044349 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267280938 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.2160239 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180873158 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088066074 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112208635 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122200497 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111242568 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109398062 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.164401647 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.195730884 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.172836931 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093327174 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122407382 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.12091834 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121142802 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.164913358 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121483715 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.29514045 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.312651779 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112521602 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122068227 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.10565803 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265244696 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123526864 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.22479393 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117278709 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213889367 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111759001 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.783886378 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.191023617 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090774047 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118856315 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119760577 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095134661 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122489751 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.1687601 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.408178234 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125953734 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092939235 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112666084 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.20637375 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.126363562 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111526254 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.164061452 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116940852 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100221805 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126424962 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124115336 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.171162682 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.235258852 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125056489 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120352529 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093972584 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125446762 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116645987 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.214518193 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219667246 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.163736087 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.211953372 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123677779 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.185869636 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.169422992 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098563828 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.19579016 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.09797717 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126695858 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123361781 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.21617477 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145900989 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.123187576 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095322655 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118846244 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.149787122 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127410116 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.098448782 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.192080081 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.46023282 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.169007913 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109745407 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.12767371 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09912907 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183627203 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096927928 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264206625 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122119848 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.170648491 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119552944 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087856921 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122032685 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.16562503 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124168258 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122503506 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102363416 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119527833 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.235178497 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.217992543 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123776024 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.223925852 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183620655 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120104285 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172055782 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12318286 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168817975 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121314354 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121736861 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095889039 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.800230663 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124452581 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098528944 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117267958 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.188217801 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112071746 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102149211 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125716477 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108840871 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.788537965 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128776379 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.122244246 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102277597 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119703361 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121595769 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11788443 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094745254 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162588717 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229418594 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122601259 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119866699 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.10351159 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.183942783 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095404485 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.127301704 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125714124 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.125437043 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100650517 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.11599835 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124810766 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.172573772 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.164645883 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.222039862 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.589252997 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090931179 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.126367017 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228194809 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089989635 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.289355481 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121386947 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.225460528 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.166800566 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.123106211 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.307337957 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.167479299 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.187615688 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.12700449 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.175428319 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087256424 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119226882 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.165444698 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.11279048 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119292274 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.164197501 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125738854 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102264309 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.95817646 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113300422 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.229879569 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.10945088 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.173305711 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117022378 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100744498 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.297178359 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111730621 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107279191 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.186851305 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094049672 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.125880878 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.87211166 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104448236 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122948123 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120046982 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.221631664 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.166594843 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119277423 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098803592 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122655912 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.165070535 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.211048454 seconds)
  done (took 44.407363613 seconds)
done (took 59.538222066 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.275884164 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213774722 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.259284601 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.168762613 seconds)
  done (took 1.880905938 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.174506347 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149404934 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120732977 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107595803 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150100654 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085705088 seconds)
  done (took 1.675961151 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.356798338 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.270790717 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.239262745 seconds)
  done (took 1.760756754 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.289266452 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.251939999 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.356470193 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.4220706 seconds)
  done (took 2.33400204 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.209626765 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131866282 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.11250853 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104719428 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.197580467 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.251861222 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141366479 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.202519998 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.122652641 seconds)
  done (took 2.416098864 seconds)
done (took 10.961075114 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.123997757 seconds)
    (2/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.270387488 seconds)
    (3/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.266097818 seconds)
    (4/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.093134923 seconds)
    (5/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.233541555 seconds)
    (6/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.113351861 seconds)
    (7/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.100450238 seconds)
    (8/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.119581437 seconds)
    (9/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.2216632 seconds)
    (10/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.093969976 seconds)
    (11/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.133423475 seconds)
    (12/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.213090162 seconds)
    (13/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.211418571 seconds)
    (14/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.127306305 seconds)
    (15/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.19456313 seconds)
    (16/286) benchmarking ("sort", Float32, true)...
    done (took 0.232355244 seconds)
    (17/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.190371543 seconds)
    (18/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.214447303 seconds)
    (19/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.111298905 seconds)
    (20/286) benchmarking ("sort", Int64, true)...
    done (took 0.225911623 seconds)
    (21/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.088369304 seconds)
    (22/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.124403857 seconds)
    (23/286) benchmarking ("sort", Int8, false)...
    done (took 0.199610082 seconds)
    (24/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.119150727 seconds)
    (25/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.257245423 seconds)
    (26/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.119499182 seconds)
    (27/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.193482233 seconds)
    (28/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066748068 seconds)
    (29/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.248443283 seconds)
    (30/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.116262695 seconds)
    (31/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.085168936 seconds)
    (32/286) benchmarking ("sort", Float64, true)...
    done (took 0.233373499 seconds)
    (33/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.122771824 seconds)
    (34/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.097056883 seconds)
    (35/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.171086775 seconds)
    (36/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.066633605 seconds)
    (37/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.154130575 seconds)
    (38/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.093291196 seconds)
    (39/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.167310059 seconds)
    (40/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.172958618 seconds)
    (41/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.2041835 seconds)
    (42/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.10934282 seconds)
    (43/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.161271652 seconds)
    (44/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.141976125 seconds)
    (45/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.125875004 seconds)
    (46/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.124538884 seconds)
    (47/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.138528501 seconds)
    (48/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.103149061 seconds)
    (49/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.191415102 seconds)
    (50/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.116821014 seconds)
    (51/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.175033438 seconds)
    (52/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.13775248 seconds)
    (53/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112880035 seconds)
    (54/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.093012643 seconds)
    (55/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.119964425 seconds)
    (56/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.188586902 seconds)
    (57/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.094772355 seconds)
    (58/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.11715954 seconds)
    (59/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.119160195 seconds)
    (60/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.117240615 seconds)
    (61/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.112219615 seconds)
    (62/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.117566251 seconds)
    (63/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.085779746 seconds)
    (64/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.150683085 seconds)
    (65/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.112606022 seconds)
    (66/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.087876015 seconds)
    (67/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.192686688 seconds)
    (68/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.109999109 seconds)
    (69/286) benchmarking ("sort", Float32, false)...
    done (took 0.173977717 seconds)
    (70/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.22356961 seconds)
    (71/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.158208153 seconds)
    (72/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.126110734 seconds)
    (73/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.183725564 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.114475833 seconds)
    (75/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.090527806 seconds)
    (76/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.101500259 seconds)
    (77/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.191904538 seconds)
    (78/286) benchmarking ("sort", Int64, false)...
    done (took 0.109815181 seconds)
    (79/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.093967161 seconds)
    (80/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.17418154 seconds)
    (81/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.135148548 seconds)
    (82/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.088617638 seconds)
    (83/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.082994405 seconds)
    (84/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.123674823 seconds)
    (85/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.22837285 seconds)
    (86/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.133658832 seconds)
    (87/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.162102466 seconds)
    (88/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.213221626 seconds)
    (89/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.158934122 seconds)
    (90/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068904447 seconds)
    (91/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.116734963 seconds)
    (92/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.139349849 seconds)
    (93/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.085978523 seconds)
    (94/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.110529772 seconds)
    (95/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.127532926 seconds)
    (96/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.094105945 seconds)
    (97/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.089803048 seconds)
    (98/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.117711112 seconds)
    (99/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.118373747 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.121057709 seconds)
    (101/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.102233316 seconds)
    (102/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.122490115 seconds)
    (103/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.136512465 seconds)
    (104/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.087005864 seconds)
    (105/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.089149445 seconds)
    (106/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.148796612 seconds)
    (107/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.117933383 seconds)
    (108/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.135815847 seconds)
    (109/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.094215205 seconds)
    (110/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.155430869 seconds)
    (111/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068751643 seconds)
    (112/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.117621372 seconds)
    (113/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066424209 seconds)
    (114/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.171984116 seconds)
    (115/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.087161053 seconds)
    (116/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.174535319 seconds)
    (117/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.138266279 seconds)
    (118/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.143654743 seconds)
    (119/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.155632844 seconds)
    (120/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.067060203 seconds)
    (121/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.091256464 seconds)
    (122/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.087239555 seconds)
    (123/286) benchmarking ("sort", Bool, false)...
    done (took 0.181921385 seconds)
    (124/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.119340794 seconds)
    (125/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.070903959 seconds)
    (126/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.120318648 seconds)
    (127/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.095714843 seconds)
    (128/286) benchmarking ("sort", Float64, false)...
    done (took 0.171941645 seconds)
    (129/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067270667 seconds)
    (130/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.185061238 seconds)
    (131/286) benchmarking ("sort", BigInt, true)...
    done (took 0.234324407 seconds)
    (132/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.091318158 seconds)
    (133/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.093887275 seconds)
    (134/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.118854691 seconds)
    (135/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.130328084 seconds)
    (136/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.169440833 seconds)
    (137/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.11733854 seconds)
    (138/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.110258702 seconds)
    (139/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.096868975 seconds)
    (140/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.119608935 seconds)
    (141/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.146118001 seconds)
    (142/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.068358843 seconds)
    (143/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068524802 seconds)
    (144/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.119205219 seconds)
    (145/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.086953671 seconds)
    (146/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.136594672 seconds)
    (147/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.117640627 seconds)
    (148/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.110659356 seconds)
    (149/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.125686915 seconds)
    (150/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.093639369 seconds)
    (151/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.091572209 seconds)
    (152/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.086779889 seconds)
    (153/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.099810253 seconds)
    (154/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.077087845 seconds)
    (155/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067616236 seconds)
    (156/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.118318763 seconds)
    (157/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.086682793 seconds)
    (158/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.11179538 seconds)
    (159/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.096758457 seconds)
    (160/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.132393551 seconds)
    (161/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.10776696 seconds)
    (162/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.169294188 seconds)
    (163/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.101555753 seconds)
    (164/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.101164067 seconds)
    (165/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.122851261 seconds)
    (166/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.066379305 seconds)
    (167/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.126410801 seconds)
    (168/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.087592293 seconds)
    (169/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.12516503 seconds)
    (170/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.17459268 seconds)
    (171/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.184733663 seconds)
    (172/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.088197422 seconds)
    (173/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.137084124 seconds)
    (174/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.068008505 seconds)
    (175/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.173546835 seconds)
    (176/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.088454919 seconds)
    (177/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.11078697 seconds)
    (178/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.067194303 seconds)
    (179/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.110117792 seconds)
    (180/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.076713912 seconds)
    (181/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.133993276 seconds)
    (182/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.094419839 seconds)
    (183/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.090789365 seconds)
    (184/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.157610889 seconds)
    (185/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.164609236 seconds)
    (186/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.122583784 seconds)
    (187/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.098708608 seconds)
    (188/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.113231608 seconds)
    (189/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.190932106 seconds)
    (190/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.096485583 seconds)
    (191/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.075926466 seconds)
    (192/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.118236501 seconds)
    (193/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.067803246 seconds)
    (194/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.111613711 seconds)
    (195/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.096174748 seconds)
    (196/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.157348059 seconds)
    (197/286) benchmarking ("sort", Bool, true)...
    done (took 0.223597172 seconds)
    (198/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.109431347 seconds)
    (199/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.087311984 seconds)
    (200/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.101859304 seconds)
    (201/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.067991553 seconds)
    (202/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.067375281 seconds)
    (203/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.152120467 seconds)
    (204/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.087372314 seconds)
    (205/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.109384242 seconds)
    (206/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.234262434 seconds)
    (207/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.091302124 seconds)
    (208/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.109828508 seconds)
    (209/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.096063708 seconds)
    (210/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.111156445 seconds)
    (211/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.18488261 seconds)
    (212/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.095587114 seconds)
    (213/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.119001995 seconds)
    (214/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.288851969 seconds)
    (215/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.136104156 seconds)
    (216/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.076232899 seconds)
    (217/286) benchmarking ("sort", Int8, true)...
    done (took 0.222625095 seconds)
    (218/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.117413748 seconds)
    (219/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.068291166 seconds)
    (220/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.09421195 seconds)
    (221/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.110288198 seconds)
    (222/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.067626522 seconds)
    (223/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.090561599 seconds)
    (224/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.113188181 seconds)
    (225/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.091889854 seconds)
    (226/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.112810664 seconds)
    (227/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.109259835 seconds)
    (228/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.186325199 seconds)
    (229/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.067888796 seconds)
    (230/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.111212277 seconds)
    (231/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.092962828 seconds)
    (232/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.067374252 seconds)
    (233/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.111602104 seconds)
    (234/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.123732033 seconds)
    (235/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.069360497 seconds)
    (236/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.116234011 seconds)
    (237/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.100448782 seconds)
    (238/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066938339 seconds)
    (239/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.112569238 seconds)
    (240/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.093396939 seconds)
    (241/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.099919935 seconds)
    (242/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067743054 seconds)
    (243/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.089662823 seconds)
    (244/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.067181378 seconds)
    (245/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.067349783 seconds)
    (246/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.109200342 seconds)
    (247/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067783964 seconds)
    (248/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.11612511 seconds)
    (249/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.090460291 seconds)
    (250/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.112880151 seconds)
    (251/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.094156895 seconds)
    (252/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.1532699 seconds)
    (253/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.09632195 seconds)
    (254/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.111562484 seconds)
    (255/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066943263 seconds)
    (256/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.111021073 seconds)
    (257/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.096639282 seconds)
    (258/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.090736746 seconds)
    (259/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.068062342 seconds)
    (260/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.086423 seconds)
    (261/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.118116899 seconds)
    (262/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.067023877 seconds)
    (263/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.100895483 seconds)
    (264/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.102439086 seconds)
    (265/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.109584298 seconds)
    (266/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.067710595 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.118138893 seconds)
    (268/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.149091529 seconds)
    (269/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.10975531 seconds)
    (270/286) benchmarking ("sort", BigInt, false)...
    done (took 0.221001633 seconds)
    (271/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.109505911 seconds)
    (272/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.091304325 seconds)
    (273/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.119035477 seconds)
    (274/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.067562376 seconds)
    (275/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.06726407 seconds)
    (276/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.117578715 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.093640374 seconds)
    (278/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.090465133 seconds)
    (279/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.06879302 seconds)
    (280/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.067343719 seconds)
    (281/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.092600802 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.093908246 seconds)
    (283/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.109578766 seconds)
    (284/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.088337682 seconds)
    (285/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.091923794 seconds)
    (286/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.066912288 seconds)
  done (took 36.177515757 seconds)
done (took 37.073171427 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.104514178 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148674291 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095670838 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136215361 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123880862 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092321523 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118022511 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098875068 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.124124757 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125656679 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.09864337 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093408462 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097010022 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.119615335 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097379378 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139294022 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.12324758 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.09429268 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119089604 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086167819 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118496878 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086880908 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111535681 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070359293 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121151267 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094026106 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116361383 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120513365 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087363819 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110400014 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.092694153 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117327455 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086892242 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123722451 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093258125 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119024025 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097602748 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.120149074 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.112789846 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086645465 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.119384811 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086852359 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116807162 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095449222 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115930295 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093161844 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118605747 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099261807 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.139764175 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11629351 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095844524 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.122010225 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096937561 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118228277 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.0920099 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119168582 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.09228878 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139430471 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.119069135 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093039909 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.1186678 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095623334 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.115895733 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095270135 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119497866 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121589588 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098383426 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115733186 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097603315 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.115595845 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086818178 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118635344 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090163037 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110408314 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.0953517 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.121272691 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.109750719 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.093263124 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.11800582 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.091908238 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109520007 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089918573 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112055905 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093323807 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113053055 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.07054602 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.114395441 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093482365 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110714865 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.09643525 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116925291 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094349597 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112271857 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099543626 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111127007 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092611443 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111571803 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087494506 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113396705 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091577298 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110674739 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089893275 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120943601 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.112317067 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.094416621 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123443958 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.088053581 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117302041 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087230682 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110842018 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101635648 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121538142 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087637556 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115863905 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086032602 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118396746 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086631113 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111317196 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.111428572 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.087052361 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.116955681 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087689844 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114049338 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.094913437 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.12533349 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087447328 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114243525 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090581078 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111406422 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092808293 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111405559 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087559087 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113647558 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079129645 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113832307 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087583077 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118949678 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090406599 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.120520459 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089528763 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120450875 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.09193013 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.118455451 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.117489732 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.08723575 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074750363 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116917788 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090694715 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113358654 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087411981 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113202096 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087584974 seconds)
done (took 16.977480526 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.092019272 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184675126 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152006888 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142975023 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107937907 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112803138 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122803171 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119526276 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113643788 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143792523 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110551473 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.13256511 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147773707 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087845608 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112646579 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.092112296 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113726864 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102652093 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146487529 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133136232 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.165076185 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087077361 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146962535 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.13570055 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.122038064 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114852456 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112292583 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092002439 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115704519 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103706235 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.133030877 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.115426507 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.088763014 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.133891846 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105371505 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120377551 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088204132 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118899827 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.088038623 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.11257527 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140527381 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133994425 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.093561789 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117571506 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091539107 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.115193937 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089849266 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121226553 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.09871937 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115881219 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127082906 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156917954 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.09109026 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122572897 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086896083 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123319474 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122543523 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.09063944 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112458879 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.09076474 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112062736 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091732461 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128019075 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142196266 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091973961 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121523576 seconds)
  done (took 8.645621351 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.109572153 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140169587 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105802665 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.131863224 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111585563 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089153336 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113404768 seconds)
  done (took 1.758440416 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.09313617 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134799629 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111394395 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136177947 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132990289 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.113523429 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123383124 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089137389 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133506561 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.090307064 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135414371 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.15119304 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090382718 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121469605 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.139042181 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089260987 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138486286 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089444398 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116669353 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112090634 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117031735 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134989751 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091141379 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113777841 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103795249 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113909659 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163377207 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094186097 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114934398 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.093418106 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11205959 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.152458377 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103780397 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125268229 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090223453 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13018949 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.129356709 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08752613 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.125919384 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094849341 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128442958 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.090693045 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.114878441 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.088165421 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.11927827 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.10051764 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.118488128 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.131904509 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.09243258 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134046201 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090328892 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127801409 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089660419 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118266463 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090432152 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120224333 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.099487147 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114572731 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133612415 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091112917 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131563434 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105461764 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128181214 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130595679 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092592935 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128284002 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103761317 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116828223 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091690265 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.1178709 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.106162132 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.113022335 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115782426 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100373457 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116542189 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112693528 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.13801999 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091969052 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124999582 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.11476191 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090048531 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114828455 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.113337005 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118526853 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089706321 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11854058 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092381518 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112518452 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088439213 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118047829 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.088461344 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115973212 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.093208577 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115348257 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092518284 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131594625 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115036899 seconds)
  done (took 11.877638848 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.09519613 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115668395 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091847752 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115572307 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091032761 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116438145 seconds)
  done (took 1.592515982 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.12199801 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117933028 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.10416133 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.12146869 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.15727821 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104137244 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130617319 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124421405 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.109141996 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127983413 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129779854 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105538957 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136966758 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121944167 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.105107902 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121289263 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.104792496 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125328987 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127806116 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098073762 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136775988 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121211332 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097044542 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132059098 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118987943 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096434722 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127099323 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.105427803 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127707869 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124525036 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096140024 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118563646 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.097146508 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123543762 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129855347 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096657505 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12090709 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.11926314 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100564229 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118563787 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105405531 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121779161 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.128192794 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095708082 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124709646 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121501839 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095073156 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.12597095 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104058734 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120696384 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.122057791 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096119373 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121088377 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094763282 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.124270158 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124262652 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094694078 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.129696506 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122303554 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.097104042 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119472501 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093661357 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124445342 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119254577 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105754132 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119278697 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.122234948 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.09764856 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123276842 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.09618956 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119460407 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093553371 seconds)
  done (took 9.278887388 seconds)
done (took 34.108379832 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.688566097 seconds)
  done (took 1.6543386 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.819608953 seconds)
  done (took 1.78847602 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.840219687 seconds)
  done (took 17.840791688 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.49727243 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.578021723 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.984495903 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.180166383 seconds)
  done (took 3.209242588 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.943692555 seconds)
  done (took 1.935617956 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.287699537 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.236113028 seconds)
  done (took 1.498663589 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.779503783 seconds)
  done (took 1.76552062 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.37079204 seconds)
  done (took 2.34616767 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.329981107 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.189616727 seconds)
  done (took 1.504895495 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.552439978 seconds)
  done (took 1.536688295 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.990381833 seconds)
  done (took 10.979026113 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.271279473 seconds)
  done (took 1.269251053 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.305982653 seconds)
  done (took 1.294684774 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.486935961 seconds)
  done (took 4.478492009 seconds)
done (took 54.080925539 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.103781956 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127605114 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102051344 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124701786 seconds)
  done (took 1.441684156 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.1058748 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121654654 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101661723 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121809405 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126316312 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095895734 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123749074 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.10187013 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121383218 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096984891 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121038482 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120535519 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099810663 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123633637 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093802182 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124471776 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.124961135 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.096820761 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.126064672 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096926742 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.11937366 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098274342 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124669694 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.095430154 seconds)
  done (took 3.675914516 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.103600768 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.120077897 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.09728426 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.119029524 seconds)
  done (took 1.439148256 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.105198784 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131930207 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.105745391 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126595489 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131862695 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.106898167 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118395175 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092645905 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.120205458 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.100206502 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.116002034 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.13937332 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.106962204 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.125194634 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102436207 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114889625 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091455157 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.131543626 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125153226 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.101417782 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.118791722 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.100708864 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.115053197 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.110008091 seconds)
  done (took 3.732913629 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.176256812 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127957567 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138730533 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095958751 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159896708 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141209056 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.08922743 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141724826 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088148484 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131862756 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118936189 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134906515 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130695521 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088218632 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114199227 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088362637 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129478996 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129916543 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.092223384 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.129149331 seconds)
  done (took 3.449498362 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.103128852 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118165442 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089416572 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117700677 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099791661 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.122026791 seconds)
  done (took 1.650203958 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.096209366 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115720808 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090791952 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115696497 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094653701 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115399975 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089401598 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114796275 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089899235 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115673145 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089454117 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113555302 seconds)
  done (took 2.240024664 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.512240442 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.119372656 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121390669 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088794334 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.122486721 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089777985 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129167394 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.093279831 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141243018 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089307056 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116803648 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.094125795 seconds)
  done (took 2.716809311 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244320488 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125317674 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284239715 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.367559288 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156829541 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167276627 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.281063158 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162150181 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.199244813 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150925786 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231043368 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198558172 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152011777 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192661127 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138028281 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.145233661 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190788873 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250206897 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152622679 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212956681 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207172233 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167881686 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180511469 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152900629 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112777773 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193234643 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095777053 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130501649 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234374386 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180362073 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191073909 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161989357 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147787602 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238219653 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248151046 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196423749 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279325163 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134580775 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.167055935 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.143960271 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26542786 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139563041 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23527164 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156148172 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104402939 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221057126 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167592033 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.177862114 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.146631897 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139722095 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199557061 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244354833 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.193351771 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139303958 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299693592 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148799192 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.159169723 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191115353 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253404338 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227693686 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190252916 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.12079558 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188705485 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191322674 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21253666 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.152848424 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.183052353 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147899599 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183781155 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190625587 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167621022 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203807847 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.180047525 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139878265 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172072027 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174361951 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174646931 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260572552 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184883568 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.123427559 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171057142 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149828411 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132844605 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.169240491 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126480902 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215676021 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143275243 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.164103568 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209733686 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159348141 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162097159 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222606277 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185482193 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14901711 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084252673 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154504912 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156082945 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177055799 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140385212 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15883005 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157837143 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130881011 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171787186 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.098749109 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21179133 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092143933 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174633943 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212337697 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100902228 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162754398 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154270279 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.151227618 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179812642 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198868136 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141375534 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135055203 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211043767 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180249171 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.142146836 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178130392 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.230275554 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.118214571 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149110035 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227898523 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245211994 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113420211 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230608008 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154462238 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108936998 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.134074424 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181744581 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15752271 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162808986 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132742009 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.184214947 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234514249 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.099426619 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139543886 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195729499 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134860122 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133395045 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1550672 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148005131 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.111655434 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.144572453 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.145058538 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178093118 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179993301 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155290472 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168220467 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149668011 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251346366 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141588122 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.151595605 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149428599 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.094451428 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.193449154 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227402068 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103728795 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233546066 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.171699879 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223860572 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170417784 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106891487 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177214506 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13045347 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119969968 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193774295 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167845213 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162335089 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.196815662 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221530456 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.179880535 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.211605284 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167181473 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177200184 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.166247807 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157812502 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111049541 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161655637 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159239102 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.124534197 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.139780706 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.107517252 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150121828 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143162581 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133707313 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200551682 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170886409 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.216858434 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160359325 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149171114 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180173706 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102387041 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203896552 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.179470186 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145333729 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.199877097 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193640389 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214349549 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117113639 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227713256 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.120438615 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099938184 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.143217008 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17054826 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13469571 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108398892 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16300221 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20848956 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183406066 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172543173 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231984275 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176838573 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192156732 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095062892 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169259172 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184295553 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203443787 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.155165065 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138854131 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.152411926 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178129474 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155057908 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258453755 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169298032 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177105285 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235299706 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.123702297 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132287527 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150065612 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17784312 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154071491 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17609757 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148523683 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140453618 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16105848 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.102834678 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18814915 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186158028 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165658267 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188756429 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149536813 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213724633 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101148258 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162985864 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161353605 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166871202 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.109234859 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177048398 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20269433 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146352477 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166877209 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216411609 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104124196 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.30635699 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236333208 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19578858 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138694457 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15670072 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162149508 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162917252 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171358456 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179776538 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158760122 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188579878 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160059479 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.137318475 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140055704 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149784526 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125082129 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.134113047 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.14997436 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177648094 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139629554 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188655193 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15547644 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160453278 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172769609 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.15102657 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144648825 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151025496 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217925796 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183628182 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241579263 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151389685 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179245759 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205886497 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12643456 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131537323 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.106726419 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178348899 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137379999 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218891504 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.187209886 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200388745 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208397936 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180212576 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140421855 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.093363158 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157871611 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17112934 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22864705 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149904235 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.12075737 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233087509 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.108876961 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133293631 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166947519 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286776987 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143871567 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22211973 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081059468 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.283039425 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126238807 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105667801 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164121515 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236898363 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136983258 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.152673919 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166849099 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161846776 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163163892 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150084312 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.218080911 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211935434 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227635864 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184591962 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.105349342 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158013181 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203137455 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194106697 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1563121 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.1387483 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207952061 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195555283 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.224456067 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.114145428 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19677114 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169687798 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157939614 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187286253 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1357917 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20892798 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135641821 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192946671 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153380633 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13906131 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177987345 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.214589912 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114317051 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216174997 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183515165 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136391798 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10649946 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193333871 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180309879 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155279021 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100571427 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210427487 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.098509442 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220782754 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235000846 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135394852 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155535074 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147672958 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108575463 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154229657 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158202545 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13960407 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.163422726 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202745876 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.13601599 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192211378 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232372709 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173609617 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174634156 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146865508 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.694497782 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131099296 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196450717 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148282826 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206700079 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152093091 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172807544 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1603805 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170480207 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224189878 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162462143 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.230544443 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19241749 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.179795351 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133935025 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159574466 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1563033 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145805013 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154231139 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168749935 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161491791 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.145105288 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.180619139 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166469459 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.134573176 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112223125 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227744767 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12074221 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215200286 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180694785 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111449044 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201377602 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187533592 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133934819 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.182413735 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236839234 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115127254 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149522087 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134896136 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.15217053 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26194045 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.097272033 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219220584 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186909274 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16012432 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170533666 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147809139 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193309772 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158680475 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214060486 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116366269 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159566929 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157484308 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139062025 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.130951425 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156792074 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169480761 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.12212378 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18811345 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.139280612 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19403479 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.125136973 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144783664 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286536803 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177854688 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24556893 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.108147728 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136410285 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165195792 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151164199 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.178167982 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177941794 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.137354661 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135347066 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.13700127 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.128793555 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112065276 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156484601 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191077966 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193680581 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208645137 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.137242325 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.278112076 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113191648 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156825235 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.115407933 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.105258643 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150656172 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146477332 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156683761 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192904155 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262272078 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.148296976 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.133255363 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149714217 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.099207438 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135904672 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164221176 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166939657 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181087118 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144860437 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081521112 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156570324 seconds)
  done (took 82.739446541 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.167179128 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.132022801 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147916645 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201931726 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176072741 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.269357708 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.21106929 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.254015146 seconds)
  done (took 2.648202512 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.098958096 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.146050734 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.158015235 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132181558 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092116557 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119628464 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.341573245 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133297243 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.11633536 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.122038982 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.173366317 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093891515 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.548363311 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090689758 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119367139 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.107775583 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091870985 seconds)
  done (took 3.767570154 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.19800849 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.497028053 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.012375094 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.194577381 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.160160313 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.117688739 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.704813062 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094690415 seconds)
  done (took 12.072404195 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.119072532 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136832503 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.12365914 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.152985476 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.1411772 seconds)
  done (took 1.778124853 seconds)
done (took 124.336361692 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.101966192 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128676644 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097409666 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130293943 seconds)
  done (took 1.537683543 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.099290109 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.07124853 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100789828 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075645593 seconds)
  done (took 1.438634719 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.189917096 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.168269379 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.384205183 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072205041 seconds)
  done (took 1.581438083 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.120060936 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132408232 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104292335 seconds)
  done (took 1.461143573 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.112265855 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129582774 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103439512 seconds)
  done (took 1.445222229 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.110312202 seconds)
  done (took 1.210390297 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.113669992 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.138012329 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.10919444 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.137396442 seconds)
  done (took 1.599214147 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.102232804 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127001021 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109510138 seconds)
  done (took 1.437685392 seconds)
done (took 13.161285581 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.108811708 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.41841381 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.412396137 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110566607 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.720363852 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380445942 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.040479662 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145521748 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165477902 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093824117 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139193762 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673580176 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.067726746 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.373127161 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.026870179 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.371746595 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.682066537 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121169931 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091889413 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122732903 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.023882416 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092613734 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121499019 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092355866 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.702965472 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.398172287 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122957258 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.371803576 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092606016 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126361644 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382945076 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123463928 seconds)
  done (took 17.004643981 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.101491805 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17337136 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098354442 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12416492 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123119224 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095489 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124749927 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093214783 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179296673 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123287548 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111784548 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121573762 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.124870479 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.09585085 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141049551 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095752296 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124978801 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093334207 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121914716 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094451634 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139719801 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120522871 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094853054 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121841199 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.09460723 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135973696 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.0940327 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121532999 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120612462 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099164137 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.12703673 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095279493 seconds)
  done (took 4.827179239 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.144288842 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183344495 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128514756 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127115977 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.169322131 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124095212 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199354478 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.11803039 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182969641 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122513977 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140065417 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.0925595 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156671477 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.121700098 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115504324 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.12142272 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09714529 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12277444 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093221401 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122452253 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139586865 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093709827 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122593108 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094227336 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123183233 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.109349503 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.1239033 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120998829 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094290376 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127773718 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100460907 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12423836 seconds)
  done (took 5.166336296 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.103915417 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125778617 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109192288 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.13852305 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095804656 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.12599539 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097419656 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124609813 seconds)
  done (took 2.026174772 seconds)
done (took 30.125958093 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.116020952 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126866717 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107255692 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134324016 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103546667 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131014709 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091667025 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134156648 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133601101 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103763658 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136868448 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092168121 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122540643 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092485133 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135286697 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097625503 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132739074 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102928902 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.133667175 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131442594 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094700186 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133406714 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102387639 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132841393 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104432357 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134480172 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136899117 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.09954353 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.121985579 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094632933 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.123887642 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103944816 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.123986718 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105263432 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127686103 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097437973 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.12389586 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094649358 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133412382 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133143958 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099938391 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133644341 seconds)
  done (took 6.011453448 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.111970664 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.139552891 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105062899 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081661152 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117491143 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080611197 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137095159 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079039762 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109796404 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108688117 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074883655 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.105841137 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079059637 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101323185 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077743933 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076036176 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108540557 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076307355 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076437194 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105335195 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080023037 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072864619 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.107793345 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078306031 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075196437 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110321136 seconds)
  done (took 3.588493339 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.105122604 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.13421816 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113562184 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183429761 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160252957 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.09946772 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132281836 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.139082679 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109176559 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120350827 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.0969944 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149400403 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109693537 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129482681 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092150105 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137344381 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135090281 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094367647 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128148202 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112701903 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138342535 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103192463 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141266498 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133760642 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092614016 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122517302 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096870385 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135023978 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097768808 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131580076 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096592802 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.124874956 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122629538 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104738809 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125824251 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.09448242 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.14203227 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102839357 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.13088988 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.121430336 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.101671861 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122272181 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113520454 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.161124238 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.092318918 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.12974336 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.124001669 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103537825 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120902915 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112366128 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131559492 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092290581 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125550741 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091969751 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122395309 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10679977 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.123903721 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.096123932 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132014242 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.127167653 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106103597 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125456042 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109374001 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122452996 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100355231 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121654297 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092776873 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121267386 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.144223822 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094478476 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161300436 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.0940461 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.1242851 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.102309862 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.130044044 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128859862 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094212413 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137384628 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10220627 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125582997 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102666868 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.125971311 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095435045 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140703143 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.123457505 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.09520802 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.122802824 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100158769 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124660308 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.09429591 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136746008 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092429779 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.126514038 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.11092375 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.121748873 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.121982862 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100195636 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125578941 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092448189 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135653441 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.099135795 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.123319171 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.13184713 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093718658 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124547099 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.104124554 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127170167 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092930378 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.12742558 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.09961398 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.12345817 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093734158 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126545571 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.095667414 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133340422 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128930279 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098565359 seconds)
  done (took 14.845399775 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.232713405 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215483264 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.207590176 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.292251852 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135843142 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115296148 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212914772 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.156517146 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124412029 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.161441313 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.171409296 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.182148956 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.139557013 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.212482735 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.171149786 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093573776 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.142962298 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.135482925 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.245270187 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.259369067 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.144552731 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.101768128 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.16455218 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160816198 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137569633 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.10368 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.140289767 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.134309946 seconds)
  done (took 5.825863331 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.112668402 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155978819 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098420986 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145363442 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149037718 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093329412 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.12767799 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094430274 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135359205 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136412947 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093582769 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129839417 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.101194619 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.1319355 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.122647724 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103440729 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.1329079 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.0955771 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127120289 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.098069163 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.134677441 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102404008 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.128541381 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.121276157 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103605058 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121648125 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086295581 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143378662 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123459013 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115981647 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121559055 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102467268 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.13679214 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.09532693 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123380601 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.096390054 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125689258 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094845928 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125108817 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092033528 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123955919 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078412148 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122209218 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.137999346 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.100733351 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080542002 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130572536 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128983254 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095697141 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120503826 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096760212 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.12519188 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096983789 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.13105145 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.09592949 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.125082415 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097267914 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.11669536 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100688255 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.12573407 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084873363 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121550956 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098825381 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118725771 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101770217 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128113436 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092791135 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125325524 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097895242 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129611111 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095890601 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.130263804 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.09102032 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126641734 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.09624731 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.12955448 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.125922535 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093272117 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.121948971 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.093848843 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075353756 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.123506688 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074087951 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126885456 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092213229 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122356219 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.09577259 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130252255 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138083382 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095017941 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132444875 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.095013574 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122570647 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096450405 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114004128 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.097255966 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140611481 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.142854942 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094853011 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122535775 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108308121 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126522003 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093336057 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.107006716 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102813316 seconds)
  done (took 13.017699379 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.138553416 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154658813 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.124544503 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.112591562 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.157560662 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158427134 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101619261 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.132146112 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.096027948 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142759947 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094561571 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132919093 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.094734863 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138428026 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157734287 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104390431 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125727027 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.109450266 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128815041 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.169602376 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112285225 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143545933 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.110879173 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124578033 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129083152 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.11252734 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161303502 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107606965 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137150187 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142552073 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108957548 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161199009 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143997157 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098970954 seconds)
  done (took 5.515611104 seconds)
done (took 49.90936856 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.24057702 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.430503992 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.202447138 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.110164465 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.261032651 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.234865831 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.234277007 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.207804138 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.275646946 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.207699717 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.445797674 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.783242961 seconds)
done (took 58.764927812 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.243120233 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.360119023 seconds)
    (2/2) benchmarking "String"...
    done (took 1.520467437 seconds)
  done (took 4.008790438 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.795688792 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.143562495 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.46555828 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.204949338 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.204598053 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.494522889 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.91130388 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.579817105 seconds)
  done (took 28.131034082 seconds)
done (took 42.308116795 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.208309002 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.234868413 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.248977388 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.183906805 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.311720956 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.22983296 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.516088905 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.217820351 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.229153029 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.18813991 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.223939265 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.207576339 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.230311194 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.549323308 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.20574492 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.206393381 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.266714692 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.719394416 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.622041535 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.217719853 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.219669751 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.210786986 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.223118831 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.208429394 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.271128158 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.219101924 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.207360299 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.210870586 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.794880187 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.210930052 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.217122157 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.717351657 seconds)
  done (took 190.856168779 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.207673906 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.236648055 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.262539327 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.226601157 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.571606999 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.408700743 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.351670975 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.659123252 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.225643975 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.224979025 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.430386162 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.211067535 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.480184035 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.181813878 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.238396606 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.242561603 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.499349695 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.482122075 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.247506668 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.366703971 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.212301555 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.550922731 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.480710035 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.376929807 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.215014072 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.24471422 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.217006393 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.226269861 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.39909582 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.436147473 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.240235591 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.228237437 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.827112436 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.061684976 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.220529828 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.221248297 seconds)
  done (took 150.043935132 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.208097072 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.207888853 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.209188475 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.243476973 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.209941508 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.792755314 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.7917536 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.719827607 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.716787445 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.588246202 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.469163259 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.207146514 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.304814445 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.22198313 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.208223441 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.226590058 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.253179644 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.212085144 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.211678236 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.790983298 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.224160168 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.251858172 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.387616815 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.223250142 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.245232353 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.604191095 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.208109062 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.244649199 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.546385083 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.259953261 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.209132301 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.601812013 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.754522687 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.323963646 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.210437146 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.245063863 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.212964049 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.498116434 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.211993095 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.212353823 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.213004133 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.215967786 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.212033504 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.900264968 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.213008034 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.796604278 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.21435936 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.164104781 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.20986231 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.21241286 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.482582429 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.817268429 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.226262435 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.213656672 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.215981509 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.214120058 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.212829929 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.246225425 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.464798206 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.309962869 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.230775564 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.218837305 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.245619052 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.212888279 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.241358004 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.210783116 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.676461599 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.282986198 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.320895886 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.794066808 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.214602779 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.314680029 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.333800502 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.212379062 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.214812404 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.213217819 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.214589264 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.324977518 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.211710891 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.623609813 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.388447369 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.22864031 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.601604127 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.31230179 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.211406316 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.626555927 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.215125561 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.215272016 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.028601941 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.313474848 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.211780369 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.214669188 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.215219803 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.621738134 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.79571825 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.474699008 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.216589807 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.512418576 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.216652198 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.639842729 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.769344316 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.212707781 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.899985841 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.217204242 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.331679303 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.390016806 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.229211827 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.215038556 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.607014262 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.217837177 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.276236332 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.213999655 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.215809169 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.615210828 seconds)
  done (took 367.347720284 seconds)
done (took 709.37761837 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.821400157 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.815753357 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.922072019 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.806291978 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.775709134 seconds)
  done (took 10.278795735 seconds)
done (took 11.417616411 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.408551603 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.407429797 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.278964081 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.410068283 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.250732657 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.426299321 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.385443224 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.236633299 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.319395709 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.300851984 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.318452352 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.269797659 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.252135161 seconds)
  done (took 18.401726375 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.525432496 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.538312546 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.278145557 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.536155742 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.255312299 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.546427897 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.416614084 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.433801515 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.435809646 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.247414177 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.231283941 seconds)
  done (took 16.583434166 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.550857485 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.536384902 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.282148429 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.541972503 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.256201869 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.545359708 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.412783446 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.434506917 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.433837421 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.247608127 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.23279098 seconds)
  done (took 16.613826617 seconds)
done (took 52.739472795 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.226537284 seconds)
  done (took 2.3648744 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.262029617 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.420659218 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.244633035 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.235361785 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.228378255 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.228514451 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.235108162 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.229087763 seconds)
  done (took 11.224449755 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.225421667 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.227125584 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.22816267 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.225158106 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.225257585 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.227908385 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.227519212 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.225844441 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.22460741 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.227948925 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.228126716 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.227231292 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.227828325 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.22560736 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.226762969 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.228246088 seconds)
  done (took 20.770026787 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.229011254 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.225213227 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.225468103 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.225607723 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.226003827 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.226994023 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.227290306 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.225738782 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.22613488 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.226365307 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.226839516 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.225137103 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.22730759 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.226219928 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.226452383 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.228080732 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.22743265 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.226821589 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.230968377 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.225828656 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.227005593 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.226311275 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.226976578 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.227608229 seconds)
  done (took 30.586529877 seconds)
done (took 66.086661157 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.860140688 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.939650391 seconds)
  done (took 6.941130548 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.229878087 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.229906834 seconds)
  done (took 3.604767415 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.228981715 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.229246345 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.229181028 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.229537182 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.23053865 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.230335847 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.22952284 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.229958986 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.230865679 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.230201076 seconds)
  done (took 13.442414524 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.229463212 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.22979254 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.229083783 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.230741246 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.230273705 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.228533775 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.230999276 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.232068974 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.230769226 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.229203706 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.231061652 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.228998299 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.231702597 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.228494751 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.230803949 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.229377712 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.228080325 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.228755567 seconds)
  done (took 23.281717831 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.232623054 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.232381513 seconds)
  done (took 3.608770941 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.229667128 seconds)
    (2/7) benchmarking "second"...
    done (took 1.227601563 seconds)
    (3/7) benchmarking "month"...
    done (took 1.228605136 seconds)
    (4/7) benchmarking "year"...
    done (took 1.228073648 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.228445683 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.229581081 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.229603539 seconds)
  done (took 9.7465548 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.232975744 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.405856198 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.488542014 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.8273296 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.233423304 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.236073874 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.1015683 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.235675038 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.237609523 seconds)
  done (took 14.143839607 seconds)
done (took 75.913190416 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.258750833 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.24319452 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.484624011 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.23286081 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.241010566 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.52494375 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.291205627 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.356712094 seconds)
done (took 37.780823367 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.227373774 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.209277384 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.05900993 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.216792357 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.352240913 seconds)
  done (took 18.98424025 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.348741105 seconds)
    (2/2) benchmarking "read"...
    done (took 1.565819008 seconds)
  done (took 5.060993068 seconds)
done (took 31.419862951 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.234184337 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.232878098 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.233260586 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.231974624 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.233201796 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.231164085 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.23138173 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.231386902 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.234493609 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.233880686 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.234876573 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.231740503 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.234636646 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234330836 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.232098372 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232069617 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234348732 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.231714374 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232741491 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.236336921 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.232816688 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.235694007 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.231639027 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.232605295 seconds)
  done (took 30.74072207 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.235731564 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.234079012 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.236115894 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.235180006 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.233937041 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.236410292 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.234853909 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.232474241 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.235813191 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.234467817 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.234062294 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.233700868 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.236458692 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.233558118 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236201819 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.233371509 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.237000094 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23323515 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235516707 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.233764494 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.237010694 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233331905 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.234862152 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.236034785 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.234350704 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.235184823 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.237876039 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.235043986 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.237356141 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.233927684 seconds)
  done (took 38.200120554 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.243222397 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.246109255 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.237049847 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.238408402 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.236704728 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.236514295 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.237679501 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.23748714 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.237935341 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.238343696 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.238301498 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.236179463 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.237340444 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.238380583 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.237846095 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.238775243 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.237825837 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.238961109 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.237946993 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.237645201 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.238523408 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.237185963 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.237207327 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.238924648 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.239448143 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.238336216 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.238760521 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.237691142 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.238392266 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.238645356 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.237872075 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.238681782 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.239507327 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.237814037 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.238664638 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.23827525 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.243823066 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.245316207 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.237976923 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.239178343 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.23976369 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.239860585 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.239676597 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.239362434 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.241051395 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.239885407 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.239255042 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.239399767 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.240607336 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.239754284 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.240300475 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.240552208 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.239258443 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.237731715 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.23770415 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.238063491 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.240568748 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.239900733 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.239432836 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.239798345 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.241640723 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.239974961 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.241293452 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.241529826 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.240559261 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.241216841 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.241738176 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.240381598 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.241563945 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.24233758 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.241928751 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.241122961 seconds)
  done (took 90.387597175 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.241343883 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.239080055 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.239484344 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.239526798 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.238275997 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.24148545 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.239010229 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.24255191 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.239839029 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.242236028 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.241313816 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.239446102 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.241184361 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.243204919 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.242529493 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.241005432 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.242187587 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.239643555 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.242089853 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.243477821 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.242414294 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.241554125 seconds)
  done (took 28.45774608 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.24278988 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.245677196 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.240169102 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.242414319 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.241113895 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.244421814 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.243812416 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.24468231 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.243865011 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.241276312 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.241881609 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.243675393 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.241026967 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24162228 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.241081994 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.243111486 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.242386379 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.242798817 seconds)
  done (took 23.523125376 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.241838893 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.242264464 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.245471451 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.240686541 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.242259277 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.2444404 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.241635987 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.244884786 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.243886234 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.2416957 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.244584161 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.244926688 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.245066633 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243017602 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.243959726 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.242695436 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.245743372 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243173072 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.245493136 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.243311064 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.243187757 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.24546775 seconds)
  done (took 28.516890151 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.246706555 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.246220739 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.243492441 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.24356792 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.243895748 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.245518559 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.247319832 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.244774867 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.246532471 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.245177636 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.242862321 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.246201666 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.245389842 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.244902809 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.243514697 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.243278425 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.246237708 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.244417889 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.246021932 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.244766164 seconds)
  done (took 26.058585771 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.247843044 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.247914573 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.248661674 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.248705695 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.248293229 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.248242084 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.24897179 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.249007403 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.248971267 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.249328192 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.249537842 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.249923452 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.249930588 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.24965441 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.24974572 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.249389879 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.249500033 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.249648078 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.250070687 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.249070549 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.24910324 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.249431553 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.250210259 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.249870279 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.249957854 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.2500505 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.249924593 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.249474784 seconds)
  done (took 36.140364187 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.248834548 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.248999879 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.245278784 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.246209057 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.247086687 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.246123716 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.247110249 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.247076056 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.248536888 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.247135936 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.247932209 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.249351815 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.248995386 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.250353267 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.25034447 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.249996376 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.250064368 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.248210723 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.248560034 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.247877794 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.250721582 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.249396296 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.250244283 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.247265855 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.249159118 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.251498314 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.24810565 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.248980228 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.250264547 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.249138146 seconds)
  done (took 38.6191637 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.26923843 seconds)
    (2/2) benchmarking "in"...
    done (took 1.269514584 seconds)
  done (took 3.701506698 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.248464217 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.251262162 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.25057406 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.248044849 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.24953539 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.250715391 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.251117554 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.249836918 seconds)
  done (took 11.162464989 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.250512977 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.249954462 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.25301971 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.251651635 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.25048248 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.252372211 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.259250958 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.272390879 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.252419475 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.252430213 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.259366119 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.262371189 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.255132549 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.2529649 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.252420319 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.25243011 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.25191237 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.252785316 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.254326296 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.254915068 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.253596043 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.255245308 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.255067611 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.249303809 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.255175555 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.266015902 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.276506792 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.252469724 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.254810295 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.258838887 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.254281976 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.251372067 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.254932346 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.255010433 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.254383465 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.255534729 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.263948441 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.272566971 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.26064241 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.272555744 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.25497532 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.251700335 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.256049155 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.256114474 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.255662264 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.255372421 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.256365428 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.252353618 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.255332479 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.257860223 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.261478874 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.253863616 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.25129094 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.257606305 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.253850649 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.261664118 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.274147223 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.259826802 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.266926859 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.268341632 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.287294507 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.280129641 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.258195526 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.256690296 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.267872096 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.282466105 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.263135614 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.272342052 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.252508317 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.257270798 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.263485397 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.287980937 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.281493272 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.254704612 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.257046051 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.257492849 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.254504996 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.254903673 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.264103001 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.276177958 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.255899752 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.258003481 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.267619747 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.28933949 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.256017778 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.255950037 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.25861621 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.258938795 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.26012412 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.267443357 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.275890787 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.259123384 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.255001542 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.255916275 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.259382718 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.259907075 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.257815542 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.259045734 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.255355595 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.259479076 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.257764518 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.262954941 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.268509841 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.258481759 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.259281334 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.266232392 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.278966016 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.259220481 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.266180475 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.260143254 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.259124036 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.261616634 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.266476701 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.256582043 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.263011017 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.268963702 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.259384493 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.261161901 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.260161153 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.261204934 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.269110344 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.286866207 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.258949026 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.261274311 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.263867679 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.274078435 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.260846632 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.2636886 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.260251586 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.258711161 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.259072152 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.262460438 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.262550697 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.261943043 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.258973895 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.261319225 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.257655284 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.26095266 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.260778177 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.261711026 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.262820343 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.261527489 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.26083436 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.265900616 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.261995204 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.262582233 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.266611153 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.278497612 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.262087231 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.262727188 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.261055973 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.262516084 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.264312904 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.261070186 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.262793662 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.262565214 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.26244059 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.260946886 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.263754277 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.26281044 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.264229239 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.262907569 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.269793086 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.263918542 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.268015308 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.261095514 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.258766128 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.263217471 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.264105176 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.263257701 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.261660421 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.262701808 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.26474063 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.272352283 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.263393738 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.264376311 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.266553967 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.265797237 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.267900003 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.266017997 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.270389551 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.276349694 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.263917511 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.277295632 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.283432402 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.266077888 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.264988352 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.264707797 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.260863359 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.262270881 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.2687652 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.273544241 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.275434637 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.28744036 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.263512708 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.270609724 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.264152795 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.267972171 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.270025642 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.262835674 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.266493709 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.264201033 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.26547717 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.264668281 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.267481656 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.264139576 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.264966113 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.265141063 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.263384761 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.264011408 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.265845743 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.264296398 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.265215337 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.261662225 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.264745906 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.264170491 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.266261482 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.263110645 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.263087134 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.264303706 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.265526642 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.265642817 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.273335305 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.262633844 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.267227492 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.267974565 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.265668866 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.263099076 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.268134888 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.267343431 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.266482277 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.273761785 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.285179864 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.266523112 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.27162405 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.285055227 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.265393717 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.269801437 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.266737318 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.263872959 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.270025152 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.275792481 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.268144812 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.267417396 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.269297227 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.269565505 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.267279176 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.275436883 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.284153898 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.268540133 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.268936151 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.270687033 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.266741168 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.268440881 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.268774792 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.268667306 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.27024507 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.269699707 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.270227406 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.270066819 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.2711001 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.272070705 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.271820969 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.274077206 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.277494971 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.273849809 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.268082743 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.272017549 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.268953566 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.27300109 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.269233677 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.26895799 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.270955327 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.281614378 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.292058319 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.2784269 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.29056899 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.270392162 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.275797929 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.288688545 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.275121917 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.269740945 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.270140995 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.271810389 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.268848467 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.266797919 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.269589368 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.270776303 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.269568577 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.269572183 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.276116689 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.2710746 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.269191941 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.270085819 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.271710719 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.271489725 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.269610583 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.271138189 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.27310915 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.271848489 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.270109633 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.270902659 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.277095273 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.289023654 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.271652025 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.270175218 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.270531885 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.27024123 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.272088336 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.270857182 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.273529765 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.280110162 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.275680158 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.281432229 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.271481905 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.284357617 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.272053754 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.276066794 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.281379115 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.270385209 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.271030965 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.271687702 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.272226248 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.281416766 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.291894208 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.275333751 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.27798267 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.273933398 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.275073398 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.274305895 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.272312267 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.27298644 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.273117693 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.284030192 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.292628989 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.27737924 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.274255421 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.270510769 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.273377834 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.272354701 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.272161267 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.277016418 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.273768407 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.273193627 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.272454174 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.273151648 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.27348753 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.274324964 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.275623567 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.270305088 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.27401482 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.281329314 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.294068539 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.280195385 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.276318758 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.282535557 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.295120548 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.284491094 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.294657117 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.276645809 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.275862028 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.276636267 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.275350041 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.27465688 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.276458796 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.275154267 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.277932125 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.279203618 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.275480875 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.27989506 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.275495778 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.275960801 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.276355142 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.287152279 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.300546637 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.275451983 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.282842805 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.272421956 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.276088522 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.283164192 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.277714213 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.276078195 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.277874942 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.28904387 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.285803095 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.277447708 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.277363848 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.278769964 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.276602313 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.27803073 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.27743157 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.276387596 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.280095239 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.279197328 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.279851314 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.281050381 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.278441576 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.27640319 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.281046043 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.277508654 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.289835497 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.296650091 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.280939193 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.279207993 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.280700729 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.280764336 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.280064983 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.280048083 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.280445048 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.279352496 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.28018489 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.289141854 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.285775603 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.280964197 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.278183737 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.279158105 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.279596433 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.279565025 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.281272261 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.280651078 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.281384222 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.28079909 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.278820875 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.281155656 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.278514566 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.280351972 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.278945047 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.279210662 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.281776818 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.288686045 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.279335633 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.277254441 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.27960101 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.279173755 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.27611113 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.279468216 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.287106951 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.302224959 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.290830522 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.28870162 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.284005974 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.280880299 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.282066375 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.290656143 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.278186701 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.282290883 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.279685915 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.282528008 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.280702726 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.283280169 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.281963926 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.289999266 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.299933155 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.282535797 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.291147875 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.300011921 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.281264416 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.285037839 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.289068344 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.28098 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.280644223 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.283546847 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.281627919 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.289152464 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.302025398 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.283778969 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.285782893 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.28137168 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.286227108 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.288852215 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.285106527 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.282067451 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.281344242 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.283352964 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.284357044 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.283921627 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.280162973 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.282062422 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.284231726 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.287879867 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.29255402 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.283412028 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.284556818 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.282218789 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.2836844 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.282939903 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.285497132 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.280502403 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.279471749 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.28264939 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.283913943 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.285496385 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.286614367 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.283321234 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.286131043 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.287243126 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.283543403 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.28756056 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.297248491 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.294614724 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.281077835 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.283112375 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.284733355 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.287449197 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.284351365 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.286981348 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.286756229 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.285506049 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.285035313 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.283974826 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.28680955 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.287337878 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.304049849 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.304443157 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.284752372 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.285543186 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.288191692 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.28712277 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.281939485 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.285911464 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.287514811 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.28873845 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.295878923 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.287059368 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.292834787 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.304473369 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.286930768 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.29155158 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.28751964 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.294402035 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.28914607 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.286048528 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.287784179 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.292464774 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.30536501 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.286128371 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.29698251 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.321225003 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.306509156 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.28824817 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.287607846 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.287805301 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.288629862 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.291583591 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.288663048 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.289780351 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.287910452 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.287804724 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.290511237 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.294513307 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.289188373 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.290348525 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.287484537 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.286980457 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.287707968 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.285998267 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.2881048 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.289968553 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.287781358 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.289675026 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.289302139 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.290011735 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.300537306 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.314827301 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.287774514 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.288256776 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.288588949 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.293097001 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.29198023 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.304169497 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.29854253 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.289107764 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.290513615 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.291326527 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.29001989 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.290596258 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.289772919 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.287512493 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.290877371 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.287340698 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.302343084 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.316894619 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.295351186 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.289047281 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.290027217 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.292155149 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.291631114 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.291791632 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.292234829 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.290470682 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.292067824 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.295998777 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.291908541 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.290143342 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.294031082 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.300338949 seconds)
  done (took 760.787234457 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.290366492 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.28951901 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.287561798 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.287960595 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.290350817 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.287401611 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.288193076 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.287644452 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.288603285 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.288265238 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.289067515 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.288614073 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.290257957 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.288729608 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.287714527 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.288673225 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.288428992 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.288875695 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.289829963 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.288793387 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.288987326 seconds)
  done (took 28.264489791 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.294123848 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.290142702 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.288735079 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.292221615 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.289947689 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.291904773 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.289803942 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292525985 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.291186544 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.290387967 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.292836632 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292216547 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.29039327 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.289002269 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.290548593 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.293390016 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.293439321 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.290457095 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.291765744 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.29174214 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.294256973 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.290913233 seconds)
  done (took 29.61309 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.297172347 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.297336072 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.295438779 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.2918412 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.294834574 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.290274558 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.29617805 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.296776801 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.293722743 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.294750442 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.293190323 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.295029829 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.303630792 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.301205325 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.295800974 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.296793276 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.439272378 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.295467959 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.296893192 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.296659712 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.294896361 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.301061499 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.311828612 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.291935701 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.293400452 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.293917802 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.297070386 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.29439589 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.295012806 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.297835944 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.301980393 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.297390259 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.294072147 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.296786923 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.294964051 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.296646038 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.300071803 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.296254112 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.29418943 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.29445371 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.305637846 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.320487967 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.295354471 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.304618887 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.316479888 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.29511295 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.299717221 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.308329114 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.295204169 seconds)
  done (took 64.944642067 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.297906487 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.29625729 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.2930075 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.297850313 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.296883047 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.297084656 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.296212046 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.296722285 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.293196 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.293587061 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.297007743 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.294639897 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.293781445 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.296785443 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.298263228 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.294314791 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.293500828 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.295693903 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.295295817 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.294777311 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.29546693 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.298284043 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.29766821 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.295262489 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.296968692 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.294783293 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.295342752 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.297671506 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.295593175 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.295342288 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.298270188 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.300169819 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.298919663 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.296184578 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.29588715 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.297331777 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.299970648 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.296330739 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.30093554 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.295941597 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.298129329 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.298818454 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.298041077 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.299080391 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.297469523 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.296253988 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.296066587 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.298239407 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.296992942 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.299534085 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.299807457 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.297194971 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.299272238 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.296469261 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.300887073 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.298934112 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.298780712 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.296781571 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.300494961 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.298149438 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.298576168 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.300805903 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.298204214 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.301025876 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.300664073 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.29789214 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.297620967 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.301167295 seconds)
  done (took 89.424324675 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.302360104 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.303332105 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.30269574 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.301736775 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.302703757 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.302547695 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.303185732 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.303153831 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.302646883 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.303688815 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.303544525 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.303149955 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.301677643 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.304427084 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.301351614 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.30371716 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.304868312 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.303895344 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.303485094 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.302921181 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.303287259 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.304402785 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.303758915 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.304390428 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.304695507 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.304145253 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.304040429 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.303572657 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.30437268 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.304738408 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.304606971 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.304345862 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.30440378 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.302574703 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.306536393 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.304779164 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.306238141 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.305367995 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.303294627 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.304779493 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.30396151 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.305878566 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.306733489 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.305442085 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.305970007 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.305804439 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.30642849 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.305173344 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.30537488 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.302713516 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.30548438 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.303921538 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.304867969 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.306016836 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.306225342 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.306142327 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.303664823 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.305049213 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.30606597 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.306646331 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.306292982 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.305706382 seconds)
  done (took 82.079968637 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.307836654 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.304187248 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.301588831 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.301710934 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.305178421 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.302780521 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.305251565 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.304189176 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.30479231 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.306175402 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.304355391 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.302041588 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.302866569 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.305694851 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.302733124 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.302963845 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.302708074 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.302298772 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.30597452 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.304096857 seconds)
  done (took 27.292281655 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.305292202 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.306951995 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.304247072 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.3036405 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.306398779 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.30302441 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.304945024 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.307421123 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.304385767 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.306631334 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.305928629 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.30674241 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.303989823 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.305099388 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.307430286 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.303946978 seconds)
  done (took 22.100420947 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.305455296 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.306903752 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.307055679 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.309587669 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.306426655 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.304329173 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.307170353 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.304767149 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.304580417 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.308187619 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.306263794 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.308544019 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.310442552 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.308882135 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.307459538 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.308387984 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.305687059 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.305625063 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.309272947 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.307644059 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.306339647 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.305023077 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.308565073 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.307888383 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.30528871 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.305185309 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.30654732 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.305364708 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.30405118 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.307915223 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.30552519 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.305201157 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.305051386 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.30521737 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.310156357 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.302433855 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.306038375 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.305074247 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.306135514 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.307136976 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.305506565 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.303915616 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.305957619 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.307310002 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.304310554 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.307505228 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.303635119 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.3049439 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.304365691 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.30788011 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.308409937 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.305292369 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.308120395 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.306275906 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.306853628 seconds)
  done (took 73.069000326 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.308833435 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.310647559 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.306007751 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.307380957 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.309773341 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.306132763 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.307438711 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.309375671 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.304802707 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.30830429 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.306671277 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.309747067 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.301774284 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.307404979 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.305048886 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.309080785 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.308514755 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.304106089 seconds)
  done (took 24.746815251 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.306630382 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.304575723 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.306954639 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.303380988 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.303838249 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.30942673 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.30341576 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.30791502 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.308137322 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.305897199 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.304412372 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.308008063 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.307410587 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.307279002 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.30493895 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.305716385 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.307512844 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.307433701 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.305437112 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.304258497 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.3080154 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.30813377 seconds)
  done (took 29.953095629 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.309441024 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.3055601 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.305671465 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.324308416 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.325848673 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.331092851 seconds)
  done (took 9.116356625 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317095958 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307874392 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.306291217 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310040019 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308643784 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306815271 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306186087 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306130066 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310169379 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306055555 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304767643 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309641532 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309443947 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305729721 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307796266 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308713873 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305274991 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306090606 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306755249 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308917493 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306140964 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307219612 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306491768 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30517489 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306716255 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305210137 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308052165 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305928885 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307524576 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309531154 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308704933 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306639697 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309030677 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307847641 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310659146 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310707905 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307508931 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310306095 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309902743 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307690538 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.308906223 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31190437 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310305039 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309515042 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309968372 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306918012 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30747647 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306861173 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307733205 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310498653 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310642491 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30866612 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310951622 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310561248 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310741862 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310512572 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309366801 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307733253 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311156563 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31069562 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309037345 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31127721 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309004884 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308411011 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312016458 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309370973 seconds)
  done (took 87.608164308 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311767183 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.309689375 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309643312 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311142501 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309908691 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309214137 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310146101 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30958102 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309577243 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309107552 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3148342 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309991169 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312149386 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311158545 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313077005 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313317413 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3114983 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308983712 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309661151 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312725533 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310599225 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314205979 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312749054 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312590609 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312143225 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315807963 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312645954 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313988631 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31403822 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311385623 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310262282 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309918888 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309634876 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.310895637 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311129405 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310644116 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.3108207 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310941852 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31133571 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313022213 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31114628 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314464334 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313421348 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31424536 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312170777 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314254393 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314241954 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312485929 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313086046 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313167738 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312167406 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313077644 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313938944 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315763727 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314077759 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313689151 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315461403 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314558691 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315655436 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318305281 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314934429 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316838203 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316188024 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312744748 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316027169 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313297717 seconds)
  done (took 87.847494612 seconds)
done (took 1773.504039497 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.47907274 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.433284638 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.316371814 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.329591312 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.312596336 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.314074694 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.321212177 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.311979592 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.31673873 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.314832531 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.316337389 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.503242971 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.370713546 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.312689747 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.316473836 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.411148359 seconds)
  done (took 42.903731066 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.346245731 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.320929509 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.437029954 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.341486764 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.343951241 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.510144197 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.375437948 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.321335274 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.501187877 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.365149365 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.916906101 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.342065179 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.321302335 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.475412048 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.334690789 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.507007721 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.574990918 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.910474092 seconds)
  done (took 30.4686539 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.785209394 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.315433812 seconds)
  done (took 9.32374285 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.341345011 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.317267031 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.318543775 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.319534363 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.312416687 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.321575544 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.319140138 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.309557405 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.076154424 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.44965648 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.3178323 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.328381377 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.336930739 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.319502705 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.315609811 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.354472439 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.473631515 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.317209174 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.315796128 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.32348211 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.317804614 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.403789875 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.363024356 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.318435262 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.445549861 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.073957773 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.320632294 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.323129375 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.449665544 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.316778113 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.317235659 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.316553382 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.318594774 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.232194624 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.8530351 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.324925129 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.359304839 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.326533662 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.315219527 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.453326016 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.320532326 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.325087066 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.317079018 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.843865539 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.450454367 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.443359863 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.533006143 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.332173504 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.318902773 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.381107294 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.322725816 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.31849835 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.364634398 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.101477937 seconds)
  done (took 111.237082846 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.341324639 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.71311633 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.481251683 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.330589758 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.109405583 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.95334303 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.325417945 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.599643249 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.39118015 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.312073867 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.601617909 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.826659807 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.329470267 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.311639283 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.817428467 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.315999972 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.312900623 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.189300878 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.328782209 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.313636037 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.804291452 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.326158398 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.307239099 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.468788956 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.346296871 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.770436692 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.730070641 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.866748447 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.325404656 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.30892694 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.778422142 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.333574685 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.329410579 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.310260406 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.571928881 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.662354147 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.653047032 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.324031118 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.360254535 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.311638281 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.325622147 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.759474674 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.661492546 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.32416588 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.307758818 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.775746717 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.324736552 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.317817283 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.322633914 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.524049662 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.996121587 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.312483676 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.678523235 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.309243378 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.677667277 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.402541209 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.399866485 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.796630777 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.324604515 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.438710018 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.336129516 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.311838956 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.312828684 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.314239935 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.314039088 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.659273687 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.6714835 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.312936514 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.649918893 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.783806257 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.339484485 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.82936577 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.232708382 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.326670077 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.420114795 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.311767406 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.986952359 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.781981631 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.322933308 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.304879363 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.626324731 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.321850557 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.583456337 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.321713594 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.304700139 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.81134637 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.31285077 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.372175225 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.308815885 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.312842226 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.06428995 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.31432529 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.589324135 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.325914036 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.309445514 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.307833292 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.335650573 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.306302015 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.320900545 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.312614903 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.820586018 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.328942851 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.282878849 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.32750474 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.306741692 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.307541398 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.311888225 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.31284942 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.537419352 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.738368228 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.328457241 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.308328139 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.306806698 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.317063018 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.494161934 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.309308663 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.603119457 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.325363203 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.306629834 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.334304506 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.962241202 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.345460665 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.307954729 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.315137691 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.213298344 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.518017077 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.32816853 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.326745726 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.310683177 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.338179654 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.491781178 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.326443978 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.384873679 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.313548562 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.001134982 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.331854702 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.335862321 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.644300613 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.317458418 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.115500628 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.331213362 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.312196605 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.594080204 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.57211748 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.595788509 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.316239334 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.308522639 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.985197865 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.347943102 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.455672143 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.33026829 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.312097587 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.508983162 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.748504045 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.310525282 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.95268241 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.311222509 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.528562799 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.313964982 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.604966008 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.79463128 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.325417286 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.323251804 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.008620533 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.998716864 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.150686478 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.317048272 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.585829801 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.265242057 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.779884743 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.310292103 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.311458792 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.89396197 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.317570772 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.312937428 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.313377347 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.314060573 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.374943002 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.484562011 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.528446461 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.32040439 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.752419657 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.367785477 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.318638874 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.319302192 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.314742324 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.660515785 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.370410541 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.31955838 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.357056017 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.316551718 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.317489765 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.772470684 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.270778237 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.316658732 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.465533464 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.93392184 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.331068299 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.316756594 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.887729446 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.538221059 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.854096029 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.395771892 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.611323657 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.334612841 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.350885976 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.054346531 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.363310295 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.814643689 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.333102563 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.314128615 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.904814606 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.329222758 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.663875259 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.314181915 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.31607217 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.856211511 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.328651043 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.317341522 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.524343942 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.332194961 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.572855372 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.320858568 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.337909697 seconds)
  done (took 1106.695225018 seconds)
done (took 1301.851430004 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.318283605 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.319831546 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.301432624 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.320369891 seconds)
  done (took 26.487869518 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.336323746 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.323552576 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.323684962 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.322136032 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.32660381 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.322213405 seconds)
  done (took 9.184406633 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.373055067 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.32071283 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.318146877 seconds)
  done (took 19.242050224 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.523042055 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.565376474 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.638641596 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.412500881 seconds)
  done (took 10.368875502 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.326563575 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.324194566 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.325423848 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.326764712 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.334319952 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.334901597 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.324879217 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.327609523 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.337953282 seconds)
  done (took 13.19159166 seconds)
done (took 79.704207631 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.382441404 seconds)
    (2/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.573171643 seconds)
    (3/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.30289405 seconds)
    (4/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.574240028 seconds)
    (5/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.684591474 seconds)
    (6/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.380265763 seconds)
    (7/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.358946522 seconds)
    (8/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.40013245 seconds)
    (9/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.134321513 seconds)
    (10/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.347520784 seconds)
    (11/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.368855225 seconds)
    (12/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.569699783 seconds)
    (13/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.301636635 seconds)
    (14/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.336251667 seconds)
    (15/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.073602065 seconds)
    (16/286) benchmarking ("sort", Float32, true)...
    done (took 6.317860965 seconds)
    (17/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.276940928 seconds)
    (18/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.337917898 seconds)
    (19/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.400280657 seconds)
    (20/286) benchmarking ("sort", Int64, true)...
    done (took 6.335555239 seconds)
    (21/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.435675487 seconds)
    (22/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.342290663 seconds)
    (23/286) benchmarking ("sort", Int8, false)...
    done (took 4.404624038 seconds)
    (24/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.435102941 seconds)
    (25/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.017975813 seconds)
    (26/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.513526338 seconds)
    (27/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.303278969 seconds)
    (28/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.775724023 seconds)
    (29/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.808196167 seconds)
    (30/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.344414336 seconds)
    (31/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.811033392 seconds)
    (32/286) benchmarking ("sort", Float64, true)...
    done (took 6.322332307 seconds)
    (33/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.32806096 seconds)
    (34/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.418268553 seconds)
    (35/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.30167182 seconds)
    (36/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.33022929 seconds)
    (37/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.500022859 seconds)
    (38/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.449336893 seconds)
    (39/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.320052472 seconds)
    (40/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.651027078 seconds)
    (41/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.715613415 seconds)
    (42/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.594628108 seconds)
    (43/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.436876775 seconds)
    (44/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.682928544 seconds)
    (45/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.372243061 seconds)
    (46/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.342639177 seconds)
    (47/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.654333914 seconds)
    (48/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.028603381 seconds)
    (49/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.334888914 seconds)
    (50/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.346538583 seconds)
    (51/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.301325374 seconds)
    (52/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.489352558 seconds)
    (53/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.379101772 seconds)
    (54/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.527154671 seconds)
    (55/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.460444384 seconds)
    (56/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.300410489 seconds)
    (57/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.683758929 seconds)
    (58/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.403367694 seconds)
    (59/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.527769313 seconds)
    (60/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.367808093 seconds)
    (61/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.165631187 seconds)
    (62/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.347049183 seconds)
    (63/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.669133366 seconds)
    (64/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.33538201 seconds)
    (65/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.3890176 seconds)
    (66/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.319490924 seconds)
    (67/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.343957876 seconds)
    (68/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.334992112 seconds)
    (69/286) benchmarking ("sort", Float32, false)...
    done (took 5.330868666 seconds)
    (70/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.309494548 seconds)
    (71/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.341132606 seconds)
    (72/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.02568654 seconds)
    (73/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.442498237 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.878912518 seconds)
    (75/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.301237703 seconds)
    (76/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.421963175 seconds)
    (77/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.303349571 seconds)
    (78/286) benchmarking ("sort", Int64, false)...
    done (took 5.517805205 seconds)
    (79/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.336287431 seconds)
    (80/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.311195342 seconds)
    (81/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.16020011 seconds)
    (82/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.428810852 seconds)
    (83/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.836034831 seconds)
    (84/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.320912681 seconds)
    (85/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.835009901 seconds)
    (86/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.746911926 seconds)
    (87/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.318387269 seconds)
    (88/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.320186098 seconds)
    (89/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.719361345 seconds)
    (90/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.344928073 seconds)
    (91/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.083268938 seconds)
    (92/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.217072174 seconds)
    (93/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.426990481 seconds)
    (94/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.407703527 seconds)
    (95/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.721414811 seconds)
    (96/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.320872767 seconds)
    (97/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.478522247 seconds)
    (98/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.322669183 seconds)
    (99/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.39311348 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.732315693 seconds)
    (101/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.529378051 seconds)
    (102/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.332932961 seconds)
    (103/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.917157046 seconds)
    (104/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.688632939 seconds)
    (105/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.303657603 seconds)
    (106/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.316848317 seconds)
    (107/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.536730411 seconds)
    (108/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.165056639 seconds)
    (109/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.084286278 seconds)
    (110/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.933476386 seconds)
    (111/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.307992242 seconds)
    (112/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.35043684 seconds)
    (113/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.505149949 seconds)
    (114/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.078319692 seconds)
    (115/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.082898378 seconds)
    (116/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.874809882 seconds)
    (117/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.805512413 seconds)
    (118/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.312091913 seconds)
    (119/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.619820522 seconds)
    (120/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.303549148 seconds)
    (121/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.304270659 seconds)
    (122/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.249661159 seconds)
    (123/286) benchmarking ("sort", Bool, false)...
    done (took 1.83331493 seconds)
    (124/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.367538847 seconds)
    (125/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.304626648 seconds)
    (126/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.355341472 seconds)
    (127/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.604293672 seconds)
    (128/286) benchmarking ("sort", Float64, false)...
    done (took 5.605323843 seconds)
    (129/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.128647604 seconds)
    (130/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.304581682 seconds)
    (131/286) benchmarking ("sort", BigInt, true)...
    done (took 6.362660753 seconds)
    (132/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.847083491 seconds)
    (133/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.063185394 seconds)
    (134/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.591149822 seconds)
    (135/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.755109936 seconds)
    (136/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.322942281 seconds)
    (137/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.520866747 seconds)
    (138/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.242378248 seconds)
    (139/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.422858641 seconds)
    (140/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.454403488 seconds)
    (141/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.308576661 seconds)
    (142/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.04095221 seconds)
    (143/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.326498286 seconds)
    (144/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.336310617 seconds)
    (145/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.086037919 seconds)
    (146/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.165695744 seconds)
    (147/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.375450171 seconds)
    (148/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.34396383 seconds)
    (149/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.47355321 seconds)
    (150/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.353917808 seconds)
    (151/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.308329385 seconds)
    (152/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.01810761 seconds)
    (153/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.68164112 seconds)
    (154/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.573489658 seconds)
    (155/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.561827149 seconds)
    (156/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.430477325 seconds)
    (157/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.963752328 seconds)
    (158/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.385558508 seconds)
    (159/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.350189783 seconds)
    (160/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.703953354 seconds)
    (161/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.334776818 seconds)
    (162/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.306902483 seconds)
    (163/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.453400474 seconds)
    (164/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.540047306 seconds)
    (165/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.434133341 seconds)
    (166/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.031250162 seconds)
    (167/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.353933662 seconds)
    (168/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.346928511 seconds)
    (169/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.435642741 seconds)
    (170/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.309476564 seconds)
    (171/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.141161878 seconds)
    (172/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.360632519 seconds)
    (173/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.364790135 seconds)
    (174/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.341321335 seconds)
    (175/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.314670973 seconds)
    (176/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.344223198 seconds)
    (177/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.000491456 seconds)
    (178/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.533414419 seconds)
    (179/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.335335712 seconds)
    (180/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.68420053 seconds)
    (181/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.774301021 seconds)
    (182/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.354856613 seconds)
    (183/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.308337173 seconds)
    (184/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.528593267 seconds)
    (185/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.329719539 seconds)
    (186/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.327309286 seconds)
    (187/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.375688331 seconds)
    (188/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.415148683 seconds)
    (189/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.35538773 seconds)
    (190/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.452097357 seconds)
    (191/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.699208707 seconds)
    (192/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.055704043 seconds)
    (193/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.311392917 seconds)
    (194/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.328478495 seconds)
    (195/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.357663783 seconds)
    (196/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.535288872 seconds)
    (197/286) benchmarking ("sort", Bool, true)...
    done (took 5.400217367 seconds)
    (198/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.403280526 seconds)
    (199/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.241600484 seconds)
    (200/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.310755562 seconds)
    (201/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.151676918 seconds)
    (202/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.509845497 seconds)
    (203/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.576161057 seconds)
    (204/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.731362836 seconds)
    (205/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.589623381 seconds)
    (206/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.344706886 seconds)
    (207/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.392831028 seconds)
    (208/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.151687066 seconds)
    (209/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.355698238 seconds)
    (210/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.681736883 seconds)
    (211/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.326452847 seconds)
    (212/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.556816003 seconds)
    (213/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.991382205 seconds)
    (214/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.309398914 seconds)
    (215/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.337093014 seconds)
    (216/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.690214186 seconds)
    (217/286) benchmarking ("sort", Int8, true)...
    done (took 6.331453218 seconds)
    (218/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.368395061 seconds)
    (219/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.843786916 seconds)
    (220/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.46160021 seconds)
    (221/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.373366322 seconds)
    (222/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.943418115 seconds)
    (223/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.311035654 seconds)
    (224/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.388227343 seconds)
    (225/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.315129671 seconds)
    (226/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.348924504 seconds)
    (227/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.454737768 seconds)
    (228/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.427926792 seconds)
    (229/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.313295591 seconds)
    (230/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.337305164 seconds)
    (231/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.792128495 seconds)
    (232/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.972325933 seconds)
    (233/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.330999068 seconds)
    (234/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.678933272 seconds)
    (235/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.343790942 seconds)
    (236/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.422104032 seconds)
    (237/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.440530035 seconds)
    (238/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.319458257 seconds)
    (239/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.456152849 seconds)
    (240/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.360714678 seconds)
    (241/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.074404875 seconds)
    (242/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.838281905 seconds)
    (243/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.324101609 seconds)
    (244/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.116093644 seconds)
    (245/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.31892058 seconds)
    (246/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.538896909 seconds)
    (247/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.870985253 seconds)
    (248/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.359151779 seconds)
    (249/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.344720114 seconds)
    (250/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.751556028 seconds)
    (251/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.374754121 seconds)
    (252/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.59296395 seconds)
    (253/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.717907344 seconds)
    (254/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.341595131 seconds)
    (255/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.110369585 seconds)
    (256/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.794536911 seconds)
    (257/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.332360584 seconds)
    (258/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.726750338 seconds)
    (259/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.821051662 seconds)
    (260/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.256173129 seconds)
    (261/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.417819377 seconds)
    (262/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.762861401 seconds)
    (263/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.118672672 seconds)
    (264/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.731063828 seconds)
    (265/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.172812721 seconds)
    (266/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.546724949 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.430913369 seconds)
    (268/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.275241735 seconds)
    (269/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.431352839 seconds)
    (270/286) benchmarking ("sort", BigInt, false)...
    done (took 6.333979238 seconds)
    (271/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.462506341 seconds)
    (272/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.353603423 seconds)
    (273/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.186384935 seconds)
    (274/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.931054546 seconds)
    (275/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.138558327 seconds)
    (276/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.360039894 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.377283002 seconds)
    (278/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.315203076 seconds)
    (279/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.362181136 seconds)
    (280/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.318296149 seconds)
    (281/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.31527401 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.362735798 seconds)
    (283/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.978992026 seconds)
    (284/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.334633517 seconds)
    (285/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.762688094 seconds)
    (286/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.153139164 seconds)
  done (took 934.914646594 seconds)
done (took 936.1462854 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.372987621 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.372847853 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.347183324 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.368242126 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.464827545 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.370397589 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.358280956 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.348989565 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.394197732 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.396166152 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.352638182 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.369865398 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.355569986 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.356990486 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.346004774 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.36835002 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.382680343 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.353909763 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.373631726 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.357667221 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.372212139 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.355020718 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.398503442 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.368721788 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.351105333 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.350599481 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.356913494 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.376212061 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.466336422 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.360431942 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.352156989 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.368401364 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.380549838 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.346148974 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.34423547 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.375713566 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.368064035 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.359007147 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.353922982 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.388745803 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.784392297 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.368342268 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.35693923 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.351532449 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.350025965 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.355417651 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.357629091 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.355918642 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.370831437 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.371795552 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.795733477 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.385636504 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.362448336 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.35233999 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.360986677 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.357937662 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.354207074 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.374266341 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.377256929 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.376650627 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.36380254 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.354355979 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.352200129 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.375410544 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.365628112 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.809733977 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.358207291 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.355063987 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.805700074 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.376271577 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.855274098 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.387396326 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.352493673 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.372637248 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.391104557 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.380765853 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.344861396 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.352290678 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.366620606 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.360357024 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.364122385 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.376901438 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.360003539 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.352793044 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.378637067 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.37822723 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.362879129 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.361268769 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.360391226 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.379430305 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.367037075 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.372110927 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.355696481 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.347179696 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.362450631 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.357145673 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.362709866 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.364688143 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.35769699 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.361278052 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.777465166 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.392881627 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.350913257 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.349834386 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.351288636 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.373503241 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.777988449 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.374754405 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.376051217 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.40139437 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.355342407 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.367185258 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.363314524 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.379297182 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.362653848 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.35899599 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.348162856 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.368974496 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.765267962 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.38928847 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.356570942 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.358374868 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380086469 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.356012224 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.349643398 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.383551 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.35387042 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.377039107 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.483489877 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.365318718 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.392515395 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.360230743 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.359081815 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.376220769 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.380436729 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.392419639 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.357064339 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.380606559 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.378319912 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.352765663 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.374009271 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.366680623 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.358494497 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.36229604 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.350534462 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.378481968 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.376732355 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.377471495 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.377174559 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.485229477 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.355147144 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.37074141 seconds)
done (took 228.756474982 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.41946761 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.350148668 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.447278006 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.352267748 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.455673175 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.459434583 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.352502016 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.34903895 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.349368225 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.726782513 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.350053815 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.349042019 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.352089211 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.353551214 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.438240807 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.35330896 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.349940364 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.690899279 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.353770723 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.427945314 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.349766419 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.353638804 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.354882182 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.735151166 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.347966299 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.352107208 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.428316143 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.354160876 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.699603481 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.347330303 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.349313959 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.725431674 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.447314761 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.372350157 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.364976822 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.362307571 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.461784485 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.371835765 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.438095117 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.438050307 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.446794681 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.393262292 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.348852027 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.350965901 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.354993441 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.355145572 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.353589523 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.381585468 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.347963799 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.358457841 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.693677733 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.365496846 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.354579054 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.353464611 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.354041918 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.387517929 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.355685196 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.356557338 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.448422271 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.357221011 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.422222366 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.736397253 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.730211533 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.356963826 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.348744642 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.356070156 seconds)
  done (took 149.862345906 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.426130247 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.428915239 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.471589599 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.369880618 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.408406345 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.473447959 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.370816482 seconds)
  done (took 11.210717827 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.365591022 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.358169884 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.407191266 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.406413743 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.357599124 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.535375112 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.359742376 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.369423418 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.355502137 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.408954531 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.360932029 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.360125573 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.363277815 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.358031431 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.408381084 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.371014405 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.474353005 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.359107935 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.359679604 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.519831986 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.355968738 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.363546187 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.410482634 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.369541197 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.361606794 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.364927497 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.172316087 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.359586098 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.35811843 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.358289621 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.356954183 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.436832831 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.360507274 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.355866733 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.358459891 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.474807316 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.360773113 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.357114447 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.359892205 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.357795899 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.359633625 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.359768045 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.3595469 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.35574607 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.359561663 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.383623272 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.359797745 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.359806598 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.360238396 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.359978788 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.410206006 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.361662944 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.358365339 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.358520399 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.415669871 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.367696157 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.360355941 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.358067854 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.361190236 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.357728739 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.520068194 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.40819091 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.36123099 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.408917333 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.362622433 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.361177403 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.360944738 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.361883461 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.416637853 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.362416727 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.410637341 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.361955252 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.547315816 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.385520429 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.363954951 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.365706978 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.364618689 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.363402449 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.360761019 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.368814237 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.361263092 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.363808047 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.368535782 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.360644263 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.361371778 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.537465635 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.471833617 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.361229197 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.375302883 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.369448343 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.362361896 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.415318756 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.363784776 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.361507515 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.414964409 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.475765064 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.416544202 seconds)
  done (took 156.26205863 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.372500528 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.370090234 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.365202634 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.379245765 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.363720095 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.36227877 seconds)
  done (took 9.480709951 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.368335071 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.365933116 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.364028013 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.363956034 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.36542031 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.36871907 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.365695701 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.366172975 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.371245453 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.368948363 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.365466057 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.36938828 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.368015446 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.365389668 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.365075054 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.36815945 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.365724953 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.362976752 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.365309111 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.365683208 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.461262793 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.36587879 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.365284575 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.366746985 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.372899067 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.366149414 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.37459741 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.36538624 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.365043569 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.372971323 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.383073643 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.368181018 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.367993403 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.372965856 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.371525549 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.36914268 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.37218886 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.370074593 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.363227217 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.367837212 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.37017082 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.366837427 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.367109785 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.370956831 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.369097407 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.372138759 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.375325801 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.375840525 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.367291497 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.370974628 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.371886641 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.369226623 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.368689053 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.371335535 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.369948553 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.386421889 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.376571471 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.367839254 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.367381299 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.368240733 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.370352265 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.370224055 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.369669471 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.373079918 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.375509933 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.373682876 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.370233625 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.374965035 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.369790442 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.368266194 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.371544432 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.367395265 seconds)
  done (took 100.95956488 seconds)
done (took 429.033899095 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.709227545 seconds)
  done (took 7.981035368 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.444056918 seconds)
  done (took 7.717025311 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.718539747 seconds)
  done (took 21.997313176 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.409633183 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.401846021 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.377838913 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.368118874 seconds)
  done (took 26.830631179 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.802920303 seconds)
  done (took 8.076583249 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.366221014 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.377208756 seconds)
  done (took 14.018160241 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.422701529 seconds)
  done (took 7.695183774 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.036659518 seconds)
  done (took 8.314706028 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.370892774 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.38593529 seconds)
  done (took 14.299516269 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.347253436 seconds)
  done (took 7.620909288 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.475105448 seconds)
  done (took 11.748795489 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.365633445 seconds)
  done (took 7.640301103 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.429815037 seconds)
  done (took 7.701711774 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.334324087 seconds)
  done (took 9.608370191 seconds)
done (took 162.525029706 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.366351828 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.362414086 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.370986853 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.367361957 seconds)
  done (took 26.739589184 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.408649828 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.404552048 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.40579123 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.416323091 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.40625534 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.403966184 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.396290405 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.395486094 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.415195176 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.407314541 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.405890021 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.407582345 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.421770636 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.396826326 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.407771006 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.406340247 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.416542165 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.406152066 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.396657165 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.409197729 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.372613133 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.416217578 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.409046164 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.372141727 seconds)
  done (took 34.979975223 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.897091965 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.444170525 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.524840768 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.423144124 seconds)
  done (took 7.564530808 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.428593291 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.426706026 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.436306167 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.47625053 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.502780747 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.435158119 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.396700172 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.394670072 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.380942801 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.426292919 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.502049224 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.442943971 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.509201043 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.373145734 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.560304533 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.373437601 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.372678457 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.426821371 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.478206842 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.503860433 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.374514921 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.42702222 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.429730027 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.443294332 seconds)
  done (took 35.79814108 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.37405459 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.392745005 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.373932334 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.373004253 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.382998099 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.374118333 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.374360571 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.374812188 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.374380576 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.380782787 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.373125839 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.386608233 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.373162542 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.372980782 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.380189837 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.374684285 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.37894572 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.373845311 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.374007585 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.381792564 seconds)
  done (took 28.823402089 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.371601724 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.310586338 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.719264815 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.624525549 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.367807476 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.371732088 seconds)
  done (took 29.04453742 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.444797538 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.601339858 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.380453131 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.734739351 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.827623181 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.393483824 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.375402043 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.618959666 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.937147599 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.931020654 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.435905734 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.446919425 seconds)
  done (took 20.408595709 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.382950619 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.373019095 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.385082447 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.390912196 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.432128889 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.397982308 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.384284784 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.369784782 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.436416306 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.452057668 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.401240762 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.434269404 seconds)
  done (took 38.120693518 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462957968 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.416816222 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.334987207 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.436021127 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.087641023 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.581479711 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.370769067 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.076998538 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.39185662 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646431313 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379623217 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460499558 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.629780801 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371632979 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.377504986 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.35869401 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.619643723 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860724038 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378406689 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.424967584 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402744641 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.372294153 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.442564161 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.601780113 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.603893589 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.348981301 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.633177525 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.150725813 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.660664478 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.390258599 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381577575 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.372850475 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64860871 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042806766 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484587674 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.58649355 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40695327 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.002572409 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.353706938 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.415586029 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381493792 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.374323297 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385516408 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373503669 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.309608281 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.375014411 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.097150181 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.397838101 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.085423555 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.375375104 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.635270257 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478123086 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.379049089 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.981061194 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.441068557 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.319329174 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.378842741 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.468811186 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96166816 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.661129783 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.381469602 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.330768988 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.375004149 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.426493386 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996645134 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.394824715 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.378788421 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.379961288 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.309968634 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.418256831 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.397723222 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52359909 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.399463433 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.025726753 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.078197196 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.397341337 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.305453578 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932740051 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382575425 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.331797691 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.605463924 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.152815114 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.314283396 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.32007884 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.311602344 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.081416411 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389373153 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.937464672 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402895295 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.100674444 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.608291323 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412626236 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399964422 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.600407657 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.255814485 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375802845 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.378795899 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504513527 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398080663 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.085612553 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.328284461 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.379886669 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.633979048 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.58831465 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38192189 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.36907709 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.875696896 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39404128 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.419415922 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.388645779 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.598432531 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.981018973 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.411471171 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.673736355 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399675184 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.153900797 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.123065102 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397933222 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.38804871 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.383163238 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650607572 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.144350064 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.266612998 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447339796 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386162321 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.381190281 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.444338923 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.233943374 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.536987775 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.581848402 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.403137862 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.393664396 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.38094909 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326627333 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.385700123 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38479567 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.171121315 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.604650423 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.392511766 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658658131 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31476011 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.527825849 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.389245733 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.601853351 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.574561082 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.398851166 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.640373424 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389087932 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.389254778 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.396358608 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399656603 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481705428 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402918078 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.388659781 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.640971817 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.383192788 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.385384985 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.452522252 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.166257809 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383906941 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.388076653 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389912948 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.965439109 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376793636 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.385936588 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.274076575 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.393223018 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450919063 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.387528622 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.595587061 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.654317274 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400600775 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.385628226 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.393584683 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.610524465 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.392360092 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.433024367 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.467326615 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.856202949 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.982831525 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.416150776 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.316729718 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.094225666 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.076528361 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383935388 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.572941263 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.384087738 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.598972503 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.411826573 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.39299444 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.967482147 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405458507 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.39617514 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.387162173 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.397540895 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.389075523 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384119089 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.625172468 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.710759638 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398781289 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.399721272 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.52842266 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.400271419 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.321447921 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.900812011 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.390446032 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.38550796 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.163952067 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420817477 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.409833534 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.188215448 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.660168241 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.4010188 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.644091302 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.491193109 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.414390323 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.386352213 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390088492 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393527813 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.405730597 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391928649 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.39723511 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.402056202 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.823355939 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966844118 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.119792414 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935930187 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.685156976 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.407805614 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.273350107 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.103826292 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335212324 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.043251506 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627918721 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.116194401 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.346973023 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.86703609 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.605424572 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.175362048 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.653761564 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.620301712 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.66901106 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.415580193 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.649637206 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.604959908 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423094544 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.396558036 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.321415549 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.652472687 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.947064951 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.402923182 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.478980874 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.110472679 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403325569 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.181390801 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.398176842 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.115889384 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801346108 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.955535311 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.778255652 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.399202502 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.393507169 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.201316887 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.409659802 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.915730068 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013676693 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.404582817 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.871378119 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.341955518 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.606656541 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.415653869 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.386784698 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.991789591 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.399512807 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.649846445 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.652746482 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330010175 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.390319474 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930515316 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.26316441 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.396962965 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391326949 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.136972148 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.405857732 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.701927578 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.398003638 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.660523444 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415048166 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.325602367 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.324213443 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.083491467 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.395189175 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367350321 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882537453 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.410870711 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391788534 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.39009811 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267816531 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.645969047 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.403364319 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.97757229 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.638590876 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392741596 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415435491 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.39520271 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.395936561 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.372760211 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.272891104 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.628609738 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.498835257 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.613750114 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.38639665 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.290928174 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.897382854 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.60366035 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.292531851 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.393340055 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.652719308 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.118355694 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.403847395 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.096657681 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432702189 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.408330119 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.40260741 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.391744142 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.411451508 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480596533 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.61204579 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.41953676 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.404696439 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805101362 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42425989 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.394090496 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.407505412 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492386596 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.734438355 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.664487559 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.17186259 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.984278546 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.148194646 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.015002123 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.680458882 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.400938546 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397714606 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330125125 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.540610003 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.924986675 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669942597 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.530405693 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.398051216 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415253785 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.39621084 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.401073151 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.610956019 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670216406 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.26465784 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409430784 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.058497156 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.29776495 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.407918464 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.608236406 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897546875 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967112104 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.778054221 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.395879272 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.114937079 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.685728823 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.486185794 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.396867253 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.990604042 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.414664582 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.143544125 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.399652842 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410633429 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.541638349 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.660101473 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069567556 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.421766728 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.55587448 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.170142429 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.482806689 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.654448202 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.862852099 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.613527281 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.00278202 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.116981068 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.658251672 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467750565 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.61687245 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.523614768 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.545446706 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.400076888 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.300248948 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397561547 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.272505682 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.110526841 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.409095702 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.992449319 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.674348504 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.402476159 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.403251673 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426183599 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.406220213 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.622638742 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.114526176 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.626542367 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.408277789 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.401756906 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.970481527 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.997311024 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.677090593 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337824392 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.399774774 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.652374573 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.649031483 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.425009438 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.852312923 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.110672008 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95168137 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.370511226 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42135863 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400100706 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.116902555 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.989606745 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.688948257 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921846166 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.059082903 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400508265 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.693814729 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.405310884 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.411663174 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.680586089 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.405891806 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.410581584 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.625903464 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.003351585 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.197879093 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.42391724 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.611580214 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.334768177 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.636290596 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.422086379 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.352044155 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.39908043 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.825593782 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.42042146 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.538596643 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.410115702 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.408099764 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405182021 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.139284851 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.686273766 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.405246715 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.396654957 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.391613243 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.402747971 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.51662329 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.965189458 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420257896 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.077894526 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.750593683 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.65767284 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.407253585 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.387031253 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.406320301 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404225432 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.12046238 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.370686314 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.404782002 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955750974 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.409725213 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.415131549 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.406032086 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.619164066 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615219792 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.403841511 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.622273794 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42718984 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421415806 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.302922345 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.171478809 seconds)
  done (took 1684.910372039 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.457568961 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.444868334 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.418031622 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.462643217 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.425713655 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.521564065 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.498067299 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.423677196 seconds)
  done (took 52.961640158 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.420171755 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.565700489 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.432867253 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.415219596 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.419194373 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.403808458 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.86821832 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.428867781 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.409644044 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.415011744 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.413167219 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.422919138 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.069826635 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.410858715 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.403842109 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.398932851 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.418138322 seconds)
  done (took 66.633769794 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.62063311 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.492461334 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.446091518 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.475189674 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.450326043 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.407937379 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.437204514 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.435453902 seconds)
  done (took 54.07892739 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.423419091 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.422702624 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.421331085 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.422707948 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.421849652 seconds)
  done (took 8.422875562 seconds)
done (took 2089.764826309 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.40976066 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.412995241 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.410814811 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.412714116 seconds)
  done (took 6.957451299 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.387794669 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.137998623 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.385675406 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.407005535 seconds)
  done (took 18.630894719 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.426062522 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.432588846 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.121451266 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.030138227 seconds)
  done (took 5.464261444 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.159782807 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.170785899 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.155085972 seconds)
  done (took 7.798526851 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.406845515 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.412290635 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.410270354 seconds)
  done (took 20.543251141 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.6975415 seconds)
  done (took 3.011791134 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.55706065 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.604080347 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.723301816 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.731728631 seconds)
  done (took 7.930557811 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.797186455 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.792170907 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.598181847 seconds)
  done (took 6.502015971 seconds)
done (took 91.011713286 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.261135806 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.406014423 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.619799356 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.230311723 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.640753514 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.618767467 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.613702508 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.19714577 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.739598964 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.728260915 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.228600863 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.639580043 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.774741367 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.41246888 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.771771331 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.409300858 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.646346233 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.304592231 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.913978066 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.150827593 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.617281687 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.865962768 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.062071584 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.885396587 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.643386206 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.567950782 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.461763368 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.65704678 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.091794702 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.473098534 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.565460387 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.328275435 seconds)
  done (took 193.841258498 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.420618185 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.408581715 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.408127865 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.407799115 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.408636939 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.406255573 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.407590396 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.437815275 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.410523743 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.419669639 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.407338487 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.421993123 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.422080117 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.406468192 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.408861224 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.407382626 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.422786617 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.407748524 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.408157726 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.406920916 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.409614322 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.424646492 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.40886443 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.408521732 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.41021827 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.425574965 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.415422412 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.408387148 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.423051554 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.408750073 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.427669339 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.409187405 seconds)
  done (took 206.552466959 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.413360542 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.416267623 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.410122879 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.4249407 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.409394546 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.426339073 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.410726203 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.422174077 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.410243876 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.437669029 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.409640892 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.423915043 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.410764399 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.424163733 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.426582104 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.421071166 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.409141709 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.443383061 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.409184775 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.410455889 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.411580078 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.410389641 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.411528201 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.417024889 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.422416233 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.409968307 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.408965152 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.428308577 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.410573315 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.427103394 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.413003991 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.410384363 seconds)
  done (took 206.66887521 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.610745025 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.419828552 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.420497888 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.355869905 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.421631044 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.420192542 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.414897975 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.617306723 seconds)
  done (took 14.999632137 seconds)
done (took 623.378441522 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.711936179 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.426555817 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.626483449 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.437892117 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.21499643 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.456471617 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.443296161 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.615187236 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.345628193 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.620734796 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.694528592 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.45633012 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.84720363 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.441813283 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.704817827 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.540765243 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.297297233 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.41333092 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.759347084 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.979945088 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.710112784 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.894696483 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.628593689 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.335189365 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.861389744 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.938405494 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.179424771 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.287981009 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.453664225 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.770796929 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.085967175 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.428500804 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.502938312 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.502245398 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.559236341 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.538856925 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.404990677 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.49790038 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.64317574 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.666678053 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.988341448 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.163798292 seconds)
  done (took 95.39795175 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.408917233 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.407695395 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.407241496 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.407527762 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.409466475 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.404981358 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.404669253 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.40675758 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.408333717 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.407593228 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.407502508 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.407849619 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.408186165 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.408677251 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.407960157 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.407965871 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.409186911 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.409893678 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.407753381 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.407375163 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.408384397 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.405549351 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.409204302 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.408200785 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.408412366 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.409669789 seconds)
  done (took 37.929278756 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.426982981 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.670349173 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.839291104 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.428998357 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.427400289 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.429969842 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.507453445 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.431537917 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.429462833 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.431138645 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.582597521 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.425675261 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.463336822 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.866956674 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.427196838 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.428400558 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.428400257 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.427613313 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.683181176 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.435364805 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.529805316 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.430530273 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.506825172 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.439650165 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.450981271 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.429906406 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.4326112 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.023061828 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.450682507 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.58523681 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.230606681 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.507651829 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.96023234 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.888579227 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.229454699 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.435485322 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.428893452 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.588107533 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.427861056 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.4307558 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.509021177 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.426628386 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.853839889 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.111747009 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.444596862 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.432095776 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.036960651 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.600876131 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.677677108 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.439224589 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.874478949 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.429670861 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.430051394 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.430357131 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.68117622 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.440852724 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.432136141 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.045118051 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.45107815 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.511367959 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.430730857 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.42945181 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.691753641 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.427291687 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.677807692 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.430598961 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.440711602 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.449637913 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.85787053 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.430270951 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.13158459 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.44641403 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.433107465 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.586921411 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.67673953 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.069258023 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.453702054 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.695983387 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.973264561 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.529916154 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.435234319 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.011685617 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.527331637 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.43243604 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.435793573 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.43395434 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.432365789 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.47949527 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.509421666 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.065230114 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.142189054 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.06828678 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.5301239 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.444121186 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.434399718 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.052652203 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.451026448 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.433800632 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.852157141 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.130295971 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.447640821 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.442646645 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.140084871 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.449508206 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.518476699 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.441149272 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.867890171 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.432145014 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.483321719 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.435712082 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.441780427 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.453607208 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.515817738 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.438751576 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.436683262 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.103260045 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.610900055 seconds)
  done (took 188.410902159 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.427573785 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.426021489 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.430226628 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.44523966 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.428689763 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.437175731 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.4284228 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.43003549 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.435555753 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.428289029 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.427726947 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.428342528 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.428440146 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.432049613 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.436412688 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.434737544 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.039393255 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.430109029 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.428804341 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.427510288 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.230067264 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.435463995 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.430021409 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.427336174 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.43236155 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.430147561 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.436958901 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.429478889 seconds)
  done (took 154.816046798 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.43828464 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.023544599 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.459228423 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.570337401 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.459260875 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.434421564 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.568161934 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.49377023 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.460086646 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.435345866 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.435074775 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.743749451 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.43665975 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.955996815 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.6267697 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.590743432 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.95767513 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.450754778 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.435884196 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.436783264 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.57179519 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.438327652 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.744594408 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.005255046 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.453044565 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.007455805 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.420268732 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.440451433 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.436738375 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.01185296 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.451761045 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.745402055 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.514868581 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.499856151 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.027546245 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.973995005 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.971647929 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.584109718 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.435643478 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.439544724 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.436490323 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.421039086 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.009341465 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.454750512 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.437856127 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.999802908 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.455407259 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.440139355 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.443353507 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.437006076 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.499721983 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.521215581 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.76820209 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.013538959 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.531795217 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.449749335 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.571834589 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.807464298 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.439294016 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.978248565 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.428909385 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.016263296 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.455167475 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.425654956 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.440331787 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.445266418 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.59355968 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.574083332 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.975517699 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.461885362 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.979132575 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.615894202 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.439780455 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.440110454 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.443587755 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.015718987 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.984409819 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.605597352 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.578400709 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.640784641 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.429630255 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.440923684 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.427191897 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.521798822 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.442602139 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.019472172 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.991923811 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.463508293 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.443223678 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.443648359 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.445161819 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.621840838 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.039835946 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.534732879 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.954628072 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.767446898 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.751458327 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.441298621 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.503902611 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.453779449 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.752925212 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.441888987 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.50137221 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.873465145 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.753820276 seconds)
  done (took 171.063267456 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.687707198 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.702193625 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.541386091 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.587190877 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.055369649 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.017502854 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.745788044 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.580159963 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.558597435 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.70457954 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.602754179 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.529390284 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.667254837 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.521817577 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.169614043 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.524141472 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.547035719 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.591119494 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.607404035 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.476083192 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.124770957 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.722634967 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.637592757 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.338707001 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.535969004 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.229644425 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.009216259 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.968744184 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.61812044 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.77737285 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.991674269 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.581138039 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.409292625 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.138171838 seconds)
  done (took 68.840882641 seconds)
done (took 717.780302986 seconds)
SAVING RESULT...
DONE!
