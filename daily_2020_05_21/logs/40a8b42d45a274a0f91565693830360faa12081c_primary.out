cset: moving following pidspec: 10918
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.214803012 seconds)
loading group "string"... done (took 0.576635346 seconds)
loading group "linalg"... done (took 8.043206281 seconds)
loading group "parallel"... done (took 0.169455673 seconds)
loading group "find"... done (took 1.256645977 seconds)
loading group "tuple"... done (took 1.987669569 seconds)
loading group "dates"... done (took 1.304056421 seconds)
loading group "micro"... done (took 0.197882158 seconds)
loading group "io"... done (took 0.923676253 seconds)
loading group "scalar"... done (took 39.30376796 seconds)
loading group "sparse"... done (took 12.231630652 seconds)
loading group "broadcast"... done (took 0.962056963 seconds)
loading group "union"... done (took 13.782246569 seconds)
loading group "simd"... done (took 4.798697805 seconds)
loading group "random"... done (took 9.26215864 seconds)
loading group "problem"... done (took 1.693538553 seconds)
loading group "array"... done (took 21.503606784 seconds)
loading group "misc"... done (took 1.613722656 seconds)
loading group "sort"... done (took 3.352102811 seconds)
loading group "collection"... done (took 18.102959969 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.536627662 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123968438 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.137336512 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.12071758 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.150029225 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117588627 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124902948 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084464806 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.860500184 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.147273008 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.11505641 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.418338367 seconds)
done (took 5.306772768 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.171852424 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08781893 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079562902 seconds)
  done (took 1.206504547 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065663327 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127477868 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067109416 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067655371 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.070908686 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067470118 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067195107 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06714027 seconds)
  done (took 1.575741679 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073330633 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069215639 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066734269 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070145127 seconds)
  done (took 1.320851742 seconds)
done (took 5.39263961 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.801854243 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.213639369 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189865019 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.410933576 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.135671473 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.178672798 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.638775533 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.320151589 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.193467186 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.094571083 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.11293344 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.390392594 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.124944363 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.653629083 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078098028 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.095902888 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.142443849 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.439291158 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072001312 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085628685 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093419672 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131455015 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.080403203 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077073271 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.15158286 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070889429 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.14389676 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083737107 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069381281 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.256439329 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175445133 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.657871355 seconds)
  done (took 10.443483205 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.102097166 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100001187 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069084821 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125369263 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098246665 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070329929 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.076208766 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068164594 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.09018598 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.129419601 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091840532 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.109115865 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066885719 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070157149 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083536056 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.197989431 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080604377 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081758389 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071462233 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.083198145 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.108040693 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078672056 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.080277498 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080534147 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129705165 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.169691804 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096590697 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098098573 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067486112 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081768876 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115865601 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127380459 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.0667809 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067193002 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.126006273 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095827526 seconds)
  done (took 4.536062193 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.006199103 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.151715017 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091074156 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.135153848 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065548171 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.110560502 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066565418 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083234297 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.238145659 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.449387637 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.625657312 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.147721292 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116946869 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104634971 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070928456 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069444295 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.070456765 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.271599317 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.099068668 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.113142736 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083962863 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071152382 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069583439 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.06611102 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072365441 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064852313 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069731092 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.087560079 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076173504 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.346362307 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.127082611 seconds)
    (31/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.092173569 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0689288 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.946495663 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.165732721 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068058481 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105445247 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.165983176 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097298819 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.14044965 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068159076 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064291016 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.295967257 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065998393 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072403848 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068000524 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.085967324 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.109570418 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120416579 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066143714 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06614339 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.168906704 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065090784 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082599921 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.237468246 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152690164 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066205764 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.300243929 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.093044584 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072545742 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065850507 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.219643141 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.120566921 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069800178 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068453984 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069575436 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069202898 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.364881609 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066327486 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.25136208 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068759755 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078278795 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071061738 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071687763 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079329409 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080255403 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.091646804 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067542823 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074754403 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067870621 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066721502 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067762989 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.093687199 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.391442042 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067612975 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.073066522 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065290101 seconds)
    (87/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06476619 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.093030859 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098714801 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067153404 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.069187879 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102552757 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07093675 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066508891 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068407834 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.11833711 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070231828 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112790681 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066685902 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.202458828 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.09838344 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071198646 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10207725 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080006367 seconds)
    (105/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064852241 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071559063 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.466624178 seconds)
    (108/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064643014 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066097197 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.073115025 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.06713175 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067946797 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067877874 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079004348 seconds)
  done (took 22.291378169 seconds)
done (took 39.318424086 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.243510751 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.084242924 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083574255 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.084112576 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083761049 seconds)
  done (took 1.711150854 seconds)
done (took 2.824288686 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.127404926 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099609732 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065015052 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098184019 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065378964 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103444889 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103487251 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.084045821 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100312336 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06521576 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097500631 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065048003 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065465559 seconds)
  done (took 2.269714473 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082206819 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083130044 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069640643 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082129561 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062940563 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081694214 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081120727 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088007647 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081188248 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072055807 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063249748 seconds)
  done (took 1.955190211 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081844926 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082681743 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069680064 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081630633 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062681705 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081117131 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080646168 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085387 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081824435 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073784329 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062909436 seconds)
  done (took 1.947735139 seconds)
done (took 7.273344161 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076209361 seconds)
  done (took 1.170098126 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.533725097 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.568670061 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.078799417 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.100239401 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.192327128 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.109332569 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.23500707 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.082324864 seconds)
  done (took 8.167592549 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.095720832 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.07103418 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.082473552 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.06902118 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069253979 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.069978678 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070415646 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070007403 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069826547 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070487275 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069637881 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.070620917 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070468575 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070563312 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070743853 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069624302 seconds)
  done (took 2.339650451 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097773533 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095882176 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074656632 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07532918 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07319151 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072638221 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074997812 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074492202 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072163926 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07310557 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075818809 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074436042 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073751987 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064792443 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074663441 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07643638 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071866007 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074204898 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075671134 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076019523 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075782319 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064675029 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073018565 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074556459 seconds)
  done (took 3.013730576 seconds)
done (took 15.79602102 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.10547391 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.06771102 seconds)
  done (took 1.272934498 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.079223958 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079924078 seconds)
  done (took 1.267086651 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.077307402 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.063130772 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.084629027 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.074065965 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.063771547 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.063500598 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.082578796 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.063978716 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.063292576 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.064004477 seconds)
  done (took 1.809920893 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065494138 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.07309007 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069700136 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079120403 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.070877394 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06476961 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.069149278 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.066173935 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.073615006 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063424405 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.06890568 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083764849 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.068537348 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084958981 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.068539975 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068450672 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070327447 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067490561 seconds)
  done (took 2.387998607 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063686983 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.064069376 seconds)
  done (took 1.24175773 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066991334 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064054705 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066878858 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066702592 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.06327734 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062750516 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063778892 seconds)
  done (took 1.565212677 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.40002401 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.122668159 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.330160743 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07047823 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080466487 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.257075227 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064835888 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069757342 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069835427 seconds)
  done (took 2.620874792 seconds)
done (took 13.283056349 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081430124 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086006838 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097110022 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.410753493 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092732156 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067861088 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113998293 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.17961709 seconds)
done (took 2.25627141 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.215369522 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.811967197 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.481064122 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.206454731 seconds)
  done (took 2.618212775 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.343770457 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.195160566 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.07701069 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067046143 seconds)
  done (took 1.81171766 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067052799 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071555772 seconds)
  done (took 1.263768206 seconds)
done (took 7.035721365 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0650311 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064257439 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.065246044 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.064588216 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.065388098 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065244287 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.089997985 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064906081 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06485507 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.064816361 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.0646202 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064509749 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065115599 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065608185 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065051613 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064828886 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064971549 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064706121 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06494926 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.06514373 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064825173 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065285552 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064902685 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.064390479 seconds)
  done (took 2.74143642 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082828136 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067450316 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.068784708 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.068618808 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069577208 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.068774814 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.068577001 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066936345 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.068485133 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.066650855 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068778313 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.068971344 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.066302301 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.068819607 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066790169 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.068998811 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.069137435 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067183747 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066877559 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069310055 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.068506773 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067086194 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069038478 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068082705 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068852776 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068859528 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.066555745 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067041568 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068470046 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069073974 seconds)
  done (took 3.191055995 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.065445986 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06109918 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.061715603 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070224817 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.061340591 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.061483559 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.06127323 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.06185967 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.061876337 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.061433711 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.062876304 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.061038844 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.061077938 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.06216555 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.061726384 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.065497016 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079116849 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.061378956 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.061086554 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.062129125 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065301542 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.061112446 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.061404465 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.060806394 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064127225 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.060740009 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.061669721 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.061070316 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.061799543 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.060948329 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065575824 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065499158 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.061242767 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069589318 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.065395797 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.060920689 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.064844082 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.061063467 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.061805887 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.061190294 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.060925187 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06125705 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.061245548 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070184538 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.061363146 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.062321701 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.061100662 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.062209172 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.061952507 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.063614093 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.061126732 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.061391695 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.063779822 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.062636587 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066550459 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.061444973 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.061999084 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.061121743 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.062095717 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.061391772 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.060908157 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.060910211 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064519128 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.062345782 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078591769 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070029261 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.061170267 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.062687661 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.061906956 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064944717 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.062839048 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.07645721 seconds)
  done (took 5.694914561 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.08612941 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088095439 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06630194 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066058877 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061977388 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062432619 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070498392 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062103401 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066526501 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.080892107 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062133508 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066434441 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066986614 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066297627 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062618752 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066927006 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070592956 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062292648 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062165294 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.065870842 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06207207 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069945269 seconds)
  done (took 2.644212252 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.146907605 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068163899 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105420488 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073004006 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070527899 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072709634 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067972143 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067682884 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06803577 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068654965 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068294583 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067868298 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070335413 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068617657 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06878524 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068432119 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06792542 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068122243 seconds)
  done (took 2.497101624 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078296585 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067458587 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086112104 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067322522 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067320417 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066781051 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071219538 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072069044 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067022679 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067766962 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.071979136 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066996026 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067152871 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067184177 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066939227 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067533207 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067207585 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067481423 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072397457 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071726156 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071790423 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07218084 seconds)
  done (took 2.682982792 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087425558 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067717608 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081372029 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.0685231 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06216011 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062265667 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.067938375 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06692509 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.067898031 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066414092 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066689913 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062287685 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.06948927 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066932812 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069599067 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066949096 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066392199 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067200361 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066568448 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062336888 seconds)
  done (took 2.503832296 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083823245 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06537321 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064767726 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071800894 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064922623 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.065348196 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071747824 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.065201952 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.064952755 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085676623 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065647219 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065594662 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07183934 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.068880793 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.064756832 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071489169 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073800187 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071276119 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065013525 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065645504 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085604291 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06506596 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071099065 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065103096 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065544401 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06518805 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064806482 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.068901482 seconds)
  done (took 3.080231324 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065105421 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064841698 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064497595 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064853716 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064790634 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.065222482 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064929796 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065134985 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06474724 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06478589 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064794807 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064561461 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064624506 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.0643906 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064943299 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065218227 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064710227 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065034514 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064945138 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065161848 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064785125 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064772709 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064564111 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064654943 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064945387 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064809189 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06486409 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064455288 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064534405 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064900501 seconds)
  done (took 3.090562502 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075254681 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073612028 seconds)
  done (took 1.294998425 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063462647 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078859617 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.06136719 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072967715 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070006255 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06488308 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.070960137 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070550014 seconds)
  done (took 1.696099213 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084741782 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075376448 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.064777825 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.075651872 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.07480604 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085110915 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.126073679 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.064393601 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074445379 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065401717 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082256268 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066561825 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074335914 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069105304 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074485297 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077903978 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.062024963 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.068798765 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065309698 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.062216174 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064719655 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077388429 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073545224 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062096497 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069270462 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090975244 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.079967361 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.063297196 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071178411 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075997638 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074726026 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061094572 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.06409815 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.063872839 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.062070958 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074722166 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082327869 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070560908 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076398059 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064516341 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071756037 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062226522 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072522095 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075122284 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080049214 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.064213908 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.06427203 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062007402 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06489783 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070464232 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061973725 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069227329 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061435409 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076285907 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071761222 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079796826 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.062692231 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069820778 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070543408 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071178249 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075575205 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070396841 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073850447 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.063757201 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079804346 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.074086115 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075775858 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062307505 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061851828 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.062207679 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077621113 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092145677 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07338278 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.064150385 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064431127 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.061769067 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070917269 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064290166 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073608251 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075477644 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.063826296 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068299463 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075884868 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068643797 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071126949 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.069998602 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.062386378 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.06739274 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064883103 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083468787 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.062709155 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.062010105 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065418063 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078996493 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073315451 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.063299483 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065096505 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075312171 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.06089727 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.064152005 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064318349 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06931688 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077866411 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067064595 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067302226 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076126966 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071944283 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067870339 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068945145 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.060214121 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.063199842 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064653405 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073520313 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059949571 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069523331 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066711726 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.06229703 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.073557388 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.060927862 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.062004889 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074447579 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074262554 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.060804384 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.059602672 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068984802 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.062108907 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064517253 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07508048 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.060721245 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060720314 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060363831 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070385943 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.062992768 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070468624 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066182156 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069961342 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.059821136 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.187072522 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.069567848 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076868801 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068585408 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.071209499 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.075199171 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070619219 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.063743613 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077262201 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.07171244 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066304377 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074223728 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067778971 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062199365 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066751014 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070854452 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06325276 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071489176 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067518487 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071207816 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.064929033 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062814601 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.069896604 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064480196 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066262433 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.0688195 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.06330762 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079368489 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.071201663 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062421764 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06215955 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.071449467 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065593538 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.063577735 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066637457 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070281337 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.064047565 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063204606 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06312567 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.07038174 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071704251 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067696873 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06527211 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073796378 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.082399747 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.063981821 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071698928 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064308394 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064883349 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.064723608 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.078705619 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07400178 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068396298 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070885935 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061351075 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073410432 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076418129 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066738485 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062354604 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066331311 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.068150814 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075869635 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.067639817 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064437973 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062338784 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07058183 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066471025 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071160124 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.063515489 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06627092 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.069072165 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.062536478 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.069409358 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064432593 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078250278 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07146702 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062111059 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066033189 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062802705 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075138559 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061981945 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064904836 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066470712 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064237969 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.062895024 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070509606 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061020316 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076269552 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07665411 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069801867 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065977217 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063333746 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075777239 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069391362 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072133724 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070604401 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073349333 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079054472 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065856364 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070699104 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078580933 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.06334328 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061038379 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073256884 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065236601 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.06265277 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063340217 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062862225 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071080418 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070617738 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073066121 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060141884 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069425217 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.061715759 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065073667 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061089868 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071569007 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069460298 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066854805 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074464708 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.062898178 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.062524579 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.06951819 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.061880993 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.062846651 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.062871722 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069256866 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.062477032 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067979411 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.064689686 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.06803851 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064473785 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.060345303 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068048886 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.062664482 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067573366 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070869054 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.061536912 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068096419 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069564368 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.062692813 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068102713 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.065582185 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.195410743 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071833871 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070566213 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069843156 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071212078 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062593914 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076256433 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.063866761 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077237607 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069430808 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.061244232 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.070245472 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070845983 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.068730189 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.064239387 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.064262489 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069444423 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.064094216 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071412835 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076364258 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065396187 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.080076935 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075187581 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070177836 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070411782 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069525909 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069526841 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066324687 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068701816 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.065002848 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069739077 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.063598638 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072735251 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.07197708 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069011699 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070635191 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.064237714 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069242725 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.06511136 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061642661 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066858628 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.06676785 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.063206016 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07681528 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.063965069 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067053881 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.0631763 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064879589 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.062942429 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061477729 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.070488021 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071248911 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.064567595 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07473612 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066842065 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070366817 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079724584 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061582144 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063141005 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062281444 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065936998 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076368003 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.064674827 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077739116 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.06930639 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066844189 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062019272 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.064496561 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.062763875 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061588271 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.06194801 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072337211 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066178144 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062889292 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.063829533 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.07065362 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064819561 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076688349 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063239584 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068222045 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.06404706 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061373558 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066322194 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066273867 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070178174 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.064471319 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065494979 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062194211 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064223669 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068328755 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069699654 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.063173785 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069382223 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075961221 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063770661 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071143084 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066658131 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061527462 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070862127 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.063409829 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.063419813 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065902536 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071264422 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071055105 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064367442 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077677356 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.063529518 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072845446 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063820387 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.062185917 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.06320301 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.06353661 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.063414131 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066068814 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.064597184 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076744991 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.061670562 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069433411 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068398522 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067338702 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073488826 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.063839825 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068955865 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068427664 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.064661719 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069044544 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075874251 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.06588773 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.06964728 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06309894 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067601487 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072154973 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064606552 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073618805 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067623682 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.062724049 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068597471 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06381032 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062152793 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.061809657 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06123016 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07177191 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.062496604 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064710303 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065457112 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.193036878 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069611941 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067726121 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077972939 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071314362 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072049614 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062859078 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062194562 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065496082 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065283173 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071065892 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.07115374 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073959171 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070979131 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067433696 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.063020626 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.0779536 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073504493 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072199519 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065496474 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071918097 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.064433728 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072001276 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06835298 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068748113 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064946106 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072101357 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069790737 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066941521 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074735608 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.072068006 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064941321 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069631476 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069716473 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069424327 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063156857 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.064355881 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070735035 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072959979 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070906669 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063309669 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079208709 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065179764 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068703451 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066460295 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063113459 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073012312 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.06164694 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.07005625 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064388493 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06453776 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062479547 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066738413 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065346591 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070652909 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066589343 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062364071 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07923137 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078806143 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070641616 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063641385 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063172341 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063031084 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062413008 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.06645369 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064935022 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069648484 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078585602 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066439377 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066255425 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061965869 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063842316 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070795383 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072168517 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.061478425 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062935983 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066623465 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069749449 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075470458 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062881326 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.063425916 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071116836 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070256665 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.062005786 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066594478 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.061078515 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071289152 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080702053 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.064375225 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069833578 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073522663 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076337945 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.064056284 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061846335 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.063958854 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069875344 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069111039 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064397179 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.064999697 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082890129 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070951064 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066087294 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.062891829 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070351115 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06660451 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077653516 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065138337 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.064016738 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072720034 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072682402 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070697167 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073731499 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074797156 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069510015 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069896604 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.062483264 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06818866 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.062256178 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065987516 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.064106963 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.063316914 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067153575 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.071941559 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06600294 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078026816 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076666792 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065859829 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.060620567 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065205866 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065685994 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061627591 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.063630087 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061635868 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.061333526 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.060653976 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.061327622 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068415746 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070744868 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066586011 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.062411257 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.062249301 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060255383 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072198618 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069105272 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068149578 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.060097802 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.195520337 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066052672 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073530999 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067778638 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066771911 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071376853 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070608783 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070615557 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.06263209 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075406323 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062861734 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070275572 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067639184 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064580191 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.064843999 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071415206 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068119727 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065642062 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070902708 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.07127034 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066679391 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062259313 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062167833 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072989763 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.06191453 seconds)
  done (took 42.326797967 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100734626 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064361721 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062862368 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063186317 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072627899 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064235194 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062784555 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064601486 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064247547 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082309333 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06316406 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06277492 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070189325 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078089864 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07272176 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067091626 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062598575 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063464486 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062671411 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064355664 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070240064 seconds)
  done (took 2.683178253 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.071093714 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.07826909 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075872295 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.079609619 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071526044 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067691403 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075824521 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067783494 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075759102 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07253025 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075864499 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067796175 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.073112325 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.073293181 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073349516 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067879986 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07591515 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072122018 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.06838631 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075788312 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068799252 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076090745 seconds)
  done (took 2.847203083 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.065099933 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.063586575 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070375487 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061925094 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.063495229 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062376604 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.066976863 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.062288721 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.066453537 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066680699 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066361234 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066445024 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.07061925 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062101442 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067595289 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.062299339 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107220156 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.066929227 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.063837651 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.064739142 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062284052 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.07145057 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062121328 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062632479 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06580967 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.066464129 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.0647313 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.062248162 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064030787 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065768386 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.063481784 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.061683249 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070118152 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069857999 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065660772 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066207282 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.063222072 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.063537167 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06191911 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.062282862 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070048464 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062503405 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067176905 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070445054 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.062302181 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062372103 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.070464401 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.063764088 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06194469 seconds)
  done (took 4.47745581 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.075749194 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111750543 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068446855 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091227407 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.07666306 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.069698191 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068153296 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093205452 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063968264 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064952651 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.077766817 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078149953 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066186599 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.067809335 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.07051014 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065784686 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06683148 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065003046 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068868582 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065242249 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.06946404 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.069908069 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.077919273 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078370915 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066997018 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065461566 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065856724 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.067333991 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076769003 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069864958 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.067790674 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068204981 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.07716179 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070719787 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065507102 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.065385601 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.078286969 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066092198 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066015089 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063842505 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.065624877 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.067342556 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.070003675 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.078736912 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066076603 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070828429 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066122936 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063722166 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077504505 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.065984511 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.070459119 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078671375 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067079565 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066280005 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067564581 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.077293233 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065955447 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064334972 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.066609052 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077027313 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063802872 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066590668 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077874747 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.065657752 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.069633416 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078176028 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070951939 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066668375 seconds)
  done (took 6.206584226 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073614663 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095222166 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080577465 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079584574 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073481539 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073930182 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073999899 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074146102 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.074215649 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078013546 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073899188 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11511446 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070497111 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076224713 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073991643 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073771906 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074211517 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073988836 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074049009 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073511931 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.074119424 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079705986 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074134843 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079827158 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077000252 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069786306 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073496409 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073232392 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079692294 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073765764 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.076691341 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073266539 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073945324 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080308168 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.077108398 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073912083 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063471965 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07324666 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073601979 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073469243 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069614802 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079692245 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073604025 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069552787 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073543237 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073182849 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079573476 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.076771107 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075450213 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077491179 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074343357 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079587037 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07329792 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073859241 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079595017 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.082236108 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079890572 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079764271 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073683319 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.080371829 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079385834 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.082198722 seconds)
  done (took 6.007577141 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078681998 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070540602 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082384675 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062310491 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062469513 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072262077 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062113846 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.062355735 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070822799 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073548861 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072630968 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0722428 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075170001 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072580363 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073132296 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075669046 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07320017 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072403678 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071080722 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072280741 seconds)
  done (took 2.700134277 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076482871 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082069096 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068805307 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072627082 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067729578 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072587607 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068729266 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069844723 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070650577 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069760291 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076230005 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075874654 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070338386 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074758925 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074837391 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072524924 seconds)
  done (took 2.42237488 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.084143896 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071103731 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.077713742 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.064232661 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067657273 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062586773 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.063469792 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.0627486 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062586644 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076615128 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.06366033 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.074678525 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.063866835 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.062706289 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063416684 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.06933083 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06315016 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063986743 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.063931154 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077258844 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.070886552 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064821715 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067637268 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.063912338 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069133985 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070974416 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065622829 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067603601 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063680572 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.064108346 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.069474569 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070879252 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.06359495 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064512467 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.062788377 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063726603 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.063796303 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.06421999 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069407964 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.082864352 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062127753 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069150052 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064047244 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.064461594 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062949479 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.064046026 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062748076 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.06970745 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064610783 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.06922708 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.063487546 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.065934475 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06408521 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071536973 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.066432278 seconds)
  done (took 4.946715692 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078660378 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068429813 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062694776 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062574625 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067262769 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068394481 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067838088 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068237363 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068972725 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062039975 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068817604 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067194454 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068536857 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068355205 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068602391 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067578506 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061983397 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067998284 seconds)
  done (took 2.487465853 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072928731 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067065881 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.07198131 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067455588 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066635886 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066682669 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062309794 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.062045336 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062369008 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067186172 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067166013 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.066763793 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062952145 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.0668944 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06735969 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06710304 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.06685986 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063063354 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067268613 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062718306 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067124288 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06254491 seconds)
  done (took 2.720275836 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.09553758 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084023025 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.140268832 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079822885 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086231372 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072203736 seconds)
  done (took 1.826057285 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092686265 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098275769 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066906603 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067486526 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073162961 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07080059 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070714651 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070947165 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075284195 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075635352 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070766906 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076847124 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077241541 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079277466 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073108056 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073591316 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071218819 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07378839 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068148149 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080321421 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071238287 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075425748 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071227076 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070664249 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070621399 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077319554 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075556568 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075839805 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070773484 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075211102 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073137392 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07135439 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075458726 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076155239 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067827135 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075157502 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071040276 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080312761 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073213639 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077430601 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067419453 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073307026 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075403236 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075241854 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075409398 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07104389 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075083605 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070954062 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071035972 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082466063 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073539677 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076872575 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073276041 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075606112 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075132574 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082071462 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075906647 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076970281 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073037939 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075693735 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077264639 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073258224 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077108038 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075770376 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073286671 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077106659 seconds)
  done (took 6.201259928 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104730563 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067706541 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070620496 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075607773 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0769531 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07148722 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071526983 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071116622 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071394581 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067954115 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105963438 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071475393 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07805794 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077757112 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071959752 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07120276 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071562882 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077769136 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067966117 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082277099 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071181271 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077199458 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077308354 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077424071 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07564601 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073312736 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071388235 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070905042 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071002025 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071003063 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075097212 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070959919 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07720498 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067676737 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07699569 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07102869 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070700049 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074589558 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071442215 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07330953 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07719241 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080485996 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07056032 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071182405 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075479459 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071041861 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070877957 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06800359 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070632901 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067822638 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076307333 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075238523 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075276583 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076943878 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07098489 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070995536 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070691437 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070846724 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070644207 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073153856 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078485467 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070719015 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081463947 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070614989 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070750965 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076852186 seconds)
  done (took 6.185251185 seconds)
done (took 126.283689559 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.209732637 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184122516 seconds)
  done (took 1.653197733 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073939605 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.104518574 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.082984782 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133013696 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071324859 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105413703 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104469745 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083787559 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.07142873 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071590133 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071123492 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.074146526 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.137417941 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071704426 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071532999 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074495775 seconds)
  done (took 2.680274879 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104321541 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.167163516 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109385154 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069315907 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104393108 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076909044 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.06931726 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.082246842 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.076183008 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071422937 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077751364 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07602528 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.071223827 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.078032734 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.076033803 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077665093 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071043458 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077537812 seconds)
  done (took 2.815585646 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104030913 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094479777 seconds)
  done (took 1.480345997 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.17749374 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.13608389 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.205536049 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.345944119 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.153943053 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.422125034 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.140710332 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.141354755 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117846207 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.137725965 seconds)
  done (took 3.255964367 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103825866 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.169904771 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.294377734 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120411376 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076234359 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.091183827 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.122750071 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082057607 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084216085 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083363364 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.08396646 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.07840944 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.103462926 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07707201 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076310204 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078268999 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.106285337 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075621353 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076074615 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079137869 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.10656503 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070024537 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076674255 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075011471 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080828954 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080845298 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071421744 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070297384 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078823514 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076136738 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079741481 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.087991109 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.080674585 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106411369 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074859422 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107683704 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.079056579 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076791703 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076224454 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.076631298 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.080192161 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.080316601 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078922458 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078167437 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071489755 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078896853 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071377628 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069952362 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080456508 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.0717806 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.08033143 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079265842 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106057079 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071898476 seconds)
  done (took 6.101307836 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108788437 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.108129983 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071480602 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113311655 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104397445 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070906908 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.106226478 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09941687 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.108506978 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071226459 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069809432 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07118697 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080080313 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081567872 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115957672 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108267048 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073858833 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070539949 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.109173608 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.108276129 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06996964 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102796344 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098780965 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107881086 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069287143 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071160016 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069524583 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071237026 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076443766 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.07781123 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070561685 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079958017 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084122248 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077961763 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069186755 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069334977 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069276326 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078718705 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079404294 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078650981 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076361899 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06847424 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069213196 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070482841 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07028242 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068918372 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077508 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.07876789 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077126223 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069155818 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070636287 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069182832 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070334156 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078443438 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076612788 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079649326 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078604452 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069678213 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069674135 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072475014 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079605417 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078854802 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078872092 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070137003 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079068472 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069794147 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079707716 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08397219 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069867664 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073926352 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069766717 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069037108 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070650288 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076550114 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076615718 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070691165 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069431964 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069285875 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078918025 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077084076 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06958127 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07616984 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068399372 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069029591 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.0711244 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070532438 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076386575 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078927481 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.07129405 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069547262 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069561581 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069708187 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068889109 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075965992 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078437721 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078125729 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077043245 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06983985 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077533008 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076320885 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070373429 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077328379 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069224861 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070530966 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070026918 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076417386 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075073059 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077335414 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068149275 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067866614 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.074720097 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077530145 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06872265 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.074739247 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077285125 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.075846975 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067543156 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078132804 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068215177 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076533017 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068061501 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077029214 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.202528222 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079217118 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071144415 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069962039 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070548354 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078511925 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070979557 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070428755 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070907852 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070162471 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078209047 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081720944 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071066852 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077831843 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.07748667 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071105356 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.07842159 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069532442 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078335174 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070044913 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071216629 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069353948 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080749835 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070227623 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.07054976 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069661153 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079289537 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069911103 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080520276 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077348049 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069092376 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081602485 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079419306 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076874878 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080138013 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070761901 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069756936 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071472814 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071925314 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078473404 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078251128 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071312319 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069750327 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077115093 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079348959 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069386671 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078931313 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078938792 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077967407 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.07023629 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070060178 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079874697 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079499239 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077455664 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.07811683 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077872651 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069907081 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077424878 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078171929 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069808564 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084422386 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070387393 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082012797 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078507607 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076699729 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078537872 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079449326 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079609106 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079671715 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081860505 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069384993 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070106323 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078203108 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070737718 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07186578 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079533222 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072537748 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072574116 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08516208 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069894835 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079710003 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068750543 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078639499 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068862543 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070596475 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08281424 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069742031 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071191783 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07790557 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069659764 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076809449 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079910167 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078078522 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069238505 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07350081 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078421644 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078058669 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069485316 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069265076 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07095534 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076492473 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.0756319 seconds)
  done (took 18.525581481 seconds)
done (took 37.806625918 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.205106485 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.154034776 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.182902073 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115036686 seconds)
  done (took 2.04066314 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.108243247 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.098482488 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.088430251 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066108966 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.09437481 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066078128 seconds)
  done (took 1.837070102 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.287202958 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.195783619 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.177843021 seconds)
  done (took 1.974524552 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.209717303 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.189799802 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.460131156 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.283574055 seconds)
  done (took 2.553713698 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.141255892 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.082380893 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.064897653 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082833953 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.123705575 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.149418548 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.093342705 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.118014669 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.076473064 seconds)
  done (took 2.300376238 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.14661262 seconds)
done (took 12.188902716 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.132305229 seconds)
    (2/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.103299884 seconds)
    (3/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.224465556 seconds)
    (4/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075631162 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.072923403 seconds)
    (6/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.074858947 seconds)
    (7/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.069224977 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.069075757 seconds)
    (9/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.229237334 seconds)
    (10/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.203405446 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.100029198 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.163341894 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076531643 seconds)
    (14/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.086325744 seconds)
    (15/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.207749989 seconds)
    (16/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.07513255 seconds)
    (17/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.388177536 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.134581165 seconds)
    (19/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075027671 seconds)
    (20/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066804211 seconds)
    (21/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.078507361 seconds)
    (22/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.075265966 seconds)
    (23/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.167126596 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.099443301 seconds)
    (25/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070420495 seconds)
    (26/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.088943392 seconds)
    (27/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.090901596 seconds)
    (28/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.073330721 seconds)
    (29/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.117043842 seconds)
    (30/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.200432063 seconds)
    (31/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.211358309 seconds)
    (32/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.166578203 seconds)
    (33/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.106689472 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.06613657 seconds)
    (35/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.075368904 seconds)
    (36/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.142062065 seconds)
    (37/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.199856456 seconds)
    (38/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.17907956 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.087694584 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073853018 seconds)
    (41/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.078620484 seconds)
    (42/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.224704795 seconds)
    (43/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.065231347 seconds)
    (44/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.123815735 seconds)
    (45/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.130596694 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.10173869 seconds)
    (47/309) benchmarking ("sort", Bool, false)...
    done (took 0.156730819 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066210005 seconds)
    (49/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.227542347 seconds)
    (50/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.066855772 seconds)
    (51/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073047519 seconds)
    (52/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.077924523 seconds)
    (53/309) benchmarking ("sort", Int64, false)...
    done (took 0.067042196 seconds)
    (54/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070924419 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.11752895 seconds)
    (56/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.084148198 seconds)
    (57/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.103941551 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.083224877 seconds)
    (59/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072422007 seconds)
    (60/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.077378406 seconds)
    (61/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.169650453 seconds)
    (62/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.169691098 seconds)
    (63/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.076413756 seconds)
    (64/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.065464878 seconds)
    (65/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074791033 seconds)
    (66/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.078397324 seconds)
    (67/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.201073672 seconds)
    (68/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074323354 seconds)
    (69/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.17225133 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.130060202 seconds)
    (71/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064414605 seconds)
    (72/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.074374139 seconds)
    (73/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.077889537 seconds)
    (74/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.171514396 seconds)
    (75/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.133162238 seconds)
    (76/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.215713441 seconds)
    (77/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.200677664 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065737016 seconds)
    (79/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.076512291 seconds)
    (80/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081958699 seconds)
    (81/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.138455832 seconds)
    (82/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.178927557 seconds)
    (83/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.174077344 seconds)
    (84/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.225608059 seconds)
    (85/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075088949 seconds)
    (86/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.178289956 seconds)
    (87/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092616938 seconds)
    (88/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.161737099 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.104783258 seconds)
    (90/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.072498402 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086028513 seconds)
    (92/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.130351408 seconds)
    (93/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.07128976 seconds)
    (94/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067303737 seconds)
    (95/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.06526745 seconds)
    (96/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.175482992 seconds)
    (97/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.129224424 seconds)
    (98/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.07265007 seconds)
    (99/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.076304983 seconds)
    (100/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.072093763 seconds)
    (101/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.168598881 seconds)
    (102/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.06522523 seconds)
    (103/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.072961162 seconds)
    (104/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.218933425 seconds)
    (105/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072325142 seconds)
    (106/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.092731947 seconds)
    (107/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.190469566 seconds)
    (108/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.064144538 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.0649167 seconds)
    (110/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068981916 seconds)
    (111/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073419934 seconds)
    (112/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.166971343 seconds)
    (113/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.070977804 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.121398321 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072447192 seconds)
    (116/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073572679 seconds)
    (117/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.065288823 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064988617 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086942889 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.095790723 seconds)
    (121/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.13242025 seconds)
    (122/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.070027828 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.132578022 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.110432308 seconds)
    (125/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073795851 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.118730972 seconds)
    (127/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.065062187 seconds)
    (128/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073586007 seconds)
    (129/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.07750725 seconds)
    (130/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07380109 seconds)
    (131/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086459157 seconds)
    (132/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.064469856 seconds)
    (133/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.165856385 seconds)
    (134/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.072457434 seconds)
    (135/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.190440323 seconds)
    (136/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069553187 seconds)
    (137/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.222923454 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071437779 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.118305719 seconds)
    (140/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.076972475 seconds)
    (141/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.189002748 seconds)
    (142/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.063930481 seconds)
    (143/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.065117909 seconds)
    (144/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.157716192 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071453043 seconds)
    (146/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.067537765 seconds)
    (147/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.0806654 seconds)
    (148/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.076553572 seconds)
    (149/309) benchmarking ("sort", Float32, false)...
    done (took 0.12898152 seconds)
    (150/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.189982354 seconds)
    (151/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.065131134 seconds)
    (152/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072576017 seconds)
    (153/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.139551368 seconds)
    (154/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.076884582 seconds)
    (155/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.13467266 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.086493502 seconds)
    (157/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.067289827 seconds)
    (158/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.064767657 seconds)
    (159/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.063046425 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.086447548 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.109056776 seconds)
    (162/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.065445274 seconds)
    (163/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.068836954 seconds)
    (164/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.08551342 seconds)
    (165/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.076960206 seconds)
    (166/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.122200695 seconds)
    (167/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.065120647 seconds)
    (168/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.136828494 seconds)
    (169/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.132466497 seconds)
    (170/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.063964028 seconds)
    (171/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.085492909 seconds)
    (172/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07201973 seconds)
    (173/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.165756689 seconds)
    (174/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070805466 seconds)
    (175/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.073826104 seconds)
    (176/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065017551 seconds)
    (177/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.087599261 seconds)
    (178/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.090385976 seconds)
    (179/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.064052055 seconds)
    (180/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.064489436 seconds)
    (181/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067514127 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.086038312 seconds)
    (183/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.163746459 seconds)
    (184/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067077007 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064169676 seconds)
    (186/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.187772012 seconds)
    (187/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.064761071 seconds)
    (188/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.134785813 seconds)
    (189/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.064692996 seconds)
    (190/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.064110693 seconds)
    (191/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.066714959 seconds)
    (192/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.064741219 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.132947242 seconds)
    (194/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.065101744 seconds)
    (195/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.209018022 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.083910722 seconds)
    (197/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.063853237 seconds)
    (198/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071551934 seconds)
    (199/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.071770375 seconds)
    (200/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.064490371 seconds)
    (201/309) benchmarking ("sort", Float64, false)...
    done (took 0.127942317 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.123917073 seconds)
    (203/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.065188835 seconds)
    (204/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071774287 seconds)
    (205/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.077262165 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.084719548 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064628993 seconds)
    (208/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.065618716 seconds)
    (209/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.173264128 seconds)
    (210/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.066226877 seconds)
    (211/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.08121737 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.088229688 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.071711781 seconds)
    (214/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.339594202 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.084935161 seconds)
    (216/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.069308379 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.094486692 seconds)
    (218/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.069411804 seconds)
    (219/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.070371673 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.117517773 seconds)
    (221/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.068481062 seconds)
    (222/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.12235052 seconds)
    (223/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.068914529 seconds)
    (224/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.075407167 seconds)
    (225/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.06897981 seconds)
    (226/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.069933344 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.124574707 seconds)
    (228/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.078956437 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.068641152 seconds)
    (230/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076557936 seconds)
    (231/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081022459 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.139921984 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.067966106 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089720482 seconds)
    (235/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074163754 seconds)
    (236/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.068417384 seconds)
    (237/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075955368 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.146238431 seconds)
    (239/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.076418244 seconds)
    (240/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.181912596 seconds)
    (241/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067109957 seconds)
    (242/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.174649844 seconds)
    (243/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067452169 seconds)
    (244/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.070013329 seconds)
    (245/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067780023 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.119263938 seconds)
    (247/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076066292 seconds)
    (248/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068116384 seconds)
    (249/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067676439 seconds)
    (250/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.067380001 seconds)
    (251/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.075110479 seconds)
    (252/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.067262954 seconds)
    (253/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066173193 seconds)
    (254/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.066006008 seconds)
    (255/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.06802276 seconds)
    (256/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.0714396 seconds)
    (257/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.067392739 seconds)
    (258/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.069795359 seconds)
    (259/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.067585939 seconds)
    (260/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075202357 seconds)
    (261/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.066730276 seconds)
    (262/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067838146 seconds)
    (263/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.067311116 seconds)
    (264/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068278699 seconds)
    (265/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.079700794 seconds)
    (266/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.171871181 seconds)
    (267/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067731218 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086571903 seconds)
    (269/309) benchmarking ("sort", Int8, false)...
    done (took 0.147101618 seconds)
    (270/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.067580276 seconds)
    (271/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075604188 seconds)
    (272/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.067084034 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075964398 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06652607 seconds)
    (275/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.067232688 seconds)
    (276/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.068000345 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091454874 seconds)
    (278/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.066044474 seconds)
    (279/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.066645254 seconds)
    (280/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.069310414 seconds)
    (281/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073344656 seconds)
    (282/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066769762 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092983497 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.124934523 seconds)
    (285/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.08091791 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.118597791 seconds)
    (287/309) benchmarking ("sort", BigInt, false)...
    done (took 0.193312288 seconds)
    (288/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.093661623 seconds)
    (289/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091559617 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.128248086 seconds)
    (291/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120885365 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088379165 seconds)
    (293/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.068231846 seconds)
    (294/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067262186 seconds)
    (295/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069777949 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074779372 seconds)
    (297/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.066671605 seconds)
    (298/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.068108015 seconds)
    (299/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.067617891 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.06684509 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066682159 seconds)
    (302/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.066437604 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073975413 seconds)
    (304/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.069070616 seconds)
    (305/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.069434461 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.066413464 seconds)
    (307/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07542047 seconds)
    (308/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.068037258 seconds)
    (309/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.066723979 seconds)
  done (took 32.610257087 seconds)
done (took 33.93903197 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08729135 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099794378 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075780153 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.095604483 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083897547 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.098325658 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076412206 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081665399 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084153183 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.08252061 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081122111 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.073908763 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.077020072 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076573857 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074710165 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097871308 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081307986 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074680303 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075008271 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065966846 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075143875 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066623645 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066413625 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.072575971 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078420176 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073497246 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.075888303 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075897759 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066669238 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066738757 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.07116367 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075010928 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066368517 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078849939 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07526244 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074968313 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076053911 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078673708 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.065973955 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066739786 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077304385 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066816105 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074616834 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073378392 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071752955 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073455858 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075312764 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079471261 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.097277397 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071067568 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077369538 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077682893 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07806689 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072380147 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072118901 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074565505 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072577374 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097032068 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075284782 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070688142 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076972783 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075900699 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072894783 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.075082259 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074947495 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077535803 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079028763 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072585063 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076758063 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073809573 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066585704 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074481624 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071136859 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066444254 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077611472 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079670446 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066091181 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070783139 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.075073044 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074528704 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066367411 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073687675 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066099418 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071367628 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071140309 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072199698 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071438762 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073534041 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065645092 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075276584 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073241179 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074175307 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065695576 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.078949688 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066192748 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072464474 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066445183 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067675419 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065392954 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071311815 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066947819 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070790549 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075050502 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065159206 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070993176 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079246202 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066504059 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073223388 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065277536 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065795169 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.077776074 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076228795 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066217638 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070897425 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065494398 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071899256 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065573092 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065971575 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066257898 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066075656 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07043565 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066075956 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070178691 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071251195 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078652054 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065803274 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071352567 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.07037531 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065978674 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072714425 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066342836 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06659924 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065644939 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079590099 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070478182 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066472085 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071720454 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070523772 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073861214 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.065552326 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074313817 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072193921 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070013195 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072058407 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065333249 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076592334 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070036363 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07024798 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.065542207 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065617871 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064994566 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065994883 seconds)
done (took 12.645021648 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069944116 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.116918073 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.092388192 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.09286821 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.082785699 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067428896 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.074364917 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.091549883 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.069046847 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.096361976 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08864654 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088488204 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.109152498 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.066162818 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066842648 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.067970078 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067953502 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.078504966 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.093957022 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.089347284 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.105827226 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066583225 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.085697206 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.086624066 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.083496735 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.088403397 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.06793541 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.067636572 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069505628 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.089516798 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.091505659 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069684201 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067611476 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.089788016 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.084523432 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.080055363 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067498992 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.075154842 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.06764123 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066397274 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068775884 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.087684153 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.074913875 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.075014416 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.067832781 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.074657273 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067812518 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082706543 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087465675 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075768415 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.082425476 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.091093581 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070522497 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.082840165 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066458786 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08283984 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.075987089 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067510106 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067614124 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.071755713 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067163704 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.06928246 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.078035689 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.075858803 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071973738 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081585759 seconds)
  done (took 6.648641047 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084455969 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094159105 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083186953 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084194609 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066954627 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066905887 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067216897 seconds)
  done (took 2.031009003 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066920367 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089788516 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090268851 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.09103366 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.081157476 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091572725 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074708071 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067317697 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.0960525 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066532562 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086995463 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097643215 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070993093 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078655979 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092049489 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067152185 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091684055 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067096624 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.067661701 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090848435 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072058946 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094297917 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078810258 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067882608 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080047108 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067599623 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100113272 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075311142 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068990113 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068605479 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068526161 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.093901036 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079249449 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081168329 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068861941 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082500661 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080837472 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070428243 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.078137818 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.076803371 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080878088 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069250267 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066392919 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068840468 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070803027 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078966321 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066155438 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068772323 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068976851 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08630599 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066072397 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080045561 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070680231 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073707295 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073009038 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07305403 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075775154 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068991464 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086424851 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068637561 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084888103 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083426484 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080291028 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083624327 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067054762 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079282491 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080649681 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068523668 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069317189 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068912446 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083681981 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.07034501 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068688838 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078493696 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067661258 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091087732 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091326061 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066991384 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080671513 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068532776 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069241729 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.079129996 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.09131781 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07287769 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06840032 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071962047 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069540271 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.07051181 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066468494 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071604094 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068544864 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072818055 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068781923 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071672199 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070267742 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084125487 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067392476 seconds)
  done (took 8.879931984 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069203643 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068902443 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069536969 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067889493 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068541511 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068124505 seconds)
  done (took 1.924175472 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091232614 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068699489 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080867855 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.068532871 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103815703 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.083670114 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083645621 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078452999 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.081831438 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079853117 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083567141 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.086733459 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.088017585 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.070877372 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083163309 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069944889 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083654844 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072814364 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079313691 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070866327 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.081994336 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.070793379 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070678846 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.086802743 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.072198966 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.069248376 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077404515 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079517182 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079271937 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078188179 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.070220746 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071908333 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075090769 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077115496 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.083589728 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074930193 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068059812 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074555751 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071168914 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07190277 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086215405 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070446001 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.070847464 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074494904 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077491265 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.077377449 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074605501 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.077042149 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08305074 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074302029 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074393324 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.068915539 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071482035 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074538335 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074925763 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077783517 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074179747 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.08429721 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.070374193 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075371231 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.06790495 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071502294 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07678313 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071000806 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075092183 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074655883 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075313689 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070103467 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070331433 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068501738 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074995984 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068795825 seconds)
  done (took 6.974033251 seconds)
done (took 27.959021158 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.511053763 seconds)
  done (took 1.977825323 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.620095048 seconds)
  done (took 2.115922843 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.519050408 seconds)
  done (took 8.009471429 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.382073653 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.453248221 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.746408886 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133333697 seconds)
  done (took 3.238513782 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.695570632 seconds)
  done (took 2.199919156 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.234395121 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.224666967 seconds)
  done (took 1.967742662 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.347770957 seconds)
  done (took 1.840428695 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.067241743 seconds)
  done (took 2.562668385 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.23455559 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.15963179 seconds)
  done (took 1.895032378 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.446012661 seconds)
  done (took 1.94425995 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.187219761 seconds)
  done (took 5.687485832 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.218056165 seconds)
  done (took 1.752610894 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.235932853 seconds)
  done (took 1.738103367 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.734034929 seconds)
  done (took 3.233143071 seconds)
done (took 41.671864407 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.084081932 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085981495 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.086076391 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081174033 seconds)
  done (took 1.818239547 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075875355 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071033511 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075309441 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071001618 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075624112 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071278147 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072581329 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073823095 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.070963732 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072038485 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071488869 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071184766 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074419223 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072715359 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070174938 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074323955 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075138326 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071381211 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074087123 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071334324 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069548894 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073846138 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074156108 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070658433 seconds)
  done (took 3.246058123 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079630321 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074026795 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076597224 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072718619 seconds)
  done (took 1.813021558 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077545448 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.087987973 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.086953618 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078380274 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.088686016 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084429881 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068127346 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067768546 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.068993754 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07715333 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067085576 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.093466159 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086516902 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077454392 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079756681 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064551703 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.066241293 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085419431 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077688214 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.07841059 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069201268 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077977987 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066964438 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.08730322 seconds)
  done (took 3.370366818 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081935462 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.06742052 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.080677034 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.092587278 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.094073572 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066665148 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.080678067 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093928509 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.136487037 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067303972 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.073147289 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067234896 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.105715996 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067242583 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081489825 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109988392 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113553085 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070729777 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099482636 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067048539 seconds)
  done (took 3.232456432 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.083749869 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.073680802 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.071061352 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067201715 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077121242 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073568295 seconds)
  done (took 1.964723325 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068760429 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068877735 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.06864532 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067853585 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073319267 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.069009695 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066965315 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068767336 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068836781 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068587723 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067959736 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.067619331 seconds)
  done (took 2.340732948 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.1926972 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069416824 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.06991546 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066947223 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071835953 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067852353 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.08293836 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069238449 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.094546982 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068017925 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067660275 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069590185 seconds)
  done (took 2.50533668 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191502623 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074410865 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2215812 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145323673 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102281268 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109792824 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111629256 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107993732 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.133478799 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097778925 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153223046 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159750692 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103918259 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129225699 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088083768 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.120484034 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144499846 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15631376 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099880374 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154852874 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135171722 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122772222 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1425997 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097072567 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10139658 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113101096 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072590507 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077636402 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15911592 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123261511 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136395854 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105311815 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090589283 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165917772 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161927705 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13197655 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142170125 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082486089 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.118538859 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.129821973 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19350973 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087790625 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152657295 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103780568 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078261705 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124930226 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110773751 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.115878125 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.1008015 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087191211 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278442299 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173875757 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.1290679 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08446874 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117457502 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106946064 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.110450343 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114015433 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169602504 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151166908 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122333865 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070699271 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107550537 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14418862 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127681937 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.105728348 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.119421266 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090948896 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124892116 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149146567 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118700781 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135954556 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.113161262 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085528192 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115664082 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13108093 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121032888 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162971305 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119224406 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071866837 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116073847 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095714733 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078515326 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143280978 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07456621 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165550783 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096521173 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.121738386 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125959718 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105556259 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105235386 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149912642 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134864693 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101486856 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084393106 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100230631 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.11535442 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137503789 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085210472 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105033625 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111183366 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078087855 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128361351 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.073379854 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115798782 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.093433909 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114505062 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121289013 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077573404 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11716223 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.24737382 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101327583 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124352964 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150559284 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08699449 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079884832 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157560253 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117553554 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.101116075 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135514729 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151159236 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.119564883 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09589054 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138742978 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1649404 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088181362 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152975336 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100025678 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082460647 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.103142852 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11844877 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106836671 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.119442047 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079281654 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116370554 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154710291 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073188415 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094630663 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128059545 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079877419 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07955755 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102055084 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100763912 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094420808 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098870402 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101455323 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131122562 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118208604 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102901703 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118996209 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094950142 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156512786 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085909252 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.103138621 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101471126 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071968861 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.126571498 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147700223 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077202878 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151297737 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.117310842 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112111074 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114614653 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081770839 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12968172 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077042791 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071673962 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132347403 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108951923 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104549982 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.143041973 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258252527 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.120246074 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.117220236 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126005131 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124512149 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.124512345 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104092964 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087877242 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110760709 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124211863 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072011181 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089607844 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080514025 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100981778 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092025859 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082667928 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133709026 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117147205 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107264195 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111054125 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09417859 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141591279 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077134179 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118888867 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.11750818 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092732736 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.145864869 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144573733 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126790042 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098439539 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130390201 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072801937 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073540484 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.08691669 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118238493 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082340593 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082194112 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10891801 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143110396 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119919339 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129730954 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118881678 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112571989 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14890204 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071350853 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116923434 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135992837 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116606561 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.101581587 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089605445 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.095234861 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136172281 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100254253 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171146562 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109644422 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118747764 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147437481 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098782466 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077023028 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100148003 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123886 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097076112 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.286003199 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097001613 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085715832 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104565082 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.077058705 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096737095 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121645724 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113238078 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132705241 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.108735231 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126782472 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076968856 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108381411 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118063537 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117102299 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082515024 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113048606 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157800967 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094743736 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112151248 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142151816 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077577987 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.135258469 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163114754 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136754832 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082984472 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101275868 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117205404 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121216017 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113635088 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131855962 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100856999 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131530626 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107769788 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.082983761 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084478762 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092996471 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100981733 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.109512393 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.101028509 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.111167497 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093380496 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124031772 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100041998 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107651494 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113345206 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097820378 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.093903633 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093751039 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164230763 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113732702 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159523553 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.097670939 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.135857824 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149839858 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073444376 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076586504 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078279916 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129915593 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082366918 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123034944 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.108219834 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260088104 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119521038 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132420046 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094813376 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070784216 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106008428 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127615787 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118814439 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09432038 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.100690921 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150413295 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.114998302 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077147559 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108851053 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112815716 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101889622 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165050632 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080749563 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105919693 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075468534 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078858107 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120358207 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143688117 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081321792 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.101451341 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115857392 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106965332 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120639922 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095467894 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107991865 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126506374 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139505107 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120981603 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.087887346 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107290543 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123027076 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144989971 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100805993 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097921672 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164900981 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143439483 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.150216321 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.085645191 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112716573 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110289515 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105871398 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130219545 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082121059 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151400053 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079961073 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127261126 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097724423 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08741987 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122332548 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.108145841 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085029925 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135241114 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11130984 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080298814 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077725802 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256724406 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116489629 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100803532 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074377749 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132870717 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073533422 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129802222 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16175874 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078763563 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102352201 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094031685 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081576478 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100187816 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098905082 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084855566 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097841586 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161204744 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.08609229 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139444497 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12709479 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107635039 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130006939 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100902471 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.640926879 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078455283 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143642426 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11152164 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166897284 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096621705 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114596459 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107343693 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116224106 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134826176 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098890864 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175463408 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123887824 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.113922243 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077620668 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098774687 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100398841 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.086791597 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103419495 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109972152 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108961408 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092351116 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.113431595 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116814838 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081257676 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094320143 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146523357 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111027738 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134505779 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131581146 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082482354 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113186653 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128353841 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077557743 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.112072188 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141157443 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.251153135 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099506585 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081865632 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.099059994 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164388723 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072567411 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15093868 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115603321 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107207252 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113127789 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.106547593 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125260201 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100101542 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116890503 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090932327 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.10647782 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147469186 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081840787 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07773848 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102009916 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107308715 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.095804185 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09586259 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096854038 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143423744 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071226136 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095929777 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110839186 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136460102 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161458432 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.103223472 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082509209 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114416935 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114677215 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.110474334 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116587021 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080089995 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07959192 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079932517 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.098756538 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.12104392 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110118686 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115655962 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105445348 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151439933 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082150725 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.222827663 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093532289 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102054014 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.087432158 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078700996 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093578324 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093589443 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099893449 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107839812 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164123484 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093095135 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087811012 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089879343 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073477833 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081512615 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120288709 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106277466 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112713987 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100214688 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080535984 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099467354 seconds)
  done (took 56.953070653 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123452156 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.08402871 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.099105043 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148848779 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122223716 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200567813 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.151300583 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189475643 seconds)
  done (took 2.761226788 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069442127 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095195632 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103993287 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084128352 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067983632 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069608035 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.226120861 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.083172067 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.0674699 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.092026005 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.07962828 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.071111737 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.44426528 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069638254 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.069681459 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.078556125 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068432866 seconds)
  done (took 3.442916421 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.384992029 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.614519521 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.349161884 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.076697152 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.007113559 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090032615 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.229788413 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.139440446 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.08323199 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.538452188 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.370090384 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.135678893 seconds)
  done (took 18.635018513 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.08367961 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.076810014 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.090917329 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.090839643 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.078919236 seconds)
  done (took 2.035704636 seconds)
done (took 105.671150701 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082581759 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.432474882 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.069708565 seconds)
  done (took 2.140619909 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.092225231 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.090087381 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089377419 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087461945 seconds)
  done (took 1.982978317 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075435248 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077596423 seconds)
  done (took 1.768748292 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.22950547 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.175612776 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.096636601 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083747814 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080549925 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081385018 seconds)
  done (took 1.868407906 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073800151 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073041211 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073780123 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.074538277 seconds)
  done (took 1.912759536 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.068331839 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.067864019 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069547582 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.072570485 seconds)
  done (took 1.896708424 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085159084 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.085479387 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079856832 seconds)
  done (took 1.869305377 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.102307317 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091111399 seconds)
  done (took 1.813059597 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082214093 seconds)
  done (took 1.702625853 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.089781024 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.099996588 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.133456965 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.115026184 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.139394337 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.115295849 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084785537 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085430687 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.079486683 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086886355 seconds)
  done (took 2.649564458 seconds)
done (took 21.803313242 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079929239 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.37336808 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360704789 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091305642 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669978619 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358067954 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.984261206 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093331573 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.141434907 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06905246 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085601452 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648750272 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.974561923 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.329052388 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.962464124 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.325991475 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649623352 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069633192 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068777508 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069035094 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.965032553 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06914331 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06907169 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06933 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648936134 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373221408 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069412836 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.325784896 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069912082 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071612696 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357059764 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070243681 seconds)
  done (took 16.164296377 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071403472 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122515151 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073447454 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085340807 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071645997 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070652128 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072913191 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070288355 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121520407 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069134994 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08616659 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069517965 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072809122 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069733616 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088773157 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070025033 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070331681 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071211631 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070159103 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070127773 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089010577 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069811636 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070650331 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07081597 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070365189 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082503852 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07380984 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070525597 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070483717 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072036441 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073305661 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071263127 seconds)
  done (took 4.086024754 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117935648 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126131087 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074628939 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.108122513 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113376156 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071550247 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148654298 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09460045 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128330492 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069329434 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087118432 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06936719 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103597757 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069943704 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090117254 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070650421 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071213644 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070805811 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070503687 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070341524 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089804146 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070539747 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069999086 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071022722 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070544916 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084386435 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070237763 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070833848 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07050887 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072428438 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073922991 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071121315 seconds)
  done (took 4.347544869 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.0716742 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.073736691 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.080890652 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.081799934 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068090214 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070471282 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071891617 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068234253 seconds)
  done (took 2.225060417 seconds)
done (took 28.451340961 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078886073 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069039998 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072332307 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087421242 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074141243 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079561804 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066241701 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075503843 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072501933 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072903203 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074362125 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068227785 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071660641 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.0662574 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073193529 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067540475 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.08204139 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071607455 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080966932 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081929302 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070715434 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073887729 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.076588908 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.08139938 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081579576 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081620544 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077388016 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073365511 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068902208 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07126419 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.070814011 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.079788196 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.081623528 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081730449 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067875395 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068391619 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072192638 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069401164 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082556498 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077089856 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069836293 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077725892 seconds)
  done (took 4.749604662 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.085003285 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090253982 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.082825556 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080276293 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.091040577 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083200111 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087002485 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078573395 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.078372771 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086911249 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074405446 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.081643245 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079950111 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073206624 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078105365 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075641779 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.080545152 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07419667 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.078372828 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078547288 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.087948057 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073639389 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088524366 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080128247 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075576024 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081108889 seconds)
  done (took 3.750184142 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074541603 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087008802 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093817464 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.144259952 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.112015155 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081443807 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082533341 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092614378 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.097617851 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069347298 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07364069 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093236142 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094185613 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.0755473 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.06956764 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085006706 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085544011 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071105275 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075808715 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098293181 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090424488 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087119569 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095589938 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085727247 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068768779 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07213764 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073652316 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.08537489 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071935253 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080987838 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072291757 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.076144078 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070537517 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.07931825 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071540274 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068459701 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093780886 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.08028826 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081041033 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069380824 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078312119 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070033536 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094622629 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128860616 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067935801 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.072705258 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072780269 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079991919 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068103723 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096220017 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080784519 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068459723 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069416157 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067893179 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068097879 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07126839 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070778381 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071146519 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.07883214 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.07553556 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.09047385 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073891082 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086193322 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068314287 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078640877 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068006834 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070150349 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.068062941 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097110173 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070238034 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112662607 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069658722 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067453742 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07982373 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078992785 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075069872 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068697341 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08600753 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080187585 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072619124 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077134447 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072100882 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072687183 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099338485 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068825002 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068249823 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068011852 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.07202228 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072052296 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069452325 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080841093 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067989657 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072295008 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.08653326 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068325673 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069667258 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072713574 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071213515 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068032207 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079511061 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073118039 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070340119 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079587266 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.06937833 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072835078 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082227825 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075321963 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067495877 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070624493 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.07212223 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070109256 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070454608 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071980341 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070859399 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07558926 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075223686 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074149586 seconds)
  done (took 10.810905465 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.164524536 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.157088694 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071561071 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.148663155 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077236172 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.08078326 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.152278969 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09571958 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069575297 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071095536 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069607563 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.11084334 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105759358 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116690607 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.081465995 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069840863 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.0923426 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115691499 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.154003031 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.148102095 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.091995332 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077278762 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071799473 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070688901 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071219877 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078948195 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085646083 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078078571 seconds)
  done (took 4.456772034 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078529812 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.104395697 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07371295 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.09223627 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.088742246 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069822641 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070842328 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070617206 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.08572374 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078747715 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069285638 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074491948 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073826161 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072649237 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070616742 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075898888 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076338868 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068537361 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073424744 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075235252 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079922082 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.094777202 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.07327107 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069229413 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072290329 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069174138 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.077782566 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.081867243 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069324621 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.104137762 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067481118 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074122426 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.086637669 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069743407 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069119622 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069863435 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069369184 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069717604 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.07108257 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068547683 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068283676 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.073237726 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068218849 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077698194 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.0825784 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.071364139 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071500922 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072651356 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072332644 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066948904 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072123278 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072221009 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072523207 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076743633 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074166463 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072800229 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070477595 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096433318 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075596922 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069204962 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068825462 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068392194 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071856226 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.078816824 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084722006 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072565812 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068298195 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069883884 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.08220706 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082422495 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068954384 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.074184198 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.06711186 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071548575 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07231452 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071890555 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070360556 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068199782 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.07208078 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070096715 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.070209564 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.06924235 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.06876328 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072539272 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068517253 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068528736 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069803493 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071314078 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.077976087 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.06885999 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.07281902 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070542337 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068553746 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072128615 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.07489468 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072671777 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080234205 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.080462296 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070011043 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067978562 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083095906 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072510981 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069435541 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.075097715 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074109551 seconds)
  done (took 9.461400262 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092663937 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069587184 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085902336 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093208139 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.079704617 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075251089 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079692393 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.06893926 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085643433 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074169299 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076868587 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068560796 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080467689 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079623541 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069833255 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079707099 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073263576 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087464042 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084436388 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068284887 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077969904 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081610613 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.08143207 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.084139248 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.0834991 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.084142546 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.081106856 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079693869 seconds)
  done (took 3.918417682 seconds)
done (took 38.778073738 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.719370552 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.964615637 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.709213404 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.935207046 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.771952783 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.914958462 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.7941756 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.704385347 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.965027964 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.74765988 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.01646433 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.966249625 seconds)
done (took 64.993459633 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.753344448 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.85503904 seconds)
    (2/2) benchmarking "String"...
    done (took 1.954595972 seconds)
  done (took 5.451375145 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.991013547 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.368975733 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.93665667 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.700284936 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.707994882 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.956062412 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.469716582 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.142211609 seconds)
  done (took 29.924186518 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.927252029 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.92508621 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.443331889 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.457526315 seconds)
  done (took 15.438649115 seconds)
done (took 62.293712395 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.715837998 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.755263925 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.751464161 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.701938305 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.794481875 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.725911226 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.834131398 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.713961977 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.702670065 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.706639368 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.70594473 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.198528942 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.716637038 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.939771857 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.702859244 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.703673129 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.739152123 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.250523179 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.857831611 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.716645812 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.715767184 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.73804395 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.70356689 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.712857243 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.739133655 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.703682356 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.099090103 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.71259775 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.533982102 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.708898195 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.752950419 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.039572177 seconds)
  done (took 201.735867106 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.703244019 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.76806872 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.856055654 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.720474192 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.206739243 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.896440614 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.801326035 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.238207813 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.708181689 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.726558641 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.960065989 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.706587739 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.986431837 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.686727379 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.73964747 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.710647425 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.840428255 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.001700142 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.744392402 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.848560168 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.719076023 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.852126306 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.789341754 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.955801046 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.727705394 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.707410618 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.724772115 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.736548476 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.890705608 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.82222032 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.706941468 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.743793444 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.908391799 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.573294369 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.70475296 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.711973402 seconds)
  done (took 167.769708633 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.884762063 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.706052106 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.704776123 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.708028261 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.711520957 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.705929189 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.827100998 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.831627121 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.376756456 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.338316832 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.762598312 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.705695384 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.461676878 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.705234656 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.770150988 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.719019283 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.705727018 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.720896076 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.732921049 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.708451903 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.706866345 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.831977806 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.718763033 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.706241833 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.716074057 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.706056387 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.711766335 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.092044534 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.706844168 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.82260897 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.709825053 seconds)
    (31/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.70637737 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.711454134 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.947570535 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.707433986 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.709050796 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.529661571 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.837669428 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.794834347 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.709277713 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.712319368 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.707387216 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.925494579 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.707513017 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.707658545 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.708457666 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.70799331 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.821232313 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.708261018 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.832938401 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.708162231 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.186059452 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.708435454 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.709915972 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.014531018 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.279382844 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.707164834 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.709904053 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.706630798 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.707443308 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.713284539 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.198023239 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.778087516 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.709169298 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.707791529 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.71249093 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.707529091 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.751160416 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.709299688 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.796542447 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.722319515 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.936550303 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.830524601 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.711195746 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.774231775 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.800300919 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.710021974 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.708824956 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.70886283 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.709838008 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.789783456 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.709401173 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.787525286 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.718550584 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.711031831 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.762211811 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.778029049 seconds)
    (87/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.709366434 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.709668381 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.537926995 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.709726253 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.707773146 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.947304025 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.773199159 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.707910908 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.709986795 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.787082958 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.832950536 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.428736799 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.712697437 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.1824466 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.785539016 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.710240572 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.827080214 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.712278862 seconds)
    (105/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.709128913 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.788104479 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.717297553 seconds)
    (108/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.710367098 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.710195489 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.744494453 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.71113908 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.722314624 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.708554979 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.081055847 seconds)
  done (took 393.373607444 seconds)
done (took 766.463489815 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.32252285 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.289128784 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.379987305 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.304368921 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.280733227 seconds)
  done (took 13.22719526 seconds)
done (took 14.875849057 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.789986551 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.796632401 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.728688807 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.793914428 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.727060738 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.7933463 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.776317354 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.733585705 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.760590405 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.732677333 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.761831772 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.733445386 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.719110061 seconds)
  done (took 24.497484891 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.940043319 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.954716399 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.775673717 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.961443827 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.750035116 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.938173522 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.863158868 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.856901189 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.851081269 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.723129592 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.720759275 seconds)
  done (took 21.987125847 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.946988065 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.94385193 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.783134567 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.944729563 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.754166498 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.941928016 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.864459728 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.856335018 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.855012219 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.722175102 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.719740393 seconds)
  done (took 21.985209425 seconds)
done (took 70.119420372 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.715068248 seconds)
  done (took 3.367459114 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.733262487 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.88814876 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.714796365 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.715206104 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.714125026 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.716936733 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.718722768 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.716213931 seconds)
  done (took 15.570507278 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.714155307 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.715249637 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.715344511 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.714623768 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.714757835 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.714266214 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.714210659 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.714830499 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.714040778 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.715605913 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.714579954 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.715182122 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.715203987 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.714672485 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.714387051 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.715270191 seconds)
  done (took 29.089007702 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.717679571 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.715326894 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.714675932 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.715293349 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.714443269 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.715340097 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.717369421 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.715197858 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.715982105 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.715572217 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.716338047 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.715696611 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.715197754 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.715329397 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.715386171 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.716635802 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.714527069 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.715737363 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.71977352 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.716179882 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.716351893 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.715019105 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.71549875 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.71575755 seconds)
  done (took 42.837236093 seconds)
done (took 92.514788893 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.43967772 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.557309541 seconds)
  done (took 9.65041701 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.719873875 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.716494139 seconds)
  done (took 5.166954351 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.715991122 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.717518094 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.715645686 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.716423885 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.716573929 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.716358371 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.716916102 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.717473233 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.717157156 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.716860815 seconds)
  done (took 18.821124005 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.717609094 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.717428656 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.71742504 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.717506203 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.717978 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.717240345 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.716971059 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.717943696 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.71755927 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.716871251 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.717385579 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.716996115 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.717029941 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.717638959 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.721185825 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.720298421 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.720651697 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.720443045 seconds)
  done (took 32.580830268 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.721303719 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.721014732 seconds)
  done (took 5.100954996 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.720921959 seconds)
    (2/7) benchmarking "second"...
    done (took 1.721087698 seconds)
    (3/7) benchmarking "month"...
    done (took 1.721094196 seconds)
    (4/7) benchmarking "year"...
    done (took 1.720467648 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.720362269 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.720960252 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.720836855 seconds)
  done (took 13.703830092 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.722195487 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.870835921 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.93249311 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.331784421 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.723049236 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.725333294 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.640147586 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.725131948 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.726326024 seconds)
  done (took 19.055938356 seconds)
done (took 105.731886718 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.623211896 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.720156439 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.979175852 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.839938621 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.739881537 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.057318734 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.73630629 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.997243104 seconds)
done (took 42.351292158 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.800169912 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.488678196 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.527454854 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.797465945 seconds)
  done (took 15.473183595 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.719006987 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.045970792 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.743569518 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.704915455 seconds)
  done (took 21.876842179 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.083719413 seconds)
    (2/2) benchmarking "read"...
    done (took 2.069286168 seconds)
  done (took 5.817470298 seconds)
done (took 51.627144405 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.722248013 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.722717338 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.722329546 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.722458676 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.722700561 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.722367554 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.722856525 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.72304575 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.722217928 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.722450311 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.722163022 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.72365835 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.722098769 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.721984771 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.721986238 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.722504198 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.722849169 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.722410626 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.722750004 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.723144156 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.722724864 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.722928463 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.723557939 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.722374073 seconds)
  done (took 43.002857923 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.723482445 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.723816249 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.723969345 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.723479267 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.723766248 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.723810105 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.723841808 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.7240949 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.724474284 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.724172162 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.724181212 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.725659425 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.723280242 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.725552736 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.725030005 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.724929304 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.724280756 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.724617387 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.723908026 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.724623611 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.724348582 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.724794749 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.725150704 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.724297389 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.724582783 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.725220373 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.725465685 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.724778871 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.725730567 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.725926716 seconds)
  done (took 53.397317062 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.723992602 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.72561623 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.725145607 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.724106012 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.724842223 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.7256119 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.725379335 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.72495131 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.725623652 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.72459119 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.725126388 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.725575868 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.725543598 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.724234424 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.725238514 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.725846339 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.725579526 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.726306051 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.725835266 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.725645585 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.725204183 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.726678689 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.725665554 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.725821776 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.725432457 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.726015061 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.726341297 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.725835305 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.725622659 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.728480147 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.725560024 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.726687601 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.7260977 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.726323041 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.726624729 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.726441589 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.727289065 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.72744956 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.726932912 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.726796108 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.726400816 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.728374782 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.726942133 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.727830495 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.727533483 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.727577919 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.72652172 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.727832099 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.727986189 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.727591048 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.727786458 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.727500018 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.728034957 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.727485128 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.72754311 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.727746807 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.727273469 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.727789639 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.726868634 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.726624223 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.728011265 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.727664467 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.727863431 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.728261717 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.728745369 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.727882251 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.727684597 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.728827605 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.728287128 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.7284563 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.728216678 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.728592363 seconds)
  done (took 125.984863096 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.727003174 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.729297917 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.727775645 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.728140347 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.728269838 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.728015344 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.728271388 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.728173625 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.728315355 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.729385812 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.728297559 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.72820849 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.728335931 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.729295686 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.728146042 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.728441793 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.728604032 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.729420651 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.728814408 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.729020651 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.729646322 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.729377968 seconds)
  done (took 39.695019372 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.730207669 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.729831964 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.729162742 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.73014774 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.729735377 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.728647565 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.730016072 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.729522373 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.729835516 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.729965226 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.730213106 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.730470257 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.730378247 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.730052846 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.730003566 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.730173239 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.729709002 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.730375716 seconds)
  done (took 32.805530569 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.730562766 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.729639422 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.730507019 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.730361404 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.729697572 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.730388315 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.731394753 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.730310761 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.730886702 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.73002705 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.730074556 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.730117958 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.730461515 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.730826733 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.730131137 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.731294015 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.730031712 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.731162106 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.730058619 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.731143618 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.730620099 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.730700706 seconds)
  done (took 39.74007576 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.730448214 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.730949297 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.730641927 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.731323761 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.731700868 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.731098498 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.730852231 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.731030362 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.730615255 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.730566027 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.731058887 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.732225412 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.731712784 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.732850629 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.732919704 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.731410548 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.732656414 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.732455727 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.732924786 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.73192832 seconds)
  done (took 36.299933682 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.733306011 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.733589668 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.733204806 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.733547616 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.73464653 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.733280477 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.734040122 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.733587885 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.734199348 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.733885357 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.733442246 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.734006257 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.733656082 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.733400914 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.734012652 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.734036931 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.734333668 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.733671173 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.73384206 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.733896993 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.734224632 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.734399361 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.734658777 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.733784623 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.734199586 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.734550244 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.734289066 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.733918181 seconds)
  done (took 50.221112467 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.733370771 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.733532829 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.733612968 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.73339786 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.73380271 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.733205377 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.734772699 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.733592591 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.732986983 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.73469246 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.734549357 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.732803994 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.733737872 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.733582767 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.733999182 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.733812476 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.734321491 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.734144177 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.734354912 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.733813343 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.734801117 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.734383556 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.735034051 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.73419924 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.735079545 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.733879844 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.735107245 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.735995371 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.734181933 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.734112622 seconds)
  done (took 53.6941205 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.755155909 seconds)
    (2/2) benchmarking "in"...
    done (took 1.75593393 seconds)
  done (took 5.183865888 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.734895675 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.73532279 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.735443904 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.736721767 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.736875052 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.735466403 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.7352692 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.736286434 seconds)
  done (took 15.559247584 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.73592404 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.735909616 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.736778338 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.734526315 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.736138832 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.737205898 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.743736209 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.736882453 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.738422274 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.736606998 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.74432514 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.745299859 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.739336495 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.738565714 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.737301511 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.739563658 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.736103495 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.737418615 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.738671839 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.738492681 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.738889766 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.740998413 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.742461709 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.738605619 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.74046581 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.748677176 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.743184661 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.738402475 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.740065568 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.743118056 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.739314005 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.738832788 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.7392287 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.73896404 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.738364532 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.73949331 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.748072836 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.74139628 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.745312505 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.739519375 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.739552921 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.739822832 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.742117224 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.742638995 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.74155828 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.740807309 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.739718815 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.739868402 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.741091716 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.743946584 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.747101296 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.740428299 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.740648155 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.744909643 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.742883551 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.748638953 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.740796408 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.743226361 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.750244136 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.750829303 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.752327023 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.749313433 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.74275064 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.740774398 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.750350157 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.766124014 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.74768864 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.740663301 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.74134076 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.740390034 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.747905125 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.753198694 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.751233702 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.741496063 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.740756024 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.740745719 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.742606837 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.741124869 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.749761318 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.744881912 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.741574369 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.742099405 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.750778449 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.766254064 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.742512124 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.7414786 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.741164607 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.741933349 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.743295545 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.754293421 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.742628307 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.741665218 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.741987499 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.742932069 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.743639022 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.743550442 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.742121163 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.744092514 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.741372759 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.742420715 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.742233727 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.746859659 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.753136363 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.743050475 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.742544533 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.749601273 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.742809413 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.74353461 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.750837897 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.743165846 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.743294376 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.744531298 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.751221319 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.742450018 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.747518556 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.75354708 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.743056285 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.745740175 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.743257745 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.743742378 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.752854573 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.771131775 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.743507127 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.744119104 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.74902377 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.755473142 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.744493985 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.747788368 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.744533931 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.743247548 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.742587539 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.746005809 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.743969541 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.745724782 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.74483733 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.74574439 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.744191132 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.743991418 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.744143796 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.746445683 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.746417269 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.746548164 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.747174653 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.748296749 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.744349332 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.746952659 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.751022161 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.746087347 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.746829449 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.7462521 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.745274119 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.744521191 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.747473272 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.744909398 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.7469261 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.745848589 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.746392983 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.744793199 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.748143074 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.746649571 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.745470419 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.746569072 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.752211031 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.746386724 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.750253244 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.747053586 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.745978809 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.746726992 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.746323758 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.747706019 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.745452155 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.746763945 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.750213516 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.754392552 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.74693638 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.746361264 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.749784409 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.746169214 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.746250246 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.746306579 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.750484199 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.756757315 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.746473451 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.75385822 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.746596062 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.746700695 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.747724487 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.747411034 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.748451388 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.746966058 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.750406021 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.754673889 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.758832272 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.757353609 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.748059714 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.750604847 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.747485363 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.751162209 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.751911222 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.747033641 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.74700236 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.746815839 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.748068287 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.747727198 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.750415726 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.747954692 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.74723671 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.747127072 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.747265953 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.747415968 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.748044437 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.750021828 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.750078566 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.747866242 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.74791259 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.748113794 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.748673119 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.748340663 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.748613479 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.74922019 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.748755637 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.748925273 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.755684266 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.748440696 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.751370126 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.750546798 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.750836592 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.748661321 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.747959181 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.752503826 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.750269542 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.757878922 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.75014163 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.751075773 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.757194344 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.750458795 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.74852823 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.751940307 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.749480709 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.74905387 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.752378591 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.756851012 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.748678751 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.749199965 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.749179672 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.750538652 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.749460028 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.756764208 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.750747782 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.75351282 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.752935273 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.753245532 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.749913456 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.75257036 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.752365443 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.751966819 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.751937397 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.749117935 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.749513983 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.753159496 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.749660853 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.750564872 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.750856239 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.752710455 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.758094559 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.75490139 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.750521508 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.753318346 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.751942391 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.754311417 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.752974875 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.750753081 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.752178282 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.762824409 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.759493156 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.758458352 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.754323969 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.751334541 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.757473552 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.752764602 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.756351488 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.751555688 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.753763231 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.752559391 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.751619505 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.751040565 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.753340107 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.752217707 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.75341038 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.754270664 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.755420497 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.751218015 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.752950242 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.751089587 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.75128631 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.751756593 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.75291874 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.751496874 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.754934722 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.754366847 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.751752822 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.752803399 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.759706644 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.753609513 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.754898906 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.753650279 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.752826534 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.752872665 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.753978734 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.752036429 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.755753315 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.760819661 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.756188156 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.764097924 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.754475332 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.763064652 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.752474985 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.756987661 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.761022345 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.752229755 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.752996542 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.753540203 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.753612284 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.761401371 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.754187908 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.754713679 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.757811488 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.753363134 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.754331977 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.753886668 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.753555705 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.75402211 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.753868184 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.763918659 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.756002732 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.759022641 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.756305988 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.754866862 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.753633858 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.754061261 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.754386657 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.758234163 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.75337134 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.756697613 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.755483457 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.754543162 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.752879968 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.753901988 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.754920014 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.754170776 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.754074069 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.761997158 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.756254304 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.759836352 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.754263283 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.763398202 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.754374691 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.762537406 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.755821542 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.756312881 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.754694467 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.75466953 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.756606701 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.75498078 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.758397985 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.754704321 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.75655557 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.759350067 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.755284211 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.758328273 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.757557523 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.755098209 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.756886943 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.764762872 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.779784107 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.75817892 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.760394274 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.756389486 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.758685611 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.760304472 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.755878773 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.755424915 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.759321085 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.767394007 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.763767394 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.75807082 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.757124512 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.757895696 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.757689691 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.756394557 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.756403754 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.756764167 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.757116083 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.758575373 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.757069975 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.760958152 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.756372278 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.758704448 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.759103055 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.757831758 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.768021901 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.757624778 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.758821687 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.756856529 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.757871056 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.759058395 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.759232184 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.756974824 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.758764845 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.7578055 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.759949626 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.765474152 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.765312575 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.761129827 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.759124624 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.757893294 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.759874872 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.759690403 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.758333366 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.757335135 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.758509328 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.759717175 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.759133357 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.758707617 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.757934093 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.756722767 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.759207237 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.758643013 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.76170336 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.766690054 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.75880138 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.757938905 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.757129213 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.758392994 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.758193635 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.759638348 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.766298761 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.762594688 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.76974448 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.768515812 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.763541191 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.760874469 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.762852235 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.769631033 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.758641729 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.760194904 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.759315298 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.762329093 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.760223621 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.763992739 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.759950894 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.766979655 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.762396888 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.759940998 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.768598073 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.763066847 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.759998566 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.762185861 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.765102124 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.761242602 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.759233666 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.759207124 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.760450171 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.767971954 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.762420838 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.76005944 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.763596018 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.758835841 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.761468987 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.76437266 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.760001373 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.762101539 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.760649239 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.762125197 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.76051861 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.760262764 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.759742242 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.760646395 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.760243792 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.764076207 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.768876712 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.760633468 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.763515617 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.763081878 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.762038072 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.76163111 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.760264757 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.7612686 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.760598998 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.761886536 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.761921842 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.762935812 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.763896964 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.761998689 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.764157696 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.766663551 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.761608059 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.766154787 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.773393247 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.769488255 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.761656232 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.762444838 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.763695893 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.765260219 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.761743095 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.762379048 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.763002587 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.764847525 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.761366671 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.761902405 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.765367405 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.765907342 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.780056878 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.76245945 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.764431356 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.764164951 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.766985394 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.762674049 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.762674718 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.762133145 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.76499301 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.76646682 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.771012757 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.762973659 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.771334613 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.764384023 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.764081851 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.766870108 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.767169134 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.772555664 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.766459823 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.763976895 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.762937251 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.7681361 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.781029119 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.763900086 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.773422951 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.794597064 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.76455763 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.765490183 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.764535782 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.763227544 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.763675461 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.766312107 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.764023076 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.763439575 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.764724722 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.764224955 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.764784628 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.771331952 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.767136458 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.763016024 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.76330833 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.764749519 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.766114611 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.763657991 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.764093693 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.764472947 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.764796976 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.764454507 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.764179076 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.767833692 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.776947034 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.776428393 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.765357057 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.765795557 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.765704702 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.769162542 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.769158975 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.776511537 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.773639984 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.76692046 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.766080782 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.767924751 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.765208664 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.764522743 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.766771932 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.766144589 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.766113518 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.765812437 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.776554261 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.773826989 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.770325871 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.766342606 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.765412693 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.766115183 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.766905079 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.765529487 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.765944092 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.768121508 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.76673685 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.769632417 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.765908757 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.766027163 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.769746786 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.773723343 seconds)
  done (took 1047.348182485 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.766260327 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.765610976 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.765947596 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.766303117 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.766168446 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.767562084 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.766600585 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.766268664 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.766200799 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.766345818 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.766712517 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.766414579 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.767305341 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.766910584 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.7667465 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.766845016 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.766740129 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.768048267 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.766718929 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.767168398 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.767059659 seconds)
  done (took 38.803213107 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.766795329 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.767066822 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.76648352 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.76770758 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.767104333 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.767380383 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.766245434 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.767870731 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.767465077 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.766652943 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.767550404 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.767270776 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.767986051 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.767229839 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.767166882 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.767728685 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.767427753 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.767723935 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.767191225 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.768091421 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.767890487 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.768126836 seconds)
  done (took 40.587188322 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.768099588 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.768743591 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.768300083 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.767759339 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.767908568 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.769150448 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.768413563 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.767361348 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.767817675 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.769744857 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.768194873 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.77066148 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.776176328 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.777264662 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.77240228 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.767940847 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.91436033 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.768957198 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.76951478 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.768805158 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.7691345 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.775701629 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.768658675 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.769309392 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.769139793 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.769180535 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.769540682 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.769068993 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.769964804 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.771640239 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.775041221 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.769916363 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.770818183 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.773750859 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.770605665 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.773388759 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.772898109 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.767492899 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.768526301 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.768252252 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.778900031 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.793280566 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.768664375 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.775172298 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.768712852 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.767850776 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.772502927 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.77718722 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.768288882 seconds)
  done (took 88.626237485 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.768311521 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.767780734 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.767968171 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.768374053 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.769819667 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.768404146 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.768256539 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.767855271 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.768256873 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.768509208 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.769812084 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.768288912 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.768614544 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.769127683 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.767402593 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.767986925 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.767380877 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.767185663 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.76784922 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.768106725 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.767779916 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.767666277 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.768142625 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.768587278 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.767857871 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.767957834 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.76737599 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.767404699 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.767037593 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.767888018 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.767696483 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.767401502 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.767634512 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.767085626 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.767019277 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.76746008 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.767669467 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.766594907 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.767480882 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.766250916 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.767255598 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.767113685 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.764559619 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.762101862 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.760750877 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.761827573 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.761653024 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.761831155 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.760212875 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.759545592 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.759743227 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.760446789 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.759268164 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.760030799 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.7586176 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.757758585 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.758782739 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.759283876 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.758361004 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.760685362 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.75916872 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.759163031 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.759601051 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.759356706 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.759572777 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.759332103 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.760230314 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.758599636 seconds)
  done (took 121.717140222 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.759605163 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.759700741 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.759727486 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.760491512 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.759947742 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.758900768 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.760235264 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.76000349 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.760901547 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.761949121 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.761351279 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.760359566 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.760970115 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.759852068 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.76077497 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.760472231 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.759718987 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.760742597 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.761227195 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.76045302 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.760897049 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.762134448 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.760718057 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.761628305 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.791296581 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.760254637 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.760537783 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.761108776 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.761885096 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.762444175 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.760673372 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.760575278 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.761513512 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.761465429 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.760854382 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.764952079 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.763421511 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.761150318 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.760603053 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.760260155 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.760815687 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.762161947 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.760930523 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.75999852 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.760249825 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.760506956 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.760720561 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.761686521 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.760301823 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.76064252 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.761614486 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.764729498 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.764256477 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.760925343 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.761390331 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.76059019 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.760952566 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.761586309 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.760904695 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.760470748 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.760926364 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.75978191 seconds)
  done (took 110.909671697 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.760292841 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.761731396 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.761763196 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.760888984 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.760784798 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.760893037 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.762539708 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.761722188 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.760223073 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.761492619 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.761137537 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.76200554 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.762903567 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.759794251 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.760399432 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.760385654 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.76020419 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.759351947 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.760115469 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.759402282 seconds)
  done (took 36.915721961 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.759018764 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.759665937 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.760636836 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.755838303 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.75546738 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.755605289 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.75620665 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.757178558 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.756134423 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.755480898 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.756515391 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.755954359 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.757428556 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.756088048 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.756073006 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.756484791 seconds)
  done (took 29.80551669 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.755668261 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.756557133 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.757081782 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.755838297 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.755927138 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.756625695 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.755747791 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.75800784 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.755791724 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.757541624 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.755933606 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.756393627 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.75606938 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.756757156 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.756752889 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.755532562 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.754651586 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.755381714 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.755673088 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.755471414 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.755498069 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.755156188 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.756706219 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.754903972 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.756249729 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.757509616 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.756141275 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.755734925 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.756285496 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.756577271 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.756955471 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.756665818 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.754502327 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.756189308 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.756731864 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.756393301 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.755884484 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.756655721 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.756088642 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.756261126 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.756175374 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.756186774 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.756303698 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.755967943 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.756546781 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.756722001 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.756485787 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.756977841 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.757815819 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.756198403 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.757322472 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.757181325 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.755960154 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.75739446 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.757344205 seconds)
  done (took 98.290591639 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.755466588 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.755268965 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.755221551 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.757549854 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.754198164 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.754439831 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.754696815 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.755033397 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.75489167 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.754562902 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.754486012 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.754446127 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.753407069 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.752866322 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.75353223 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.754941529 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.752496768 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.75305093 seconds)
  done (took 33.272537107 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.753320894 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.753831115 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.753468258 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.752702127 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.752471946 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.752847669 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.751953955 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.754428419 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.750438451 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.755228165 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.75066853 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.751558899 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.751147388 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.752251195 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.74970573 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.750289729 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.750124717 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.749203672 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.750461437 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.751180451 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.749976195 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.747751214 seconds)
  done (took 40.224381932 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.749300982 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.749476338 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.763115463 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.769936042 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.769014521 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.783148042 seconds)
  done (took 12.2685707 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.749954687 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.748701205 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.749300685 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.749744355 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.749068589 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.750390895 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.74926686 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.749129137 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.749541896 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.748575571 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.749819545 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.749078576 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.750567238 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.748335571 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.74846006 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.747905913 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.748400578 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.748768818 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.748353507 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.748473228 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.748328427 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.747816021 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.748201701 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.748864287 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.74786881 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.748135886 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.747498362 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.747671524 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.747965768 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.748607169 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.747780357 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.747522042 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.747015175 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.74829756 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.749107031 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.746965774 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.747666901 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.747281303 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.747076255 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.747085085 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.748324464 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.747348311 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.748009194 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.746955977 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.74809427 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.747638612 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.749157853 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.747664552 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.747259606 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.748517161 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.74833028 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.747849813 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.748222445 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.747649472 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.746707717 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.74740917 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.746876033 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.748032596 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.747401818 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.747475694 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.747631375 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.74696944 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.747407326 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.748363463 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.747703148 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.746820217 seconds)
  done (took 117.064275082 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.747482747 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.746715299 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.748829388 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.74714515 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.746534594 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.746983241 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.747984709 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.74736515 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.747598969 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.746911441 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.746146948 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.746367036 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.746966122 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.749047115 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.745638885 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.745680678 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.74574075 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.746715751 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.747137537 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.746105907 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.745326803 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.745516165 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.746053541 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.745910138 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.747103788 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.746361372 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.744819662 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.746195556 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.745051599 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.745422921 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.74718009 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.744781988 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.744997359 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.744186834 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.745112645 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.745182701 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.746577092 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.746069715 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.745492268 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.745775576 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.74561473 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.746564851 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.746413513 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.745592559 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.74591534 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.745950198 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.745269852 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.745430594 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.746700405 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.746213809 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.745852391 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.745445112 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.747387318 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.745593186 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.745287853 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.74637436 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.745643932 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.746020647 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.745179003 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.74676902 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.74524126 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.745303945 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.745789346 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.745517616 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.745642417 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.747023994 seconds)
  done (took 116.931448081 seconds)
done (took 2430.010951783 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.807225627 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.764767238 seconds)
  done (took 15.252531707 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.910959704 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.86072198 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.745895662 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.755484899 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.745889762 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.77069673 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.757238421 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.745345357 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.747990291 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.746781446 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.746680318 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.929861081 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.74600866 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.746337653 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.746220142 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.839214681 seconds)
  done (took 50.225106105 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.74950171 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.749069554 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.759242106 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.750682936 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.74857047 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.761328084 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.779229129 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.751507316 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.781183662 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.759806032 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.815661782 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.759265696 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.747078756 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.796453858 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.761192538 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.762613259 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.846815292 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.822684556 seconds)
  done (took 33.582050755 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.824217041 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.755128283 seconds)
  done (took 10.26537122 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.773055916 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.767555196 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.795459411 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.771391996 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.7728919 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.753774665 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.792710092 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.787263714 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.743938474 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.75288499 seconds)
  done (took 69.393293195 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.751016107 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.749023476 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.74712239 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.746275678 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.742801732 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.748699492 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.744950552 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.745365604 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.406519415 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.781911301 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.755122417 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.753268403 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.749850977 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.748966869 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.745543721 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.769322837 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.867276747 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.745213206 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.743850431 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.750668667 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.745882457 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.796352256 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.758480859 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.750002313 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.776483948 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.404969532 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.755499512 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.752068784 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.855439877 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.743500205 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.746585746 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.932002 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.74970919 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.204660258 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.000680606 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.752878 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.761191727 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.755478531 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.747148156 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.862403094 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.748562233 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.752896287 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.716176506 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.985459979 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.851106263 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.791614449 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.04692011 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.764043189 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.74720497 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.776825387 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.74920199 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.747013936 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.760052205 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.258582757 seconds)
  done (took 126.021278458 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.745561936 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.091224501 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.918937341 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.747967105 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.029183784 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.956136868 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.746814382 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.792315933 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.749655389 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.972189454 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.003868622 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.848470492 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.748449045 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.749259097 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.749630433 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.743683562 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.903910432 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.815228449 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.748564023 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.744735051 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.771561816 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.985949627 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.866236181 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.75031214 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.776417184 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.953920126 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.865893955 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.847654296 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.477437961 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.744066209 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.806331969 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.748122314 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.748141777 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.744615681 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.900212303 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.837233903 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.826097188 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.748503612 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.747255085 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.746756471 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.494566839 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.947753876 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.839166173 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.874039197 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.995599099 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.949107345 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.526484285 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.747784888 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.47818682 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.911294873 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.972277411 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.972665072 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.867052247 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.747891565 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.273036066 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.745747694 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.745937914 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.993853409 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.966159599 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.841184309 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.751709832 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.747184261 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.746219221 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.037696079 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.749168905 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.840579523 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.749811338 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.74791726 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.841493611 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.844241512 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.974966516 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.960053771 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.77668932 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.099740891 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.258573094 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.992177066 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.811205182 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.995807014 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.748852716 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.746074225 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.82544586 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.588818072 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.999378437 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.029618858 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.990598668 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.780458805 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.46526732 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.74591631 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.971286911 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.966830673 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.006161979 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.99836683 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.985509024 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.068103604 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.75026284 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.747750358 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.967673758 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.870496462 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.749648837 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.094993278 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.975966586 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.27877399 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.773903693 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.04945626 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.877219678 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.754507551 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.375093669 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.747632101 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.973851054 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.785887013 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.748569674 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.748499373 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.965529134 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.733965487 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.748088205 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.633698213 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.811303139 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.751538844 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.979001951 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.755110455 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.015100214 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.750972384 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.979610091 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.188643623 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.778539444 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.97810569 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.994253142 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.751493565 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.987649034 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.990150703 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.865045327 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.020122972 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.660012631 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.752546662 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.032204916 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.750495387 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.749142206 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.917824689 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.750474625 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.891372665 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.751529686 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.041701844 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.769613679 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.977796871 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.752376543 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.001449767 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.781731519 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.798147692 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.752318885 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.880757684 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.752171335 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.577657579 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.905212712 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.165829784 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.750128944 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.558887645 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.750765344 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.897381841 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.973405659 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.770430665 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.821787892 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.413404174 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.749196954 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.836405961 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.77112335 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.146329604 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.750130768 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.000634727 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.753162755 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.751317339 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.753605737 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.035353054 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.985227308 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.756564709 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.751540218 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.656261869 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.751015847 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.750438833 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.932220689 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.132653626 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.75087468 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.952390268 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.755176902 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.878844993 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.753904106 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.825426766 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.090491838 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.752315381 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.75167526 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.753045605 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.753540246 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.753231045 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.013263372 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.776218085 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.243590032 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.888750076 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.021988789 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.060998687 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.99013869 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.793410067 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.753221666 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.003791702 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.754925571 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.81342129 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.754571667 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.771785549 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.977317489 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.757574736 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.960419149 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.022025276 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.762579872 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.801467482 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.755086685 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.753811376 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.753890998 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.898836149 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.834825344 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.755294253 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.754447712 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.868021707 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.876326879 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.960516388 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.756261614 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.826285513 seconds)
  done (took 877.167710325 seconds)
done (took 1183.588665807 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.753340047 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.754703286 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.758052887 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.757078226 seconds)
  done (took 28.714771586 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.764319762 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.756365756 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.759084503 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.756155252 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.756390067 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.755617064 seconds)
  done (took 12.237138548 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.758517595 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.758479701 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.756605581 seconds)
  done (took 20.964658693 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.828786955 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.141269733 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.88825583 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.169059453 seconds)
  done (took 9.71728563 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.760782321 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.757836116 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.758415914 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.757130481 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.764665174 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.766005688 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.758153236 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.757211807 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.765929419 seconds)
  done (took 17.539529957 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.889879057 seconds)
done (took 94.754052376 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.765641418 seconds)
    (2/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.951180605 seconds)
    (3/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.518804867 seconds)
    (4/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.797119433 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.820243276 seconds)
    (6/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.832556081 seconds)
    (7/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.754587445 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.581192565 seconds)
    (9/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.068142745 seconds)
    (10/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.938028052 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.098422706 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.780177613 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.769196715 seconds)
    (14/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.956596779 seconds)
    (15/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.755799683 seconds)
    (16/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.916558556 seconds)
    (17/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.82963165 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.880084667 seconds)
    (19/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.775865697 seconds)
    (20/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.852854713 seconds)
    (21/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.907715308 seconds)
    (22/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.758658886 seconds)
    (23/309) benchmarking ("map", abs, Int8, false)...
    done (took 3.515664726 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.053262235 seconds)
    (25/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.818534582 seconds)
    (26/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.536141538 seconds)
    (27/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.760701709 seconds)
    (28/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.839559671 seconds)
    (29/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.7720958 seconds)
    (30/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.062203597 seconds)
    (31/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.98360303 seconds)
    (32/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.845881209 seconds)
    (33/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.756644497 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.108557858 seconds)
    (35/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.757340236 seconds)
    (36/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.13975597 seconds)
    (37/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.756492545 seconds)
    (38/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.225157778 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.146635329 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.928018616 seconds)
    (41/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.756038858 seconds)
    (42/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.200039142 seconds)
    (43/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.862372686 seconds)
    (44/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.828852245 seconds)
    (45/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.754895416 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.794971362 seconds)
    (47/309) benchmarking ("sort", Bool, false)...
    done (took 1.973919689 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.430130295 seconds)
    (49/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.757111097 seconds)
    (50/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.552928367 seconds)
    (51/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.998985062 seconds)
    (52/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.888600703 seconds)
    (53/309) benchmarking ("sort", Int64, false)...
    done (took 5.430497014 seconds)
    (54/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.820652004 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.373010264 seconds)
    (56/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.850446509 seconds)
    (57/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.426120405 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.011581319 seconds)
    (59/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.853801438 seconds)
    (60/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.919935833 seconds)
    (61/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.863155551 seconds)
    (62/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.995558256 seconds)
    (63/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.760779976 seconds)
    (64/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.032222377 seconds)
    (65/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.776511893 seconds)
    (66/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.7576852 seconds)
    (67/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.196585495 seconds)
    (68/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.78429728 seconds)
    (69/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.969021658 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.795014731 seconds)
    (71/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.843582352 seconds)
    (72/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.879451601 seconds)
    (73/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.886844764 seconds)
    (74/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.7567761 seconds)
    (75/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.758725554 seconds)
    (76/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.099693141 seconds)
    (77/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.115896344 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.11318084 seconds)
    (79/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.778888928 seconds)
    (80/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.578680415 seconds)
    (81/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.99661142 seconds)
    (82/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.761612905 seconds)
    (83/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.943851804 seconds)
    (84/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.759923237 seconds)
    (85/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.980945628 seconds)
    (86/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.757220475 seconds)
    (87/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.759422491 seconds)
    (88/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.998929873 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.731667109 seconds)
    (90/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.890969766 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.64163719 seconds)
    (92/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.758832296 seconds)
    (93/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.130392326 seconds)
    (94/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.836644025 seconds)
    (95/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.864221499 seconds)
    (96/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.758256211 seconds)
    (97/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.058973276 seconds)
    (98/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.017825215 seconds)
    (99/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.209036393 seconds)
    (100/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.84071031 seconds)
    (101/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.867090499 seconds)
    (102/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.874136698 seconds)
    (103/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.847574608 seconds)
    (104/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.062482298 seconds)
    (105/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.777114318 seconds)
    (106/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.780551885 seconds)
    (107/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.110309872 seconds)
    (108/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.840846613 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.031902467 seconds)
    (110/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.777698112 seconds)
    (111/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.75949267 seconds)
    (112/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.94626184 seconds)
    (113/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.767727861 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.860041715 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.955898506 seconds)
    (116/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.781201333 seconds)
    (117/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.48904331 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.086896487 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.690962313 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.146692979 seconds)
    (121/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.890169285 seconds)
    (122/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.77295575 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.755592095 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.885221425 seconds)
    (125/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.762148755 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.881875273 seconds)
    (127/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.977916852 seconds)
    (128/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.778525239 seconds)
    (129/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.756765231 seconds)
    (130/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 3.176132539 seconds)
    (131/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.78581894 seconds)
    (132/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.131451681 seconds)
    (133/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.865000626 seconds)
    (134/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.760740026 seconds)
    (135/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 3.82712142 seconds)
    (136/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.863010882 seconds)
    (137/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.757387164 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.117966989 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.758003593 seconds)
    (140/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.425195369 seconds)
    (141/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.14418225 seconds)
    (142/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.859836761 seconds)
    (143/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.912533471 seconds)
    (144/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.761443604 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.102812283 seconds)
    (146/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.012775209 seconds)
    (147/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.758093585 seconds)
    (148/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.522381081 seconds)
    (149/309) benchmarking ("sort", Float32, false)...
    done (took 5.454131932 seconds)
    (150/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.070979432 seconds)
    (151/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.211689561 seconds)
    (152/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.786640482 seconds)
    (153/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.757152039 seconds)
    (154/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.902490251 seconds)
    (155/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.016219635 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.647238989 seconds)
    (157/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.07970555 seconds)
    (158/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.946378955 seconds)
    (159/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.77714837 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.052834212 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.897340494 seconds)
    (162/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.757676159 seconds)
    (163/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.126183296 seconds)
    (164/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.146763138 seconds)
    (165/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.942404705 seconds)
    (166/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.871694485 seconds)
    (167/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.929572608 seconds)
    (168/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.76078289 seconds)
    (169/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.215282246 seconds)
    (170/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.764338453 seconds)
    (171/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.258750902 seconds)
    (172/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.785919963 seconds)
    (173/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.656630399 seconds)
    (174/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.896506311 seconds)
    (175/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.761398561 seconds)
    (176/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.88675793 seconds)
    (177/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.364873133 seconds)
    (178/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.576234855 seconds)
    (179/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.084276773 seconds)
    (180/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.949248259 seconds)
    (181/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.822881353 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.659786436 seconds)
    (183/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.00557385 seconds)
    (184/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.825546566 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.06300575 seconds)
    (186/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.083137979 seconds)
    (187/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.769477646 seconds)
    (188/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.079588092 seconds)
    (189/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.939335329 seconds)
    (190/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.915007107 seconds)
    (191/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.921180905 seconds)
    (192/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.875157352 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.895592217 seconds)
    (194/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.758450455 seconds)
    (195/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 8.204378324 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.011924707 seconds)
    (197/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.950337499 seconds)
    (198/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.781635107 seconds)
    (199/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.762448958 seconds)
    (200/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.889687062 seconds)
    (201/309) benchmarking ("sort", Float64, false)...
    done (took 5.491475242 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.894611779 seconds)
    (203/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.760032437 seconds)
    (204/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.888027572 seconds)
    (205/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.650467584 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.749406609 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.163244371 seconds)
    (208/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.158327016 seconds)
    (209/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.762516683 seconds)
    (210/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.760211356 seconds)
    (211/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.403985856 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 3.030478824 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.835858249 seconds)
    (214/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.997002883 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.070025583 seconds)
    (216/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.843315151 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.552251505 seconds)
    (218/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.919347121 seconds)
    (219/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.765603572 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 3.35541848 seconds)
    (221/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.976307013 seconds)
    (222/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.697447049 seconds)
    (223/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.133038027 seconds)
    (224/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.997644113 seconds)
    (225/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.205896907 seconds)
    (226/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.078078978 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.764674796 seconds)
    (228/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.757527433 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.085581112 seconds)
    (230/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.967918355 seconds)
    (231/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.250793122 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.766389531 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.161912908 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.65878963 seconds)
    (235/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.779315528 seconds)
    (236/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.084976962 seconds)
    (237/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.79377412 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.761176428 seconds)
    (239/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.86242915 seconds)
    (240/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.9239599 seconds)
    (241/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.768612886 seconds)
    (242/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.760456594 seconds)
    (243/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.103670936 seconds)
    (244/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.847643837 seconds)
    (245/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.76671927 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.852440799 seconds)
    (247/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 3.236338564 seconds)
    (248/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.786711531 seconds)
    (249/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.176502213 seconds)
    (250/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.017736399 seconds)
    (251/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.919735101 seconds)
    (252/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.761989577 seconds)
    (253/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 3.30248435 seconds)
    (254/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.880567365 seconds)
    (255/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.762158279 seconds)
    (256/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.006220078 seconds)
    (257/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.047390752 seconds)
    (258/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.981431165 seconds)
    (259/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.070628403 seconds)
    (260/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.793498513 seconds)
    (261/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.841014741 seconds)
    (262/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.964068043 seconds)
    (263/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.768615362 seconds)
    (264/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.826494672 seconds)
    (265/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.223462167 seconds)
    (266/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.016358344 seconds)
    (267/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.155799758 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.703786855 seconds)
    (269/309) benchmarking ("sort", Int8, false)...
    done (took 4.660978353 seconds)
    (270/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.870068829 seconds)
    (271/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.789425788 seconds)
    (272/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.506391438 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.08517222 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.100039365 seconds)
    (275/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.2119278 seconds)
    (276/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.872890248 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.547215856 seconds)
    (278/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.84899716 seconds)
    (279/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.870210707 seconds)
    (280/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.765660333 seconds)
    (281/309) benchmarking ("perf_sum", Int64, false)...
    done (took 2.412116562 seconds)
    (282/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.942709645 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.437607126 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.906361601 seconds)
    (285/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.685092329 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.77489541 seconds)
    (287/309) benchmarking ("sort", BigInt, false)...
    done (took 7.137187901 seconds)
    (288/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.815601493 seconds)
    (289/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.774712081 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.877864035 seconds)
    (291/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.80597235 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.000907587 seconds)
    (293/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.79375681 seconds)
    (294/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.339164063 seconds)
    (295/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.862889706 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.528832403 seconds)
    (297/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.014784665 seconds)
    (298/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.77783011 seconds)
    (299/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.945424586 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.037947635 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.408201561 seconds)
    (302/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.931770839 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.810913267 seconds)
    (304/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.10790146 seconds)
    (305/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.778670844 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.623671137 seconds)
    (307/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.803604451 seconds)
    (308/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.801092925 seconds)
    (309/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.655594964 seconds)
  done (took 973.989370438 seconds)
done (took 975.748056711 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.80398161 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.796055821 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.777609615 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.800628493 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.891901548 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.824827032 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.792169094 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.783358861 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.82879258 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.829349375 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.777915504 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.823979155 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.78011882 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.780648273 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.778764149 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.795829666 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.101408342 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.81501226 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.798618269 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.791772908 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.798412915 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.777659708 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.829923854 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.824267678 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.784453167 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.785970276 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.783402457 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.800644094 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.892775373 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.783773657 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.785533618 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.792903251 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.093473363 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.811903836 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.778225801 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.799856091 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.793132453 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.792042971 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.783450705 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.813524221 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.185814809 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.823161863 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.782099907 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.779846433 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.780855557 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.788520981 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.780215979 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.788261121 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.796467947 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.796106905 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.179566894 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.841747245 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.783827293 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.781589535 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.794529336 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.781797083 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.786496362 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.797201564 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.80206559 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.797563196 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.08048869 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.822914749 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.786099161 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.800325297 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.790460611 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.215083633 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.823224573 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.788774025 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.188444929 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.834766782 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.216000104 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.836664283 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.784942011 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.797879367 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.814721689 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.09559652 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.813687205 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.781568864 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.791973703 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.780644613 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.794222009 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.797831643 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.787772286 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.784000911 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.798608981 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.829002331 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.795374616 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.782766771 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.794579562 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.80324993 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.791952685 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.795270693 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.787053067 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.781087263 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.796223614 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.787409699 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.786374579 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.787135623 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.788226444 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.796216266 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.188821384 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.84317122 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.780809434 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.781204391 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.78406612 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.79958362 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.187224397 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.828759616 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.80628506 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.833669983 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.785899815 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.081319121 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.821352979 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.801484011 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.795278235 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.787405305 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.782283365 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.082140105 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.221944262 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.842491518 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.785155468 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.782900626 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.801673284 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.786581389 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.782484063 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.096890968 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.822381203 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.800874626 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.908415871 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.797582953 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.817402207 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.78311684 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.79019131 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.837081543 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.804101997 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.820405817 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.788997204 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.803964347 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.80445198 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.783983891 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.798505595 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.797957883 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.784873807 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.794441289 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.782599215 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.834055015 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.800299245 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.80044627 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.806425674 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.908897126 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.783708907 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.084017754 seconds)
done (took 280.966236851 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.868112229 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.786962784 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.875296613 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.785679314 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.87481123 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.86049007 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.784071839 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.785620202 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.785044029 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.265114594 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.784204469 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.790598026 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.786415402 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.786449426 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.855692415 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.787905431 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.786423018 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.217050414 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.785377137 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.863640727 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.785778089 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.786361804 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.784949843 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.392924145 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.786078351 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.784290877 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.865289037 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.785818261 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.226579121 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.78495471 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.783871669 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.32988567 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.865984367 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.81358258 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.793744346 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.792554989 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.876314396 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.797747766 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.85347602 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.853759449 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.882404792 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.819447599 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.785911609 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.785832593 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.789471834 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.788209202 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.787322301 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.818859548 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.785278907 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.794341295 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.214571901 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.792521977 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.794467413 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.78677178 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.787434139 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.815621772 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.787979964 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.789889109 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.865824616 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.789190566 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.855079874 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.279500171 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.27388285 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.788079178 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.788390282 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.788776686 seconds)
  done (took 179.813162786 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.853755859 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.86675744 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.853682954 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.792264856 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.837060391 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.855498848 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.794559414 seconds)
  done (took 14.575116187 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.793827291 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.788126299 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.837444727 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.836564388 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.787548054 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.942941626 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.788250398 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.799405849 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.793684012 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.816369042 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.789070882 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.788487921 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.795025787 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.788203545 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.8369225 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.799526674 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.903683524 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.792621541 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.789366846 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.937052418 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.794111256 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.797168339 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.815991862 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.802126624 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.790355984 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.796991811 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.356729749 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.790284372 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.790244905 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.789264596 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.789543873 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.829758603 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.790578363 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.788289517 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.78918999 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.903318291 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.790184816 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.788987022 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.789413569 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.790173611 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.788369738 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.789415641 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.790395146 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.790630656 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.789540336 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.812974789 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.789730843 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.789834493 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.789403713 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.789934499 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.815138216 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.790899779 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.790995419 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.79534154 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.832400972 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.797207304 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.79122049 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.790544634 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.79089187 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.790525631 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.938725169 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.84036259 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.790929427 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.840031805 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.790956627 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.791153478 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.790763267 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.790875518 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.879715388 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.791198032 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.840222284 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.791350294 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.951338546 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.815175554 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.792605994 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.795429124 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.793828738 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.791577375 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.790249624 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.800327854 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.792328138 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.793334602 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.798268786 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.797195168 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.791553767 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.904121794 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.935170316 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.79147477 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.793563109 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.79859611 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.793253527 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.835447048 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.791838268 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.792545723 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.848556589 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.907437366 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.819824015 seconds)
  done (took 197.998672219 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.798834298 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.799467087 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.794216537 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.807642409 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.794359291 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.792763171 seconds)
  done (took 12.513325977 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.795337427 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.796205726 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.792762107 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.794666533 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.792888251 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.794143182 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.793326623 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.794965968 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.799480909 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.792697142 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.793044926 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.794526701 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.793053055 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.794198413 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.793998563 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.793257898 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.793617032 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.793403694 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.793860371 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.793183781 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.044276171 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.794625385 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.794514547 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.79665381 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.798736021 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.794264458 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.807955661 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.793496164 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.793831854 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.802929684 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.802404446 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.795615945 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.797169454 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.800807461 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.798842349 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.796385532 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.798788891 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.795180389 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.795623036 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.794445968 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.795284746 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.795439347 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.794127472 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.794396249 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.797113371 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.801639905 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.799270463 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.808882083 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.796660736 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.796628222 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.79642735 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.795010941 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.796273977 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.795615689 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.799236426 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.802264781 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.800609818 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.796211271 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.797035563 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.799558582 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.79952642 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.795812834 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.797716738 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.800785575 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.802977532 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.796394189 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.800138135 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.800228129 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.795899231 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.796943989 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.797220631 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.795921834 seconds)
  done (took 132.344153034 seconds)
done (took 538.981909091 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.051257757 seconds)
  done (took 8.780694491 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.962855597 seconds)
  done (took 8.75039987 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.332323238 seconds)
  done (took 10.063023234 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.824591128 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.824693677 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.809912089 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.795434713 seconds)
  done (took 29.013369997 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.992973278 seconds)
  done (took 8.723199966 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.819977622 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.795904508 seconds)
  done (took 15.411841029 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.889871246 seconds)
  done (took 8.620296116 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.876144613 seconds)
  done (took 8.6177948 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.818616391 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.80843307 seconds)
  done (took 15.383587044 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.799300672 seconds)
  done (took 8.529808225 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.955352344 seconds)
  done (took 9.784137875 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.82165327 seconds)
  done (took 8.623198554 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.81817093 seconds)
  done (took 8.54904881 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.901136499 seconds)
  done (took 8.631375275 seconds)
done (took 159.210332324 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.799562516 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.795514347 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.796546392 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.798010365 seconds)
  done (took 28.920237111 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.830600803 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.830297367 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.8328533 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.841885045 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.834671161 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.829336879 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.823321447 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.825516252 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.841460173 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.832667257 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.833426915 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.833256843 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.831022364 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.823973634 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.835719469 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.83278769 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.842000425 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.833310024 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.825143521 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.833852718 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.799626221 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.843089405 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.834960442 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.800727943 seconds)
  done (took 45.657426323 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.987917644 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.870433224 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.954050355 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.852187444 seconds)
  done (took 9.395879523 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.851628472 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.853509509 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.864670029 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.90216893 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.926001597 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.860405346 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.82376386 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.818573511 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.805348576 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.851212884 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.928312157 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.847878663 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.939042937 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.801210161 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.987467402 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.801432885 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.801002294 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.85293046 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.902705728 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.914703089 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.800747655 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.850150811 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.853552813 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.847221386 seconds)
  done (took 46.42011886 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.799795854 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.810235374 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.807508805 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.800721961 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.801268913 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.802031358 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.808715003 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.802694003 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.822630156 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.802143156 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.800661807 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.801268049 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.808036399 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.801881115 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.801064179 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.814346669 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.8153467 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.802694223 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.805643795 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.808254618 seconds)
  done (took 37.849752513 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.799811185 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.646074967 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.14541274 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.05306496 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.800710769 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.801250784 seconds)
  done (took 30.980139922 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.81371424 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.808026716 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.80073962 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.858600118 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.943807158 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.808796035 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.801502339 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.812273585 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.848578381 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.866945685 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.820374455 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.830341786 seconds)
  done (took 23.747094335 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.802750489 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.803514004 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.801105488 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.812389626 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.812811051 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.811490853 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.808767573 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.800568241 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.815347435 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.820573382 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.810158798 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.813294365 seconds)
  done (took 43.451445425 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.880136397 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.675371251 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.27621276 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.265407731 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.325771111 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.006151288 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.800878777 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.88656094 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.806696198 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.073247981 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.204466961 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007070486 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.043975991 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.564859928 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.806220675 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.290138076 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.092732088 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.017031233 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.828969375 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.506220135 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91132124 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.332227246 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.452293494 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.912815782 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.004426814 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.924693712 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.064978652 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.750740406 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.849231714 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.804948369 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.806317836 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.801340617 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.072920283 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921317607 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.87169244 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808402456 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.211237252 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.506450763 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.857355049 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.45234921 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.350286087 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.92407435 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805043011 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.801868516 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.731050747 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.36390835 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.892940536 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.803438618 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.501801809 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.80242873 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.807807588 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.876967585 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.805276693 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.613660936 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.485298155 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.073567302 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.804619444 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.80611353 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.365205385 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.848249841 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.430259708 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.736054141 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.888708855 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.45307698 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.271490846 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.959087904 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.804129056 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.803855739 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.729695958 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.45995637 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.919705012 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.938989399 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.819661791 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.443908022 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.098628984 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.263461129 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.859914355 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.075375186 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.600176872 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.739213467 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.022112199 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.75246932 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.734847856 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.650692455 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.730967226 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.014638102 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83683881 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.41489843 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.838211838 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.889042248 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.809265602 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.817994817 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805699246 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.017924827 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.698841729 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.803823206 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.147138972 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.061955789 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.820192196 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.889642017 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.731071553 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.804699063 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.048960002 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.007041691 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.045936196 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.299060145 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.895055436 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.752755063 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.818163755 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.724562301 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.813315559 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.084174431 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.866615725 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.84046189 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924487477 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.759610497 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051675423 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.789774667 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.905295759 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.220202256 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.048755649 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.144929156 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.04887154 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.867724937 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.810951363 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.804954389 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.52016935 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.418115014 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.020790771 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.818599006 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.30474077 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.811714577 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.805900676 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.739369967 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.463034026 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.220586328 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.887480795 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.02091434 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.852071694 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.080399292 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.733103366 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.942571763 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.816089311 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.020266816 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.460420516 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.895668556 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.054689783 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.050227571 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.053734409 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.814624617 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.819815984 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898054633 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.823201582 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.240244174 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.05253461 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.808491903 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.808329646 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.525075966 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.864508078 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.807376931 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.809568551 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.35851521 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.089457165 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.832395085 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.81006472 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.681699171 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.819455475 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.869219948 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.809920042 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.8104721 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.326926668 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.321478813 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.812841358 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.474520053 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.023371797 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.81012949 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.461732712 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.987127847 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.820794541 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.083964133 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.877447207 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.733591537 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.508922025 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.508545592 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.809230756 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.73498476 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.808588918 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.811053243 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.81280728 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.996657804 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.089947507 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.863053383 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.516392308 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.916868065 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.814438269 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.811624924 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.811187372 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.298860743 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.853823883 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.312054411 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.945582905 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939269167 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.820661913 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.73398628 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.810290683 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.810755662 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.809722937 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.75888034 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856507075 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.521434866 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.016007052 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.058283238 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.214713477 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.818530103 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.520985061 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.930955887 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.831176661 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.155542059 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34261327 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.918108024 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872398282 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.815743329 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.527294465 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.547976428 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.373091999 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.110650417 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.140808182 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.172240368 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.187305552 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.130875206 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.895607365 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036817433 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.330577681 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.86761312 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.898736963 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.748483599 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.825207964 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.46504251 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.169088656 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.81943397 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.027357097 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.109974404 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.228371157 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.947457616 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.014509054 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840058386 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.621244627 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.837169906 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.347401891 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.827017439 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.242675293 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.018761188 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.891750027 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.165694534 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.894042806 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.811335522 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.14571468 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851306006 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.516685562 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.168381412 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.211121545 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.329920032 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.036940801 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.813110439 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.251141477 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.171142827 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.003865396 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.931095367 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.739615901 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.818611716 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.817385583 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.826461439 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.783574196 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.660605126 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.055670644 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.818752877 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.039508643 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.936179783 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.184444925 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.724757194 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.815970208 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.813901758 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057021873 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.484824569 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967879305 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.119492185 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.389294294 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.82370129 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.74106426 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.739926577 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.516377635 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.820203106 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.779111847 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023714546 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.914855588 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.495480172 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.195609291 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.122636395 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.058524779 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.825685662 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.092634109 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.091490859 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.306131405 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834559987 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.91139603 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.161338791 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.522494831 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.029730054 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.04100412 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.34574795 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.032184792 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.257898431 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.784632015 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.814825537 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.021888975 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.028956268 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.230828582 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991344965 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.525157758 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.831629881 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.182752623 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878923282 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.232120973 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.006892341 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.901678465 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.821333563 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892200955 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.819138262 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.821814923 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.821218146 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.825305004 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.226788836 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.937508834 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.827787769 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891996395 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.863960299 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.393025753 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.824366147 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.09527601 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.17293792 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.156061328 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.881032827 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.815629868 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.824778794 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.743657537 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947590385 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.257191721 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.088057102 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.937368055 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.949664246 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838352862 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.163933907 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.08363868 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.124434917 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.090162636 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.701085275 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.442822864 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.933011512 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.033108701 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.822024484 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.021653922 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.034780843 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.126258376 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.378863667 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.94718802 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.006343348 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.090090397 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.17885507 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.817706148 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.400808685 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.828780987 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.211801808 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.849256533 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.236199562 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076984789 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.821199777 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958245376 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.822384222 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.016996682 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.267822967 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.480367788 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.166345439 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.671760781 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.821697459 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.100698404 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.159878929 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.125417324 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895463208 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.823856759 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.508841797 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952213562 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.687469872 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.034835237 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.820201643 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.023011991 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.530038134 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.822507153 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.09690578 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.126048228 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.82261849 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.706329237 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.844243342 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.822848586 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.033652218 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.029059822 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.063194194 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.823288512 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.82125288 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.625838823 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.105656995 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.883327653 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.746698862 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.821758675 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.865438356 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.045960134 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.838366295 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.334792444 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.520025681 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102113732 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.724159605 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838661081 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.218141994 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.203475574 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.160561507 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.3503484 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.035741991 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.371388758 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.664691207 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.194942211 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.82274048 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.217439734 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.197637624 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.821990483 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.313925903 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929206942 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.098171832 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.150178434 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.835581349 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.543100944 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.856659685 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.0351512 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.17827565 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.752237757 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.828736537 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.868805637 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.82156505 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.815798434 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.830641454 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.746781414 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.247335804 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.658724147 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.379237148 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.823855656 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.98401562 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.223992603 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.343980458 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926946959 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.838827486 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.831092783 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.534685453 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.112243284 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.065339926 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.320241682 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.916027146 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.824194513 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.822051405 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.741415004 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.008076886 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.010768962 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.108770665 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.163649905 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.929159017 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.824675384 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.031273409 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.026050814 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.241935311 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.957646334 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.942474462 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.934319198 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.76734154 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.527891721 seconds)
  done (took 1634.946512444 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.843416968 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.847558519 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.837675686 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.829659873 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.856282105 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.834069676 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.874947713 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.913207513 seconds)
  done (took 56.593855323 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.825008143 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.988683531 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.829841119 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.825010897 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.831229046 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.824864562 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.984080822 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.837110138 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.829406592 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.830311079 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.825044234 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.825355706 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.106615395 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.845808947 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.825424994 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.824912066 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.829125544 seconds)
  done (took 73.453609849 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.829455 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.064642579 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.86219983 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.826223935 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.791648117 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.83724559 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.828092907 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.832571916 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.83166878 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.072341511 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.126180466 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.837738426 seconds)
  done (took 89.499641571 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.83667595 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.827833922 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.827778193 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.827205296 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.828276759 seconds)
  done (took 10.913239294 seconds)
done (took 2133.578306095 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.05596022 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.020359478 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.065578767 seconds)
  done (took 5.84527705 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.964104292 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.019692217 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.12898819 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.109651115 seconds)
  done (took 9.983309786 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.127997515 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.201173846 seconds)
  done (took 6.085412809 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.13938969 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.853451128 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.196973389 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.826222453 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.828553237 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.827054382 seconds)
  done (took 22.244250214 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.825357577 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.824858786 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.82527586 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.825797343 seconds)
  done (took 9.058435853 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.82285647 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.532559812 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.824665015 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.834767992 seconds)
  done (took 20.7716098 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.972035131 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.940560437 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.968246613 seconds)
  done (took 7.637640235 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.045156221 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.619815665 seconds)
  done (took 6.421964468 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.983641561 seconds)
  done (took 3.741216057 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.853651817 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.095703378 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.328521672 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.341564651 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.408192095 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.634881361 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.109149893 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.040858284 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.254008547 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.261183015 seconds)
  done (took 24.085237906 seconds)
done (took 130.878483138 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.154809875 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.847184829 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.026910159 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.170199663 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.053247905 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.026092464 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.046000104 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.160178655 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.847363831 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.838546088 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.177906612 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.053365413 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.993751302 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.841845018 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.000698418 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.840392233 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.045461599 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.174445118 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.859442917 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.074717025 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.058237022 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.820482395 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.018361848 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.834076309 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.05084391 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.978784423 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.364359343 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.848952318 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.995994412 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.377931908 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.982207412 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.214395869 seconds)
  done (took 166.536123695 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.827744243 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.827491451 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.827186984 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.828922067 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.396257265 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.828088983 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.83037322 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.826601324 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.22576957 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.217718484 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.828675265 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.387662736 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.829496889 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.828406338 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.828622433 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.827683356 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.372883318 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.828515156 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.827989325 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.827847244 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.829890193 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.224288154 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.828736388 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.228444632 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.371664012 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.828771485 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.828061292 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.82907346 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.827764544 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.827589154 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.833247717 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.827562533 seconds)
  done (took 208.071060916 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.827639271 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.829813858 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.832095675 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.829485476 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.831016924 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.831424698 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.828912479 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.828772371 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.445195052 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.438978552 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.829186502 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.830613605 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.831141814 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.829157599 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.829148693 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.829105907 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.829195453 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.829457597 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.830660963 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.830038345 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.831669546 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.562171464 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.831143512 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.585930276 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.836329691 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.84283536 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.830743258 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.831256301 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.829695307 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.830559653 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.833101933 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.830523818 seconds)
  done (took 219.059103968 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.077119942 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.830514836 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.831343971 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.745434731 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.832176622 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.831495184 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.808575575 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.078159666 seconds)
  done (took 18.803063563 seconds)
done (took 614.234351691 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.20511408 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.042031308 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.009669374 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.854634626 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.094809915 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.897811192 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.849057047 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.911819972 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.657967933 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.924562565 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.515034446 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.874645557 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.608485492 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.878475086 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.975714913 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.907033304 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.401078756 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.499101754 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.027269388 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.935177586 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.034864091 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.765367198 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.930250396 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.710568615 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.640158985 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.803506645 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.87915419 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.407531345 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.863572822 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.011776987 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.498956941 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.098316411 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.864638592 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.849301409 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.904531701 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.883634005 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.052605628 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.862675685 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.97918256 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.559345514 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.929592992 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.572033026 seconds)
  done (took 100.935843509 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.842919346 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.838874464 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.838470156 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.83904208 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.849524397 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.83952402 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.839886192 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.838940915 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.839042554 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.839423313 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.839716364 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.849163975 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.839241228 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.848799252 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.839655387 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.839505392 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.839868938 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.847956821 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.839684931 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.839498524 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.839478987 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.839812526 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.834791963 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.839907341 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.840416551 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.840403914 seconds)
  done (took 49.642720987 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.835099327 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.989994619 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.086864816 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.854003248 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.835469 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.83993735 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.854747076 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.841434562 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.840210771 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.83986999 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.941482271 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.840434372 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.853013421 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.074825998 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.850879511 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.835399038 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.835513357 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.837915861 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.000089008 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.852764455 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.857189493 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.841079155 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.85571528 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.849489968 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.838873949 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.837002041 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.838091373 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.30038625 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.84539854 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.940584237 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.879050843 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.858742931 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.250485811 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.085600443 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.889682669 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.844496748 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.836235529 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.945433272 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.842869801 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.837691822 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.854131769 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.8415559 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.079127331 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.365453514 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.850815077 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.837219236 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.314802022 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.954454596 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.877862119 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.846464823 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.081293136 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.854794267 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.838955209 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.840541021 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.875432661 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.844471029 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.839021728 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.200354548 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.849301519 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.856067799 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.84102215 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.838639556 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.001701463 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.846620655 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.992825514 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.846374108 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.84427425 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.839412525 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.082634511 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.854028434 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.378488148 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.852671668 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.839954325 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.944117262 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.999018544 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.33625601 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.851981877 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.007144722 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.264934991 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.863736767 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.846705174 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.294173305 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.866906127 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.847220546 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.841406575 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.841036892 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.840544469 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.881742055 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.856485876 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.296300724 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.380717996 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.22042224 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.866425097 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.854879927 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.841100331 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.200443737 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.848053002 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.840145414 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.084305453 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.38685203 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.85503143 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.848221593 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.360756145 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.860447246 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.863580117 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.85202966 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.09156863 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.859762929 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.885963609 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.844529119 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.852506796 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.848415163 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.863514312 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.851859554 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.845430584 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.357492482 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.967848504 seconds)
  done (took 228.858029616 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.847321881 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.848302725 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.843719892 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.84868291 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.843941864 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.84655775 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.845364368 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.84469224 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.845792399 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.844573422 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.843962088 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.844007974 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.847313657 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.84878414 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.461218509 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.847457935 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.450295037 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.846274418 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.847073479 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.849957408 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.529025777 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.850943776 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.847694897 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.84589392 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.847600877 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.847172789 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.855196749 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.851833884 seconds)
  done (took 167.400767991 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.848376641 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.032424156 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.867915821 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.879343717 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.857858384 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.847876173 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.992382859 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.870427145 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.853470384 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.848164868 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.847141846 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.908513159 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.857913461 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.947931887 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.879975837 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.955206366 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.952432722 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.855230436 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.848093791 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.847885042 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.877078518 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.856644522 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.908690793 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.972402387 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.868651324 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.961937527 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.869416891 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.849154374 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.848286183 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.962118904 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.871000113 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.909891537 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.878641684 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.868771505 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.966326393 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.967519226 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.954398764 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.954578378 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.856034695 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.850223618 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.850416832 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.851293287 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.963051474 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.870377147 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.850406909 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.965609886 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.869828908 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.849909121 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.849869393 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.849910507 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.863680048 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.867837423 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.914187572 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.980339375 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.88802328 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.873139125 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.94883563 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.977195603 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.850780504 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.948352622 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.857151799 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.963752591 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.870250337 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.8509745 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.851647274 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.85361569 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.879215345 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.957549652 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.954553915 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.857095059 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.948625331 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.886730318 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.859159938 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.852347052 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.852314887 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.964929302 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.968634507 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.886867459 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.88904274 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.881644569 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.859568534 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.8511707 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.85271916 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.868512851 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.856437476 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.964317686 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.969581232 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.857895033 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.851634709 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.851603947 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.851847898 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.876900038 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.972705682 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.888408042 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.958648031 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.917562548 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.92957669 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.868632513 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.865095126 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.856339293 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.913959562 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.86793819 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.86462532 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.145233432 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.912003665 seconds)
  done (took 200.876241279 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.22319607 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.901719771 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.907836953 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.163572301 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.214102064 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.79900683 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.900180312 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.900560359 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.923465792 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.080979154 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.975658476 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.916805383 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.88756422 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.873435979 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.898040654 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.922668402 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.905501782 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.242444849 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.127449865 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.067403889 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.891884499 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.205284576 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.212475127 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.473513664 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.950207518 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.292517972 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.462702717 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.037949469 seconds)
  done (took 61.148846402 seconds)
done (took 810.62487944 seconds)
SAVING RESULT...
DONE!
