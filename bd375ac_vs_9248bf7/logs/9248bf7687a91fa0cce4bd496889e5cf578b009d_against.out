cset: moving following pidspec: 9988
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.254434864 seconds)
loading group "string"... done (took 0.644555884 seconds)
loading group "linalg"... done (took 7.13824209 seconds)
loading group "parallel"... done (took 0.170376557 seconds)
loading group "find"... done (took 1.133063704 seconds)
loading group "tuple"... done (took 1.758879432 seconds)
loading group "dates"... done (took 1.238445652 seconds)
loading group "micro"... done (took 0.230895406 seconds)
loading group "io"... done (took 1.027608353 seconds)
loading group "scalar"... done (took 39.175382437 seconds)
loading group "sparse"... done (took 12.772169025 seconds)
loading group "broadcast"... done (took 0.983343392 seconds)
loading group "union"... done (took 13.256224269 seconds)
loading group "simd"... done (took 4.469383341 seconds)
loading group "random"... done (took 9.043118037 seconds)
loading group "problem"... done (took 1.950398687 seconds)
loading group "array"... done (took 21.441023 seconds)
loading group "misc"... done (took 1.96192878 seconds)
loading group "sort"... done (took 3.237459671 seconds)
loading group "collection"... done (took 18.09367454 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.532700763 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142288434 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.117927268 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.140258725 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.188963092 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.132252589 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.142640226 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084647383 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.084579434 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.162259366 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.140044198 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.478099212 seconds)
done (took 5.218004479 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.203151168 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086562536 seconds)
    (2/2) benchmarking "String"...
    done (took 0.097060932 seconds)
  done (took 0.999414516 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065534692 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.125861303 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.081919521 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066954667 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066260194 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.081493064 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066162332 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065616517 seconds)
  done (took 1.37674195 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073368089 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067824291 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.084329707 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06719963 seconds)
  done (took 1.116324343 seconds)
done (took 4.592546052 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.901985457 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.235532863 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188286091 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.450516204 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.148144093 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.187820981 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.664375725 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.324718637 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.210407239 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099530127 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.103853923 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.3792363 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108778621 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.663158371 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074810754 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.106805322 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.160201875 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.428330562 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082083708 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081989097 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104397477 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142358869 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.102012734 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077364014 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.169126281 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069421146 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.148093618 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.095998423 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068015731 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.242702439 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.190197092 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.677837351 seconds)
  done (took 10.547567639 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096851101 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.117823572 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068490643 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140675818 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.100232195 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.086606369 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071112195 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.083550636 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.091141023 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.158975914 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.115286267 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.104612572 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.082798217 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068870098 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.101681673 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.210458989 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.106972976 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084235575 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.086886262 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075471944 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122398486 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082438427 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.094430871 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078048113 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.152005476 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.194738614 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112547868 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.111983767 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068710723 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080676474 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.131983937 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142407166 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06615977 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08265347 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.139252829 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.111439257 seconds)
  done (took 4.660758217 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.033506237 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.161033713 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090494679 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.152672744 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.085719438 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109099397 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.08372029 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099834708 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.24832921 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.147984663 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.462256984 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129121115 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101976671 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067333334 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08450012 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068107759 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.518490372 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.145562058 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102521058 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.102170752 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073941885 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.085610583 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.358604207 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067751601 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066043722 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084549341 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.059211022 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145173762 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.129099401 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067943029 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.326339845 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.071171701 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.087765038 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086429201 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115673093 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.066345766 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09218895 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.123911535 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082799424 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066370148 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.168885088 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072243749 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.081892717 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066026523 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.104781109 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103533216 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.12030524 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.083480364 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067893137 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.184146593 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066363114 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100116766 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.898449449 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.166596968 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.081604225 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065487339 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.284090837 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.083155291 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08438942 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063022467 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.280132995 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.152304782 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066532507 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.083672721 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065796254 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067332473 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.383939074 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067303138 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.995082785 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068516831 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076598033 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085359713 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067656193 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088522415 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071452629 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.100717068 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066404012 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.06737882 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.083626826 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065291572 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083638649 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084818547 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.203746182 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.083515204 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06668124 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063574632 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.104502797 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110955333 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.06987447 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064273867 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116261595 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068594165 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083704738 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063562724 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.124148384 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066400436 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.101009698 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084614988 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113670493 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082933134 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.145121699 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06798354 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.110714714 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071497918 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114344917 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.093969468 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067734002 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.154128787 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.063928657 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.084247381 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066245969 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064018197 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.085618889 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067449888 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.097750242 seconds)
  done (took 21.345380226 seconds)
done (took 38.410346403 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.292281169 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.093261034 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.092952861 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075414975 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.092978608 seconds)
  done (took 1.542913545 seconds)
done (took 2.410483733 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119979929 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118460107 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063612547 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114493885 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063138051 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.118773915 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115634204 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081421815 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117629971 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063488711 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113001727 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064292177 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063365993 seconds)
  done (took 2.11432517 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083183551 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083689706 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087012463 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081112111 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079888637 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082243343 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079270646 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106407966 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079505443 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088160894 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064091798 seconds)
  done (took 1.779884255 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082107727 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082872198 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08624271 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080808109 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079899066 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082048295 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080027815 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103474406 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080413839 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.0907933 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063368234 seconds)
  done (took 1.7783173 seconds)
done (took 6.531349119 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078203229 seconds)
  done (took 0.937565116 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.710907214 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.710474553 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.083199366 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.132974361 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.22331887 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.154983873 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.449919661 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.109157544 seconds)
  done (took 10.607446729 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.090393867 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.086878634 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069679959 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.086765013 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.083776684 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.0879514 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072683129 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.0684679 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.089203055 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069692788 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.089225805 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071681757 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.085268324 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072333154 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067770546 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.089260952 seconds)
  done (took 2.203850476 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093459012 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093668611 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.092765604 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075974308 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090840154 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073860878 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.093692066 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074153066 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.088253477 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072993749 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.09302323 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075356913 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.089061371 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066563046 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.090723466 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077329317 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088007424 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075871528 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.093240767 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075778435 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.093288138 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065805152 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.090470859 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075392509 seconds)
  done (took 2.967926388 seconds)
done (took 17.582010497 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.133462084 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.076564236 seconds)
  done (took 1.07498351 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082014331 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099175918 seconds)
  done (took 1.054480302 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083291949 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081546438 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090214955 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.095815122 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.064790731 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.083734344 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.104564425 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066596775 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.081149013 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067744261 seconds)
  done (took 1.692304262 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069874631 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094412958 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071478657 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.098245017 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073756627 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081623755 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073296864 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084701555 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078163649 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080144758 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071900123 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.100715035 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.07197067 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.102837016 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.07277581 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.086714961 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.088057034 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068777919 seconds)
  done (took 2.345927695 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06646174 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066048166 seconds)
  done (took 1.010753903 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067917129 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063274306 seconds)
    (3/7) benchmarking "month"...
    done (took 0.084357816 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066433034 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.081461511 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062779807 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080426379 seconds)
  done (took 1.383524933 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.404787198 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.108573772 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.244265628 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.090089699 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.104415507 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.262406659 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.085230493 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070672662 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.088721273 seconds)
  done (took 2.374281 seconds)
done (took 11.807131214 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.07984581 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084115916 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112037958 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.424805141 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.110110433 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066259978 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.132581386 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.227948284 seconds)
done (took 2.113386453 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.125195397 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.615279637 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.402363232 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.213510357 seconds)
  done (took 2.110920062 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.377607592 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092614025 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074951152 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06800558 seconds)
  done (took 1.496647437 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066609266 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068854298 seconds)
  done (took 1.018625081 seconds)
done (took 5.631945051 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067219915 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.103519647 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067389929 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064600391 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.08296802 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066935185 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.062803937 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.083100467 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066598231 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065804361 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.084531443 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.068678877 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082693587 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065642576 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063775074 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084142455 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065095526 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063448327 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081562342 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066659242 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063676198 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084129382 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063880601 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062883136 seconds)
  done (took 2.649332151 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086482085 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084427694 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073037242 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089031689 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072362659 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088098262 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073126418 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065970158 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089520084 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068367437 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087896535 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.07073027 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.089808129 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071372078 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08544755 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071257259 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.089353162 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068470935 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067796186 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.089471111 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070705413 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085757457 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070576153 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089750724 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.07100988 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087545825 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068509943 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.084060976 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073426392 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087201501 seconds)
  done (took 3.256507037 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072056249 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063046741 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08297344 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072114202 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063792949 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.083063542 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063772065 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.081023476 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066320984 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06371582 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082921009 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064266845 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063442811 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.083272517 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064517481 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067157728 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.099321261 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063992795 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.081925537 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064954458 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066720347 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.082474689 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064994924 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081505032 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065735024 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063518926 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.081846812 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064738955 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063978048 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.082298026 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067336211 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066395113 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.082456675 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.07047809 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.08477938 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.0648494 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067095762 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.08090862 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065349934 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063195933 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.082018086 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064151996 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06317086 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.088920533 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063778341 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.082387257 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065117014 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065499278 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.082543388 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06670864 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062771831 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.083102838 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065132767 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.082620587 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.06811757 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063407526 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.082775091 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063776011 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064187886 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.082435881 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063144874 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080550679 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067320003 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063846557 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.097416471 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071332291 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063127568 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.084222518 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064169901 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083457707 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066799792 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.07698727 seconds)
  done (took 6.090137981 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.119240623 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09113904 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084984503 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065081222 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079877457 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065711542 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066894729 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081798024 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066314469 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08758003 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064679388 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065520205 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0841042 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076937463 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082162801 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066708889 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087260137 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06277948 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063940009 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086346342 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064670966 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.086040919 seconds)
  done (took 2.593531584 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.19045484 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.087685107 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109448142 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093430504 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067696246 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.093096757 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069354219 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089182695 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069628234 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086664762 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068137571 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088416291 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067901443 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086352889 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068446074 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086320096 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070735835 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08507807 seconds)
  done (took 2.468951296 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079216971 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06564643 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.108279085 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064956835 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.085641421 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067890447 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090372208 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074653808 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.087069789 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067114923 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.093361249 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069139906 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.085927476 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067327505 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06798097 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.08495709 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068388584 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084288535 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075183016 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089078797 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071008574 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093187356 seconds)
  done (took 2.633641233 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081770275 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067194439 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.103753994 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085343305 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062906089 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064151552 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.091084458 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066428679 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.089587319 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068852483 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065225358 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08429923 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070219164 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.084782063 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.07101403 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084943802 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069410581 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066023458 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087203265 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061957317 seconds)
  done (took 2.421572648 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088272038 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085079241 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.177797774 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093862311 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067438319 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08518122 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077409587 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.085175258 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068021929 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.110525473 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067568745 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085501057 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076472689 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091000296 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068822126 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093829193 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075889648 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094513827 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067384421 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086742202 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.109807917 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06860914 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093167127 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068423825 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08412288 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068736176 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067404988 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091057583 seconds)
  done (took 3.297318935 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067187189 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066459079 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082486779 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064910249 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063450936 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.082427836 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065290025 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063272054 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085182053 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064614827 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065234313 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.084721628 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066204152 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.083820056 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068004972 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065953561 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084117838 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065069784 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063422967 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082748196 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067102349 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065465111 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.085732236 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06437422 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063641749 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.08555096 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064181343 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.082089421 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067014416 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063162556 seconds)
  done (took 3.041290051 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077351109 seconds)
    (2/2) benchmarking "in"...
    done (took 0.091619556 seconds)
  done (took 1.071344493 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065257533 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079668855 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.083298943 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070471371 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089509255 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066940996 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.092945287 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071054109 seconds)
  done (took 1.519537875 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08274268 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076830563 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086862243 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.077699972 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.097268583 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082344097 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.15354495 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.087314995 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073211194 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082650973 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081668513 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066324279 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092507451 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067433946 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090492636 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073680467 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064193319 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.090373899 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068644484 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.084025117 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068954905 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092545825 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070488792 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063279641 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.087477731 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.075238636 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096832443 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067846167 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087558831 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075471463 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071870041 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.079876912 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066499162 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.085444873 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065705622 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075381342 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101445834 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068533723 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.094660768 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067034754 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095732763 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061540381 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.090034341 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072673871 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09388354 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067660669 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.06649657 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.080881768 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064235706 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086479364 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063139234 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066708569 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.08001438 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07374199 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.088030441 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077751772 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067715831 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087960763 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.06860114 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.087873968 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073240524 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085731577 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070164385 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06578547 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094383773 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071637244 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.0937769 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061923977 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060157956 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.083701476 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075758414 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108062596 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07304166 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085651327 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06786506 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063529651 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089416649 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.0678046 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09136594 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073608848 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085376907 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072243566 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091579501 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067788721 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068417409 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.093413109 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06505406 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.087478324 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064992369 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101441631 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066090032 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064168282 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.084328556 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076129212 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088547405 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066708503 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063147318 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092412053 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060525772 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.0859882 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067231127 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06665133 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.0954381 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08860544 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073283893 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092625774 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.075770362 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066099245 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088731892 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063483293 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084828395 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067154934 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072851519 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.080163968 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069599105 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084535222 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.067819024 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.073805352 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.084145681 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066695509 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092761525 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072609664 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.064172076 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.083254687 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069418796 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.085478963 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070091131 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.09318766 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065716737 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061624793 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.081411591 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070359737 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.083982446 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070492384 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071266133 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089462725 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.06182698 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.083262487 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071892912 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094417418 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067835599 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067398756 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.092208318 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067797829 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084717935 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073421603 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086782957 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068194685 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072099807 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087219766 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062526684 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088889918 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070404983 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06514157 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089078672 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.0701821 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.08795405 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069384122 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064876914 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.091566182 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067674189 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.08496043 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067125164 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064570475 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.095741195 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067526689 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080667237 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063548117 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.091508486 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064951055 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065112814 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084841868 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068838666 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.085592311 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065984778 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065698653 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.087949855 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077278776 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090305033 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067718275 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091088751 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077052556 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084688481 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070554137 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066036599 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086190908 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.06748485 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093658998 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072848108 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088869283 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069400213 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062410604 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091153718 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073705839 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084509764 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065624337 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064777139 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.090309969 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072104714 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089466265 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.06793847 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082811993 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067913814 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069223572 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.08855787 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066261858 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.0840997 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072159723 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064882113 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.092467965 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067344517 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095604887 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069656233 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.081348832 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071014203 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064246917 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.091630874 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061522673 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.083684247 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066910378 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066521701 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.084952899 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069907241 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.078994261 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.0737925 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073122552 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.086684588 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066063435 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.085514967 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073399617 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068071206 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090199088 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069195237 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.091455135 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076266996 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.085342795 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.07014721 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094508614 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068308378 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060393682 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.091122801 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065565211 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.083223622 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067000847 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064672882 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088913906 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074834236 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091589149 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06126316 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068188727 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.085559177 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065671052 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081198688 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071965386 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.068399927 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.086465409 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073131453 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086682979 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067515818 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088425639 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067300371 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.06676841 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.087133153 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069672279 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.085702368 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069765295 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065851342 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089256666 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06541028 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083056956 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069029295 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06658152 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.086687406 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.0723881 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084663371 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06830459 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068155318 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.087246153 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06793758 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085497473 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067441707 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069184653 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.0870665 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067360446 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088063176 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063165601 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074075667 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.085888363 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074562425 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.086537445 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064149508 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.070722611 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.089227315 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070492562 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.087120959 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067515272 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087208219 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067427229 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068670808 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093256639 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064320645 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096555416 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074056336 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085947884 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070700099 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066914203 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087635872 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065836382 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086070836 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068325783 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06633245 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.086624735 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070965017 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.087735571 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068017783 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068254915 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.08734369 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066221883 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.086539606 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062707588 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065621459 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085460432 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067163978 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095475964 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067762935 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065479129 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.085654909 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067584841 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084470019 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064007942 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.092187322 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076164565 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085880742 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074637467 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065005227 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087904965 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076975362 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.080594793 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065510629 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063493894 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.084210318 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074112902 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086849807 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.076158948 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065495768 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.085977623 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063806726 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086498439 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.066078738 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060960546 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.084072324 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069777656 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084327566 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06652204 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065836571 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.089409163 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067330029 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095279853 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066647607 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086071215 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068221589 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063769865 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.085833051 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067242738 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.068524448 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.087530309 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064466282 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.083528928 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.067657693 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.0669317 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.088036974 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066656104 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086662746 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073990363 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065653526 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.089842025 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069978073 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.083838211 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069803844 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065455916 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.086552999 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065838073 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.089013758 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070329437 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086404074 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075997927 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065682118 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087113709 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06715784 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083587643 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067391629 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.06588916 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.087062774 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066079055 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.086377484 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074634937 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064296533 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089868318 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066903834 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085751979 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074482448 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066419259 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.089932238 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072909437 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086471733 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067748933 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.093817854 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.07029988 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088259041 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06929375 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067195302 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092044128 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065395617 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.092457665 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067223016 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067003465 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.088077257 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064640607 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084838669 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067639682 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065324887 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.09271839 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067723632 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.086045411 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.0667695 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064530408 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.087216392 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069795437 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093592406 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069075625 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087504119 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063247878 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063721951 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086680762 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065729195 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067218113 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.089980858 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072126859 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.089386316 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067368209 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065078647 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.095310185 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071633342 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.090337959 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065052221 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089515385 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068505927 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068139198 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.087835411 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066821592 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087837133 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071344276 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068042167 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.086043436 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073865908 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.090108604 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067682567 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.086983123 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069273675 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067126685 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.081661323 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068030313 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067974957 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092100352 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068665462 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086425015 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076547764 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083169649 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068082793 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069186917 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086387176 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070806361 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.08136257 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068416936 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067005526 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088754436 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061549933 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085698193 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06463479 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068539658 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.085977933 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062562296 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096284808 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075751275 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088389783 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067563541 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064867411 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.082129149 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062401229 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.064708786 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088214871 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068390313 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.096667537 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066581988 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.085238855 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063764223 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066193312 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090107889 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070141316 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.082453563 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063580597 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065748885 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089879811 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072602242 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083567471 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06729275 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070151563 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.088443552 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065856321 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088526588 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064615899 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069980775 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10009594 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066765899 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086843932 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072863548 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093669853 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067749862 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061307997 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.086989947 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069737121 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086331935 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068254422 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066864397 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102145735 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068261248 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.087109601 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065619581 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.089456261 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066930774 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074218049 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088989131 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067127872 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.091402822 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068719049 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.094375024 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069658752 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093077478 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070610274 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068626021 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.086550203 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066876723 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.085350264 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066554691 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067598525 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.087802228 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070980255 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.095064787 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065802769 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096924007 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076251936 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.087945506 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064813455 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065630823 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.086137568 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062594012 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066822937 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.085177334 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064773301 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.083984698 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.0668745 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067263121 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092182736 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067509693 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.087228336 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068007152 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06097001 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.089316639 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.06936797 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086884177 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064828065 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06707018 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.088199815 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071329237 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090050649 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065270056 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068515027 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.089012882 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068025149 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.081088219 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074746079 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065080444 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.08897561 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066686222 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065890236 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.088711639 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069045875 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092307202 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067281437 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.089125337 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.076192747 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087662476 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065495985 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063910539 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092519105 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064433519 seconds)
  done (took 46.628948834 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108485628 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084920321 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061874364 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081727945 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074906285 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083953375 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062628786 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062028435 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083148826 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065153794 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.082299178 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063403982 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091213639 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086904031 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095740135 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066678479 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082667864 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062492085 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081854573 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06364866 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090608495 seconds)
  done (took 2.585817992 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075812181 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.090377627 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07375576 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.096757768 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067500119 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091875663 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072020407 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091293328 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095786385 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068272014 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.096017802 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071419469 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.087469338 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.068013534 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085957753 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072085362 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.096190954 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067181435 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.090600825 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072852705 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090806825 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.081856853 seconds)
  done (took 2.748104962 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067668848 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066154451 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.08737945 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062232515 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065423701 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.081734462 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069775314 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.083822534 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069797911 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06412007 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.085920826 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065294081 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.086726128 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062907391 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066094611 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083460932 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.133640451 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070810128 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064507954 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.08852611 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061657471 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.088196034 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06298804 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061490773 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.086508305 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070145429 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.087059751 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064923116 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065260252 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.085921292 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066388489 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.082425776 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068806078 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067113084 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.085025428 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065840443 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064799842 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.086450947 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061299839 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.083899302 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067378843 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061624016 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086846708 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068700932 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063896157 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.084893027 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067858561 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.085250957 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062537685 seconds)
  done (took 4.591401 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.085094233 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.130544711 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089365985 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088848459 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.102563991 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.093791333 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069985293 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.112714417 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063528533 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.086055704 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081671445 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.106037988 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086654325 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071548551 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.09241994 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068052296 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066042883 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.087010353 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069142665 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087157806 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069201748 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.0942422 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.100524703 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.08046231 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090613581 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065907738 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.085837587 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072191137 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.100280261 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071193438 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.092016875 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071692235 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.102579653 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071684201 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086861788 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067388709 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.104128825 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.08539971 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070181806 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063473848 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.089036151 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070926902 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.093202071 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08193318 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.088282243 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070800908 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08713984 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063368568 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.100136292 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068125269 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.094572341 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.101033735 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070790266 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.086276625 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072269445 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.102115931 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066617962 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.084554783 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069538374 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.098446476 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063932546 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089394088 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081407773 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.088132267 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073768428 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.101157591 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071262237 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090557697 seconds)
  done (took 6.777922155 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075967505 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092003498 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080993243 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102402889 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092800506 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073836161 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093031422 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073489306 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092996583 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078263317 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093507588 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113103157 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067753508 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096615424 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072822618 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09390159 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071599515 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094277455 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07172385 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094166421 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.092108356 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081508771 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093469676 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.100300116 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.103638053 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.089079549 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073335227 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.093360154 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080351093 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.093611956 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103249615 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073837479 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.093427075 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.099530442 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.086279844 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.093063057 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06556736 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092666916 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072728111 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.092951628 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068418571 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101827605 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071507571 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.088430548 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072878858 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.093595618 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.101364052 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.084092 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.0963558 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09812819 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073305753 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101432737 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072130159 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093954794 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.100492045 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.10720995 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102011946 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102217144 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072101107 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101697467 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100910703 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.10679121 seconds)
  done (took 6.468549372 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088589753 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096067278 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097616894 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063809771 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064308745 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092315522 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063901053 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.083629207 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07712652 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095221858 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078233387 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0907971 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073457524 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099038542 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090762364 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075141023 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090536973 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070637271 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095255985 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069954046 seconds)
  done (took 2.616178055 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076549043 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103172386 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068321681 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071667783 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.091250442 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07123702 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.089666321 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068799412 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088031402 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070235803 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097151062 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076040965 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088054718 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.0730458 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.096542449 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072225362 seconds)
  done (took 2.266348583 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.07998453 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.097102972 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080891258 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087424441 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065099461 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.083719013 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067927937 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062050841 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.085021408 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.080452461 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.08837359 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068792511 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.086781933 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065865182 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062320236 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.090879049 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062616787 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.085364004 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066970497 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.101330214 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.078267436 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.085435017 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068731177 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067513328 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.08862147 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071155682 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.088613963 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063756202 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.086208944 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067892881 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.086886581 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.073892521 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.082929011 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066163915 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063589069 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.084874574 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066242432 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.087217308 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070764853 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064999501 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085637874 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066202397 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.087162308 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067615917 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.082289178 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068627842 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062064604 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.09344609 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064610646 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.087702506 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066533614 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.088230958 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068950716 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.075304389 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.091602584 seconds)
  done (took 5.205918807 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080180599 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068541494 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083254137 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064423926 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089477463 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.06890315 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069366922 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089475335 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067195251 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084841477 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068582714 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088570413 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069714486 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068915131 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089167069 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070084992 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082344804 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06915563 seconds)
  done (took 2.340604671 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073366628 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066179943 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095973468 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066641012 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086545584 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069895783 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062251152 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086451414 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064670766 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08627906 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067996216 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067965871 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086383733 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068590574 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086103678 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067386639 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067806937 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086262709 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066579817 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082368137 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069894396 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06423408 seconds)
  done (took 2.610572284 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.073381667 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.092158226 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.163664222 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.109513661 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.08069704 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.101389899 seconds)
  done (took 1.592974031 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090920555 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10030622 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066568714 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107473702 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07629791 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088625518 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069178478 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08818512 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077984944 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102434098 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067485396 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098750227 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096207148 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07685804 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09520059 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074250265 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089222371 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067289798 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087869565 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106827018 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070269665 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09670425 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06949276 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088770775 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068742619 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097901067 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07584538 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102716472 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088953811 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07704298 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094681428 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067612356 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097385595 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102076703 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070767373 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097487928 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069744256 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107893052 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07275424 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097950318 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06876372 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095879132 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096597252 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073315997 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097873349 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068552375 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094936196 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067708013 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090465903 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113684211 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073738775 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097500778 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094675817 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078854816 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098472098 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113510265 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082220884 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098368134 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09483201 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082655686 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098529066 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073463481 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097593868 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102555742 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074687494 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098453149 seconds)
  done (took 6.745390903 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085292804 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108140628 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068082728 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103110369 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097685844 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070056912 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088677344 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069399858 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088249384 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069129791 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129270845 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068285089 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098653752 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098103232 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069452624 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088483072 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068616098 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098087245 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068284577 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11396562 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088359627 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077068896 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098110917 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096172725 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082818676 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095423654 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068061457 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089886488 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067680675 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089767822 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072633372 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090377213 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096978699 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068851106 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097839657 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068951639 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089124114 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074135044 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089327668 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074100919 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098514102 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106963678 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068176297 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089468994 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081471862 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089801782 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067651898 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089752577 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068531912 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08952225 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080419439 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103431456 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102777931 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096078813 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069845079 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087945042 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070306161 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088172747 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070463328 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094098541 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076962557 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089323815 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114343124 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068894633 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088978842 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076630002 seconds)
  done (took 6.632164528 seconds)
done (took 131.73768645 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.203396706 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.187057452 seconds)
  done (took 1.365658317 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070765147 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.094888525 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.099800435 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128627654 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088629607 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10027348 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.120187651 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079435716 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065908581 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.088450926 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066453793 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087761686 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13335566 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06679577 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.087274575 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068961468 seconds)
  done (took 2.429388626 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103372489 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.197380231 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110971755 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065609419 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101352329 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.078034416 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.087204602 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077212524 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.095402554 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066820482 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076629662 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.097410256 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064181941 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097200141 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.073898849 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.099910699 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064929273 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100487373 seconds)
  done (took 2.641180906 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103882365 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146169685 seconds)
  done (took 1.230515157 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.203285465 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.129393381 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.207694146 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.421823036 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.209378523 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.283511023 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.179879273 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.178094481 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.162324374 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.176511553 seconds)
  done (took 3.130255038 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099359309 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.171902246 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.31333366 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.138578837 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.085357627 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.117071815 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.139517876 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.088446048 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.103149804 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101768225 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079568138 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098998672 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.096782997 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.096225852 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074763731 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.098752581 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.12200568 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075165268 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076075775 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.097815309 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.11765107 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067318311 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073751269 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.095969694 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076486872 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.099488936 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065310324 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.088572317 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.074764955 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.096238166 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079111873 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.116334303 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098046223 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.132971526 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.081503424 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.132375209 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.099661785 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.071724356 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.096537765 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073082366 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.099326137 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.076830711 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104638365 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07649259 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.087634605 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077474518 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.086787283 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.06704136 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.10015315 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.077666245 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.100012054 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077945924 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.131701946 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.099169831 seconds)
  done (took 6.356313492 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.752162542 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.109203353 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095055131 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.811473547 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087568608 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106773203 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.713875736 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117500664 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.209567171 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.766073235 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.088460766 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.097874835 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.178247367 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.212048238 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.897940727 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.282896616 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.633381698 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105126457 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107887351 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.132614581 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137711254 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.175366955 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.149650342 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.407278385 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.075146485 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093114377 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.137057331 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07392519 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.138310814 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.10516979 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071920101 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.175294312 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.223747126 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.154739907 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.096280869 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06959444 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090314287 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.146953479 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.217012639 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.191000992 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.156963664 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067714593 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06835733 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.159819436 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130306156 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068425451 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.1395604 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.150699972 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.146001598 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094559878 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073593407 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.161387197 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.135784144 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.141585541 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.099597019 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.262501659 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.289388226 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069366454 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118657018 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103163415 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.211378833 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103740289 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.196016017 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137768323 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.166953169 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068544859 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.754361289 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.146504179 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090792896 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074956939 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118706893 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072841533 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.157676345 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.123663675 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.383851141 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.140310111 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.094891459 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068913273 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.203046929 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083275556 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090487772 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.140649268 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.075316482 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121809363 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.142555062 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.139989993 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.166752867 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.206548149 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.140309339 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.137214277 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093706352 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.122528593 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.07548414 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.187652656 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.191552695 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.139948119 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.185751072 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.137931239 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.138962779 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.166199355 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076140919 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.148224601 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118333671 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100138029 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137700928 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.16867895 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.122308167 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.103382671 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072587098 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.135158678 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.125596704 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106864171 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.138354939 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.147097161 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.452020004 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.14729075 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067591506 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106673533 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139999934 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.139251196 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073113873 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.237294623 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12310951 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.14609484 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120960977 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066500676 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118697034 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.138639847 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098627603 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120736474 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.136594401 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075068926 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.229550825 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.169863885 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096462758 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.195386701 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.16115029 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074144302 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.146866146 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.117881847 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.144317715 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098935433 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.135342076 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095533503 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.726367613 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.141595647 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120366425 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094549657 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.16397674 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071259311 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080584855 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.103527338 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066337028 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.772993214 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105360172 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.07935274 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.10427465 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073636959 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119941613 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.134277962 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094789386 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.137615019 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.200961208 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07545403 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118181263 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.080173913 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.161124412 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.075516623 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.103753774 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081619101 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.104679609 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121556188 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072856854 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105481098 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.145977181 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.139469059 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.191034576 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.548458761 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090515292 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.083456547 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.20075664 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068961336 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.262010922 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135803864 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.197006568 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.140488291 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077722291 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.290286336 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.142110198 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.164955965 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.104610933 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151208259 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067444649 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.134870703 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.14091303 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091918218 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073950494 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.138942605 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.164462567 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.141654803 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.893919872 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070805504 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.204129223 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066960243 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.170428672 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075309306 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096040222 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.23825094 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.0918785 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.145382971 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.141031077 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070684343 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.10433434 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.825106158 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104726446 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137233504 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09476837 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.170340256 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.139909978 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.156498504 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.138234983 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074256759 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.137431015 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.185483199 seconds)
  done (took 40.257899757 seconds)
done (took 58.394385826 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.260864326 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.17800591 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.244862925 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.145354049 seconds)
  done (took 1.907649834 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.144897724 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103554251 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119084471 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.085815585 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102293225 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.088021512 seconds)
  done (took 1.649295715 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.407899988 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.264807063 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.232206056 seconds)
  done (took 1.909111349 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.261835035 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.212378097 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.451345183 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.299528336 seconds)
  done (took 2.361553739 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.17545545 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.114691406 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06692803 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.108361719 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.160265829 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.255498531 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.127580314 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.185663069 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078981916 seconds)
  done (took 2.327308306 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.196341667 seconds)
done (took 11.360854999 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.096158857 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.177651953 seconds)
    (3/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.096438143 seconds)
    (4/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.265468749 seconds)
    (5/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.120171428 seconds)
    (6/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.193440274 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.151165491 seconds)
    (8/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.201006187 seconds)
    (9/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.162618991 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.083379635 seconds)
    (11/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.222938333 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077771668 seconds)
    (13/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.111368553 seconds)
    (14/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.105717822 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073764763 seconds)
    (16/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.137453665 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.171385621 seconds)
    (18/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.21480656 seconds)
    (19/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.128580306 seconds)
    (20/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.198488178 seconds)
    (21/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.196039624 seconds)
    (22/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.084929563 seconds)
    (23/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.094864934 seconds)
    (24/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.076296645 seconds)
    (25/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.090300701 seconds)
    (26/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.07251457 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.134873647 seconds)
    (28/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.224782604 seconds)
    (29/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.077507559 seconds)
    (30/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.175007433 seconds)
    (31/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.190909548 seconds)
    (32/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.088417236 seconds)
    (33/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.130252574 seconds)
    (34/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.073299738 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.096979548 seconds)
    (36/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.090437399 seconds)
    (37/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.095796703 seconds)
    (38/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.177548964 seconds)
    (39/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.167381195 seconds)
    (40/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.202209151 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.162030774 seconds)
    (42/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.195504993 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072914062 seconds)
    (44/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.116528156 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.102902537 seconds)
    (46/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.100793852 seconds)
    (47/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073526568 seconds)
    (48/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.117739047 seconds)
    (49/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.113685527 seconds)
    (50/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.169404935 seconds)
    (51/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.126298334 seconds)
    (52/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072499027 seconds)
    (53/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.091649191 seconds)
    (54/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.233189022 seconds)
    (55/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.079887576 seconds)
    (56/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.062343478 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.100921738 seconds)
    (58/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.188911748 seconds)
    (59/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.052730037 seconds)
    (60/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.130975771 seconds)
    (61/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073271528 seconds)
    (62/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.132309778 seconds)
    (63/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076903246 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.119689572 seconds)
    (65/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.117384896 seconds)
    (66/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070987885 seconds)
    (67/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.162798967 seconds)
    (68/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.100552678 seconds)
    (69/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.140273698 seconds)
    (70/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.116846824 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065452917 seconds)
    (72/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.091709401 seconds)
    (73/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.16978342 seconds)
    (74/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.076438767 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.109223365 seconds)
    (76/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.15900014 seconds)
    (77/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.210542164 seconds)
    (78/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.168390738 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.120381668 seconds)
    (80/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.073588113 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.115458699 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 0.066856604 seconds)
    (83/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.160463201 seconds)
    (84/309) benchmarking ("sort", Float64, false)...
    done (took 0.148826722 seconds)
    (85/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.168245332 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.113880308 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.140650236 seconds)
    (88/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068289921 seconds)
    (89/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051402675 seconds)
    (90/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.193738047 seconds)
    (91/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.077571255 seconds)
    (92/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.164020382 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.114666517 seconds)
    (94/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.096794396 seconds)
    (95/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.094559007 seconds)
    (96/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.066426502 seconds)
    (97/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069813294 seconds)
    (98/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.184696284 seconds)
    (99/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.069617309 seconds)
    (100/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.169441119 seconds)
    (101/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073004797 seconds)
    (102/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.092602766 seconds)
    (103/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081935529 seconds)
    (104/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.202424145 seconds)
    (105/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.05194038 seconds)
    (106/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.166756934 seconds)
    (107/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075594312 seconds)
    (108/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.074601127 seconds)
    (109/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.076586001 seconds)
    (110/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073666921 seconds)
    (111/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.169453072 seconds)
    (112/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073208012 seconds)
    (113/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.15855677 seconds)
    (114/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.100300582 seconds)
    (115/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077751713 seconds)
    (116/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.06573991 seconds)
    (117/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.133667487 seconds)
    (118/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071694873 seconds)
    (119/309) benchmarking ("sort", Bool, false)...
    done (took 0.159354142 seconds)
    (120/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.09721903 seconds)
    (121/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.092819108 seconds)
    (122/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.095908025 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.147140895 seconds)
    (124/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.093995472 seconds)
    (125/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076780101 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.146979621 seconds)
    (127/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071508726 seconds)
    (128/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.193756173 seconds)
    (129/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.091265659 seconds)
    (130/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.091171872 seconds)
    (131/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.06554748 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.089311508 seconds)
    (133/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070180463 seconds)
    (134/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064275922 seconds)
    (135/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.158381685 seconds)
    (136/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.136614913 seconds)
    (137/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.096186013 seconds)
    (138/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.053033454 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.073099118 seconds)
    (140/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.086407796 seconds)
    (141/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068427126 seconds)
    (142/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052208856 seconds)
    (143/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.078202144 seconds)
    (144/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.134646589 seconds)
    (145/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.096902982 seconds)
    (146/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.102005848 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.101849919 seconds)
    (148/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.0721108 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065428526 seconds)
    (150/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.076947459 seconds)
    (151/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073769201 seconds)
    (152/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.091801436 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.093275994 seconds)
    (154/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.19291977 seconds)
    (155/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.052930493 seconds)
    (156/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.100983291 seconds)
    (157/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.06859897 seconds)
    (158/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.112837033 seconds)
    (159/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.099823813 seconds)
    (160/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.159422751 seconds)
    (161/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.077539953 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090861395 seconds)
    (163/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.097275702 seconds)
    (164/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073419056 seconds)
    (165/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066514898 seconds)
    (166/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.085596989 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.09380627 seconds)
    (168/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.115349715 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.136875809 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.067154538 seconds)
    (171/309) benchmarking ("sort", BigInt, false)...
    done (took 0.211597372 seconds)
    (172/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051999857 seconds)
    (173/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.075850374 seconds)
    (174/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.053465575 seconds)
    (175/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077496824 seconds)
    (176/309) benchmarking ("sort", Int8, false)...
    done (took 0.164338972 seconds)
    (177/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.074925967 seconds)
    (178/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.074013987 seconds)
    (179/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072593896 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.112919452 seconds)
    (181/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.136423975 seconds)
    (182/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.100110242 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086815297 seconds)
    (184/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.078479862 seconds)
    (185/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.28474234 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.122076863 seconds)
    (187/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065885428 seconds)
    (188/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.075874833 seconds)
    (189/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.092209223 seconds)
    (190/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.17259744 seconds)
    (191/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.18446892 seconds)
    (192/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067634554 seconds)
    (193/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.130979823 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.0663808 seconds)
    (195/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.096388836 seconds)
    (196/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.162539086 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.138150908 seconds)
    (198/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065821426 seconds)
    (199/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050550152 seconds)
    (200/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.098739935 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065878822 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.089045714 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092455635 seconds)
    (204/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073860512 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.124189825 seconds)
    (206/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.171288957 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067513823 seconds)
    (208/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051636139 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.089898224 seconds)
    (210/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.134488593 seconds)
    (211/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.074964868 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.096086589 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.165665558 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.102539496 seconds)
    (215/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.095652262 seconds)
    (216/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051247181 seconds)
    (217/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050886308 seconds)
    (218/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.075619482 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13468197 seconds)
    (220/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.191374135 seconds)
    (221/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064582619 seconds)
    (222/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.092196828 seconds)
    (223/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.08024331 seconds)
    (224/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.113694785 seconds)
    (225/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051804832 seconds)
    (226/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051842253 seconds)
    (227/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.074989864 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.140438027 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.115972794 seconds)
    (230/309) benchmarking ("sort", Float32, false)...
    done (took 0.126808933 seconds)
    (231/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.090673126 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.161069661 seconds)
    (233/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080250102 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.122704583 seconds)
    (235/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07200491 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.145658424 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.067169325 seconds)
    (238/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051039887 seconds)
    (239/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.096694891 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066890538 seconds)
    (241/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051130321 seconds)
    (242/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.076043368 seconds)
    (243/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.068953012 seconds)
    (244/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052367076 seconds)
    (245/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.05222158 seconds)
    (246/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.102290024 seconds)
    (247/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.053309626 seconds)
    (248/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.05309788 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.100292047 seconds)
    (250/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065378874 seconds)
    (251/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.073277822 seconds)
    (252/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.05311221 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089280847 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.15258147 seconds)
    (255/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.068854381 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.093349008 seconds)
    (257/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052839017 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07183712 seconds)
    (259/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.090611409 seconds)
    (260/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073564429 seconds)
    (261/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051269647 seconds)
    (262/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.09446428 seconds)
    (263/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.06319578 seconds)
    (264/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052144514 seconds)
    (265/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.157105668 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073426773 seconds)
    (267/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.074703424 seconds)
    (268/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053841477 seconds)
    (269/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065150815 seconds)
    (270/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.075185477 seconds)
    (271/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.062268628 seconds)
    (272/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.050705361 seconds)
    (273/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.089794026 seconds)
    (274/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.070004232 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065236744 seconds)
    (276/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.05084667 seconds)
    (277/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.075697412 seconds)
    (278/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.05261163 seconds)
    (279/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079728792 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.099119361 seconds)
    (281/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051724914 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.086090397 seconds)
    (283/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.068386353 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064393292 seconds)
    (285/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.089702913 seconds)
    (286/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.082292142 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.109962829 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.09536069 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.0726138 seconds)
    (290/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.090275766 seconds)
    (291/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065979792 seconds)
    (292/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.096780706 seconds)
    (293/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.068218636 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07108129 seconds)
    (295/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.094316432 seconds)
    (296/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.051850764 seconds)
    (297/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052873094 seconds)
    (298/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.050272728 seconds)
    (299/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.102626652 seconds)
    (300/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.052327919 seconds)
    (301/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.099065083 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.06669607 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.090940625 seconds)
    (304/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.093221754 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071260758 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.091626903 seconds)
    (307/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074691346 seconds)
    (308/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052321718 seconds)
    (309/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.090077429 seconds)
  done (took 33.334827471 seconds)
done (took 34.351898988 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082427871 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114800506 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075951387 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.116169022 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082438082 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.100711973 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073839781 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077545582 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.105714077 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081758923 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.103701892 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054213781 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.099835416 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075265166 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.098864517 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092356419 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.103341078 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073782442 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073035848 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.089801511 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073542185 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.088946561 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068888407 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054579466 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.101678919 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073310392 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071732564 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.099746013 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06531553 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.089377851 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069459834 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072861273 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.089522183 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078811405 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.095329861 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074687446 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074275009 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.10181166 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067106034 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.089702485 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074328934 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.0652642 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.097239793 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073439803 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071230466 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.095402718 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073657716 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.10376568 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091036695 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09284509 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073767606 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.098969111 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078084249 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071937453 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.093955567 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074071187 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.093792791 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09280835 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.097058929 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069454335 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073059635 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.099448658 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071713157 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072502298 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.099486882 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075508331 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.101511208 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071240276 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.098456279 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071736269 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065702347 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.098388542 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069064316 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065110439 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.100458557 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076612786 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.088148868 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072550838 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071788299 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.09658743 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065399065 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067271104 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.092147584 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071424977 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09070848 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055893355 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069863636 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.095280078 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066237426 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073878078 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.0961846 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073144627 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066823367 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.101921862 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06533164 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.095137508 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066725933 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065984408 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.091604934 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070381095 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064442215 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092664294 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.07524386 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.090455089 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073498162 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080328818 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.090227626 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072466796 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064413331 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.090065773 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081149413 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.100526759 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066316785 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091440226 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066701132 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07340736 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.08897089 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066914411 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065154191 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.090353918 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072645722 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06512425 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092659864 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07353083 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.102877275 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067118708 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068894549 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091913651 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067486198 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071017448 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.090131352 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066280149 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067168025 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.088133406 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068056039 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.089204835 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075416989 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067101546 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.09895646 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067703259 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073532582 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.095890088 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071321373 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.094354415 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066368643 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058627154 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091838664 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069476087 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067271264 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.090742048 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067817652 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065042656 seconds)
done (took 13.357047417 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067621755 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.170041891 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.127428615 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095555219 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.112074798 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066367035 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.101296196 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.103546157 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.092139723 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.127701113 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087798617 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.107847744 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.11470287 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.089931244 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06663722 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069884718 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.092274774 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.08843905 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.127088787 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085395213 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.142588869 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.090346061 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.120150535 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090873029 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.113267035 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.103240075 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.091217905 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070976475 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.06849271 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.118128174 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.10912636 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071031685 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066056387 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124110016 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.117880161 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08589004 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.090260623 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.085709796 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.089617244 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06763197 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.115805184 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.099854338 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.106559441 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081748534 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.096642846 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068616464 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.090768061 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08605061 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.11543288 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.080320248 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.113386816 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.135015339 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.06907463 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.107746575 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064653951 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.112565731 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.081300168 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.093136228 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066693059 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091750733 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067068682 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.06990361 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.112806743 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.116446706 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071087552 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.106171232 seconds)
  done (took 7.398720093 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086539975 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.116675805 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085343892 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.108504586 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066978399 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066511094 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.091054717 seconds)
  done (took 1.69645984 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068789794 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088422484 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.114306749 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088805507 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.110622406 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086297556 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101766398 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066926339 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.108227229 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069039626 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086718104 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.129737969 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067527553 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.099687691 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089980453 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.092493207 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.08989243 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.091962221 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070888471 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.114757674 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070681845 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.08663006 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.094904403 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067133613 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.106177073 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067952603 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.139610374 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071553644 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067991173 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.095700114 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065345016 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.141485742 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104909666 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078564491 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06649479 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.10746398 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081726883 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089607801 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.08446034 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.095714024 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083047994 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067749968 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.093908378 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065611333 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071218041 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.103155687 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068437122 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.091990413 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070464402 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086329816 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.093095984 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081447938 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.091036778 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.07189402 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068158436 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097712167 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076799884 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.092576201 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088789825 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067997522 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.108741906 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083724955 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.107295464 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084148887 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094651173 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081488536 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.10556231 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071047594 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068470655 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.095615453 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083530675 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.089538868 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070260278 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077558009 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.093622578 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090771848 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.116116278 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068834767 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.101505201 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068993236 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067040542 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.092547745 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090519052 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094903098 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068813419 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071088594 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095596618 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065460036 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065613027 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.096268384 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066185362 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067608262 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.095473096 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068246233 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094019254 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084799672 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067650099 seconds)
  done (took 9.446668514 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070100094 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068458935 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093891061 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068605927 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067431658 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.093430646 seconds)
  done (took 1.555295688 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.097908674 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.094717937 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082206859 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.096077427 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106471534 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.106801924 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.082231654 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.107283937 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084504848 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.104565461 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.081995224 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.107804978 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.087774889 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.098512973 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.082504354 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.097229255 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.082353524 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101251379 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079856621 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097257465 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.089374353 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.097057933 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075294716 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082687447 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.096315394 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.07229217 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102839494 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079818833 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.104104232 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082577662 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.098213834 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.070717402 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096304345 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.083328374 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.107498728 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072572662 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096788892 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072428995 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100330014 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072288655 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.10642372 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075075072 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.077082865 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.098021151 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081036779 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.098329012 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071323359 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102240775 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.080172459 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.097687666 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.071934592 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.097123121 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071153499 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095485149 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073627268 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.106647212 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.072469668 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.105704405 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.074349519 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.071856017 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.095573016 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071003812 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.10840043 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071023485 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105382556 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.071769922 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.097479657 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074403979 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097174147 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.074568904 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.070677895 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.094816891 seconds)
  done (took 7.482310713 seconds)
done (took 28.65385072 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.660797493 seconds)
  done (took 1.747959473 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.774728314 seconds)
  done (took 1.862662902 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.721836559 seconds)
  done (took 16.814467869 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.626369384 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.775321386 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.793134632 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.155874515 seconds)
  done (took 3.437827296 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.910970844 seconds)
  done (took 2.024047218 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.237052918 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.223573094 seconds)
  done (took 1.554392399 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.768646639 seconds)
  done (took 1.870977849 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.308775931 seconds)
  done (took 2.40285979 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.324826497 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.180470532 seconds)
  done (took 1.609021468 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.523563986 seconds)
  done (took 1.626535844 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.801307283 seconds)
  done (took 7.906881682 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.23108104 seconds)
  done (took 1.34554169 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.271924902 seconds)
  done (took 1.375631081 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.333790077 seconds)
  done (took 4.43615857 seconds)
done (took 51.106476604 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079016714 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080528624 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.107008274 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078753056 seconds)
  done (took 1.445222926 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079225801 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07275306 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.103370408 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071862406 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.103415958 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073339064 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.099083885 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077855389 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071146833 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.100017319 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072952117 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.097094848 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07604859 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.098763056 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07235265 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074661541 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.101799237 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07260774 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.101524659 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074719251 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070567141 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.100998557 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076183489 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.097193247 seconds)
  done (took 3.149488612 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079652648 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072286723 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.100280276 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072990344 seconds)
  done (took 1.431366855 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078810365 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.115296546 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.08944415 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.101003329 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093755961 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.111852646 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070353919 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.06967198 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.097339943 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077894857 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091726512 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099148635 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.113410274 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077190954 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102821429 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066708614 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068429705 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.112590395 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076673437 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.103917172 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070384922 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07914945 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.09422971 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090484611 seconds)
  done (took 3.26436524 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077976709 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10300147 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.105025066 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088693518 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.118331688 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065225848 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.103420327 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090590809 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.150999143 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065313105 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.097213223 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066146691 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.097068739 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067480016 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.07619208 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.134902762 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.110695977 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.09502527 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095404337 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.091987569 seconds)
  done (took 3.016453428 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076300293 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069117329 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090693944 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069324595 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076373059 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.098858622 seconds)
  done (took 1.59253825 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069549328 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066742096 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092497641 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068027474 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071927879 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092649406 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066307112 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067017503 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092996038 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067169275 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065491557 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.091420045 seconds)
  done (took 2.023383092 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.387896282 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.096022349 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068978087 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.092203917 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070874187 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091851591 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080819376 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067746867 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.117330728 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066383233 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.09236527 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069115558 seconds)
  done (took 2.417558467 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2652659 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076732541 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.325940108 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168240272 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140522571 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155249008 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103796008 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139861694 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.19998001 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13939732 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201574033 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226732137 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134250451 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168284649 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116162319 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.105811723 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211991894 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221749487 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105493312 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225691346 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2075023 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156899649 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180360498 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128959946 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134433019 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150725966 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071314718 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106557792 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231952943 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161225426 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202200965 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138615885 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09644805 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231055998 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226709482 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196273239 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162306465 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085971264 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.157866945 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.166736081 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259633932 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113933843 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194444957 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134542625 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106083938 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174230662 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146368029 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.147384692 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.137805812 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115041806 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175215724 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240866215 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.166778666 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113209935 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137179316 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142848988 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.143401183 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103882035 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240977748 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219142615 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159185212 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.096482944 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097353229 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212986329 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160359133 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.142235518 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.153758618 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119460918 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168315778 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.211754142 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14736227 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173860972 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.184167525 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090519168 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146849771 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194263591 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156839973 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20252863 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153685534 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.099504375 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151963232 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129839427 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080937555 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.169499885 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074840137 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23360118 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125505148 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.139917722 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138208289 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109538378 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135570706 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221093856 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202622471 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104054675 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.092638067 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129585385 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.148763912 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177502456 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113706998 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108944222 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173751655 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.080115888 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165429673 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.101861332 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154048069 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077845424 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151548819 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188468268 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07587907 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155516724 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12937776 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.127925783 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164076374 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219304913 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090698269 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109647576 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201039558 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17928414 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.106880939 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201529817 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189982179 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.128380755 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129745038 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180289617 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243694772 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117063546 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222487215 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135195702 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084942962 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.115021552 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155701362 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139863661 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.149229439 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082517097 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.152787539 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228219743 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.101346823 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096333223 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190397488 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082686707 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107967897 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140972801 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101733592 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.122361605 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.128192979 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.13358726 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169636523 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154006799 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134950672 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153673086 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125676394 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227089032 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115286228 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.105025876 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131048093 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.094894939 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.16633191 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191204827 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107282134 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226525039 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.154960982 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104022696 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14757179 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110086179 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169384298 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105570764 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071691883 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199544677 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112096285 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137584256 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.211960844 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102687398 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.181766461 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.152360206 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162881971 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160527406 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.161389833 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133755545 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.114515344 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14132843 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154648569 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073101614 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122081535 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.109704433 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131076432 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096863891 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110840267 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171944492 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15423247 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124950523 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140763794 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124535024 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180333796 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.103343064 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159958241 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.148471554 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121568799 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.187377179 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214035881 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165465648 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127865664 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1766079 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.097025874 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075169577 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.117420082 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158644028 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083466562 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112064413 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145869372 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178132897 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184808223 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168460029 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138163135 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151838558 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18669642 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.09814559 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117407106 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207045807 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155520689 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.135619415 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115959663 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.126177221 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175057169 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136813744 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246089377 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144833003 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152846727 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209660101 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.128787528 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082732216 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133964033 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166945657 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134947198 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.208543465 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100377794 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115850226 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137747285 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.106961362 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105763552 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184323146 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148586888 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163775207 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.144850311 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160374863 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105530214 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145478436 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152572229 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151084475 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064515314 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148221878 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22131747 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123015073 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146719599 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212465469 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080622037 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.157618521 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238540303 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174191797 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112943775 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138150273 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151698433 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158473915 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147031713 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169906425 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139369949 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164112101 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138946916 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.113475344 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087721445 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126062341 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134218942 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.12219188 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.140718704 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.145884704 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.120221964 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162383461 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139460962 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138179814 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148169763 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.100026889 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.118105803 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098961147 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235850832 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150872107 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235463369 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.129583732 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179350948 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228208208 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103362257 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080459735 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.1081599 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172726015 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083931855 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190542476 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097161995 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133719831 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156479516 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200980989 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096917243 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.095032579 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109870415 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193251858 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138502754 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099404784 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.135008517 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222915624 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.131210778 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080555112 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154224813 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133375627 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13012975 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236644765 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063540923 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097610566 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104185176 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080546862 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185626066 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18819293 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.110085234 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.13083768 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148217408 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175956887 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160215373 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129235695 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099358042 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142223212 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206146592 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160794535 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091197484 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140503323 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186398994 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190027255 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134236658 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.123000527 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203394492 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216278728 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.222981104 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089695687 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145096341 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144282318 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138553541 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216354956 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083983362 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228011507 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109467754 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167611718 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135465125 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120782196 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158157424 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.124620762 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089620013 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207144402 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149804616 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082859836 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107806903 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147232102 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151179409 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135551433 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074842919 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197448155 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073497046 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195315753 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20375257 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110185348 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133395557 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097590598 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110398149 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136681861 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131438525 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087974708 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.14822314 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23645453 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.091298436 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211075481 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170457636 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142843861 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19515548 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128205259 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.663596922 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079265125 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215071453 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148900519 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239648218 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124791082 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149304388 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112632674 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152022159 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203453452 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133318658 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.204811393 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163543654 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.150826495 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078873563 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131723185 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139860729 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.118989092 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135584767 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144212952 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145669101 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.127237698 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.150691101 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157143415 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.108646537 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097206174 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218703214 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145899777 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174736113 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171702941 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113267466 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14917332 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198956217 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081705794 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.151848922 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216615553 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137728041 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126576944 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.08313418 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.134921403 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233567011 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073911274 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222772075 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154247491 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139284453 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14291715 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147973836 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163845489 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137466472 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182137923 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097311081 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.140508506 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145613087 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112303724 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.103093498 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108511595 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142395606 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.127955276 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131319029 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.121899028 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21234315 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071870205 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124877103 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131062102 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176499884 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241265127 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.11791054 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084580477 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148000516 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142611266 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.145056104 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154934932 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.10950775 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1096876 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.084198868 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.1402468 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111749113 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144337376 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131963646 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140271761 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228796783 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.085895295 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.254297276 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123887682 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134063001 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.071713638 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.107257274 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097174078 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126587033 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13693406 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124998087 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207450491 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.126076688 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.117418374 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094316443 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.101103731 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083846807 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159628553 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139651896 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150927882 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12659046 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.090611052 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138834388 seconds)
  done (took 71.6865352 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.137283171 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.108385358 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.121774761 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.176964995 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.149991197 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.24245907 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.184492623 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.226765364 seconds)
  done (took 2.542770606 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071135158 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.121140327 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101868924 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.116663814 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.093462051 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068981666 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.299960527 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.111311169 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067366969 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.118513251 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.121555998 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.095391094 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.480547678 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065661532 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.094601468 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.088892503 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069119673 seconds)
  done (took 3.372597648 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.433862764 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.655173501 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.460064442 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073496022 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.960626085 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.110776503 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.493288966 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.168342412 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094256079 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.444428321 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.725713302 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.157514656 seconds)
  done (took 17.971221843 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07555761 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069129206 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.111401548 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083966495 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.09936305 seconds)
  done (took 1.631669 seconds)
done (took 116.643881542 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081158287 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.347315575 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053247036 seconds)
  done (took 1.627395345 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083964601 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083503628 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.112388018 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082624988 seconds)
  done (took 1.567612945 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.075962528 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07570199 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.112225065 seconds)
  done (took 1.467744974 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.283043582 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.166074456 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.090375428 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083856633 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076886516 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.104720697 seconds)
  done (took 1.468764419 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073281059 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074322351 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.100989402 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075315913 seconds)
  done (took 1.520813343 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077567416 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052194502 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.053624548 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.084111633 seconds)
  done (took 1.471400711 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091305918 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.106023977 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081379676 seconds)
  done (took 1.479572452 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.108676326 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.113953144 seconds)
  done (took 1.426653358 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08306497 seconds)
  done (took 1.282468659 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.092682351 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.141274798 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.157309452 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.137053972 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.167001016 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.137002483 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086142723 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.115892327 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.104615829 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088197327 seconds)
  done (took 2.433355022 seconds)
done (took 17.557108626 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079131903 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.387190009 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361021475 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116979647 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669244598 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355199758 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.0043064 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119334679 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121211191 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096036603 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083342464 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.675286607 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.007240429 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.345871229 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.992315988 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.320770632 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676480639 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068270923 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092806052 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069301715 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.96009746 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095198227 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067512549 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094454955 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649343178 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370066823 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095507418 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.3243105 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092905331 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070852249 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.353824024 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09537319 seconds)
  done (took 16.106589649 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071266272 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.14329854 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073720932 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082350461 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.099012682 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069535878 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.098269254 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069850675 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154486957 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067549959 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112177069 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067788162 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098114571 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069942232 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.085875524 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095997918 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069240042 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067042718 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.096252008 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067354211 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113515444 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068162705 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067021227 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096536107 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.066930745 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107470683 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068322578 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067498659 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096059568 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069789678 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.097417157 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068826309 seconds)
  done (took 3.954381374 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114825428 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.152872585 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07317732 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129534332 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111649136 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098749934 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.170223187 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092919774 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155230798 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066918252 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112666982 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06718924 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128042523 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068781815 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114779724 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068462371 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067971869 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096620229 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067843465 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096031116 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087346938 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067150897 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095782171 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06819258 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095338107 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081777633 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093792418 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070485735 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067841688 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097668842 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071723872 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068205478 seconds)
  done (took 4.234625189 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072915383 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074751136 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109784096 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083513797 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096123314 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072473237 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072104492 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.097129546 seconds)
  done (took 1.894902209 seconds)
done (took 27.39747218 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079219595 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069499043 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.101137213 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080657377 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.100169272 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080711359 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067008725 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.102171914 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.0773046 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072377175 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.103882944 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067481359 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.097984626 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06855184 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.0733894 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096087635 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078942111 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.098665334 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080049426 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078902677 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.098169752 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076248238 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.101071634 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080288082 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.105602834 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080045607 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.081100639 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.102744 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.06779531 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.097675109 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.07721084 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.082837806 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.097367389 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078591887 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.096891411 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067986995 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.066333354 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.096141814 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078865482 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.101252538 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.071078411 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.100855233 seconds)
  done (took 4.784964428 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089724949 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09045649 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.113742538 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064734475 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.099473158 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065390985 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.115252915 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.064380822 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059738139 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.116737561 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056672982 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058520689 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.090834456 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054659426 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059168276 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.05576522 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.090422511 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056451353 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058597616 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.087767002 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058445469 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053669668 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.087587134 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064369516 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056068857 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.060822744 seconds)
  done (took 3.143428928 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075833412 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083161547 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.117009405 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126868485 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.134735467 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076307006 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.107092575 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.087068203 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.11442398 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067682794 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07023514 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.125434671 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086324172 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.102603616 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067602464 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.114624137 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082758771 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068163473 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.102891744 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090216518 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.112478183 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.077541417 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.119598408 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081745498 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066530604 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098323848 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071750729 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.108594875 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07409512 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076241605 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.100701402 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071457909 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.097599871 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080453469 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071824256 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.098790191 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.08908236 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105997327 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077700179 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067445642 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.100606153 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068837695 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.116531128 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.113003475 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.095220243 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075374904 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074778975 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.106524553 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067946277 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.113330448 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07796408 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067130974 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.099778977 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067180939 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.094473728 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083229128 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069829382 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.098369414 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077135627 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.097200549 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.0824106 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070911806 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.112045669 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067972446 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.102458524 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068533222 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068385048 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.094375817 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092497487 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068056255 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.137810356 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.067512117 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.098069322 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076719624 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.103966299 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074166592 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.066871857 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.112456863 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07717219 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.099815082 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075936449 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070621844 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.09916105 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087050043 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.097484293 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070189955 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068642532 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.102943479 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.07123692 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095848308 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082403173 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067791186 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.099214485 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084443455 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.094337201 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070392813 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073876136 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.101254853 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067587488 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107498571 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074234366 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067737066 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.105980855 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067522793 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.09847151 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078780561 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.071390481 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.09519387 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072203531 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.101156434 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069205038 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068050949 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.099502437 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069522074 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076835444 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.102856302 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072547714 seconds)
  done (took 11.46067075 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.192198922 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.185440709 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071281998 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.176942561 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075425571 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.108785036 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.178864605 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.105013057 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.097043495 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068196061 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067879687 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.130824653 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.123979227 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.106979936 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.108871044 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067971428 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.114195406 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.104690194 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.181518609 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.17567845 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.115783815 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077651982 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069676574 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.09879072 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070001721 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.105614279 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086180717 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.104290713 seconds)
  done (took 4.402658385 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081611676 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.128975676 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074278353 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.087810282 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.120081293 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067111085 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.103749242 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069159411 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.108506897 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080748164 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.096443788 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074548991 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074661811 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.106925088 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068477453 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.105852575 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078800542 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069305448 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.099358521 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073091227 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.104991275 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081326075 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071591194 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.097021525 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073339676 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.094941237 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065395598 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.113735123 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067509804 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.117697173 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06672432 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073104662 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.110304942 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069060566 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.094261292 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072406144 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071180509 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.098860861 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070310177 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066283752 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.095042876 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057790391 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.065662362 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.109392287 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.072967656 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.088031877 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074343909 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.07236432 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.101732379 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066303749 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.099288743 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071951881 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069783791 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.104846896 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073476782 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072165232 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.101166335 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065908762 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.102709443 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072915483 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064722207 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.094122363 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074076864 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065358177 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.105234405 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072499226 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093969182 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071900026 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.073189348 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.102558603 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072432505 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069933053 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.094670889 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069614169 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.099932518 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073814892 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071969683 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.09531221 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067902423 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068056793 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.084120972 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067863198 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053402363 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.099423488 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066396769 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065661539 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.099796909 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074610993 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.108672542 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069413748 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.101419536 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069612893 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066858462 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.09941369 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.063899581 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069336916 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.112542627 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.110474252 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069399069 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066120748 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.110316097 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072789749 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066934463 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.085456382 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074955737 seconds)
  done (took 9.951843905 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096770978 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.090804425 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.09935222 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082141044 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.124522064 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.092838364 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.103982004 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.074980936 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068483203 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.114089507 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.068002811 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.104395671 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068588475 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.07626735 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.125290445 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.074895402 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.098085222 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077444507 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071235761 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.136342352 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08165059 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.11135219 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.079952221 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.095907516 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.073931648 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.078972851 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.125322521 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.078714055 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.106328974 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.086007334 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.078869357 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.12432235 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.08455914 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.100715105 seconds)
  done (took 4.399023287 seconds)
done (took 39.353672171 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.289305451 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.522417113 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.290787356 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.257631302 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.330194996 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.312669819 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.299888028 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.290018846 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.696894711 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.288336405 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.531917722 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.086816285 seconds)
done (took 60.431784102 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.311046968 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.429721247 seconds)
    (2/2) benchmarking "String"...
    done (took 1.558916407 seconds)
  done (took 4.22481702 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.661552125 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.212098725 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.555716829 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.292280119 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.294371373 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.62134023 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.008830736 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.195081026 seconds)
  done (took 28.41326962 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.297466263 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.677050864 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.796412858 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.79958037 seconds)
  done (took 18.80622317 seconds)
done (took 61.65081438 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.284740031 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.346735149 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.334016119 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.275152008 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.407036351 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.321954852 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.6415726 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.524053802 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.294757312 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.279093839 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.311614616 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.296251715 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.297751033 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.611721661 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.304838854 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.293201174 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.349680075 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.780884763 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.706950804 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.30289494 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.326401988 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.368625088 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.29660016 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.29349288 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.316473528 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.296135072 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.301422906 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.299068699 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.67931009 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.298575952 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.396021222 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.797385371 seconds)
  done (took 194.870163409 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.293947559 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.340320325 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.436192676 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.343995075 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.814668815 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.491074414 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.431555887 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.819291413 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.314334467 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.313801791 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.550720305 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.29533095 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.618415711 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.259078357 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.301075017 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.372004937 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.593519359 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.611511127 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.309968485 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.543795239 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.302908531 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.43504448 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.363780473 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.510774039 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.322008493 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.308966595 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.33369044 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.308069593 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.484408232 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.528049333 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.305586612 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.339681031 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.899806406 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.153714662 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.298318023 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.318180283 seconds)
  done (took 153.504216314 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.589345851 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.295469105 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.295255458 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.295871513 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.326132927 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.296684988 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.84983134 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.836707913 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.803750546 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.670252956 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.356910394 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.508901571 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.296164943 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.388484421 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.308144981 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.29735851 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.312633279 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.322538769 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.298069133 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.296485614 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.850821318 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.311328157 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.390089274 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.303737584 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.29701674 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.327782561 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.689069902 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.297662867 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.297562243 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.326519795 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.102662275 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.617184921 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.344517825 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.298114324 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.595122267 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.296891381 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.406478742 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.299306918 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.328021935 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.297187668 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.567626428 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.298155103 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.297781446 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.297689272 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.300272869 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.878784899 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.297336991 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.854898744 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.301091266 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.199100237 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.297822367 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.29878631 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.774793306 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.749886204 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.298883367 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.298221475 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.301322213 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.298798021 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.29787132 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.328805002 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.84317777 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.395541981 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.298648542 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.301254162 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.329974603 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.298112271 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.364533121 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.299429037 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.102395737 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.355228616 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.515673426 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.854090336 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.30206603 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.394437168 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.418911526 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.299668926 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.297709773 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.29883073 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.297903615 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.405150275 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.299834241 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.707367557 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.304595347 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.299778122 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.357831888 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.39298662 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.298422712 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.614580974 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.298804555 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.29882878 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.012952021 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.390950265 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.297837586 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.298767535 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.297915555 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.297682253 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.702331119 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.840140442 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.507768418 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.300372942 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.651566892 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.300580183 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.720905328 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.832282081 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.918176981 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.302077721 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.405977685 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.304308213 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.301473139 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.299115393 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.328354776 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.299931 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.358764845 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.300827292 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.696857394 seconds)
  done (took 356.727218609 seconds)
done (took 707.926888748 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.959262628 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.948760641 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.059658373 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.941694873 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.926631266 seconds)
  done (took 11.076680633 seconds)
done (took 12.316901088 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.496826337 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.49860685 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.364490384 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.501295608 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.333363283 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.518459559 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.479447357 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.322039743 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.405817056 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.38156032 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.408968791 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.351767502 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.32872166 seconds)
  done (took 19.633473162 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.608568842 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.612732653 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.360519551 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.61154546 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.337440691 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.62252451 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.493022053 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.503743174 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.485784925 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.312043161 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.310896939 seconds)
  done (took 17.50095612 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.613055236 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.602993265 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.363858068 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.619228876 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.33757695 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.614280703 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.492981981 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.505129825 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.489557665 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.31208841 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.310827122 seconds)
  done (took 17.503189698 seconds)
done (took 55.878153236 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.306584784 seconds)
  done (took 2.549121041 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.344450196 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.507882321 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.325160494 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.310817172 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.307678499 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.307414806 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.312901014 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.30751214 seconds)
  done (took 11.967222697 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.304548493 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.304824737 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.303979294 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.303988466 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.306459865 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.306595081 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.307217734 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.303377734 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.306995241 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.304576807 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.307132081 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.306997633 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.30445675 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.306705863 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.30483896 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.307562843 seconds)
  done (took 22.133940494 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.306816132 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.303586596 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.304808256 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.304376654 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.304672174 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.305110847 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.306904783 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.305855643 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.304821687 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.305726225 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.306340983 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.305477551 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.307524502 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.304966923 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.306874726 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.307544833 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.305420463 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.306477181 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.310623192 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.30499757 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.306763334 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.306476989 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.307412688 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.306594684 seconds)
  done (took 32.593636632 seconds)
done (took 70.48684367 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.37136585 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.999795243 seconds)
  done (took 9.615696432 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.308845105 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.308943884 seconds)
  done (took 3.864366199 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.308667362 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.308646428 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.307354051 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.308552595 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.308690869 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.30852669 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.307628867 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.30876672 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.308681108 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.30805143 seconds)
  done (took 14.328278368 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.308941282 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.308818265 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.306242498 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.308623082 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.308889447 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.306949148 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.309291785 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.308484291 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.308426684 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.306281152 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.309366203 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.306586391 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.309460827 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.306298976 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.30898826 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.30640574 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.306848981 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.306721725 seconds)
  done (took 24.788147705 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.310306798 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.309935681 seconds)
  done (took 3.866703555 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.308228975 seconds)
    (2/7) benchmarking "second"...
    done (took 1.306942738 seconds)
    (3/7) benchmarking "month"...
    done (took 1.306964461 seconds)
    (4/7) benchmarking "year"...
    done (took 1.307185802 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.307058532 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.308505006 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.307289746 seconds)
  done (took 10.398919513 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.311242787 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.483685733 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.565989733 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.914751569 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.311341641 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.314031614 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.16275491 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.314613708 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.316959368 seconds)
  done (took 14.942855756 seconds)
done (took 83.049412653 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.325671203 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.302990539 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.225562894 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.315421887 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.320691661 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.64563761 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.327477136 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.431165882 seconds)
done (took 38.142214879 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.31282283 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.990348882 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.035108237 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.318546817 seconds)
  done (took 11.592101579 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.299651294 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.242930471 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.29282375 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.356783 seconds)
  done (took 18.440241245 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.944744211 seconds)
    (2/2) benchmarking "read"...
    done (took 1.638821576 seconds)
  done (took 4.832802972 seconds)
done (took 42.424712866 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.312338437 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.31177462 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.312868657 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.310903455 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.309930316 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.311754678 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.309288341 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.309704574 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.311539843 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.310973495 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.311851114 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.313011707 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.310952837 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.309571682 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.309211246 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.311235333 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.309772758 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.309399322 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.309429258 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.311389134 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.309645997 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.313186274 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.308542056 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.31002757 seconds)
  done (took 32.707571743 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.312968998 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.311118082 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.312133315 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.312585774 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.310285074 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.312804304 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.312924061 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.309360989 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.312498959 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.312750885 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.310704137 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.311456359 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.313597918 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.310391876 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.312352871 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.311396116 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.313540119 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.310981531 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.31396342 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.312148757 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.313664342 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.310580784 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.311379345 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.313308889 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.310732502 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.311638826 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.314528026 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.312024591 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.314784433 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.312228418 seconds)
  done (took 40.614722791 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.319860556 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.320225953 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.314339298 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.314166923 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.313781304 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.313512402 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.314254513 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.31456431 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.314446193 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.313219916 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.314008555 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.314630542 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.314108446 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.314587311 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.313803408 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.314952747 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.315633758 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.314841706 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.314455206 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.315510385 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.315265131 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.315649881 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.315354763 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.315472145 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.315546029 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.314845425 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.314913677 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.315692148 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.31481382 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.314703299 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.315664204 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.316014419 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.314593686 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.314775457 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.314765901 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.315281739 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.319338438 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.322175823 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.315325468 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.315566286 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.314621778 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.314589785 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.314371901 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.314391317 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.314802395 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.315402185 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.315574422 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.314452817 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.314661406 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.313715534 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.31491078 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.315697847 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.314383826 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.314929254 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.314883835 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.315251504 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.314880315 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.315366349 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.315019955 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.316441271 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.316076042 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.314903134 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.315721267 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.31567391 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.314727206 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.315985049 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.315365947 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.31556816 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.315653768 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.316027693 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.312233277 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.313647557 seconds)
  done (took 95.948005967 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.313425667 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.310508733 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.309864749 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.311052782 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.310926328 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.313167461 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.310055284 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.313996367 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.310956536 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.313450412 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.313345048 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.311678476 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.310843423 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.314538232 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.313579987 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.310346926 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.31429869 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.311466616 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.314793916 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.317733691 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.311657929 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.309649164 seconds)
  done (took 30.122314515 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.312356506 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.311753631 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.308142622 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.311434466 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.310253225 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.310882189 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.311387754 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.310527096 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.309983001 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.308852269 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.308307103 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.311190331 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.307993894 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.308015021 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.307157122 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.307165271 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.310041346 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.308439426 seconds)
  done (took 24.823645409 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.30965061 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.30817252 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.310445822 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.306280487 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.307231464 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.30889996 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.307431507 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.310265813 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.311918883 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.307158526 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.309904504 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.309148606 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.309665015 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.307253057 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.31041997 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.308605568 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.309117101 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.306515258 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.309388204 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.307189008 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.307048396 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.309084296 seconds)
  done (took 30.03808689 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.30981342 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.30846928 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.30679087 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.307619899 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.306542984 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.309380555 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.310120091 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.306552186 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.310164652 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.309483502 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.307555414 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.310019766 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.307155992 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.308398075 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.307815272 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.307635333 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.310655833 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.308369924 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.31006768 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.306845662 seconds)
  done (took 27.416492174 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.311512515 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.310941127 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.312315147 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.311488052 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.311607116 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.312185609 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.310997416 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.311343955 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.311600955 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.311982548 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.311895702 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.312050181 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.312153585 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.311780342 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.312771815 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.311497539 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.312435244 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.312109865 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.313529022 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.31238905 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.31297018 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.312819655 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.312913163 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.312709813 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.313561711 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.312282305 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.313305912 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.312111919 seconds)
  done (took 37.989306975 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.31248601 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.312947242 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.309590076 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.310256702 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.309333754 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.30918999 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.308992611 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.309817256 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.312289701 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.309849203 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.311737531 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.313510264 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.312155629 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.312237084 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.311926155 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.312932238 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.312280115 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.310645956 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.30997302 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.311293598 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.312377597 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.311717776 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.311928337 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.310644083 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.309088146 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.312420144 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.309811533 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.310723277 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.312331363 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.309267573 seconds)
  done (took 40.584479686 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.331478434 seconds)
    (2/2) benchmarking "in"...
    done (took 1.330358966 seconds)
  done (took 3.911085803 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.310942445 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.31253652 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.312785131 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.310269529 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.310555435 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.31387431 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.313037802 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.310694283 seconds)
  done (took 11.744546134 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.316562072 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.313408717 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.314145255 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.313420509 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.313710584 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.316751961 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.324092125 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.331053206 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.317569013 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.317066147 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.323903208 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.324892561 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.32014484 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.317947756 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.317852772 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.318693548 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.314718387 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.315400097 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.314692442 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.315568287 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.315665303 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.319349933 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.32049304 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.311578987 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.319206116 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.328222425 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.323932106 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.314972867 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.317969912 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.322924676 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.317187771 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.311600829 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.316057418 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.315734628 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.31524158 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.316190434 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.327684554 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.33565409 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.323781627 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.315590431 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.314963705 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.311816664 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.319029852 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.319464098 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.319996596 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.316289166 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.314568331 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.311820229 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.316604652 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.320578203 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.319257063 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.317097451 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.312121078 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.321636543 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.317747411 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.324253539 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.331550624 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.320131127 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.326206154 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.328752542 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.330487766 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.325317362 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.318458359 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.314016547 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.327340524 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.339349274 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.324471152 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.329460974 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.312709818 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.314836091 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.325290103 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.330108528 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.326976203 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.31470489 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.315751272 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.316187972 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.317807856 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.314899592 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.324897834 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.337804341 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.315636229 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.314974534 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.327546854 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.339159854 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.317611539 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.314318771 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.314694206 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.31565942 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.319335352 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.330543554 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.332333518 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.3157826 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.318052717 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.318936725 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.319437977 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.316232672 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.317515384 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.319568354 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.312468479 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.315330731 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.316537107 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.322339674 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.32751624 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.315526663 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.317047632 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.325671107 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.315823103 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.318050763 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.326121646 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.315489915 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.316716571 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.31985981 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.324771618 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.314875982 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.32230388 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.327736004 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.316206646 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.319958983 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.316817687 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.317673823 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.328992208 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.345360554 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.316931334 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.317261794 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.32505163 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.328494381 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.317507295 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.323820518 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.317994816 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.314846837 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.315045764 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.322604396 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.317426997 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.321232232 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.316873675 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.322124773 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.31494682 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.317223716 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.317459293 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.321727499 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.321331522 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.320691174 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.321057889 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.323055148 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.317783579 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.322727302 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.326358727 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.319674637 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.321790532 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.320905373 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.315899882 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.317094828 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.321584334 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.317439152 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.320164439 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.318398623 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.320235076 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.317625305 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.318253518 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.317301305 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.318239248 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.320114514 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.324122216 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.317720871 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.325596179 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.320240553 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.315323254 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.317473924 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.317804398 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.320802436 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.31825519 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.32043191 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.324656312 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.327972068 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.318225672 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.317565761 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.323135755 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.318304183 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.317245227 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.317685086 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.32346035 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.328770088 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.317681403 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.326042951 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.317953589 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.317915663 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.318588429 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.320769606 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.32199543 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.317075131 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.324022036 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.324439072 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.330869348 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.328495169 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.320867021 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.321496832 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.32150256 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.320768621 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.324572289 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.317015287 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.316840251 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.318136107 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.320369108 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.318290285 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.322029772 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.317286029 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.320389604 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.317642985 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.317999902 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.317675655 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.317819799 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.321339113 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.321692894 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.314977915 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.317535859 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.317927579 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.319353642 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.315965542 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.319376463 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.321223683 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.317990897 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.317921955 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.327982878 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.316073381 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.322936824 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.321826794 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.320827855 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.319664794 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.317818243 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.32264477 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.321291215 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.328148945 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.338925948 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.32138292 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.328101387 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.338023882 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.320880598 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.324054744 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.318837545 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.315983271 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.324009492 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.326143924 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.318236413 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.319326197 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.318940158 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.321402767 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.319416876 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.3294155 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.317530327 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.321649631 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.31843765 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.323380018 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.316070382 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.322442808 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.322584165 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.321945272 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.324491158 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.319644889 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.320139099 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.323818221 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.320030173 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.318994931 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.319717338 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.326301433 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.328365832 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.327395295 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.322293338 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.324988149 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.323516335 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.323908149 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.323255818 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.319352591 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.32202783 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.334185179 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.32857952 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.32992126 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.324454919 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.319472401 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.328993436 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.324306911 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.32680875 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.32300277 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.323065401 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.323851095 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.323496312 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.318095076 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.323011433 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.320466189 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.32431792 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.324358003 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.32475283 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.320133725 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.323949656 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.320717223 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.321916032 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.320570035 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.324014765 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.321510655 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.325945122 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.325206739 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.322711611 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.323869995 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.330654538 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.34024105 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.324606202 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.322687427 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.323554574 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.323731042 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.324149619 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.321546146 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.327690603 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.327839687 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.326150574 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.33237048 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.326096361 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.33244003 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.320318319 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.328483636 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.328263285 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.31786527 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.322486438 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.323380479 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.321248717 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.331392324 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.337857125 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.32488542 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.32470451 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.320647007 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.321254755 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.321179626 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.321389175 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.322418182 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.321483616 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.333934495 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.341122086 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.326363309 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.326162325 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.319107625 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.321450586 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.321570962 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.322831057 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.327355581 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.320993884 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.324786132 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.323562477 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.324407646 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.31991044 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.321288777 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.321134133 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.317870863 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.320979576 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.330261724 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.340675904 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.325005403 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.321224735 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.331935869 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.321005849 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.331514162 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.336470882 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.324685728 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.320493196 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.321564079 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.325195507 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.32271515 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.324809088 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.321189419 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.324574661 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.324209059 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.321320854 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.325693803 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.32523492 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.321556031 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.323710014 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.333030334 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.34246803 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.324794037 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.324574264 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.319703908 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.324562163 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.324922054 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.321576576 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.32202446 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.326841614 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.334441127 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.32762826 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.325527139 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.320693702 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.324026895 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.321060009 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.321898147 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.320324025 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.320546723 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.32457909 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.324428194 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.321256985 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.327730083 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.321305969 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.324558928 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.325160667 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.325759562 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.334969243 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.321594252 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.325426429 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.321568809 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.321834465 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.324929468 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.323259937 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.323551489 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.324847403 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.321774037 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.325756355 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.330023608 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.329532013 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.326896693 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.324843909 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.322844259 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.325330747 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.324243346 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.322021607 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.322306756 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.321751553 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.324874537 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.322606295 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.324920591 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.323947326 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.321472301 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.325085519 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.321704573 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.326702292 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.330355919 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.325270581 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.318628135 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.321260298 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.322063426 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.323510853 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.325141049 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.332661167 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.32766529 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.334203912 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.331680377 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.325035533 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.325467096 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.32733218 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.331542 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.32442084 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.327247279 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.322201158 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.327135302 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.324629533 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.32772044 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.321882973 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.332201298 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.325207745 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.327035104 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.334192604 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.341281002 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.322690671 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.327332611 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.330491789 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.325959754 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.321221032 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.322536967 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.324785474 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.332902318 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.343280505 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.323801447 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.328225138 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.324178386 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.327728235 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.326572427 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.324124764 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.327143434 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.320651619 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.327338509 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.323425558 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.323309774 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.320623331 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.326098062 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.326331032 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.329429737 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.333585881 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.321303502 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.327796705 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.326900724 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.327043955 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.323457122 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.324484904 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.321400185 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.321949762 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.32711662 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.324076113 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.327649087 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.329601049 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.327311336 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.327586242 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.324642027 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.324255208 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.329861532 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.336465429 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.330060377 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.321934621 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.327755192 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.328686777 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.329862701 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.324767925 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.325619009 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.328039813 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.329450634 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.325302456 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.325095683 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.325175114 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.330803844 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.342086514 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.341968741 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.328279426 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.328992098 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.332130177 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.325826338 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.322632717 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.325048553 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.331514581 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.331659519 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.332183318 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.326235763 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.335508466 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.344546325 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.330246431 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.330075943 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.331559172 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.335269959 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.331053582 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.327084999 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.326928604 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.332662117 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.342846957 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.326455918 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.337422743 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.355726846 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.345124445 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.329824739 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.327101277 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.330291323 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.327522207 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.332153934 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.326155682 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.32669247 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.327092374 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.327227705 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.331896148 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.335050692 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.331704467 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.327012111 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.327135282 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.330617488 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.331542576 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.325528338 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.326785294 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.328159812 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.327345988 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.327333628 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.328087727 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.331721035 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.341708299 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.340455564 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.327995775 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.328073959 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.326045438 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.333926042 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.334221937 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.34068109 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.334759893 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.328625049 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.328080069 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.332803055 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.327824786 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.325407384 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.331645513 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.330891752 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.331065688 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.325421084 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.342297141 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.336612412 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.336400719 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.331446364 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.329050613 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.32914279 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.332497118 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.328324434 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.329495165 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.333207783 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.331679843 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.332446075 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.328706196 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.328569642 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.334879038 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.336086321 seconds)
  done (took 790.451412001 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.327768511 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.326633049 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.326732663 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.326889002 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.326964402 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.326109115 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.326994898 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.327105462 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.326418641 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.32702027 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.327192036 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.327188573 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.327065618 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.32736132 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.327124009 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.327439685 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.327211993 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.327695685 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.327836621 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.326872645 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.327163038 seconds)
  done (took 29.135050238 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.330286638 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.327954027 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.328790245 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.329590974 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.328676773 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.332015555 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.328434439 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.331362527 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.331878289 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.327629473 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.332030409 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.331634102 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.328717759 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.327463934 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.329509486 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.332086282 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.331453668 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.329465548 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.331975823 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.328526271 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.331175805 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.329337755 seconds)
  done (took 30.527573889 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.332196669 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.331395528 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.33490252 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.328526943 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.333168135 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.329015639 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.33155138 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.33201218 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.332130617 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.334777456 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.33403258 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.336628076 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.340272574 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.336767601 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.337424378 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.331866616 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.47696963 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.332462802 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.332522758 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.332854201 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.329096788 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.340758613 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.330052704 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.330852943 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.33481146 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.332742718 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.332722883 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.333091585 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.332269655 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.337356519 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.336066458 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.333975517 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.335459086 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.337278543 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.335801034 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.337562749 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.337561909 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.333801255 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.331271315 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.33345377 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.345748111 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.350651747 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.334179778 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.343132466 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.333999746 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.333956916 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.339834643 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.340207162 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.332103066 seconds)
  done (took 66.821557467 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.334328413 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.33361145 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.331338333 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.333825638 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.33481326 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.334467955 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.334432504 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.334300691 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.33092141 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.331726553 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.334729824 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.331076755 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.331685691 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.334000519 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.334198179 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.33148818 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.333241921 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.332193106 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.332853315 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.332571195 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.332710549 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.33452073 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.336056868 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.332530773 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.334947925 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.3333126 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.332355948 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.334944066 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.332677751 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.332989236 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.335516607 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.336563313 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.335969106 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.333057444 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.332958439 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.335216087 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.335981204 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.332528475 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.33472936 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.332956825 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.335275021 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.335100349 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.335467576 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.336182517 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.332903242 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.333485501 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.334050839 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.332882338 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.333939947 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.336091256 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.336587774 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.334427367 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.336553109 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.333452712 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.336826873 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.336583049 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.333706448 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.333951661 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.336301404 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.333859408 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.333936128 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.336678071 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.334277672 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.33686737 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.33696571 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.33446808 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.335092364 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.337599765 seconds)
  done (took 91.99983142 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.336939692 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.336848283 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.336401694 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.336829841 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.337236058 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.336916933 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.337726255 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.337808331 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.337827044 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.337701987 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.338971452 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.338229166 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.336942724 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.338148795 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.337184581 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.337851205 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.339284206 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.338428716 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.338401943 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.339067544 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.337879917 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.338112007 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.338097719 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.33865516 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.339745477 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.338566378 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.338716808 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.338392015 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.338299532 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.338830422 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.339588307 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.339399316 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.338179658 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.338830698 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.339859401 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.338455923 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.337906761 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.339674683 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.338250611 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.339162069 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.337604697 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.338747026 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.339771599 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.338807547 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.339111889 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.339652436 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.338443432 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.339228358 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.339314357 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.338633722 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.339684324 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.339028975 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.340392751 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.339231115 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.339330505 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.33951646 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.33948194 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.339411907 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.339409268 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.338853108 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.339894913 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.339873094 seconds)
  done (took 84.267970253 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.339746014 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.340185771 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.336566126 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.337425777 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.340501477 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.337561823 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.340316389 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.340127242 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.340666208 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.341057608 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.340467267 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.337609913 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.337786861 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.339473898 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.337588926 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.338336347 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.338309779 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.338116437 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.341553194 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.338750798 seconds)
  done (took 28.057643529 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.338357246 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.341188176 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.338782599 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.339201246 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.341134786 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.339294753 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.341939773 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.341405224 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.340067251 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.341095378 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.341704966 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.34167016 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.340129162 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.338366062 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.341637039 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.339303998 seconds)
  done (took 22.722368211 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.338938475 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.341967002 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.340988493 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.342793677 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.340235211 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.339534048 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.342483118 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.338910423 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.338783398 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.342510798 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.342128867 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.3430937 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.34245469 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.34291836 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.339584819 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.342404205 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.339959752 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.340467238 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.342495844 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.342778443 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.340423602 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.339605628 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.343219927 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.342455789 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.340566194 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.340894342 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.340273461 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.340494203 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.340495506 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.342641431 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.340621643 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.341343911 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.341165609 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.339457749 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.342504651 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.3402795 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.342823096 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.344256353 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.343920101 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.344180942 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.342942896 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.341738675 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.343455575 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.343361686 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.34079046 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.344661439 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.342245041 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.341774736 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.341874707 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.341928747 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.343225619 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.343416155 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.34498602 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.344872452 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.34377208 seconds)
  done (took 75.081336898 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.344999078 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.344433119 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.340248707 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.345250447 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.345676324 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.341511145 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.34479101 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.343055579 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.34222008 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.345648278 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.344015818 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.344780366 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.342434433 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.344774816 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.343141654 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.345130445 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.343385628 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.342734926 seconds)
  done (took 25.468901118 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.344029848 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.342561313 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.346018712 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.342825462 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.342745478 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.347638067 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.342818293 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.346057184 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.345414495 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.344150956 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.343081514 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.346356337 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.344548582 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.345426246 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.344241629 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.343183763 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.346629607 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.344739001 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.343485481 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.343913503 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.346411774 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.346345437 seconds)
  done (took 30.864403934 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.349210672 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.349050328 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.363947971 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.385336142 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.377237007 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.348808098 seconds)
  done (took 9.455633569 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.345072669 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.346024939 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.344254494 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.347653769 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.346103238 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.342702904 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.343932494 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.34382801 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.346205987 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.344891534 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.343672883 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.345490337 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.346138393 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.344353498 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.346496907 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.345685695 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.344327689 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.343591293 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.34497878 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.346543903 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.344911243 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.346569701 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.344508912 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.344035941 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.344520715 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.345719767 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348553109 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.346110281 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.344642484 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.346421027 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.34786195 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.344979879 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348010042 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.346151781 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348184944 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.347530663 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.345272797 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348518251 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.347655695 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.346039568 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.348323963 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348064623 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348243643 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.345720971 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.349066994 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.346241448 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.345287078 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.346131063 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.346641531 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.349034209 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.348867319 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.347130191 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348648758 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.348344756 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.349053972 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348956402 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.346320025 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.346423071 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.347715955 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.346215046 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.346091194 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.350225665 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.346812003 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.34681849 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.349055399 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.346529875 seconds)
  done (took 90.149065655 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.346641487 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.346995413 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.346549091 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.348599714 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.34817682 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.347068028 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.346416125 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.346228724 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348126045 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.347560537 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.349792042 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.347505573 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.347524284 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.346746545 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.347943788 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.348311241 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.347812673 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.348313816 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.347483963 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.350736484 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.34810227 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.347611347 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.34832046 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.347731373 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.347442745 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.350076619 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.347295366 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.347897537 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.348982364 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.348445349 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.348390635 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.349270658 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.348792203 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.349572978 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348190583 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.348477027 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.348581589 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.348083603 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.349031649 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.351189876 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.348313636 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.351535698 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.349163129 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.34915623 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.349430548 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348925003 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.349528257 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.349809258 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.349015005 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.348990276 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.34918318 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.349832767 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.350719096 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.349534342 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.349551464 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.348849819 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.349716486 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.349775627 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.349876614 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.351942538 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.349915611 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.349928271 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.352890417 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.350358325 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.350540745 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.349679335 seconds)
  done (took 90.31000107 seconds)
done (took 1842.461944225 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.386677878 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.446173215 seconds)
  done (took 14.121041134 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.516412603 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.470421535 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.354298029 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.380649693 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.354933046 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.352094426 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.370065523 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.354916031 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.354221641 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.355076209 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.354178201 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.540888747 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.407160078 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.355870759 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.354657462 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.447474304 seconds)
  done (took 43.614271209 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.381111698 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.36123741 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.463565718 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.374683414 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.38144618 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.527276935 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.411291157 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.360096088 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.512502299 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.39558389 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.757820085 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.38109506 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.359262272 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.355113005 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.378511608 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.528728318 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.582508541 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.762989952 seconds)
  done (took 30.565130817 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.755106141 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.378565763 seconds)
  done (took 9.423988363 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.351961154 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.367741409 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.383004057 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.381418453 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.367032156 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.400607613 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.393385682 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.405465286 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.368818926 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.379891722 seconds)
  done (took 65.091086588 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.377950885 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.359871347 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.360300926 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.358634361 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.349564828 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.352238984 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.358141935 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.35605409 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.604608162 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.461475164 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.366145336 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.35633974 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.351655678 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.352488732 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.345729735 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.383391165 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.485524613 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.345851273 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.345818994 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.355895831 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.351467531 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.430802593 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.391831642 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.345945006 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.461784943 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.613173852 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.351591716 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.35688051 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.484282927 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.341211258 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.345866623 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.346849205 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.348514717 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.90286601 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.808945612 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.353854947 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.365722634 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.352381515 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.339080127 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.463678045 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.343140447 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.347439811 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.334659335 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.773205585 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.494220267 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.445320977 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.463754174 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.342094865 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.338646703 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.392562628 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.336728808 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.338658453 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.364060703 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.072528262 seconds)
  done (took 111.064673924 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.370185766 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.81651117 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.490872368 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.341067253 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.017939927 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.971051041 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.325249521 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.574061932 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.3549303 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.318426573 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.64901436 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.78766338 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.316793476 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.32295564 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.935700713 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.345393215 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.307884716 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.064359069 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.305973513 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.30391658 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.714282181 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.320499216 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.302542332 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.459629784 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.338714252 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.736095515 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.627395703 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.683776077 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.304712954 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.298030861 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.73028519 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.307243035 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.296294952 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.300297258 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.556848201 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.622867162 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.599915528 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.297080875 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.325466217 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.295647406 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.331609175 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.721695873 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.606017451 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.293621516 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.292583157 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.725253683 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.291038808 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.29585967 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.299685819 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.486776962 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.003097048 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.29223518 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.637654084 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.292242811 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.547477832 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.291459137 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.378832172 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.748048989 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.288444009 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.316548754 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.306997301 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.28985457 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.292189744 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.292576284 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.292371454 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.605032282 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.423259116 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.288913083 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.604038665 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.713786061 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.290504127 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.777160127 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.201569991 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.297105878 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.371781892 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.288152637 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.828306569 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.746143159 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.316492688 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.287547028 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.58877806 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.288852249 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.593791541 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.300075129 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.290145265 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.708458113 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.305281673 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.327444107 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.287974104 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.289359479 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.911149597 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.289387736 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.540276634 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.338558082 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.287674178 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.287510219 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.291614177 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.28846201 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.302159709 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.295594666 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.776806528 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.292836563 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.567071185 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.306169845 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.289441764 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.289235702 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.291636682 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.290389791 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.501889398 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.859689084 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.289856295 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.288100279 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.287565399 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.286775884 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.421817442 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.28406289 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.561425139 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.284078944 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.2819521 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.286104442 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.964114429 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.287199564 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.2820467 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.28427212 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.103660389 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.487736038 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.299546025 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.294843841 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.2828473 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.296448899 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.509609172 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.283046284 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.359489882 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.283939401 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.955716575 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.318292063 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.306276927 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.65289098 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.287596631 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.125379134 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.303736632 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.283638591 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.580728686 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.544648217 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.336692459 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.286908658 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.296339705 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.936562011 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.290703195 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.423437656 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.299269976 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.314145447 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.479833162 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.65757418 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.286647141 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.837969257 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.285054544 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.490340977 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.284557884 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.592472306 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.737490612 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.285734864 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.284823285 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.953421393 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.961692038 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.922886789 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.284748375 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.60385474 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.252237542 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.734871777 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.284677162 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.28490058 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.711189088 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.286313266 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.284626628 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.285597486 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.28556648 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.430975629 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.458258853 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.982679393 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.292116423 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.714988503 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.286087539 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.28504118 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.289323571 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.285052555 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.637549747 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.361850055 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.291003525 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.287536932 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.286977342 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.284792301 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.726894255 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.190796271 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.285825712 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.436200451 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.881519184 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.287560019 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.288728246 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.956014503 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.509666758 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.764783819 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.340991632 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.563503315 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.285949486 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.325360168 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.875088503 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.292322454 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.770321737 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.287851633 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.286913931 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.842894223 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.289692612 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.634946987 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.286669333 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.287704433 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.799658527 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.289041798 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.291116936 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.52315001 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.286755405 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.54153994 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.287333668 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.302124962 seconds)
  done (took 1099.630483217 seconds)
done (took 1374.798739611 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.286857238 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.290462385 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.269568006 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.289929599 seconds)
  done (took 26.363184766 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.292223502 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.293636988 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.290412326 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.294037395 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.290571499 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.293605638 seconds)
  done (took 8.98157437 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.30283474 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.289831976 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.288987997 seconds)
  done (took 19.108911641 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.494025689 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.475654388 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.636829496 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.293667607 seconds)
  done (took 10.126933053 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.290307277 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.28946459 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.290765532 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.291982379 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.292812109 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.294258463 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.291251281 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.291868294 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.293068875 seconds)
  done (took 12.851995283 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.890158047 seconds)
done (took 83.549309487 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.311204081 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.305839696 seconds)
    (3/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.310839336 seconds)
    (4/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.155808706 seconds)
    (5/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.863991385 seconds)
    (6/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.292277097 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.364199952 seconds)
    (8/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.017885862 seconds)
    (9/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.291356758 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.551473459 seconds)
    (11/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.817513807 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.326987721 seconds)
    (13/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.301291438 seconds)
    (14/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.402390815 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.3119069 seconds)
    (16/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.860709435 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.13461501 seconds)
    (18/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.596484002 seconds)
    (19/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.459565904 seconds)
    (20/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.451163119 seconds)
    (21/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.641703903 seconds)
    (22/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.517894808 seconds)
    (23/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.30416456 seconds)
    (24/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.411920735 seconds)
    (25/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.370359833 seconds)
    (26/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.99929266 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.575286342 seconds)
    (28/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.29125811 seconds)
    (29/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.348114221 seconds)
    (30/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.272073795 seconds)
    (31/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.291556593 seconds)
    (32/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.351873594 seconds)
    (33/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.616687363 seconds)
    (34/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.384394299 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.388983286 seconds)
    (36/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.368931152 seconds)
    (37/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.07692971 seconds)
    (38/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.292645516 seconds)
    (39/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.052477748 seconds)
    (40/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.590272537 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.399182172 seconds)
    (42/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.693475273 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.398915588 seconds)
    (44/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.548323132 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.554408653 seconds)
    (46/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.293236266 seconds)
    (47/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.339306728 seconds)
    (48/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.304921508 seconds)
    (49/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.274880183 seconds)
    (50/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.454000287 seconds)
    (51/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.302549488 seconds)
    (52/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.314746157 seconds)
    (53/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.344543267 seconds)
    (54/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.84106561 seconds)
    (55/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.423843202 seconds)
    (56/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.281423285 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.632120206 seconds)
    (58/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.455926683 seconds)
    (59/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.846628082 seconds)
    (60/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.308898771 seconds)
    (61/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.374097377 seconds)
    (62/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.632918912 seconds)
    (63/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.373542174 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.775548057 seconds)
    (65/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.460031685 seconds)
    (66/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.526011333 seconds)
    (67/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.880568448 seconds)
    (68/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.304086937 seconds)
    (69/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.465317849 seconds)
    (70/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.316152403 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.682245566 seconds)
    (72/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.448371639 seconds)
    (73/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.532711214 seconds)
    (74/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.629148507 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.286912202 seconds)
    (76/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.465185861 seconds)
    (77/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.274363004 seconds)
    (78/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.718901444 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.906578171 seconds)
    (80/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.585882266 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.603104598 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 5.434896232 seconds)
    (83/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.422469809 seconds)
    (84/309) benchmarking ("sort", Float64, false)...
    done (took 5.537547698 seconds)
    (85/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.351436015 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.652452121 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.39993153 seconds)
    (88/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.312731578 seconds)
    (89/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.896828915 seconds)
    (90/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.291849881 seconds)
    (91/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.303138409 seconds)
    (92/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.100062054 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.292097444 seconds)
    (94/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.471299076 seconds)
    (95/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.569900317 seconds)
    (96/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.371782386 seconds)
    (97/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.352500399 seconds)
    (98/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.522300622 seconds)
    (99/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.762554246 seconds)
    (100/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.594856937 seconds)
    (101/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.504200444 seconds)
    (102/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.272011828 seconds)
    (103/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.996887592 seconds)
    (104/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.308257928 seconds)
    (105/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.701445361 seconds)
    (106/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.302775743 seconds)
    (107/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.293894777 seconds)
    (108/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.608399991 seconds)
    (109/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.316704543 seconds)
    (110/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.316363146 seconds)
    (111/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.55828328 seconds)
    (112/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.985410276 seconds)
    (113/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.277986047 seconds)
    (114/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.391386872 seconds)
    (115/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.300022308 seconds)
    (116/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.98881458 seconds)
    (117/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.500820695 seconds)
    (118/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.421167657 seconds)
    (119/309) benchmarking ("sort", Bool, false)...
    done (took 1.798559659 seconds)
    (120/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.313595479 seconds)
    (121/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.547090047 seconds)
    (122/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.487513424 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.312693991 seconds)
    (124/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.372052751 seconds)
    (125/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.375961731 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.275660684 seconds)
    (127/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.054438277 seconds)
    (128/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.075387903 seconds)
    (129/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.553887726 seconds)
    (130/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.3369504 seconds)
    (131/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.063608377 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.698022128 seconds)
    (133/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.367553281 seconds)
    (134/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.974616948 seconds)
    (135/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.297763794 seconds)
    (136/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.608572003 seconds)
    (137/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.632666142 seconds)
    (138/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.113042549 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.39862552 seconds)
    (140/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.484834879 seconds)
    (141/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.278441509 seconds)
    (142/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.310256307 seconds)
    (143/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.278478622 seconds)
    (144/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.579772398 seconds)
    (145/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.712014051 seconds)
    (146/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.319848465 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.189484831 seconds)
    (148/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.417278644 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.998843775 seconds)
    (150/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.786911197 seconds)
    (151/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.319612341 seconds)
    (152/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.355592092 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.122506359 seconds)
    (154/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.312164432 seconds)
    (155/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.63922429 seconds)
    (156/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.299217633 seconds)
    (157/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.835320866 seconds)
    (158/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.518118479 seconds)
    (159/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.327640395 seconds)
    (160/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.896126007 seconds)
    (161/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.283196848 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.069099404 seconds)
    (163/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.320675496 seconds)
    (164/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.318610894 seconds)
    (165/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.319851086 seconds)
    (166/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.636384698 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.140358312 seconds)
    (168/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.357905733 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.28717379 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.112301186 seconds)
    (171/309) benchmarking ("sort", BigInt, false)...
    done (took 6.300229687 seconds)
    (172/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.855474389 seconds)
    (173/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.874719153 seconds)
    (174/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.33731753 seconds)
    (175/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.331474378 seconds)
    (176/309) benchmarking ("sort", Int8, false)...
    done (took 4.309747134 seconds)
    (177/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.806313218 seconds)
    (178/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.377120757 seconds)
    (179/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.31965774 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.646447797 seconds)
    (181/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.589893188 seconds)
    (182/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.33765591 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.647111638 seconds)
    (184/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.854853542 seconds)
    (185/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.31384864 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.344222805 seconds)
    (187/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.350583317 seconds)
    (188/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.353277134 seconds)
    (189/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.35792525 seconds)
    (190/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.299397898 seconds)
    (191/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.760224306 seconds)
    (192/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.398323211 seconds)
    (193/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.64041229 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.846872002 seconds)
    (195/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.320845556 seconds)
    (196/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.081840985 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.368931558 seconds)
    (198/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.396947031 seconds)
    (199/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.012920719 seconds)
    (200/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.511975896 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.10751759 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.918938364 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.483938241 seconds)
    (204/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.945708887 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.039432215 seconds)
    (206/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.299705053 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.29954937 seconds)
    (208/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.551160309 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.498737972 seconds)
    (210/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.438610888 seconds)
    (211/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.821213644 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.703822071 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.403345295 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.368639597 seconds)
    (215/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.317884137 seconds)
    (216/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.077907069 seconds)
    (217/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.560451009 seconds)
    (218/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.282846626 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.317226345 seconds)
    (220/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.280705464 seconds)
    (221/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.436496071 seconds)
    (222/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.301554861 seconds)
    (223/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.360297996 seconds)
    (224/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.31694485 seconds)
    (225/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.563293174 seconds)
    (226/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.479007274 seconds)
    (227/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.761971338 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.300767049 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.486381988 seconds)
    (230/309) benchmarking ("sort", Float32, false)...
    done (took 5.286855972 seconds)
    (231/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.315316229 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.302641362 seconds)
    (233/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.359634264 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.284057615 seconds)
    (235/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.385393963 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.32012734 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.170018653 seconds)
    (238/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.31339343 seconds)
    (239/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.314399714 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.869054401 seconds)
    (241/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.521771402 seconds)
    (242/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.891571622 seconds)
    (243/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.39411486 seconds)
    (244/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.291052263 seconds)
    (245/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.297734584 seconds)
    (246/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.307872104 seconds)
    (247/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.502917129 seconds)
    (248/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.289797407 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.703617376 seconds)
    (250/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.512153705 seconds)
    (251/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.669301784 seconds)
    (252/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.678356877 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.103923836 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.406337953 seconds)
    (255/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.370086642 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.648384329 seconds)
    (257/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.812423698 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.32413539 seconds)
    (259/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.302192457 seconds)
    (260/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.308047268 seconds)
    (261/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.902793757 seconds)
    (262/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.425954696 seconds)
    (263/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.282458507 seconds)
    (264/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.305144933 seconds)
    (265/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.482061126 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.684633274 seconds)
    (267/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.000118168 seconds)
    (268/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.298235188 seconds)
    (269/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.046639079 seconds)
    (270/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.585562383 seconds)
    (271/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.997056135 seconds)
    (272/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.815659952 seconds)
    (273/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.406162906 seconds)
    (274/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.772438305 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.694990066 seconds)
    (276/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.129371711 seconds)
    (277/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.492524154 seconds)
    (278/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.28718976 seconds)
    (279/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.540914073 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.377387494 seconds)
    (281/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.042177996 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.377159287 seconds)
    (283/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.393901107 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.40488134 seconds)
    (285/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.305184321 seconds)
    (286/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.599144223 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.609649479 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.344912 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.088360638 seconds)
    (290/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.5877585 seconds)
    (291/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.747403627 seconds)
    (292/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.320875063 seconds)
    (293/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.392641447 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.337538863 seconds)
    (295/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.311902475 seconds)
    (296/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.817829541 seconds)
    (297/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.855229483 seconds)
    (298/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.728480898 seconds)
    (299/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.018203916 seconds)
    (300/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.479489447 seconds)
    (301/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.322933158 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.844513099 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.340348121 seconds)
    (304/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.299592449 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.338042039 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.163616658 seconds)
    (307/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.305231385 seconds)
    (308/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.76826745 seconds)
    (309/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.302908434 seconds)
  done (took 898.855328196 seconds)
done (took 900.086826279 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.328991436 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.322905309 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.306458842 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.328047614 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.418651608 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.336634967 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.318056143 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.309586994 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.353753742 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.355842749 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.30567507 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.334978189 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.308218846 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.307254473 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.306339933 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.320264313 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.237652709 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.308245446 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.324583359 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.317330271 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.324154426 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.306726506 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.357332795 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.335379433 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.311751269 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.310132057 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.311777726 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.327716984 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.419366904 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.311205275 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.311485096 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.319396291 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.238093337 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.307350497 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.302697659 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.326949729 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.321052373 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.317356943 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.312006088 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.340676329 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.605995024 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.308778564 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.309452775 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.310085743 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.308057298 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.313028529 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.309817848 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.315904267 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.321759325 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.32242362 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.602646463 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.32315075 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.312268979 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.309906336 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.319706758 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.309322048 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.312871319 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.324826898 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.329163678 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.324855174 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.23277274 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.31298703 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.311923274 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.325108075 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.316883282 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.638876078 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.30474072 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.313413813 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.611472624 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.315052965 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.639264501 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.318577526 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.311418519 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.324677594 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.342167913 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.244183562 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.305613212 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.308759761 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.317968045 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.308504734 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.320610016 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.32367988 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.315143491 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.311303689 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.325105387 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.339938985 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.320973885 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.312156293 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.319744072 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.330788806 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.318261068 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.323596841 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.314385337 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.307054918 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.320274886 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.314314912 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.313646433 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.314539968 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.316645834 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.321377327 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.611819306 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.328865397 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.307979938 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.308052009 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.310605434 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.324990847 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.615005505 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.311928744 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.334358759 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.358501038 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.313150929 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.238298436 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.316097328 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.328644581 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.321459253 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.315785197 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.307285325 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.238174039 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.612190861 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.326823651 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.313963842 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.310668019 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.327734201 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.31415775 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.309588748 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.249561014 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.314336292 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.326692149 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.433655807 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.32286861 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.344614518 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.311270609 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.315817625 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.341196644 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.328190064 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.344866478 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.316135598 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.328838783 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.32940132 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.309720736 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.324464088 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.324134207 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.31431241 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.318937223 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.307893929 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.342752853 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.326573625 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.326434565 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.33453867 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.434330915 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.31134912 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.241532278 seconds)
done (took 220.021843378 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.376383725 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.312366633 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.407748582 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.310603914 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.414454796 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.414314523 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.308171416 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.309315063 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.307909869 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.694630195 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.308425825 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.308466507 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.315799158 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.308281605 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.397879669 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.311206335 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.309290989 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.657176797 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.311406645 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.38585099 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.313620476 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.309189423 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.310805557 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.697345613 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.317165329 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.318369262 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.385736347 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.311289266 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.662743763 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.308438839 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.311988665 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.661854753 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.405815344 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.329224394 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.321483682 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.319177787 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.414913355 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.326400329 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.396433611 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.396128255 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.409539224 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.349968729 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.309561555 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.316518804 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.313808436 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.312818779 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.311283011 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.338172636 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.317221785 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.312019 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.659355648 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.322333091 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.319946167 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.311159729 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.310666149 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.334935148 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.311606528 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.314464027 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.406827429 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.315050923 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.379867035 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.700808048 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.696419736 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.313350099 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.315660984 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.310817092 seconds)
  done (took 147.150144242 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.384157567 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.39042509 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.425588008 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.318972574 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.369066518 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.431579059 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.318925997 seconds)
  done (took 10.888995366 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.324383618 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.313848356 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.366411009 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.36766279 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.314757822 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.466183015 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.313062487 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.330160191 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.311703988 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.371178812 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.315163785 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.314043409 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.321171085 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.31911723 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.366649498 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.331187886 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.433541208 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.319861642 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.315531744 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.474748514 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.312970403 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.322182215 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.370472254 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.329701441 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.315524967 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.324958573 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.888851644 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.315215278 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.313087701 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.316220728 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.312763808 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.358286044 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.315614274 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.314591271 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.313575041 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.43710399 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.315650652 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.313955014 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.31658454 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.319305556 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.315972271 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.31692502 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.316103447 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.313533079 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.316641609 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.343858873 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.315875178 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.316414031 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.315852931 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.317099868 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.370759917 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.317001395 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.313363696 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.313647699 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.376613522 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.323021518 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.317832408 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.314231549 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.318062028 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.314243728 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.477466116 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.368113628 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.316513416 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.368903954 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.317266263 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.317098905 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.317376367 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.316947024 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.374720717 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.316843019 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.369796669 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.314618155 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.476262909 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.345327434 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.318862688 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.324865563 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.323955766 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.316727939 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.314760537 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.326661161 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.314841478 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.323023324 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.327039983 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.315062533 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.314698332 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.424823597 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.431299791 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.315968872 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.3344139 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.329249796 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.316110624 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.374612762 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.31886013 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.31593595 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.374563183 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.436490794 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.377129014 seconds)
  done (took 151.704340986 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.328117273 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.33123817 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.323921747 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.33841885 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.322991487 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.323056079 seconds)
  done (took 9.222247939 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.325212194 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.320457778 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.31902682 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.318628271 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.320341461 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.31991617 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.320881696 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.326468442 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.322180604 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.32118959 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.320165426 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.321044827 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.320062987 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.320960248 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.319966939 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.318773697 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.321345113 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.318134692 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.319822483 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.320155013 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.428753855 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.320060845 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.320771019 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.326387601 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.323463027 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.320198951 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.33180294 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.319852129 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.320479791 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.332799542 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.324467312 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.321054049 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.326058531 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.330533309 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.324637079 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.326976146 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.323872124 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.321825482 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.318323619 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.322136376 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.321940422 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.321570285 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.321364627 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.321992053 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.326503147 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.329895068 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.32580329 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.332818903 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.321767953 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.32231305 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.32303205 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.321375971 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.321316095 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.322502546 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.32869005 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.330956011 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.326198781 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.321849941 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.321825718 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.328148828 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.32298541 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.32211667 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.328128135 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.326050675 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.320971125 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.323482654 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.327955873 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.326316124 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.323492823 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.323163105 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.323605482 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.321032201 seconds)
  done (took 97.63840755 seconds)
done (took 417.850617062 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.483867897 seconds)
  done (took 7.742277524 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.325293488 seconds)
  done (took 7.584760017 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.705121739 seconds)
  done (took 19.965868634 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.345851879 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.414034905 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.323824448 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.323349983 seconds)
  done (took 26.666259883 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.482598211 seconds)
  done (took 7.741490203 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.32319074 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.327400209 seconds)
  done (took 13.909779821 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.897208931 seconds)
  done (took 8.155368647 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.159414714 seconds)
  done (took 8.418657038 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.331805881 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.331641031 seconds)
  done (took 13.93177897 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.301001954 seconds)
  done (took 7.56078324 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.024205622 seconds)
  done (took 8.284474357 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.326194306 seconds)
  done (took 7.585938437 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.379114306 seconds)
  done (took 7.638328047 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.657990258 seconds)
  done (took 8.917572459 seconds)
done (took 155.362808912 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.320896238 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.323194005 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.323097771 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.324178886 seconds)
  done (took 26.550438869 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.357284849 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.358075006 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.359485068 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.368414243 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.360208406 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.356955378 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.349799229 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.349953002 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.367897511 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.361280164 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.359889521 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.360599608 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.356766182 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.350576823 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.359244972 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.359104598 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.368166757 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.3592605 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.350851959 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.360948345 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.324837873 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.368477858 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.361052581 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.325441447 seconds)
  done (took 33.814194427 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.52671911 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.401843625 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.482902542 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.380924512 seconds)
  done (took 7.052721405 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.376572553 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.377221847 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.390790656 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.42806093 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.459089347 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.387379916 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.352894316 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.347063651 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.332201722 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.378548181 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.453163572 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.394345517 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.461036375 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.324965337 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.521911331 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.325707663 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.325079946 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.377105319 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.430002476 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.444643869 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.32570519 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.377828139 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.381391887 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.3946874 seconds)
  done (took 34.629127236 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.324667568 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.332179046 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.331294282 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.326416026 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.325304972 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.325202441 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.33122036 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.326781113 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.346116722 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.325858588 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.324389013 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.32630909 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.324986472 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.324417893 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.324130977 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.339304557 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.338859433 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.326211709 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.329349958 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.332475103 seconds)
  done (took 27.847643865 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.324559039 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.178674383 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.675598637 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.579495494 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.323690508 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.324637825 seconds)
  done (took 27.669764566 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.395160168 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.51549494 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.331539794 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.65977305 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.735160417 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.332265296 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.331732349 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.551275937 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.833617468 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.833591007 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.385182896 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.394768837 seconds)
  done (took 19.563632603 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.329742515 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.327518125 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.333772535 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.343315861 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.382982101 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.336163967 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.339748382 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.324727849 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.384675664 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.387901028 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.33650623 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.384736342 seconds)
  done (took 37.475967224 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410239353 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.37184021 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.138523418 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.128499064 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.698465143 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.533460689 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.095697669 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.768606553 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.325576673 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.595891593 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321980607 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413889433 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.577362082 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32609996 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.325760642 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.306950758 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.548039172 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793192433 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.324153425 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.18600591 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349049734 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.337071396 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.32274386 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.352157355 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.535152636 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.452524454 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.586915127 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.324153572 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.590165639 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.335416659 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33428848 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.323942573 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.597814149 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953355903 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415970224 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334327746 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.091404549 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.034325169 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.311598152 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.163591485 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.085095808 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.32751244 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334928735 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.324237296 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.258148549 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.332026711 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.781757412 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.329627804 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.035911156 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.325219055 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.334373225 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418180355 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.327873197 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.139557568 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.441686421 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.325339507 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.322393267 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33584015 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892933103 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.653388841 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.342200927 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.259797585 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.774146696 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.187347402 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942003315 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.428532043 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.329897217 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.329680977 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.260308726 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.172267493 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.344656957 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47268958 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.346710499 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.975542535 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.011963942 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.332592521 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.256614077 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.852914908 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.326093366 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.26205838 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.553836623 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326817649 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.262224482 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.270382503 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.25958886 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988530273 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333163985 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.656225537 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.336756537 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.772620232 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.336611416 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346212597 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349899574 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.55006177 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.21228154 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326475671 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.129432957 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483971636 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349447547 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.77529363 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.261439407 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.330788218 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.581735162 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.53798135 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.332619495 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.295643341 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.535747918 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328213881 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.343699363 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.339761082 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.33773783 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.900249713 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.340127481 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.653058316 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347114927 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.74235803 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026893092 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.327170218 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.429257782 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.327751585 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.577142138 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.058318318 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.327963236 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.409936474 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.330866951 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.328506429 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.25319066 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.844966877 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.328796793 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.329996457 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.328383827 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.353804628 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.33065329 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.272578852 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.335865817 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33035325 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.332139191 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.552609815 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.337785005 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.604471511 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.26480506 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477032572 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.384685786 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.552538835 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.476336606 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.329895995 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.586806619 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.329059952 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.34393666 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.341913243 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347739945 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.427445333 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351483807 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.333049139 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.583468039 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.333114825 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.334314819 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.285990735 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.334185502 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338569246 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.335447852 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.240403186 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90125862 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30868298 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.338863176 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.219304385 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.344562528 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.394815024 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.335603851 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.340311967 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.028030565 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.210873602 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.335070673 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.333769784 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.552876232 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.341893227 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.2494548 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413815803 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.535431073 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.903687411 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.345079249 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.2648779 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.04109075 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.022983922 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332122097 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.266541252 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.331663989 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340310986 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.342418123 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.912715254 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.910507572 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33508459 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.177112865 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.339003434 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.34298051 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.336498131 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332006703 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.018361867 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.669584936 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.33817121 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.342803954 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475717281 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.34595888 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.267016032 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.335808754 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.33719934 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.332129697 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.332678233 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364418668 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.185048039 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.810542403 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.588698389 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.092680307 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.342466096 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.347877592 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.364083836 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.32913963 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.173726416 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357968828 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.352504388 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343286958 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.342860308 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.235986864 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.994130624 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900153417 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.040348647 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858936294 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.256464116 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.344230892 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.334215258 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.787027963 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.267442537 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.890696155 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.511675389 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.787843977 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.277303739 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.539981294 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.476346253 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.055163165 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.343333138 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.560694965 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.254032313 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.18335069 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.360294941 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.545185959 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369545745 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.346393111 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.262850765 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.856925809 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59962258 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.108913913 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.417650408 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.787497583 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.171805842 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.350696158 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.338513985 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.599891926 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.501616612 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.043180346 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.505919268 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.335019966 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.335739322 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.810162799 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.341851398 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.561456418 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956127929 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.339623742 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.543047345 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.269983148 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.346736078 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.345836294 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.336648306 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.521373589 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.346627495 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.591574553 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.347249718 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.270284467 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.335928417 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879741858 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.194560958 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.341849376 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336373829 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038121798 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.342069459 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.605426091 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.338353609 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.008552797 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342842274 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.270773079 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.270287128 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.028832811 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.344089548 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313012707 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.803948657 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.770242561 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.400459769 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.360364346 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.178741516 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.591213444 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.352054272 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.918057392 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.56302211 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.205694573 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359792645 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.437059955 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.226863046 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.337514596 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.337323569 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.573204445 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.249477626 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.561886771 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.16080755 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.249454678 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.341226382 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.549235282 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.338396631 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.35190974 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.568858238 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.048462491 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.3460312 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.039665803 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36312005 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.338885815 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.254475822 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.789373189 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.349853086 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419131761 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.348757737 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.349669883 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.349515427 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.50415424 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341963797 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.340882619 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.35283803 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432700594 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.700293155 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.00529286 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.344087709 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.921638746 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.054969111 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.925692183 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.353055585 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.338503794 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344168319 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.274271752 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48974287 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.566460736 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.612273072 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468831005 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.853515255 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361227713 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.210801487 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.356161827 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.552814151 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.615532523 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.235103749 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341521997 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.3511942 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.340644615 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.350375024 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.551656372 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815921594 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.873815124 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456080468 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.33997865 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.792080195 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.614648992 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.340610674 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.34148346 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.933607755 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.357600085 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.613261271 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.34656675 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341000274 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48953324 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.351034427 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974664025 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.349764011 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.501086332 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.115063154 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.315787832 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.597266084 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.764042904 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.352730398 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.92443361 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.038266378 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.606544075 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408080949 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.352109488 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.447787179 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487569536 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.344256057 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.342007829 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.342066649 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.183910216 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.052026837 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.35153664 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.932736549 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.606356166 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.339280001 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.346336928 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365816193 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.351701929 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.564830106 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.016593253 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.565122633 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.351610391 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.349961667 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.157974203 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.932326091 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.355237274 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.276803708 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.346662373 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.571292117 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.5780635 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.365207455 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.795337537 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.053549842 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.876640368 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.313132153 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364395868 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.348696166 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.042835 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929436756 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.028886064 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.811633037 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.899888949 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.346712765 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.617895753 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.348402294 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.354750708 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.621062217 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.347432745 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.343335086 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.354246587 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.922724468 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.074754133 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.352554998 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.277524663 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.281202972 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.683921994 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.054717722 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.279329652 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.354466509 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.523067006 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.344945879 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47595416 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.355413836 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.352469922 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34522285 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.078353701 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.619934594 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.35009266 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.333492358 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.253207459 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.348817665 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355555247 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.611925368 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352196225 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.018851414 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.695094712 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.599147979 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.345186169 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.329468228 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.349519171 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346043344 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.332992726 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.541172155 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.927874477 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.880497514 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.34811026 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.355715168 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.350392426 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.562655901 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.557587613 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.352376739 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.357777163 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351735157 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.361291003 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.32829939 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.846684134 seconds)
  done (took 1590.529208672 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.367942185 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.372487712 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.355947488 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.391030421 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.354860204 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.369644265 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.421550603 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.351007016 seconds)
  done (took 52.27206996 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.355564615 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.566541557 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.380547712 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.357043958 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.361698438 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.35389041 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.7714457 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.358207408 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.360870096 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.361415585 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.353168911 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.358064034 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.950933711 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.361255062 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.353016746 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.346209724 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.360420904 seconds)
  done (took 65.600697013 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.357706455 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.707489948 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.433440857 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.351190344 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.149406053 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.348134842 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.745632691 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.41528029 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.358112361 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.503182472 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.991350597 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.387480346 seconds)
  done (took 84.038031499 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.360631219 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.360097189 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.360730201 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.360557391 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.359929278 seconds)
  done (took 8.090763267 seconds)
done (took 2016.394859096 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.598810401 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.024793297 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.966297054 seconds)
  done (took 5.279998274 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.505471864 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.554482527 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.674723783 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.680750059 seconds)
  done (took 7.710305726 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.635957871 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.737719715 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.540565913 seconds)
  done (took 6.209312812 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.674115493 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.370556145 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.472770631 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.354266768 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.354822511 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.355542869 seconds)
  done (took 20.360154018 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.358211239 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.360121488 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.35831576 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.3603235 seconds)
  done (took 6.732102457 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.338589235 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.085773045 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.3407371 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.357740084 seconds)
  done (took 18.417994228 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.102679034 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.11654621 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.100341824 seconds)
  done (took 7.614678142 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.359293917 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.201097236 seconds)
  done (took 9.856050305 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.653302173 seconds)
  done (took 2.949066212 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.489612225 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.62675775 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.398975801 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.284895906 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.41629022 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.954905316 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.870413222 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.484440124 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.27708919 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.361347211 seconds)
  done (took 27.461034984 seconds)
done (took 125.996954982 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.965018597 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.603079239 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.565131811 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.93078387 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.580893914 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.564364124 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.572202549 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.897440991 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.442024637 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.435522639 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.934774529 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.583851914 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.727462008 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.359900557 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.725055999 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.362775299 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.583729442 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.997744227 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.619588126 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.856826677 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.570060598 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.574980423 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.767798239 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.589414612 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.583342435 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.516111423 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.16704668 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.359498542 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.789624365 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.175460301 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.515592002 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.021564807 seconds)
  done (took 188.234967902 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.360954119 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.373807445 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.360907376 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.384698291 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.368436765 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.374296686 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.365650996 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.361350828 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.361245555 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.364764181 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.362236429 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.361230323 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.361960873 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.369366084 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.362101199 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.375426249 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.373684726 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.361681819 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.376394808 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.36164754 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.364473532 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.374874037 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.377523574 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.366556939 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.362199302 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.364414413 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.376648075 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.362854076 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.362467594 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.362049629 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.361803746 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.368521081 seconds)
  done (took 205.044410734 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.362717636 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.363541909 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.376802794 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.37726994 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.363195236 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.363929815 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.376749801 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.367075653 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.363641272 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.363638532 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.362292167 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.36272864 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.365103127 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.362536855 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.364180302 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.363021158 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.368932134 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.363410772 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.380264974 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.363360553 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.362973163 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.362695065 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.372072631 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.367872323 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.363348556 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.363120061 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.379811724 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.368734322 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.372271101 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.37206518 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.362839758 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.376791512 seconds)
  done (took 205.059374615 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.553542004 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.36500908 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.365114667 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.304594448 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.365877647 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.364928555 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.362982724 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.554228872 seconds)
  done (took 14.53530807 seconds)
done (took 614.169873047 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.556727958 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.280918881 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.556185445 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.385282164 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.103163377 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.39172762 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.386445152 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.547941782 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.282561263 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.548407396 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.580867682 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.391286229 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.697653907 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.383691331 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.622748013 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.480846186 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.225680165 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.324634656 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.686462863 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.87355613 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.629095909 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.759915668 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.543230766 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.283450834 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.707085959 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.765626412 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.007535411 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.218183604 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.384677776 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.682644341 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.912367 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.261891738 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.444108889 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.425907396 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.475886416 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.456284417 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.241798362 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.424924388 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.564259691 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.527862541 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.868335484 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.101132871 seconds)
  done (took 91.295109715 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.3552325 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.354944913 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.354746025 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.35606954 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.356893847 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.356293524 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.35531985 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.354572132 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.355816378 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.355991073 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.354939335 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.357786859 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.356034158 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.35762972 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.355584063 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.356482571 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.355699081 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.359535831 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.356273133 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.355104493 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.356660993 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.35441261 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.356762397 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.35676411 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.35750616 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.356919437 seconds)
  done (took 36.560623671 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.368304327 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.598119608 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.77009123 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.378839383 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.373344481 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.377848096 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.444289296 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.369423052 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.376708548 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.377021474 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.526415504 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.371505567 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.405758087 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.773231808 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.37578941 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.368667766 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.369336354 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.374832981 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.606312138 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.382861355 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.447525597 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.370673312 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.44583676 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.384352719 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.377717139 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.375031686 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.37935186 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.857062747 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.376763343 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.522624003 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.093522711 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.444822565 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.816248071 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.806466172 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.098164958 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.37190898 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.370103563 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.527545437 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.377106374 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.375240882 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.445974338 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.376016503 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.782031236 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.981454201 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.391361801 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.370772262 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.879381165 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.526901624 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.600233064 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.385003575 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.815902394 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.379494545 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.37337759 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.376991458 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.598989224 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.385035402 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.375894507 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.887077509 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.382149368 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.446755465 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.373430249 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.377136562 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.612943434 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.377360115 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.601919355 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.378663486 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.384735677 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.377572977 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.783788726 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.379278156 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.002344755 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.392661991 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.37146318 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.523401361 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.60258241 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.907394222 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.380348387 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.615481206 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.830836323 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.448112958 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.38262966 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.849862208 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.451284581 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.382196593 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.374828621 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.373852831 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.37303934 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.415898998 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.446397993 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.927230721 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.994689926 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.903484893 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.450137701 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.391445212 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.378881318 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.888065694 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.374383477 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.373611681 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.783315749 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.001149836 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.393129039 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.385760664 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.995827754 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.39521517 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.45101264 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.384252309 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.801313274 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.380315417 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.418021403 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.374051862 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.385473466 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.381867302 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.449525778 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.38451919 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.375174019 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.981517998 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.549450862 seconds)
  done (took 179.598630624 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.374878737 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.387030196 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.37197641 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.372941705 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.372375442 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.378716119 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.372105611 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.376002199 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.378449885 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.372626787 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.372853303 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.373122132 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.375207601 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.377262586 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.398567626 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.379742665 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.983444887 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.375243011 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.375215494 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.387880149 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.154229101 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.376179015 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.373597558 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.373645887 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.375187778 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.375922175 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.374677486 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.375585479 seconds)
  done (took 153.244702195 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.37566958 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.897749049 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.377152741 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.500909661 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.396190424 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.373180903 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.498906152 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.434844882 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.381364347 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.372904232 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.374141079 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.656259032 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.376839197 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.847178191 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.553248447 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.497089897 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.851254451 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.377582396 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.374143658 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.374899222 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.502460022 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.381956188 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.655910453 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.896595329 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.377282742 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.901910236 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.367351365 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.37711832 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.381096764 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.903805727 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.377126009 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.653723911 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.452021818 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.43559247 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.899952787 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.856994281 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.852498878 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.510923401 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.382392873 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.374205702 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.375366752 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.364401981 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.902444908 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.378752255 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.383133674 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.890511065 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.393365757 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.377760083 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.385368299 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.376375923 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.436953247 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.438133574 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.662295079 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.90817522 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.447646319 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.397697802 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.502128764 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.738857381 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.381237501 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.856213009 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.366495389 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.904088111 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.381767997 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.365138469 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.377579858 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.381886095 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.513567549 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.498099861 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.862217317 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.385274927 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.858110367 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.514944063 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.376991425 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.37695589 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.380104531 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.909588824 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.861332091 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.515486589 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.506405611 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.560591566 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.36851403 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.382698426 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.366729775 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.45403634 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.378131482 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.907785625 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.861628042 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.381195113 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.379860121 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.380272252 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.380053229 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.544456385 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.910464433 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.455122088 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.849376752 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.67897887 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.665688679 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.38225399 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.433838503 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.379650984 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.666963835 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.381281462 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.430912547 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.799439299 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.667414494 seconds)
  done (took 162.727294524 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.604683093 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.503389244 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.466295403 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.489103006 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.880748202 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.918183933 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.485303681 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.50315346 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.480450376 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.613969595 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.452983487 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.468449991 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.550288825 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.45287189 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.058212337 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.450979002 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.467224976 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.501430624 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.482155059 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.34186252 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.963743086 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.656319383 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.543646289 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.382524189 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.470954001 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.10222399 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.904028016 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.874769757 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.539262685 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.557868208 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.905638914 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.441535397 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.280925559 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.016343805 seconds)
  done (took 65.127510881 seconds)
done (took 689.854587795 seconds)
SAVING RESULT...
DONE!
