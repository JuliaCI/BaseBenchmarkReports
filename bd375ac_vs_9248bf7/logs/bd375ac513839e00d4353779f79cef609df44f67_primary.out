cset: moving following pidspec: 6244
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.261351309 seconds)
loading group "string"... done (took 0.592648892 seconds)
loading group "linalg"... done (took 7.22190062 seconds)
loading group "parallel"... done (took 0.166509639 seconds)
loading group "find"... done (took 1.12873057 seconds)
loading group "tuple"... done (took 2.000627362 seconds)
loading group "dates"... done (took 1.278326341 seconds)
loading group "micro"... done (took 0.239830463 seconds)
loading group "io"... done (took 0.962090266 seconds)
loading group "scalar"... done (took 38.754193705 seconds)
loading group "sparse"... done (took 12.415092347 seconds)
loading group "broadcast"... done (took 0.975592402 seconds)
loading group "union"... done (took 13.241448284 seconds)
loading group "simd"... done (took 4.466355856 seconds)
loading group "random"... done (took 9.024844451 seconds)
loading group "problem"... done (took 1.94611542 seconds)
loading group "array"... done (took 21.308283732 seconds)
loading group "misc"... done (took 1.927832206 seconds)
loading group "sort"... done (took 3.23063039 seconds)
loading group "collection"... done (took 18.123095015 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.536688957 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.141160288 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118048805 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.139643761 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.184099487 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.131920656 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.142325855 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084771173 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.048833574 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.17078981 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.139992911 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.481045948 seconds)
done (took 5.076820167 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.203962825 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08796872 seconds)
    (2/2) benchmarking "String"...
    done (took 0.095838162 seconds)
  done (took 0.88674782 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06568887 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126694066 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.080676483 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068102115 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066937592 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.081082361 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06756429 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066373313 seconds)
  done (took 1.268537621 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073772357 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06882624 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.085068868 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068390101 seconds)
  done (took 1.008602559 seconds)
done (took 4.153279162 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.901591145 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.236680404 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189366938 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.454467993 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.148931474 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.188849649 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.664590785 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.327092467 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.21155948 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099321952 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.105272138 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.380123592 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107255184 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.663008449 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076970245 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.105605576 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.158265847 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.424270856 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080936703 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082447035 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103600512 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143808379 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.100599729 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077166813 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.168984908 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069001721 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.148706952 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.094580268 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.06792321 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.244674594 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.189817986 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.679378058 seconds)
  done (took 10.441330392 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097332813 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.116426884 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068937298 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140146289 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.102864988 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.086276762 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071275521 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.082954379 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.09145303 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.157439947 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114213286 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.106131652 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.081660027 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069325044 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.100513164 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.211907395 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.105778481 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085173176 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087255268 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075827778 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121835144 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082270915 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.094280111 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078509897 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.151771526 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.194942931 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112035493 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.110474344 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068947913 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082109583 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130829755 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.141643872 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065798659 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081669436 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.139470482 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.11022147 seconds)
  done (took 4.544378854 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.033268178 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.161404055 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091471103 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.152144698 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.084594721 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.10955499 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.083141214 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09941973 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.246213339 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.082847703 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.460232557 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128129265 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101461222 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0683447 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083520682 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067538187 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.516973718 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.144489229 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103006212 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.102085989 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073437069 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.086637488 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.357536251 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069792736 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065730406 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084318582 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.059038441 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146345134 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067795811 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.217541381 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.088785311 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087307586 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101630281 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.191675947 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095206616 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.121928056 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081558342 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066969178 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.170638021 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.07329083 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.084640956 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065384162 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.106580234 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118899831 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.104347235 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.085104053 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067595727 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.181590394 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066707013 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.099656666 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.893750965 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.165375742 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.068112949 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.07563922 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.087283262 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.268790988 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.102910177 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.0669546 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.08119814 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.253392528 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.167652922 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068498102 seconds)
    (62/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.10824874 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.06811017 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.0665179 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.085465976 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.367127295 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068050124 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.768512074 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070467029 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075858321 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085258233 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067310407 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08946058 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073163382 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101578198 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067134777 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068300703 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.082783014 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065998077 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084577539 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.085139291 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.205591623 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.083904312 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067030262 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064395221 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.103094645 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110654809 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069918703 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06539125 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115871077 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068856617 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083722182 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.102215772 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.086366982 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067526224 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.102196766 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084566787 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114657102 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.081445402 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.122368161 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06819574 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.111858903 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.072363097 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113905804 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.093823961 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068716507 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.153838507 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064108656 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082262565 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067539934 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064522035 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.084458524 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068647244 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.098299369 seconds)
  done (took 20.921793242 seconds)
done (took 37.651725077 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.292601226 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.091648823 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.091451918 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078345375 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.092238586 seconds)
  done (took 1.435314829 seconds)
done (took 2.198760471 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.121026644 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117232387 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064235344 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112324684 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063637224 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.116033046 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114468786 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081542904 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115858676 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064649807 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112486882 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064824559 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06430284 seconds)
  done (took 2.002619889 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083308278 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084825889 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085379733 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08222206 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078796687 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082475927 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080192683 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105133391 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08028649 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087915989 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064468912 seconds)
  done (took 1.673365031 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082790826 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083940572 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085407955 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081205499 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079116589 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081976349 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080967172 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102403441 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08129944 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089813429 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064345446 seconds)
  done (took 1.673610433 seconds)
done (took 6.102010625 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078502736 seconds)
  done (took 0.830765079 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.705323921 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.529081978 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.083238064 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.134094172 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.222135287 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.155938934 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.44314772 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.109355689 seconds)
  done (took 10.310840103 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.102765762 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086822187 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071571356 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.085044315 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069928596 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.085687943 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072479591 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072363791 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.086357607 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070082064 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.083445672 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069568947 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086688921 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.07255743 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.06887257 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.084234734 seconds)
  done (took 2.091585705 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093441602 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092344873 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.090804517 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076107079 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.089076967 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072725276 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.091847693 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074317389 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.087152551 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073080613 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091217672 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075284823 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.088139253 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065868367 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.090939528 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076647408 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086755518 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074669495 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.091911982 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076686203 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.09123138 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065683412 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088054524 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075771146 seconds)
  done (took 2.845564627 seconds)
done (took 16.837935835 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.131812929 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.076060931 seconds)
  done (took 0.969758621 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.08248947 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.09773628 seconds)
  done (took 0.94930799 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08337202 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.08126333 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090420527 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.093932753 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082079505 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066280037 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.104065253 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066434944 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.081868987 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066724522 seconds)
  done (took 1.584931091 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068557436 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094125124 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070951003 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097715937 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074895083 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.080509407 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073336418 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.083788169 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078404191 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079575584 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071592094 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.098856418 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071249961 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.100515312 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073665775 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084336309 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.086874621 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068505343 seconds)
  done (took 2.228430147 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06620458 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068214355 seconds)
  done (took 0.906212236 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067487125 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064798505 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082053901 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066586506 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079463951 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063175645 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.07931055 seconds)
  done (took 1.27443231 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.401099866 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.108328403 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.243523285 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.087390983 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.103068651 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.26192391 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.08315531 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071589796 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.088359791 seconds)
  done (took 2.257323991 seconds)
done (took 10.93847975 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.07915437 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086514386 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.109809523 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.420938339 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.105155473 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066462213 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.131710439 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.220485314 seconds)
done (took 1.992205142 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.125115832 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.609685186 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.400122383 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.211819007 seconds)
  done (took 1.997814869 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.373693896 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091248854 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073524209 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066405131 seconds)
  done (took 1.381520748 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06624872 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069533871 seconds)
  done (took 0.914199711 seconds)
done (took 5.192927879 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066468614 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.100852898 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065982912 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066832705 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.080466455 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066305914 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064514984 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.08058668 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064091187 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065839713 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.081505922 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.069670648 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.081532799 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066223948 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065049556 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079741863 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066491666 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064547286 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.081945087 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064507942 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064116196 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081051404 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063837796 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063335855 seconds)
  done (took 2.52771469 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085857627 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.083156496 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072349523 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087910846 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070381896 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088308081 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071591946 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067796928 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087101351 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068835861 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086524648 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070995143 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.087932838 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072130689 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084288745 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071620843 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088102038 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0673126 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069288585 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.086908108 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072319343 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082958635 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.07164324 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087338332 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.07112394 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085764848 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069277283 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.082849234 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072081554 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086163901 seconds)
  done (took 3.131575217 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070703315 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064344153 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080245556 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071130823 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064089272 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.081058038 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063679948 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.08007867 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065056544 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064032759 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081092774 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063641057 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064455346 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.080680714 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064878501 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066846748 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.096449674 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06449709 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.080039956 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064562566 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067159428 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079468427 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064331041 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079920287 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063808807 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064308571 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.079816009 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063765757 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06509224 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.08033392 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067187745 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067788529 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.079606628 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070914696 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.083415359 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063510473 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068148276 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079431085 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064918979 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063377419 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079962767 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064280242 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064127249 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.086855932 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06422671 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.081016647 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064635143 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065767855 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080762443 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066985936 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063843576 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.080308626 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066305171 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.081310323 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068166861 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064321265 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.080605284 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064632773 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.080346158 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063546335 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064342069 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079259984 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066932735 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.06431987 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.094864082 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071278659 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063672197 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081713462 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066202338 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082162026 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.06629546 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078121684 seconds)
  done (took 5.941229962 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.117603546 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091734985 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082976675 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066265433 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079481834 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06418324 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069138724 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080034186 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066183125 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086076911 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064846465 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065668151 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08200641 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077235932 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080797425 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066341826 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086012216 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062555698 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065598554 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083925958 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065078481 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.0837628 seconds)
  done (took 2.474625721 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.186766586 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.087766831 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10926646 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090174155 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084652517 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074220139 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07020453 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086326118 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071032912 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084183832 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069205009 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086241566 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069086461 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084875249 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069032756 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084922193 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070806125 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085560246 seconds)
  done (took 2.350197012 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.07815483 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066525996 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10571864 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067060878 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.083575295 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068823499 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087972095 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075846286 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085157679 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067402275 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.09130536 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069578175 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.084583386 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06637029 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069080223 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082034311 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069406206 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082697306 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075820755 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087502874 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07246009 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091175238 seconds)
  done (took 2.515695803 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081150315 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068609333 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.100349065 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086087295 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062204956 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065251391 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.08931607 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067848376 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.089571675 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068698065 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066729906 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.081110868 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072268081 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.082240149 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072818226 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082958269 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068899115 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066990521 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085090047 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063744668 seconds)
  done (took 2.311434784 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087960262 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084563438 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.179574677 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092752061 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068325968 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084718935 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077403416 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.084419997 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068049782 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10875037 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068808282 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084410363 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077245915 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.089997562 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068421977 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092676605 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077162073 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091981745 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068596568 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083907908 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108751637 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067439379 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093196372 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06872797 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083952282 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068030023 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068171674 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089829804 seconds)
  done (took 3.181883319 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06636913 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067272328 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080543051 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06468685 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065026801 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.080216721 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06436495 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064902841 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082602691 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064512394 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066203642 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.082263044 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067326816 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.082694449 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066426862 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06691758 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08255819 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063615921 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064411821 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080259068 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06669986 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067097033 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083006784 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064971895 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080114262 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066668275 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064997177 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08012154 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066921655 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064458298 seconds)
  done (took 2.921703443 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077030924 seconds)
    (2/2) benchmarking "in"...
    done (took 0.090784267 seconds)
  done (took 0.964994789 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064386506 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081436754 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080119094 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07038595 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087889454 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067194969 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.091100475 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071192955 seconds)
  done (took 1.407545145 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081869759 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077629228 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085454356 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078819917 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.093842667 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082998046 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.150704197 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.084864994 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073131914 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081806457 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080623189 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065957338 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.089524272 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067228621 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.08918363 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072921516 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065335304 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088717195 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070214974 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.08203146 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069330512 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091591366 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069767683 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063856267 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084988816 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.075915012 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.094318061 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06790219 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08674192 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074223029 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072105803 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.077190688 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067642783 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.083894275 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065002389 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.093185669 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08264781 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086002948 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07615379 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068101555 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093432556 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062505371 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087927607 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074040067 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093295084 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06774298 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068270732 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.079343811 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065552925 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085376076 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063136471 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066981224 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.078952763 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074169474 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.089560915 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07787415 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065591136 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.084803569 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070215332 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.086544597 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073912728 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.084967914 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068832683 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066559629 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093295843 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07101837 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092137257 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062264087 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061747974 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.081066072 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077434699 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106203874 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073338925 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.084383804 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06821113 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081244836 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070982942 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06928183 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088738496 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073400295 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083681542 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073466589 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092479768 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067359757 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069485739 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.091266984 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064999573 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085061955 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065631072 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099394294 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065861726 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06403239 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.081698088 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077215826 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086300604 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067662602 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063963385 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089596416 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061775609 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.084009369 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068205935 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084939398 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077201967 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088548986 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072966353 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092507101 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074705111 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067153593 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087027776 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.064688356 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085225142 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066277614 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074316811 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.078281104 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070239793 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084188659 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.06748756 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075299257 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081969202 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067813399 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091356546 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07325359 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.082583976 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063945874 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070337089 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.08378269 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070625325 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091921345 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.066112367 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062546497 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.079405831 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071449884 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.08332924 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070590841 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088788654 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07035947 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061959642 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.082202138 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072068158 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.09291822 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067804386 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067173073 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.08933809 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068800434 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083083357 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073389982 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085621483 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066387126 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07222888 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.084143086 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062629945 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087679885 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069368417 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065953351 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087023814 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071851579 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086094383 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068813162 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06597701 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.089406598 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068307361 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.082844144 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066979215 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.082355243 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077479878 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069119245 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078734721 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064696198 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090694895 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065104923 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066220033 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.082809836 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069523305 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.084494381 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065014585 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067176724 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085342582 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078262832 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087221786 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068695563 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089153488 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078251497 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.083065115 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.06975129 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067006094 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085811461 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068674036 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091946926 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072777033 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089441493 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069452436 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063692416 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089215816 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074488345 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082989046 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064986575 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066043928 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.087746289 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072933754 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086552705 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068410548 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08204322 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067729394 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070022148 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.08655434 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066668692 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.08236432 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072085196 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065971429 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.090416898 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067376551 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094273136 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070943203 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.079714834 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070370976 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082579409 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073427143 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06274624 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.081802376 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066591197 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067998891 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.083112627 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071151315 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.078218447 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074779092 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091831232 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067158472 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066613586 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.083952695 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074169253 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085183109 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070973933 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070422529 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090610156 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077915126 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082873583 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071037544 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093973742 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067137701 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060992087 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089364518 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.06550641 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.083210848 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066068884 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065438919 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086905521 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075611408 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090390174 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061911925 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086390341 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065289034 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066484438 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080553475 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071890997 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.086273166 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067847547 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074391116 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08471852 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068414814 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087671301 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066876816 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.06764172 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.085415161 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071057042 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084998353 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.07024703 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067273734 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086938743 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066685943 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082452345 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069823496 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067797669 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.084158222 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073168501 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084106725 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067592983 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069617075 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.085816953 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06806858 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084783842 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066825986 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069298227 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08462658 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068035916 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.086501577 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063508521 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073694059 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.084159427 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074315847 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.084328621 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064640955 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.089249069 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069532118 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071816719 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084919616 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06825037 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085660551 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066538148 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.06923409 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090609413 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065011471 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094350013 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075255125 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085258998 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.07048637 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067153481 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.086134916 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066964793 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.085155007 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068452224 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066920994 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.084104669 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072394689 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.086399329 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067848354 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068654771 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.084798114 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067727135 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.085253281 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061912913 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066375413 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.083592226 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068026426 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09375645 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068191147 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.084026101 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06604801 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068056 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.083176416 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064570678 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.092336189 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076002323 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085487119 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07443472 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066067523 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.085616948 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077352342 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.078713166 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066573846 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064673224 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.082153221 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.0741289 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084526572 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075855977 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.084533751 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066959664 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065087873 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084653065 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065856468 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061803542 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081587701 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070490188 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.083526528 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06715022 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066965014 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.087630991 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068276122 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09275809 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066745647 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.085216166 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068214945 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064652159 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.083387353 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066616228 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069550067 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.085760379 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065405066 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.08181552 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06727826 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067625443 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.085494919 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067580171 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.085834636 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07452021 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069253869 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.08743946 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070259524 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.079505458 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070730292 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.084504061 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067476636 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066753437 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087195858 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070898587 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085478898 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076013012 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066568697 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084780303 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06787309 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.082140595 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.06672908 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067184758 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.084528682 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066962983 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.08559282 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075660522 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064205278 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.087210493 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067486888 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.084708556 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073898974 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084633772 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070238237 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090946268 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066848501 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068821644 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.09152363 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071391282 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087447109 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068904325 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069210289 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089851373 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066430548 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.090689409 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067563477 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067358644 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.086752208 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064928605 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084258904 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068188694 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065814675 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.089843786 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068102054 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.08383351 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06696391 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065082935 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085194791 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071375544 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091923146 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069494476 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087238292 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062715797 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065284623 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085626339 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065401384 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085228618 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070484992 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072345348 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.087282627 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067537984 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.083372381 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076269613 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072603109 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.088313848 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065278178 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088001495 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.06860003 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.086073963 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067930288 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067667846 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08569148 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071199822 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.086055674 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06635281 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074715361 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.087740486 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068507218 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.086101383 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068239496 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067215896 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079459355 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068466047 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.086479317 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072963214 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069100517 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084976228 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077301628 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082305569 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067621493 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087729632 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066404162 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.07155244 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080222586 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068971183 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08547578 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068828694 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062616662 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.084171518 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065067989 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068602609 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.083922971 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062229209 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094807534 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076076555 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.087410853 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066025949 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065509008 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.080196876 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063558619 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.084022484 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068357006 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068936074 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.094878668 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066802835 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.083606106 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063115291 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067411134 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087544136 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070400282 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.082216533 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062452074 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066648161 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.087572778 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072825363 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083327367 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066667706 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070569158 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.086660598 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065691239 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087874355 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063907159 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069778091 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097585459 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067434787 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085219328 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073690843 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092133844 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068751675 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.080249058 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.06802776 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070191973 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.084822402 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068330935 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.085524276 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081871863 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087664446 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066144231 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066004969 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.08749505 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067451921 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.092476882 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069008051 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067611209 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.088683331 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.06902599 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093212289 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070012121 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092500066 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071025433 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.088249046 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066561859 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06746354 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.084360625 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066246487 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067871956 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.086704514 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071800712 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.093133642 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066483974 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095340459 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076892542 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.086549922 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064911913 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067115516 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.084845579 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063719392 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.086348833 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066342994 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065872208 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.083635883 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066636956 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.06864172 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090303656 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068332331 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085769794 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068088404 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061062754 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.087406114 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.07001977 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085917683 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065278718 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06769074 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.085531632 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072041718 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089482442 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065967388 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068597499 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.086574792 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069233781 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.080366018 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074305545 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066197441 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087366954 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067369972 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085344889 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069421227 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071208158 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090712477 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068438484 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.087688977 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.07673639 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087601296 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065447925 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065215555 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090758771 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066348054 seconds)
  done (took 46.295861335 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.109488486 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082849726 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063429886 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080581873 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076724193 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081720681 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062712342 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063694161 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081213653 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066862057 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.080318633 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063256377 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090234243 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08689162 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094709605 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067660737 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081895988 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064292013 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080868341 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064522814 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090045906 seconds)
  done (took 2.478683076 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076079015 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.089997598 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07506383 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095699546 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069156853 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090352184 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075221674 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089864646 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096216442 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06855086 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.096093606 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072993076 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.086291769 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.06890366 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085499789 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072541029 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.095876267 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069460606 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.090235466 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074914273 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090506291 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.083162122 seconds)
  done (took 2.653390358 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067818439 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067196336 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085967339 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062736738 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066296958 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.080580053 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071568078 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.083210818 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070475549 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06584128 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.083888449 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066654755 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.086254407 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062380187 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067025914 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082874497 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.131773509 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070751705 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066231231 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.08676346 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062427455 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.087512133 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062833965 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06252887 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.084148237 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071160365 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.0854887 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.065752889 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066846168 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.083344323 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067077472 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.082637111 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069030343 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068053359 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083921132 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06588125 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066425922 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.085191807 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063332218 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.083000643 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067830214 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063463814 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.085268159 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069178085 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064962333 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.083109909 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068951341 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.084669992 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062791451 seconds)
  done (took 4.489791465 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.085627251 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.130770818 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087921302 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091594627 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.1030154 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.09368147 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.074252446 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111721556 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064673471 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.084391074 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084026417 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.10241505 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.085952597 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072299522 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.09263447 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067285539 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068193402 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.085468585 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071285875 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085349097 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071351117 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.092377097 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.100604478 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081309354 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089293236 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06702422 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.084502172 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072516666 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098992746 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072964691 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.089765635 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072969581 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.100790884 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072107043 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.085558386 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069480763 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.102892035 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.08595717 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070152509 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065100444 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087813874 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072513137 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.091375848 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.084052337 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086889516 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072341567 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086332375 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064843498 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.099056627 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069293565 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.094029931 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.101114979 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072070877 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085984997 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07255988 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.100752993 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067454158 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.083307081 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.07006187 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.099378086 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065495437 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089122787 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.08283911 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.087015789 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07523745 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100030008 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072451118 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088956951 seconds)
  done (took 6.682757105 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076471258 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.09260972 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082732516 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101533001 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09314427 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073984949 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09255362 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07497847 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.091586451 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079210745 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092431708 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114203211 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070095814 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094978637 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073567594 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092598311 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073543941 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092980583 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091492187 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074129846 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.092226563 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081824853 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092701306 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.100893007 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.104649044 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.087194311 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074450377 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.091951459 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082635235 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.092942399 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104794798 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074136654 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.091657433 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.10190981 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.085841394 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091091137 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066684351 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091917065 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07494916 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.092172351 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069501575 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100892057 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07380715 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.088121577 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073944008 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.09231407 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.101226853 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.085696311 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095103412 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097850547 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074532235 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100573673 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073921384 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092945591 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.100675543 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.107879656 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100862342 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101236313 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074167653 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100915038 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100767642 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.108892451 seconds)
  done (took 6.376866657 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08996971 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095478863 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098083603 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063778703 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06535298 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090964266 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066063559 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.083316357 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076102875 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094674253 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079472157 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089921078 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074955474 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097211511 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090045287 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075174355 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089434666 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071565057 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094872707 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072863062 seconds)
  done (took 2.514663151 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077042537 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103510026 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068849526 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073907021 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.090155329 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073173522 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.088597641 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070743263 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086420382 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070956774 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096308575 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078397391 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087083115 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07437832 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.096064565 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074626695 seconds)
  done (took 2.169606864 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.079898909 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.095854263 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082757007 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086030459 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066284306 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.083136332 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067942525 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062897128 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.083522786 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082480762 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.086866521 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070352518 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.086064954 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065891323 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063831047 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.08922878 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064162699 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083737999 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068114575 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.100769177 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.078738255 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.084748376 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068366581 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069302057 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.086859458 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073284015 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.086536365 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065475166 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084833427 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068692588 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.08618059 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.075690924 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.083104527 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066934938 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066227328 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083560934 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067559233 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.08572306 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.07068267 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067099068 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085022949 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068514608 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085787842 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069487298 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.082266415 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.06845604 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063523731 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092034364 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065711827 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086390655 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067732613 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.088053666 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069002676 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.077131152 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.090842714 seconds)
  done (took 5.112241058 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081163538 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070136182 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.082620245 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066479499 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089291028 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069471172 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070429897 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088117273 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069247975 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083703529 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069571314 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088319842 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070028732 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070748382 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087889977 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071579897 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081813705 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069848083 seconds)
  done (took 2.245117557 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073499279 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067437135 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094349296 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068162413 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086813047 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069768546 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063362914 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.084784091 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066701717 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085668132 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067776737 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070455729 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084629023 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070583786 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086206906 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068120462 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069842289 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085137103 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067618568 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082008088 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070527794 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065920037 seconds)
  done (took 2.515706528 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.072806849 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.093723166 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.163175441 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.108106833 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.083610694 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.100527019 seconds)
  done (took 1.48954465 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091758182 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100669754 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068244002 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107667861 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075914835 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088586649 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069619186 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08788747 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078870319 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102722606 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069962558 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09722648 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096236341 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078534473 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093975744 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07575289 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088490018 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068920663 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087164319 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107131814 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070363879 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096337056 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069918961 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087612814 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070079451 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096930104 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078790533 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102967372 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087701695 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078856932 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094139721 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070262027 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097646672 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102310941 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071416924 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097769351 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07015417 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107420779 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075762492 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097167327 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070377913 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094790605 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097579509 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075375099 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096576698 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069620762 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094004858 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069144643 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088577658 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113397021 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075567541 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097365075 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09512721 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078979914 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097414614 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114042342 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083405446 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098116009 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094613741 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083245159 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100276941 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074986216 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097124196 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10250674 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076150476 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098201407 seconds)
  done (took 6.663002183 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083696049 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105732996 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071052573 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102856696 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097565206 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070064341 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08842453 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070718106 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088562812 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068698793 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130206398 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070223259 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097912446 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097972107 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07033864 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088198675 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069875219 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097130727 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069799213 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114584714 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088277835 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078721241 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096629171 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096842453 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084028065 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094594044 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069905434 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088590373 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070621591 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08864565 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074650717 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089286164 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096667868 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068986403 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096779162 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070532928 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088514384 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075404585 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088568979 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075752949 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097389801 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106979482 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070313593 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088588565 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083602704 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088527062 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069535756 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088954396 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069727017 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087566381 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083267351 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102743123 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10278747 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097383567 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070546731 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088249006 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070628464 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08875408 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070054275 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094556116 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07933845 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088275173 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113521986 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070037644 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088896571 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07809173 seconds)
  done (took 6.54588148 seconds)
done (took 128.739702702 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.200662988 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184769849 seconds)
  done (took 1.253935348 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069945325 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096658873 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098600888 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129461372 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087198905 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100640678 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.118815011 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.080190193 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067980999 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086434979 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067993158 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088147578 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13198895 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068057161 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.086794704 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069863308 seconds)
  done (took 2.323622558 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103757396 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.197623089 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109816332 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066400165 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100148359 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079465644 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.085880829 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077565199 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.095225507 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.06671785 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078355306 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096934626 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066096673 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095839617 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075878084 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.098890969 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066083558 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098109996 seconds)
  done (took 2.538569887 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104955069 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.141567031 seconds)
  done (took 1.124059122 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.201464735 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.12280507 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.203173 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.420900255 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.208158741 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.278191977 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.173198905 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.172234663 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.161854894 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.170164563 seconds)
  done (took 2.986077466 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099650257 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.172370816 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.314172462 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.138803125 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.086700416 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.116702183 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.139362548 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.089885903 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.101560605 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101486817 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081648045 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098629672 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.09873208 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.095940512 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074815089 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.098256759 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121618509 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074746539 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076617834 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.09677835 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118064116 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067044747 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075657178 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.094947554 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078824601 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.098452281 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066148715 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.086004888 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077033251 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095271984 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.08046413 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.11456835 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098461451 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.132852093 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.082454934 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.133228113 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.099132545 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073434405 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.095312109 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074455192 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.098223985 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078422187 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.103460367 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077760632 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.086165754 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078610453 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.085868162 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066873593 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.099689334 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.078829929 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.099679413 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079964708 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.13230601 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.09870996 seconds)
  done (took 6.259851742 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.750420488 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110630976 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094798079 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.814317254 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089350262 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106137439 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.717238762 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118351325 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.209474565 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.769805832 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.089578731 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.098806693 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.182492218 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.215592761 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.948379258 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.291326858 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.637704878 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104531047 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108987302 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.13312588 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.14153618 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.177714248 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.151195492 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.402223442 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.076096358 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093154645 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.139250993 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.075353884 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.140225618 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.106384648 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093845407 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.155004969 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.229959882 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.156653379 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097701633 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071098026 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090486004 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.149194098 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.223314741 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.191915374 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.157857217 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068823828 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090189145 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.141185987 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132584019 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068508755 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.140698906 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.152837173 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.168571528 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073660286 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074959607 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.163970132 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.139606993 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.145007837 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.100513462 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.27496304 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.285706009 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069894957 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12077159 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103601878 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.21752576 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103823178 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.201523901 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140327877 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.169817523 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090054871 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.731511105 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.149598476 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090558761 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075774887 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119329544 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074359474 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.160670683 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.1236736 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.370816164 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.142164577 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.095156887 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070153595 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.208895442 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084268184 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090668689 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.142142228 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.075814119 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122716081 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.144001726 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.162939949 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.147890292 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.215360608 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.14356595 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.139591859 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094919597 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125392183 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.076233655 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.190938222 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.194276166 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.141942835 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.189668341 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.139992681 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.162486171 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.149201671 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076626865 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.150253972 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120196301 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099854505 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139514734 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.192435904 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.102946002 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.104806121 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073321734 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.160777883 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.105350235 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106910293 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.139742332 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.150289529 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.450851546 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.149846037 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068650273 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.108205728 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141223342 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.141024599 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095708528 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.214551097 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123624922 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.14818931 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122299945 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.0679305 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120758823 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.140521681 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100193117 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122316375 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.139554386 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096945438 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.215572989 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.171006244 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098217739 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.194853358 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.163912253 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095423417 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.149574478 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120437974 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.146477892 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078499698 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.138262756 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096526962 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.746617493 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.164855205 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.100227059 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094817282 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.165347197 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07077235 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103347763 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.083145703 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.088544447 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.728382457 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.106391332 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.080111266 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.104485942 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07409097 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121808352 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136325549 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.095170453 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.139740184 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.20266028 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.076071498 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119856435 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103435331 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.140370568 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.075815336 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.103973654 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.102922405 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.084164597 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123483776 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072604085 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105070455 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.145815629 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.14117293 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.19416533 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.54144009 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091673881 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.082850915 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.202071371 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069313706 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.263350501 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137111339 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.201254622 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.143074123 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.100693827 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.260860278 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.142219369 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.165510126 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.107124855 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.153169405 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06787886 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.136758804 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.165025799 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070890419 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095539347 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.141823933 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.146392515 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.142364876 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.937364414 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070789935 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.202587777 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.088759672 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.151628953 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075764478 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098071648 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.269964989 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071397662 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.146925877 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.143175438 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093695646 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.083397726 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.694993605 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.08390222 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.138879482 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096164369 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.194775941 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.143071359 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.137861093 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.138396077 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095086696 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.140145797 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.188606425 seconds)
  done (took 40.44035817 seconds)
done (took 57.802657546 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.262146432 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.17928658 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.244347472 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.145525632 seconds)
  done (took 1.804705742 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.144647057 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105810851 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.118669469 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.086074528 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.104190163 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086738529 seconds)
  done (took 1.547600317 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.409139578 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.268368593 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.233992024 seconds)
  done (took 1.813639491 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.264156512 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.214402977 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.449902432 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.302179181 seconds)
  done (took 2.261399453 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.177116229 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.115519293 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067111986 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.106079419 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.161490295 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.256906817 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.128809334 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.18983769 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079139967 seconds)
  done (took 2.231743947 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.199428544 seconds)
done (took 10.76189091 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.096653225 seconds)
    (2/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.188898688 seconds)
    (3/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.093399593 seconds)
    (4/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.123914816 seconds)
    (5/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.292321614 seconds)
    (6/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.172416947 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.19535069 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.083315579 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.17506562 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.101241453 seconds)
    (11/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.222408178 seconds)
    (12/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.211945826 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074878581 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.113768617 seconds)
    (15/309) benchmarking ("sort", Float64, false)...
    done (took 0.148779006 seconds)
    (16/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.2130954 seconds)
    (17/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.205505136 seconds)
    (18/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.079696005 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.159803615 seconds)
    (20/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073095429 seconds)
    (21/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.15897577 seconds)
    (22/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.076891006 seconds)
    (23/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.182013552 seconds)
    (24/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.122235383 seconds)
    (25/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.187424894 seconds)
    (26/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.233441595 seconds)
    (27/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.247632584 seconds)
    (28/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.158918115 seconds)
    (29/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073836346 seconds)
    (30/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.073308192 seconds)
    (31/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.111813453 seconds)
    (32/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.189923551 seconds)
    (33/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.176605274 seconds)
    (34/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.096878485 seconds)
    (35/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070765877 seconds)
    (36/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.177361418 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.172317867 seconds)
    (38/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.05177625 seconds)
    (39/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.190521447 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066502117 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.073133944 seconds)
    (42/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.130356927 seconds)
    (43/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.217099335 seconds)
    (44/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.105826109 seconds)
    (45/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.136361933 seconds)
    (46/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.096738631 seconds)
    (47/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.092435486 seconds)
    (48/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.20150141 seconds)
    (49/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064445737 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.095021767 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.074237693 seconds)
    (52/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.158252155 seconds)
    (53/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07557737 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.116724639 seconds)
    (55/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.170301067 seconds)
    (56/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.091352883 seconds)
    (57/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.169680111 seconds)
    (58/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.110749262 seconds)
    (59/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.157087049 seconds)
    (60/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.074603112 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.090189407 seconds)
    (62/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.145296369 seconds)
    (63/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.136223331 seconds)
    (64/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070879714 seconds)
    (65/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.115752575 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.112529623 seconds)
    (67/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.137568477 seconds)
    (68/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.164947795 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.119761824 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.099320084 seconds)
    (71/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.093955337 seconds)
    (72/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.162664855 seconds)
    (73/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.088550972 seconds)
    (74/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.179168563 seconds)
    (75/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065621959 seconds)
    (76/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07706615 seconds)
    (77/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.089173468 seconds)
    (78/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.078584811 seconds)
    (79/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074556655 seconds)
    (80/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.089664747 seconds)
    (81/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.155956077 seconds)
    (82/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067240565 seconds)
    (83/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.084001965 seconds)
    (84/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.091195548 seconds)
    (85/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.053311246 seconds)
    (86/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.19153747 seconds)
    (87/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090032389 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 0.089504555 seconds)
    (89/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.052569899 seconds)
    (90/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.179173565 seconds)
    (91/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.169049475 seconds)
    (92/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.074077875 seconds)
    (93/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.085552056 seconds)
    (94/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.094302029 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.094577415 seconds)
    (96/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067268966 seconds)
    (97/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.157664305 seconds)
    (98/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.070303062 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.123243785 seconds)
    (100/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.0533637 seconds)
    (101/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.07619324 seconds)
    (102/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.169372777 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.113017866 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092060587 seconds)
    (105/309) benchmarking ("sort", Float32, false)...
    done (took 0.150524036 seconds)
    (106/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.053999613 seconds)
    (107/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.185085996 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.116745546 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.120643948 seconds)
    (110/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.052480601 seconds)
    (111/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.159005296 seconds)
    (112/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.119019342 seconds)
    (113/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.202374502 seconds)
    (114/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.053629436 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.097281039 seconds)
    (116/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075512017 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.119526788 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.135558675 seconds)
    (119/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.203160115 seconds)
    (120/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.094487775 seconds)
    (121/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.052360045 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.169319265 seconds)
    (123/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.110215708 seconds)
    (124/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.07599776 seconds)
    (125/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.075770721 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.096303049 seconds)
    (127/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.157985673 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.110910376 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.125310571 seconds)
    (130/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.169985246 seconds)
    (131/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074002817 seconds)
    (132/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.09470225 seconds)
    (133/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.108305798 seconds)
    (134/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.112459845 seconds)
    (135/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.053060907 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 0.160904925 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075017937 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.118685302 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074032087 seconds)
    (140/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.075581761 seconds)
    (141/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.077450662 seconds)
    (142/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.052603305 seconds)
    (143/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.098191306 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.073087019 seconds)
    (145/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.192566398 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074308332 seconds)
    (147/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.073980234 seconds)
    (148/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.079091734 seconds)
    (149/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068834207 seconds)
    (150/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.104413745 seconds)
    (151/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.074936833 seconds)
    (152/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.073504933 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.095758545 seconds)
    (154/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.066152524 seconds)
    (155/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.07424599 seconds)
    (156/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.077852103 seconds)
    (157/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.05339789 seconds)
    (158/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.088258179 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.095713321 seconds)
    (160/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.087858558 seconds)
    (161/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074581256 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066814055 seconds)
    (163/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.099960762 seconds)
    (164/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.099065327 seconds)
    (165/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.086018189 seconds)
    (166/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.068245221 seconds)
    (167/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.179658132 seconds)
    (168/309) benchmarking ("sort", BigInt, false)...
    done (took 0.211423847 seconds)
    (169/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.053422554 seconds)
    (170/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.097675633 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.148292157 seconds)
    (172/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.093220455 seconds)
    (173/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.062718411 seconds)
    (174/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071017194 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.118425439 seconds)
    (176/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.054048418 seconds)
    (177/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.098845908 seconds)
    (178/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051357531 seconds)
    (179/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.052534856 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066431911 seconds)
    (181/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.191908637 seconds)
    (182/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.074615702 seconds)
    (183/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.061450046 seconds)
    (184/309) benchmarking ("sort", Int8, false)...
    done (took 0.386806048 seconds)
    (185/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.082341737 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.088506389 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066981499 seconds)
    (188/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074716913 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.088869511 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073606543 seconds)
    (191/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.102320857 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.131581717 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.088218273 seconds)
    (194/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.06117201 seconds)
    (195/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.0729186 seconds)
    (196/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.119494697 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090006118 seconds)
    (198/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.102611903 seconds)
    (199/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.068749525 seconds)
    (200/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054079341 seconds)
    (201/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.097566942 seconds)
    (202/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068352148 seconds)
    (203/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.132051803 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066470465 seconds)
    (205/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.053267845 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.111010535 seconds)
    (207/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.076678904 seconds)
    (208/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.088923932 seconds)
    (209/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.090976951 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064519725 seconds)
    (211/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.074852759 seconds)
    (212/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.052250589 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.096281024 seconds)
    (214/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.193391837 seconds)
    (215/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.075281159 seconds)
    (216/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.076116787 seconds)
    (217/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074777682 seconds)
    (218/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.076566195 seconds)
    (219/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.051714099 seconds)
    (220/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.053166023 seconds)
    (221/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.088428593 seconds)
    (222/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.098898609 seconds)
    (223/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.090515217 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066661165 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073554971 seconds)
    (226/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.09740251 seconds)
    (227/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.067838332 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.115350486 seconds)
    (229/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.06889595 seconds)
    (230/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.077181289 seconds)
    (231/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.090881771 seconds)
    (232/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.053895403 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071343577 seconds)
    (234/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.074595413 seconds)
    (235/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051817162 seconds)
    (236/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.052218952 seconds)
    (237/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.073575553 seconds)
    (238/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.17171004 seconds)
    (239/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.091270438 seconds)
    (240/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.067814515 seconds)
    (241/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068347281 seconds)
    (242/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.08862216 seconds)
    (243/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.100357977 seconds)
    (244/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.074054431 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.113153557 seconds)
    (246/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.052234537 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.119359616 seconds)
    (248/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.078324185 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.162976168 seconds)
    (250/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051999016 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.164173123 seconds)
    (252/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.072843015 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.122141294 seconds)
    (254/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.052225036 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065878466 seconds)
    (256/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.075896648 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066499821 seconds)
    (258/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071956357 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.117405156 seconds)
    (260/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.052381793 seconds)
    (261/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.088623234 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.066157674 seconds)
    (263/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.052224762 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.088708636 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073224371 seconds)
    (266/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.052466745 seconds)
    (267/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.073592045 seconds)
    (268/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.052665128 seconds)
    (269/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.061681129 seconds)
    (270/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.141265131 seconds)
    (271/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.102687086 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.139178424 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075022789 seconds)
    (274/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074800747 seconds)
    (275/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.159792431 seconds)
    (276/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073060585 seconds)
    (277/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.094628588 seconds)
    (278/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.092089864 seconds)
    (279/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.07557146 seconds)
    (280/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072791098 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090132305 seconds)
    (282/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.085178367 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088864098 seconds)
    (284/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.088333647 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.074559109 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065293461 seconds)
    (287/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.089542014 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.130369276 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.087804291 seconds)
    (290/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079706691 seconds)
    (291/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.169645552 seconds)
    (292/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066689481 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.097498643 seconds)
    (294/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051964578 seconds)
    (295/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067298886 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.095116567 seconds)
    (297/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.074726885 seconds)
    (298/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.053904241 seconds)
    (299/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.092682453 seconds)
    (300/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.064116259 seconds)
    (301/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.067509862 seconds)
    (302/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.094826343 seconds)
    (303/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07309047 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.140467549 seconds)
    (305/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067532003 seconds)
    (306/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.091400038 seconds)
    (307/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.054460155 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07280953 seconds)
    (309/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.089224682 seconds)
  done (took 33.273581508 seconds)
done (took 34.18815037 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082158075 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115034891 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075595393 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.116434206 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081878456 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.101070446 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073603269 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079341794 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.10404243 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082600838 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.103141738 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055492599 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.09878805 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076992107 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.098403859 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093849444 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.103987436 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074122864 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074251068 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.088012457 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074985323 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.089094269 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068660294 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055514784 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.101147577 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07371984 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073093693 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.098643784 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066571638 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.089480781 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069491055 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072843954 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.08833168 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080032171 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.095829817 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073926175 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076567396 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.09979691 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067848162 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088292534 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074186237 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066483803 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.095640407 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07495318 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072044322 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093385109 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075311394 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.102869434 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092794543 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091060762 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07460332 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.100022531 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07760756 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073452143 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.092486803 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074677958 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.093752397 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09306734 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.098017748 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068213394 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073924682 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.097417049 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071364344 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.096339368 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.0744854 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077176236 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099425051 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072920191 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.098958971 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072047982 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066498348 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.096653527 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.07016301 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066587787 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.098359473 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077147307 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.088470037 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072110344 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073785271 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.094795641 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066374003 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067709219 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.09074095 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072915535 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090436818 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055646701 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070059012 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.095492769 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066038815 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.0761071 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.095542676 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073093471 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.068163684 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.100540324 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066718216 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.094325115 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066543115 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066685767 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.090574933 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070993427 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066237149 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090703212 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075428242 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.090065534 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073106338 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080705155 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.089200711 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073203933 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.088144497 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065856834 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.083859249 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.099304781 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067390599 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091376961 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065889566 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073721752 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.088013853 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066269431 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066856913 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.088808454 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072642107 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066491583 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091142875 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073797432 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.102568891 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066290686 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069963181 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091609363 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066248633 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072275794 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.088615759 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067139744 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067564489 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.086995188 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068969918 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088766366 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07339034 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069529061 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.097693741 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068844687 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.097482265 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070890896 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073152661 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.094143436 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065617238 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059871569 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091504627 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069136998 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068493043 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.089612294 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069046498 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066309621 seconds)
done (took 13.266494454 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066724196 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.17037314 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.127917508 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096434119 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.111331719 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06759674 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.10080533 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.104247194 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.092156938 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.128615517 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08814402 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.108934296 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115489804 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.089127809 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066978163 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070403606 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.090627304 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.090215053 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.125772095 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.11004272 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.118613848 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.089451337 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.122897335 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.091121855 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.113279608 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.095580026 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.090072362 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070913922 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.092829914 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103646383 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.109414758 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070654791 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067544395 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.123879583 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.120659764 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.086066039 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.08970005 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.085123823 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.09002288 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066673723 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.116491146 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.101096082 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.107169359 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.083025033 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.093358668 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.06972018 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.091111998 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08710009 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.115282738 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.081651004 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.11257003 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.134972225 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069563725 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.105993694 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066320328 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.112078646 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.106647496 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069319224 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067319466 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.09231939 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066188647 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.07059302 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.113033619 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.117765896 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070870193 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.10639469 seconds)
  done (took 7.31294203 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08500011 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.117824503 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085631874 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.108573991 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066287162 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067616596 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.09042869 seconds)
  done (took 1.594956129 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067229609 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089919399 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.113455609 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090513591 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.110435549 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088248155 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.100722426 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067738933 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.108824548 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068818593 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088378212 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.128570117 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069186216 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.098214344 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092110701 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.091155636 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091574058 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.091508705 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071171252 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.11493898 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070472014 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.111874754 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070008269 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068079193 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.106173681 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067856659 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.139638682 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072076149 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092143951 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070611396 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066224158 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.14291629 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105251244 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078292725 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06777247 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.106004651 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083374426 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089823179 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084421716 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.095742599 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082802963 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.06851812 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.092494097 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066534429 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072324073 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.101851255 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069500949 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.091574033 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070500903 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08829577 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.091862351 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081613996 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.090893948 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072081879 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069799193 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097096114 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078102234 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.091725339 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088435927 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069586938 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.108702109 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08509869 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.105745388 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085391235 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093497595 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082762444 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.105923228 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070384548 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069241993 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.09484615 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085140702 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.089345825 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06940809 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079345654 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.092721675 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091690473 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.114824344 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069229148 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.102079817 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068303799 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068894997 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.09196059 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091460813 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09478593 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068268367 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072890756 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094379198 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06609681 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067202233 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.095423106 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066757338 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.091966551 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071301548 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068954212 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09372808 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086101748 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.06853158 seconds)
  done (took 9.367549846 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069017045 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069430762 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093681693 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069665232 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069016686 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.092485458 seconds)
  done (took 1.454655337 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.099383242 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.09342795 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081854082 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.097157318 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106762831 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.106943726 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083483277 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.107238966 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08649776 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.103672898 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083081886 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.107003827 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.089655847 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.097598497 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08377988 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.09695547 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.08353826 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101802187 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080210758 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098392788 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.089425915 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.098041258 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074242488 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.084774037 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.095710878 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.073578134 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10188845 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081162348 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.103641026 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.083914284 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097573012 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07229485 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.097092509 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.08511983 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.106428462 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073252522 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09761894 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072420717 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10171521 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071657604 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.107942229 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074449956 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.079995254 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.09582626 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.107669765 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072778309 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073338975 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101819011 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08344215 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095470347 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.072701604 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096536676 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071603577 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.096477546 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072890726 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.10730609 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.0727539 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.107403399 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.074145507 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073335203 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.094900597 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07175653 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.10716973 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071988571 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.10598409 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.072891949 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096933181 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075000131 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097762079 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073387465 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.073238764 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093881794 seconds)
  done (took 7.410389106 seconds)
done (took 28.1126503 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.651623193 seconds)
  done (took 1.636346181 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.771911685 seconds)
  done (took 1.759228121 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.683284354 seconds)
  done (took 15.674917588 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.622204995 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.768396535 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.818266259 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.13575433 seconds)
  done (took 3.331063009 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.890950088 seconds)
  done (took 1.904681496 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.23695746 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.227028966 seconds)
  done (took 1.45864813 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.736222006 seconds)
  done (took 1.736964699 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.288680298 seconds)
  done (took 2.27930246 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.325918954 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.182415613 seconds)
  done (took 1.50889014 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.52395143 seconds)
  done (took 1.524574256 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.612036903 seconds)
  done (took 7.617248267 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.231390614 seconds)
  done (took 1.244189592 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.270530432 seconds)
  done (took 1.271692526 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.167909827 seconds)
  done (took 4.175948511 seconds)
done (took 48.116438984 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078550964 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082753424 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.105302961 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080308523 seconds)
  done (took 1.349127009 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077650283 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074969932 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101140824 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073560689 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102216871 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074570809 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.099990314 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07787693 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073729765 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.098315066 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074729614 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.097463601 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076468868 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.100005487 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071496384 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077478313 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100646831 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074239 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.100386975 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074098691 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.07195464 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.099004064 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076982649 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.096545504 seconds)
  done (took 3.057677534 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078913781 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074375806 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.0996199 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07313382 seconds)
  done (took 1.333979128 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078382283 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.117381414 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090419484 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.101668826 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093020595 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.111724454 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070017629 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.070662165 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.096988281 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.08070044 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.092632969 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099140908 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.113072479 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078125145 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.103693423 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.06732289 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069662543 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.112248196 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.07843601 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.102778917 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.072105851 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07818179 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.092575583 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.091941877 seconds)
  done (took 3.176057969 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.07738689 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104947986 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.103548572 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090820727 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.11688468 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06685766 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.101208639 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092961587 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.150117459 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066506843 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.095230893 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067166144 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.097331312 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065504553 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.077836853 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.133292397 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112756857 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.093267621 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098118561 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.090802059 seconds)
  done (took 2.919150328 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075354507 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070597727 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090076846 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069434797 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077062523 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.097306562 seconds)
  done (took 1.492435 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068618989 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068456007 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092093387 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067097384 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073075968 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092456004 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067115268 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067686262 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092105955 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068188304 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067919449 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.090531685 seconds)
  done (took 1.928846154 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.425576071 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069089645 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.09348894 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066035676 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071556228 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091711278 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081381885 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068684224 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.117051669 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06764641 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.0926292 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069509425 seconds)
  done (took 2.331307431 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265973086 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078444093 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.327152065 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169764045 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142226547 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156497716 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105299451 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140857754 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.200238476 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13986033 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203270718 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22724447 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13574696 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169052139 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115497446 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.134453228 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189131434 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22273142 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132181667 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201826665 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209524366 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156979581 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181006849 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128495659 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136070706 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151156167 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072218221 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105298241 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235410399 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162027959 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202896828 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139825059 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09800923 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233162014 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228164895 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197210192 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16426434 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085131225 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.158949134 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.165580447 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257699548 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114193363 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196691914 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135500292 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105786285 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174438678 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146814588 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.14790889 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.138075101 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11621721 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175521277 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244051761 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.167149618 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113471117 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137308625 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143687066 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.14527623 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104500194 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270495227 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198608964 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160138252 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.095835933 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098356879 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213062608 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16043152 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.142739086 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.154348168 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119831665 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168811372 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.212458327 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148537101 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174686232 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.181223792 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089738292 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148439195 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197274862 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159093077 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231828082 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156282389 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.074351313 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154452674 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131479224 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107832038 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.144914173 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101904162 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210533841 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126851329 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.141152428 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139968647 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138506805 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137728365 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198905014 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205332067 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131143833 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.067236281 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13145462 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.151328019 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178196239 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114663076 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136286056 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149609693 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.081115378 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194623039 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.076488749 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154470727 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.104865254 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154242021 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167914687 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076727334 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153116855 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128025518 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.130069278 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166046326 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221593404 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091853458 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108325016 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228507874 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157775387 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.133890918 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17627916 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.217233521 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.103055095 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13067921 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207376631 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245410651 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090810465 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224523687 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135241393 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085723982 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.114171425 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156540379 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141030455 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.14974734 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109471953 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.155689975 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202646639 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.100984411 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122372552 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167048767 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083049931 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108051719 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141937167 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128388835 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.098078638 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.127904433 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.134944399 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171462576 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180371114 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110611493 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180660743 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100668835 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227824711 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116817854 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.13268632 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106577499 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.096632297 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.167309877 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22066368 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081012359 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228984826 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.156842285 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13279733 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148721148 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085178847 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171166465 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105178551 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072403571 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202026917 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139352082 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139573345 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.187008692 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13218398 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.157033498 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.153095561 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163746275 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187563717 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.164182757 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134661924 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089415815 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141197129 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154388308 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.100275933 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.096242136 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.110781021 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132211861 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123984802 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085394048 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20021857 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157577766 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10091092 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140436866 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124423963 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180680433 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.103346826 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160652207 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.148489519 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12240469 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.186745202 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214510846 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16570866 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128298668 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203546177 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072709837 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075220149 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.118257881 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157373098 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110382465 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085484166 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146471566 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206306107 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15940216 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168997163 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139065026 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152097169 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215939085 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.073024588 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.145459669 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181257829 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156007984 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.157155762 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09194578 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.124073347 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176666371 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137106276 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274532896 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145834773 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158969381 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183729411 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.132301028 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081039586 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131429362 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16801118 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134210123 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.209927028 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127549839 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089810815 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138568532 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.108078198 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13220472 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157686974 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150037883 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164804373 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.143634599 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188700126 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078740271 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146179864 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15224731 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152626001 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.090951672 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149243342 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22363327 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097129921 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147990351 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213105399 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079957161 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.132802641 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237556565 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203834933 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086361483 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138638906 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150731021 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158325473 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173016973 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171674581 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140210626 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166193853 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139303608 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086812234 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115007422 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126061188 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108946692 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.123429947 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.14094927 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.147100611 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.122783749 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16253676 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141184237 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139376959 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148625788 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.12560052 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.093641679 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12585222 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209858428 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177610112 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239351376 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.103137939 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.208663102 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229117282 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076546671 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106557942 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.082686242 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170810556 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112649156 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164958102 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.123927607 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107366507 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181815305 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176188178 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123448915 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069884606 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140014116 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166990175 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140368316 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124984308 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.13338146 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198045182 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.131607643 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080140595 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153745737 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132978128 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131491111 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237257873 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062495417 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125822709 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.0763073 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107552473 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159675718 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21694662 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084403749 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.154024098 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147611787 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150807474 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159446095 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130203042 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12512557 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115866598 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20982232 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159099701 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.118215368 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142222208 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161452932 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216010835 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108354112 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.12256696 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235151838 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18705385 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.223700535 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.117743635 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145905359 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14472717 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138519898 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189769221 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110944337 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227297772 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084315919 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167855192 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132902906 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120815765 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159311013 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.124706627 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116034496 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182985649 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149568307 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109270693 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081223171 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146148005 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176862733 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109119934 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.102169917 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170228475 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.099700624 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169732907 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231317372 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083286641 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134777509 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123491957 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083482165 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137260654 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132279068 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114857487 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.125456632 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230693893 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.11921234 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184600355 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20017723 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144071979 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169051292 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128406617 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.664360861 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.10590097 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189835795 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146787264 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239955697 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127135579 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148711811 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139876451 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154623535 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175865727 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133458955 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.205979523 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162539439 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.150633874 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106349453 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132215503 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14081187 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.093331393 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135185588 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143712223 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145491293 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.1285929 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.151170937 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156883247 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.109713029 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122840624 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192330297 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146874143 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202458555 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173246843 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085846106 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148556245 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197971036 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107290998 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.153007673 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19054611 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137314772 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127998265 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.1086262 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.135539265 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207948554 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.100805039 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197177742 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182143404 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113878466 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14329471 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.176759722 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165064692 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137929281 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1564874 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124503276 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.142702481 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145299358 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085509601 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.10565822 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134552477 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142366151 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.101078005 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13153535 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.145808017 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184465982 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.097811884 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125008693 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105869419 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203409745 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24174538 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.090840781 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110904487 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149328852 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143213348 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.146749496 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156923764 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.108840114 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085205814 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.109232514 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.115878995 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.137342499 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143100294 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132641384 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141360006 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203193054 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.113295257 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.252281254 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096546637 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135092872 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069471682 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.106676543 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124938644 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126505753 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111523369 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12690951 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235865087 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.098826028 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.117992328 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121712896 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073803505 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110768867 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160512234 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140746508 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151585606 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124869257 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063826696 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139351298 seconds)
  done (took 71.939088995 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.132408754 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.103283011 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.11680459 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.172555253 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.145818945 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.238648764 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.18036341 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.222866155 seconds)
  done (took 2.413710298 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.06956295 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.118165733 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103817435 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.117233212 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.089742816 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068837129 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.300885261 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.110640427 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067649484 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.115284984 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.122038879 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.091436846 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.471007503 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066507221 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.094585033 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.084633199 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067840721 seconds)
  done (took 3.252079526 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.428484559 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.636108322 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.45252033 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073631481 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.889618686 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.107031606 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.372384777 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.163131052 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.09121056 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.43411315 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.728020368 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.149252779 seconds)
  done (took 17.626644352 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075530475 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069960493 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.110256781 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083717533 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.099187734 seconds)
  done (took 1.541242333 seconds)
done (took 115.364435862 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080326956 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.34644032 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053733233 seconds)
  done (took 1.535198704 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083827843 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085351939 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.110556461 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083936185 seconds)
  done (took 1.472350716 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.074816952 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07691816 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.111185973 seconds)
  done (took 1.369063254 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.280806719 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.166564122 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.090029564 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083407653 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078285342 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.104775103 seconds)
  done (took 1.374542901 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07275417 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075327129 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.099651912 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077177382 seconds)
  done (took 1.427020704 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076740754 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052740069 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055072398 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.081986031 seconds)
  done (took 1.374452455 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090339891 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.106091904 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081053073 seconds)
  done (took 1.382338353 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.108188756 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.113339173 seconds)
  done (took 1.330686502 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08165153 seconds)
  done (took 1.184555893 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.091624759 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.140634071 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.157549048 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.138430543 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.168609812 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.137995235 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088062918 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.116369948 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.104488814 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090364645 seconds)
  done (took 2.34372875 seconds)
done (took 16.509506225 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078346654 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.489641903 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360392973 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11760325 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667261321 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356567979 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.012162463 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119434881 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121924946 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094119048 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08387258 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.674499742 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.972533169 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.446008674 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.960201529 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.319458224 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.679491355 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068648028 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094269564 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06847389 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.969136556 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094497336 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067831705 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093650134 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649537943 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371109333 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094279415 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.320327791 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093659133 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070393866 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354809071 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09471279 seconds)
  done (took 16.160361717 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069958045 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.144491874 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074007617 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083865193 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.097474398 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069683524 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.098184929 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069557482 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153036316 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068801042 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111793311 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067813227 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098331658 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06923452 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087453209 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094941803 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068821848 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069060397 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094909727 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069088341 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112477528 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068705014 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068483256 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094659279 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068067768 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.106741696 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068078996 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068418745 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094527129 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07050831 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.097330574 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069246227 seconds)
  done (took 3.857791304 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115407642 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.152862587 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074555073 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128865737 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114333877 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096948426 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.170038148 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09380255 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155185955 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068561629 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111385722 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069233079 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127910231 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069814461 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114262727 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068740468 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069801096 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09454304 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068425247 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095423238 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087922923 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094686144 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069011329 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069089815 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095675603 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081900409 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094525877 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068716132 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068925481 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096616969 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071445571 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094761084 seconds)
  done (took 4.171894311 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.0727999 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075567379 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108866509 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084215915 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096721569 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07241517 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072978017 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.097181456 seconds)
  done (took 1.794348371 seconds)
done (took 27.095466982 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078808391 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070799569 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.099564724 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081813876 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.09977187 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079169889 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068088648 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.101881018 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.077118992 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073218674 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.103404575 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067887023 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.098175062 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06843867 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075015082 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.09495002 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080680229 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.098866946 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079964289 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079277911 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.096739933 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.077540133 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.101304346 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079307544 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.106524157 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080071491 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.082299935 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100607165 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069577052 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.097398922 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077201373 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.111338933 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068925427 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079937866 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.095355749 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068808936 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.068115581 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094624513 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080178813 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.100836167 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.071108151 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.101214914 seconds)
  done (took 4.696046525 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089016244 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091747816 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.112044999 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065889201 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.098223543 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065779324 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.116058664 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063861566 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059980221 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.116858152 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056280346 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060212294 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.090602904 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054328938 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059569576 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057447007 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.088837439 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056736696 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060352828 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.08691543 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057876692 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.05412925 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.087729179 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062894036 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059908087 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.088694779 seconds)
  done (took 3.08039029 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075692754 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084152889 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.114430418 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127990072 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.133912827 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077643996 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.106339517 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.087970934 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.11312922 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068013785 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072093034 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.123852547 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087990737 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.101402541 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068214955 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.111995434 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.0820123 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069495281 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.102059995 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090473706 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.112086891 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.078382296 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.119930662 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081442909 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067470253 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097476941 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071837054 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.109059578 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073039519 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078285184 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.099771811 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072614281 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.106465797 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080526865 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.099531393 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070550017 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090020214 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10579523 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078606833 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.095830331 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071591332 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068621142 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.115804081 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.112481272 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.094790028 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075113844 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.103089679 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077261785 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068605621 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.113292441 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076943528 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.094878148 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071680183 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067641399 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.095192786 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08156496 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070171257 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.097916378 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076893267 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.098595449 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.080624756 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071661406 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.110499682 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068345055 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.102485372 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067430349 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068760789 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.094725642 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091978365 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.096750994 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.110045975 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.097014339 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069407404 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07732654 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.103141579 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074763862 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.095826572 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083596526 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077939533 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.099292852 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077065946 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.098845535 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071665035 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088428827 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.099055454 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069380948 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069607566 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.101614285 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.07124457 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.096940418 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081418472 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068288049 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.098564898 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085209297 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.09500951 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069935764 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07418823 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.100984709 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067924055 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107191599 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074277893 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.095877595 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077254738 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067696088 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.09853584 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.07842491 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.099878409 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068052914 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072595118 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.101858347 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069305835 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069099794 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.098515537 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070035894 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.10418263 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074386483 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073058046 seconds)
  done (took 11.370578195 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.192309007 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.185929801 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070528848 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.178653565 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077208984 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.108177607 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.180019639 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097168414 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.096840729 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.06931892 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069196596 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.131802536 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.12474587 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.10648402 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.106865413 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068434913 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.114981905 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.105003758 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.182433472 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.176922395 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.115886647 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076567394 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070417766 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.098816321 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070919337 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077541404 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.113011535 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076938788 seconds)
  done (took 4.281153223 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.0818568 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.129856029 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073708087 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089172544 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.120591483 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068557682 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.101874419 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070605217 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.108358716 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080509927 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.095632944 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073804104 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07466435 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.106624319 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069132808 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.105806157 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078218836 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069357822 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.099549012 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073807914 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.105744341 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081959162 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.099141348 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067553832 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07411074 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.095237387 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065601223 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.114181779 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068074744 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.118200864 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066033359 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074240435 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.109708241 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.06897502 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.095654303 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.07194141 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071437232 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.099734933 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070441944 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067246445 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.094720531 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058308805 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067273038 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.108604571 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074671191 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.087737324 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07461184 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073889967 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.101094435 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06667685 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.098549336 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070739296 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071405108 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.105405354 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07300627 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074027119 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.100844266 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066094774 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.103767892 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071999175 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064758707 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.094952974 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073056588 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067687281 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.104489094 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073041536 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.094853268 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071755339 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.073276748 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.102419951 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071561302 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071380942 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.094051267 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070044184 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.101322578 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073424779 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072868461 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.095325188 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.06799864 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067933232 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.083809622 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068596545 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053921785 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.099763976 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067096667 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066605885 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.099357764 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073738531 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.109485082 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069373458 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.102656343 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069160153 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067671055 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.099574595 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064055295 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071338722 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.11222245 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.112141275 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069055589 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066465384 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.11140542 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.07348732 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067561129 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.085189744 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074997214 seconds)
  done (took 9.888129804 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096014747 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093233123 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.097740811 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08296154 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.123903923 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.093566241 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.104167058 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.074472882 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070237206 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.112938823 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.068827925 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.104674665 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06844823 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077064061 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.125629221 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07585856 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.098668624 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077617246 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072457527 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.136446414 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083705752 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.111356851 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.081679724 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.097837794 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072825248 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080303241 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.124774257 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080007002 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.107645074 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.085416431 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.080814747 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.124172435 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.086625077 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.100922887 seconds)
  done (took 4.322339645 seconds)
done (took 38.752596107 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.228111794 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.405142556 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.191036595 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.065560383 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.204141322 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.210519403 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.202512874 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.191193375 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.358813999 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.191735113 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.441695992 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.842366334 seconds)
done (took 58.671772048 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.197282788 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.333747256 seconds)
    (2/2) benchmarking "String"...
    done (took 1.461050954 seconds)
  done (took 3.93111408 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.554218648 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.075384881 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.448006376 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.192333381 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.192641841 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.495344213 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.842120206 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.027415031 seconds)
  done (took 27.409443385 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.193502815 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.562897965 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.666349473 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.662134749 seconds)
  done (took 18.223438727 seconds)
done (took 59.453312112 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.229548566 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.256494703 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.193090278 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.196779636 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.300224132 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.217865185 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.535166203 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.212097958 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.195544491 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.203347111 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.194560316 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.208081241 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.19188955 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.534218769 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.199604621 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.194140382 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.282677052 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.660665858 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.574961231 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.20543335 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.197806967 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.234733377 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.208857167 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.197017065 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.237046787 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.193280711 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.206485552 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.201541685 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.425840741 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.194743345 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.286941378 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.730101852 seconds)
  done (took 190.238853146 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.194654422 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.322782962 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.400317366 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.254233971 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.814841313 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.393201862 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.335273466 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.879234607 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.208824646 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.203203455 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.515996352 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.193823602 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.572824479 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.170127109 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.203242012 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.257221203 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.509894372 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.54434327 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.209597512 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.452289916 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.214636106 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.556416533 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.490467571 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.441458377 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.196941034 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.206134199 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.215066048 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.211891176 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.383512852 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.445765845 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.238028187 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.214681186 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.771377674 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.053526988 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.221945941 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.204645677 seconds)
  done (took 150.842340945 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.456756089 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.194211195 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.19500391 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.195035153 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.225300528 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.195385635 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.715804473 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.716141862 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.700403982 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.407945515 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.256399138 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.390594335 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.195767175 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.286775163 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.208056245 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.196211186 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.211641805 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.223823644 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.196007855 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.196006513 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.717519509 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.208111955 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.339269737 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.201782663 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.196433222 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.226715403 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.591794012 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.19602368 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.225814236 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.513039463 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.240866951 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.197042337 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.477483655 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.97993086 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.304451234 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.198374395 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.226455879 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.197923372 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.46426358 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.197572653 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.196715352 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.197391752 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.199501393 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.755778646 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.196414526 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.719075414 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.197872412 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.089834702 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.197446542 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.198378723 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.538343015 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.612040603 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.198782398 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.198016184 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.198137872 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.20130207 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.198699204 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.197548528 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.228377146 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.480051274 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.294951323 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.198724367 seconds)
    (62/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.197787753 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.202091152 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.228475786 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.197405467 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.267562791 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.199541601 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.559440842 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.252948089 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.306790009 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.721600463 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.199154416 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.291867249 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.31687503 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.199303462 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.199666619 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.199109456 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.199607806 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.305119301 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.199815694 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.59648549 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.205708395 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.201310394 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.258184412 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.293215566 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.19963876 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.495068292 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.19989638 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.200484439 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.899313069 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.290057253 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.19938959 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.199792427 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.199926369 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.199438672 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.595021858 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.730147532 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.397220708 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.202050693 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.54746446 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.201199674 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.609135031 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.71565577 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.76430386 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.20187851 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.307197476 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.205392832 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.203092224 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.199998052 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.229164858 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.201251945 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.258823878 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.201004569 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.595933297 seconds)
  done (took 343.695301208 seconds)
done (took 687.372576516 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.864702557 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.85215595 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.961722543 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.84636119 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.831412278 seconds)
  done (took 10.501970673 seconds)
done (took 11.648008755 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.379729338 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.379005329 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.258775077 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.380867978 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.228900028 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.396987516 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.358915069 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.221058717 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.299805257 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.274325642 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.298199445 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.248949115 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.227580735 seconds)
  done (took 18.098553469 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.510577355 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.531738039 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.265644227 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.509610999 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.241747493 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.527038486 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.389543361 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.395308642 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.387954737 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.215788663 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.215857325 seconds)
  done (took 16.338059948 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.501684606 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.49802677 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.268733692 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.508315337 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.24213878 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.500124407 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.393616818 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.399347335 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.385053983 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.217154989 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.215081896 seconds)
  done (took 16.276040489 seconds)
done (took 51.858501862 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.2109304 seconds)
  done (took 2.358551926 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.24468663 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.406291048 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.225125565 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.214904514 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.213022386 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.212390633 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.215501093 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.211306071 seconds)
  done (took 11.091803505 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.210843137 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.211147136 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.210727002 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.207860636 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.207906797 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.20918254 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.210505479 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.211518108 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.211173712 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.208998183 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.208572827 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.20900546 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.211401537 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.211275848 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.208316457 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.208294213 seconds)
  done (took 20.505306801 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.211566633 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.209593349 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.209184537 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.209447985 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.20968286 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.209664006 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.211334113 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.209263207 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.210839725 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.209460967 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.211146087 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.208958557 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.21010623 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.210434105 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.209656227 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.210427717 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.209368487 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.210661382 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.214655698 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.210173035 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.211028945 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.209646346 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.21099975 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.211022595 seconds)
  done (took 30.199783005 seconds)
done (took 65.302801302 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.238786645 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.822025033 seconds)
  done (took 9.209334751 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.213211203 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.213297558 seconds)
  done (took 3.576690104 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.212174095 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.213156601 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.212596885 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.212911312 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.212029587 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.2133565 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.21333277 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.212577704 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.212272094 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.213226957 seconds)
  done (took 13.277634559 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.213475776 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.213936461 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.21055813 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.213582617 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.214347209 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.21084791 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.214290529 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.21351132 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.21437698 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.211191698 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.214170858 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.211457204 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.21329215 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.211350735 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.213861098 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.212497776 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.211459751 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.211054375 seconds)
  done (took 22.979857591 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.214616905 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.214597955 seconds)
  done (took 3.579889847 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.212138428 seconds)
    (2/7) benchmarking "second"...
    done (took 1.211793577 seconds)
    (3/7) benchmarking "month"...
    done (took 1.212076906 seconds)
    (4/7) benchmarking "year"...
    done (took 1.212018146 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.212634038 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.211756374 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.211943718 seconds)
  done (took 9.635666825 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.215156078 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.393951788 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.471823868 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.800159322 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.215347764 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.219494926 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.025062919 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.218232189 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.220651231 seconds)
  done (took 13.931365272 seconds)
done (took 77.3412306 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.220194586 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.207226137 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.114093623 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.211927774 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.223737899 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.506707864 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.245505235 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.328466576 seconds)
done (took 37.210923325 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.210499447 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.956798299 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.996700193 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.207244018 seconds)
  done (took 11.314308718 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.207381336 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.115890398 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.197742397 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.207484289 seconds)
  done (took 17.880987274 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.82180887 seconds)
    (2/2) benchmarking "read"...
    done (took 1.538423398 seconds)
  done (took 4.511777485 seconds)
done (took 41.070955354 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.214065056 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.211857319 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.214936165 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.215138779 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.212335608 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.214306331 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.213011252 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.212711889 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.212130313 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.214774234 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.215753674 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.215236693 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.214512788 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214905277 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.212865996 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213129056 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215375181 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.213280378 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.215467148 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212863993 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.212789024 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.216432109 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.213487622 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.213838419 seconds)
  done (took 30.286383674 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.215975626 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.214427448 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.216099457 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.216481985 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.213921935 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.21716881 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.21622869 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.214090318 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.216241208 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.216709569 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.213824389 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.214537546 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.217540232 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.213785167 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216827698 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.214283181 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.21672294 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21502333 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216449615 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.215047277 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.217257235 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215255402 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.21384061 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.217845456 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.214916712 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.21370936 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.216977239 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.214668029 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.216991592 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.214989345 seconds)
  done (took 37.62216253 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.221985482 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.224378292 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.217076924 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.217643931 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.217144896 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.216434888 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.217141081 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.217030406 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.218747874 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.218191718 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.217832639 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.218060933 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.218323696 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.217145279 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.218239537 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.218158521 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.218490608 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.218257158 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.217363827 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.218119706 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.218008013 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.218087011 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.217976175 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.222454192 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.22179306 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.222090298 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.221684073 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.221782396 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.222402775 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.221888157 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.222012368 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.22191331 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.222890038 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.223144694 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.222131904 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.223499856 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.228254258 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.228959551 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.223180511 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.221981951 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.222105554 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.223163277 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.222597999 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.223456237 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.222421326 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.222623895 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.222944331 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.223325832 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.222745818 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.223942224 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.223664984 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.224185226 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.222878072 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.222896082 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.223445903 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.223206926 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.223917346 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.224757948 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.223714466 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.223880521 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.223418844 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.224142357 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.224338618 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.223155722 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.225589632 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.224048207 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.224822352 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.224644519 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.22422081 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.224234346 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.224450109 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.22482041 seconds)
  done (took 89.127376717 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.224244541 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.221810958 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.221781898 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.222247134 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.222271595 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.224135324 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.222424072 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224245207 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221664186 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.224539762 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223556276 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.222751142 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221423361 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.22430122 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.225453411 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.222179803 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.224550356 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.22196342 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.224714181 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.225066626 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.224553182 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.222157792 seconds)
  done (took 28.073895263 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.224768272 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.226344642 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.222935872 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.225615254 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.222129399 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.224478886 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.225021659 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.225559273 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225417797 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.223255853 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222965478 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225912698 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.223456143 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223690182 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.223489069 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.223340097 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.226076925 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.223620793 seconds)
  done (took 23.200523083 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.223929808 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.22364705 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.226307461 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.223912164 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.224055941 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.226645844 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223970249 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.226762571 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.226850759 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.224222031 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.226650062 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227261621 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.226818675 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224624476 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228432785 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.22445792 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.227263781 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224087152 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.225849218 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.224774749 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.223318595 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.22611447 seconds)
  done (took 28.123787037 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.227075348 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.226943353 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.224971961 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.225857155 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.224749324 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.226744842 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.228327638 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.224724981 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.226856807 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.228374759 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.224494925 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.228327878 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.225527296 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.226659853 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.225305601 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.226532589 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.228229506 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.226412502 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.22815119 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.225166389 seconds)
  done (took 25.694270726 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.228242585 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.229989721 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.229218005 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.230028476 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.229057248 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.228961709 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.229548193 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.229226158 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.22984051 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.23074071 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.22985074 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.230319402 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.230187083 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.230089432 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.230399278 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.230683454 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.230895728 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.229418277 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.230606519 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.230949792 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.232183537 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.229571838 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.230307454 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.231169644 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.230626488 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.230729612 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.230891786 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.230923981 seconds)
  done (took 35.611094486 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.229844025 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.230082902 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.22732444 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.228557026 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.227809307 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.22752004 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.227773697 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.227822503 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.230093109 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.227540818 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.230056145 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.230432991 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.230384776 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.230017267 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.231010806 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.230615178 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231009999 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.228180354 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.228573508 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227195512 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.230532532 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231242484 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.230788654 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.228510084 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228085607 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.232011521 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.228528949 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.229601297 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.231446364 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.22840777 seconds)
  done (took 38.048633874 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.249953694 seconds)
    (2/2) benchmarking "in"...
    done (took 1.249403319 seconds)
  done (took 3.667640566 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.229120865 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232140951 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.231569833 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.229479807 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.229355314 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.233128929 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.232214549 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.230176669 seconds)
  done (took 11.015447286 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.232510569 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.232563524 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.232017582 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.231704557 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.232924943 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.232619498 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.239564363 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.247882373 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.234117565 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.233517234 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.239070542 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.238755613 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.235761223 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.233796428 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.2329293 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.235175822 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.232562915 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.233426201 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.233949318 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.232495721 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.233081273 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.235967654 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.235789767 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.230830213 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.234620466 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.243354633 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.239258199 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.232554673 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.233453625 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.238856482 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.233621822 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.230650269 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.233892687 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.234295498 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.234717054 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.234154688 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.243249986 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.249667579 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.240781003 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.235270517 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.234579718 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.232250654 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.236360394 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.23544919 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.236764969 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.234267027 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.235246266 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.232825252 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.23324485 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.237344805 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.2398428 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.234090486 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.231323132 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.239836314 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.237050457 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.24275856 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.251800911 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.237855717 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.244304475 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.245743574 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.249086371 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.24283497 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.2374463 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.236045957 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.246250164 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.259335301 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.24246532 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.249587897 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.234140257 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.236624168 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.243488617 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.248677804 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.246645149 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.237343446 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.236818681 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.236870622 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.235695488 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.235956646 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.244182124 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.256179853 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.236213166 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.236185911 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.24773768 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.258075823 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.237269266 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.237637513 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.235846024 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.23697662 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.238279087 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.247889907 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.25321126 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.237096276 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.236407363 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.237814477 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.239462293 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.237912936 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.237426302 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.237571653 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.235424909 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.237535947 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.237455673 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.241979363 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.24674899 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.23909633 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.237770192 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.244725479 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.238436262 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.238221976 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.245002947 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.239013837 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.238141583 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.239762399 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.243891849 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.235201575 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.242400516 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.246257593 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.238716035 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.240196552 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.239328885 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.239246489 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.248500517 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.263870849 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.239101051 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.238305229 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.244042387 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.249706693 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.239621948 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.24230891 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.239481242 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.235910265 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.236146939 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.241591772 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.239477011 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.240073435 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.240030053 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.240337499 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.23661453 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.239706388 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.240839764 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.241331063 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.240518958 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.240525433 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.241677399 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.242361451 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.240710478 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.24176812 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.245736895 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.24105181 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.241939738 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.242038547 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.237887077 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.241268182 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.241412481 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.241117186 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.240281102 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.24061857 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.240327567 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.241181599 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.240902568 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.240680604 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.240623829 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.242851926 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.244518322 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.242309972 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.245174492 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.240148041 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.239383888 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.242177679 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.241886364 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.241356663 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.241570701 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.241373367 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.24489344 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.248893032 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.241054545 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.242060136 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.244559616 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.241642411 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.24192618 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.241798334 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.247021912 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.249136999 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.242286595 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.249270852 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.242769911 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.241995553 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.242136811 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.24220977 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.241197398 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.242028089 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.246121245 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.250278676 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.255565392 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.251334795 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.243568617 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.245937457 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.244231524 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.246018769 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.248069316 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.244049591 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.243604705 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.243821256 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.242936605 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.243447653 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.244322628 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.242699733 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.243493904 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.243892973 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.242827069 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.243631938 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.243386546 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.244327294 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.24494667 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.241378642 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.243464217 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.243636047 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.243703555 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.241589525 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.243115039 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.243054457 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.245473515 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.243784822 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.251314946 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.242879074 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.246638476 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.246712689 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.243319998 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.244086416 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.245846585 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.247041341 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.245746869 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.252587635 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.262324455 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.246483482 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.253342169 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.262240837 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.244438146 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.248621661 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.245435648 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.243465076 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.248823638 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.252449034 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.245294872 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.24628326 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.245979112 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.246861379 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.245697355 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.251744608 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.244360741 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.245381367 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.245744831 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.247310797 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.243303692 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.247273758 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.246393441 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.247176771 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.24930331 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.246607063 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.245457798 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.248154168 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.246149225 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.246916386 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.246111064 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.249353214 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.254279843 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.25207618 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.246664925 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.249438315 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.247765389 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.249718001 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.246428884 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.246020695 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.247191892 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.259391778 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.254925894 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.253577884 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.249144112 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.247381858 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.25344471 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.248631475 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.25091271 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.247094877 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.247571591 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.247222227 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.246765772 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.24575782 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.249346847 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.247453349 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.250355941 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.249520249 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.250973744 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.248087938 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.248464603 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.248538824 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.248197215 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.248345918 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.247974066 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.24887863 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.250054425 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.250465922 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.248116839 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.247568862 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.254703055 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.265938069 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.249970482 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.248875148 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.249619354 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.247663087 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.250233808 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.248903068 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.25201244 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.256548311 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.252401882 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.257209353 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.250575041 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.259548762 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.2486419 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.252767843 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.256199337 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.247430862 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.248005382 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.249137192 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.249475973 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.257308248 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.266510875 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.250004945 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.253758931 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.249959933 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.250779662 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.251196308 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.250561238 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.250235675 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.249722521 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.259200269 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.268462072 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.254054383 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.252834898 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.24693091 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.250997999 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.249751573 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.249263981 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.253359298 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.250657038 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.25172386 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.250011342 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.251762171 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.250686636 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.250764795 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.250610203 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.247992581 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.250990585 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.257763654 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.268315172 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.254138535 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.251386698 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.259208621 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.251694543 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.258638123 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.268486196 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.253041315 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.25120007 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.251876569 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.25234651 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.252519773 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.251712661 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.251621996 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.252862623 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.253909795 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.251927027 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.255176793 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.252699261 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.251823697 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.252004792 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.261582381 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.274587594 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.254229893 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.256841939 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.24951282 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.254443137 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.257290628 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.252757165 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.252279717 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.255287174 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.262917543 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.260391086 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.253078876 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.252670833 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.252577576 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.253751563 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.252619272 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.253170458 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.253518907 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.254015329 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.253958769 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.25370858 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.258002201 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.253569915 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.254672765 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.255383359 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.254931867 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.263949178 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.253588142 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.255366951 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.254750098 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.253906307 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.253410539 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.25402805 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.255128312 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.254586439 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.253796961 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.25580449 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.261142867 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.260429418 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.257075483 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.254749554 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.254126846 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.2540253 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.25541822 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.255049508 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.254205368 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.255151889 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.255226805 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.254267983 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.256673877 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.253836063 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.25421911 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.256100522 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.253652767 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.257936624 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.262156559 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.255218597 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.253440191 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.254215979 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.255148553 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.25484995 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.25586508 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.262900873 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.259280447 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.266116088 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.263281286 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.257481346 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.255270952 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.257774545 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.262704299 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.254652995 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.25548021 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.255694348 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.257734591 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.256927944 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.259240684 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.25569546 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.261696699 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.256764452 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.256283716 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.264983354 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.274500736 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.25535969 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.258112694 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.260337482 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.256341223 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.253230956 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.257138376 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.255347869 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.263347965 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.275325605 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.257421392 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.259726957 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.255753282 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.258054931 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.261615046 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.257097202 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.258669897 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.254192791 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.25857476 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.25671698 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.256613827 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.2549387 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.257446358 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.257801479 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.260320406 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.263364305 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.255020694 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.260824489 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.259409666 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.258937173 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.257807797 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.257430749 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.255275375 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.255380012 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.257793149 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.258314995 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.258830187 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.261579967 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.258416519 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.259058699 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.259515218 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.258064234 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.261372931 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.268606451 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.265987649 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.25490827 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.259257012 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.260915552 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.262452175 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.258881928 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.258756333 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.259619814 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.260386099 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.259144319 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.258657298 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.258339274 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.262808748 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.27390473 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.276054534 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.25895814 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.260233759 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.262787033 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.260132355 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.256523778 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.260140824 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.262707946 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.262102891 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.266441324 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.260181312 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.267672328 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.276918519 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.261301451 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.263700026 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.263852442 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.26818095 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.261633594 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.260233339 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.26043681 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.265301098 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.275585126 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.260907975 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.271204268 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.289916055 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.278677047 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.262069929 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.262468691 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.260661705 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.261567621 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.262347787 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.261913445 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.260925575 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.260941789 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.262176411 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.262340833 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.267403697 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.263215299 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.260533471 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.261801191 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.261792034 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.262339481 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.258284728 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.261259458 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.262277388 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.261306448 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.261548073 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.261980077 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.262093609 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.275051425 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.27195332 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.263441971 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.262736456 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.258883594 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.266412825 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.265607177 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.273291997 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.269472965 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.262313458 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.262314537 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.264764187 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.262332842 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.259598455 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.263162197 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.263875008 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.262353402 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.259619274 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.276263742 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.27045657 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.267983373 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.26393534 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.263077901 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.26289678 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.26463977 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.263107113 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.263272995 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.263439673 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.264259112 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.267140627 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.262640825 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.263384245 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.266950856 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.270358411 seconds)
  done (took 746.501251837 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.260389719 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.260951234 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.261078323 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.260787184 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.26115219 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.261466161 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.261446347 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.261662986 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.261539084 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.261781457 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.261834984 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.26130469 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.26135458 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.2622328 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.261726419 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.261758622 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.261323661 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.260436111 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.262320296 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.262543391 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.262191987 seconds)
  done (took 27.690982468 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.263444741 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.262316254 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.261114456 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.264136233 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.262809092 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.264466177 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.262351612 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.265416242 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.265054066 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.263553406 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.264508855 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.264389624 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.263045784 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.261742727 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.262751107 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.265375601 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.265130355 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.261803896 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.264954187 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.261959003 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.265951617 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.263635534 seconds)
  done (took 29.001225303 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.266184583 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.266144374 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.264721329 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.263441186 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.266674424 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.263417762 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.266635612 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.266607361 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.26652534 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.266853231 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.265677008 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.267838184 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.272104546 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.270527807 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.268100319 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.265985222 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.410692721 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.266367369 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.267024504 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.267069772 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.26335162 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.273017678 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.265018417 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.26374263 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.266112724 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.266914884 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.267103653 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.26668133 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.26660585 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.268920399 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.271148197 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.267615206 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.267654582 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.269600979 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.26683349 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.268870385 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.270276257 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.267704336 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.26476751 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.26783182 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.277692339 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.287043214 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.268044729 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.273909317 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.267988625 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.267594048 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.272228282 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.275341353 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.265536112 seconds)
  done (took 63.487359934 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.268323345 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.267869711 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.266065991 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.267991616 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.268681303 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.268398498 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.268589039 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.268808365 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.265276771 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.266056154 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.267854153 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.265800328 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.266305949 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.268666753 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.26838196 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.266641997 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.265559672 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.266189239 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.265688059 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.266225932 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.266398386 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.269637456 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.268664713 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.266603729 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.269353366 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.265732649 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.267114961 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.270346518 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.266632538 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.266663363 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.268366502 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.269648505 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.269975611 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.267298111 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.266686316 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.271026277 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.269921954 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.268595683 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.270533299 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.267062158 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.269929457 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.270006944 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.269866902 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.270435963 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.266722724 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.268045014 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.268136679 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.267197859 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.267744522 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.27037224 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.271246599 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.267736564 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.270188277 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.267708057 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.270669013 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.271187984 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.26764001 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.267920488 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.269798372 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.267355487 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.268174285 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.271152919 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.268951522 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.270678125 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.271022215 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.269166032 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.268479329 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.271433491 seconds)
  done (took 87.45535966 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.271437878 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.27082472 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.270973967 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.271490253 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.271540808 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.272123683 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.272097675 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.272072619 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.270090971 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.272611918 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.271252223 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.271624849 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.271905778 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.272057 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.27230605 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.272383038 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.272360363 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.272782175 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.272060381 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.272990169 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.273199506 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.272370277 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.273278017 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.273020327 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.273226419 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.272958074 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.273142536 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.273163214 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.273477899 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.2728051 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.273431532 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.273449519 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.273702155 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.273376755 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.2737842 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.273558541 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.274155952 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.273356076 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.274058362 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.274206268 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.273328667 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.273674677 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.273753516 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.274016748 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.27516221 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.27442495 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.274376851 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.274181026 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.273917481 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.272850025 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.274589642 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.274119156 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274255813 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.274466282 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.2742006 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.274556123 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.274419013 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.273994515 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.274379483 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.2747609 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.273578524 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.274724237 seconds)
  done (took 80.145716046 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.273820455 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.274452351 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.271211059 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.272212072 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.275401599 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.272381569 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.275244174 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.274834573 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.274812392 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.275500738 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.27489381 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.271702772 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272501536 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.274700259 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.272649734 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272880413 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.273093281 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.27325215 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.27516538 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.272494204 seconds)
  done (took 26.683545043 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.273085046 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.275293322 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.272352105 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.272717596 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.275645538 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.273452602 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.275831044 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.276229256 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.273398 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.275654232 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.2756247 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.277162401 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.27326645 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.273850381 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.275147756 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.275122556 seconds)
  done (took 21.604651286 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.273980615 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.277154077 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.276693712 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.276296685 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.27430346 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.274652154 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.276656962 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.274427551 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.274208111 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.278471617 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.276416158 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.277372679 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.277491679 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.277844046 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.27461975 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.27718122 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.275213489 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.275639216 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.277565801 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.278666435 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.275303778 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.275007135 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.277495484 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.277344992 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.276358503 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.274926826 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.274222342 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.274759641 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.273793686 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.276811625 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.27422317 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.274802791 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.275307188 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.274502859 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.276924159 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.274143409 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.276494145 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.277648898 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.277595182 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.276923173 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.276651482 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.273631292 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.27630741 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.276291787 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.273446924 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.275701778 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.275383149 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.273771141 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.273385063 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.274799021 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.275776562 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.276451662 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.275889355 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.276642989 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.274905024 seconds)
  done (took 71.382420057 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.275461614 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.275566953 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.272285708 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.275142624 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.275999995 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.273465898 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.276171706 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.275085778 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.273140103 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.275001754 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.274183665 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.275603303 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.273282002 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.275214967 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.273595876 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.276088276 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.272848805 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.27271881 seconds)
  done (took 24.152963938 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.272713248 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.273180966 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.275836975 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.273665348 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.272422814 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.276170691 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.271728816 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.276110029 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.275137842 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.272772717 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272290849 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.275244186 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.275843687 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.275722768 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.273660917 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272335917 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.275265816 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.275672605 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.272941107 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.273211884 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.276448106 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.274819503 seconds)
  done (took 29.243513881 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.274646165 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.275784282 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.291653024 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.316185598 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.305897628 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.276160255 seconds)
  done (took 8.951878229 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273857052 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27582738 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.273915311 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276269258 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276505943 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273663629 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272750042 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273143707 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275958385 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274012359 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274013466 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275807592 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27616872 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274207601 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276258825 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276958257 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273251386 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27522457 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275373256 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277364677 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273987713 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27708832 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274064315 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274695423 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274908526 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274698231 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277172106 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275672974 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275302996 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277575227 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278034101 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274309458 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27795042 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274330598 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278150804 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278075756 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275088231 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277396175 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278000849 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275208191 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.278014314 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278512868 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278671723 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27519312 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277797067 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276787745 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275664153 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275534186 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275845149 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278822896 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278464139 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276109433 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280008975 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278864235 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279958609 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279747839 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276508581 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276477654 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278555308 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276649126 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278675549 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278683907 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276845206 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277528494 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279392092 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276193803 seconds)
  done (took 85.455036308 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278048135 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.277298472 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276680489 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278066795 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276674528 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276832229 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277293735 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276745127 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277948436 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278628253 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279627441 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277795721 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277674899 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277575078 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27746112 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277125582 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276116099 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278693198 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277557063 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279632762 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2772729 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277994143 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27750021 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277804244 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277988771 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280184297 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277409678 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277135457 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277208724 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277283785 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277466169 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277742939 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278326672 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.277881225 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278170046 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27671168 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277650925 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277902861 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277559008 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280702532 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277812243 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28064096 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277931831 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277906132 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278548984 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278588844 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278416686 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277939156 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280060856 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277959181 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279165408 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27978863 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278959061 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277580411 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277873798 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277874534 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278950844 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278415015 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279199725 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27989666 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278516948 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278171368 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281433088 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277682046 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277843334 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277694257 seconds)
  done (took 85.572996555 seconds)
done (took 1738.953141669 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.327148195 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.377896942 seconds)
  done (took 13.919893139 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.441562282 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.392740446 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.278042844 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.311810669 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.27948695 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.298059294 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.300893299 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.27832334 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.278525932 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.278255494 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.278156482 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.463657205 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.333421298 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.278839782 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.279102266 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.372130254 seconds)
  done (took 42.36002883 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.306963242 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.28565497 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.391924069 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.299980469 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.307135226 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.460633357 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.333736901 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.283693117 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.4436388 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.323556773 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.761119611 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.305146824 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.283383594 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.331855961 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.300716841 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.457953305 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.515716208 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.76496835 seconds)
  done (took 29.373763104 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.712436767 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.299385602 seconds)
  done (took 9.227902694 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.307123278 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.32000023 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.280344209 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.304149263 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.290706794 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.309979149 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.357662361 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.294124169 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.297707142 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.346260183 seconds)
  done (took 64.324215598 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.300027019 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.281833339 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.282233002 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.280225817 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.27338056 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.273003584 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.279161433 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.273529997 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.619555012 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.395091531 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.291893401 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.285615041 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.280257498 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.28161532 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.276429357 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.3144087 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.431683815 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.276314499 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.276011829 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.284061872 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.28092172 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.372696515 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.31654442 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.276367991 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.393603202 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.615511812 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.283728863 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.285730218 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.39736403 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.278503826 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.278410697 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.28001868 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.281873322 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.846615287 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.752117593 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.286111083 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.303104798 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.289011509 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.277377965 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.397858285 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.28051844 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.286568852 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.27380284 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.742699762 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.433733421 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.383829896 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.457308292 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.279545075 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.280673199 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.339497178 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.280595335 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.280717701 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.307457807 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.005099991 seconds)
  done (took 107.599371696 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.285835632 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.760477336 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.441114688 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.295731013 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.111266453 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.881454142 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.272340199 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.534254824 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.295008953 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.272531929 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.547755161 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.748693601 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.273430364 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.343918385 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.754176039 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.301979854 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.270153821 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.176769085 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.270890351 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.272024831 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.672469793 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.295844254 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.28278509 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.360942923 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.307969695 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.698524577 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.543772625 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.71848291 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.273078376 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.26971705 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.702044065 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.276701011 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.30609668 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.272389085 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.52234249 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.584101972 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.56205555 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.275024206 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.310614749 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.273432216 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.289445382 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.686267748 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.572447062 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.268458555 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.267124574 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.689901471 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.268240177 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.26829041 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.270758736 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.471125395 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.178217674 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.269216366 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.497680388 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.270662529 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.603050556 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.268854844 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.326542873 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.717183448 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.268804158 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.342116838 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.317152719 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.266168818 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.26911338 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.267354539 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.269713272 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.574156099 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.623105679 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.268764807 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.576526948 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.6873513 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.269957342 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.751025569 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.17727096 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.271764163 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.317752106 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.268372556 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.991927379 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.715159453 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.30868043 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.268075684 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.557248394 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.271238062 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.526349169 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.280703059 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.268874827 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.673869488 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.287694406 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.295464262 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.268738907 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.270067243 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.045263945 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.268305878 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.515582367 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.319776428 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.268144251 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.268687219 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.314912983 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.267976003 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.279732258 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.266983987 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.751200157 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.271998917 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.397054 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.284948393 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.278546311 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.270477522 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.269618575 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.270079113 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.489853299 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.768565848 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.275535867 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.270297537 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.269929023 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.27732693 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.367045489 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.275394743 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.531574698 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.269149942 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.269266354 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.270492399 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.894717174 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.286469521 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.273210655 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.273389591 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.107035353 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.482237531 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.284942693 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.270419305 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.271781437 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.284126681 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.446413357 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.271746934 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.272480207 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.271913666 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.934502602 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.285149707 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.275043785 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.821791018 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.274210105 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.139390436 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.291495576 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.270894358 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.562603192 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.522735706 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.560257474 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.271887722 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.269878424 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.912125339 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.279580145 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.416224774 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.287030816 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.306459689 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.46878642 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.374257911 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.273213994 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.836208998 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.27357397 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.48739133 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.271464572 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.575136446 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.718678 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.271646338 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.273803611 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.937003031 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.918621737 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.921680635 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.270523906 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.526115472 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.240976968 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.715684909 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.271675406 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.272957282 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.859749599 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.273186172 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.275925152 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.271645763 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.272801084 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.340807498 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.444752778 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.092125377 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.276559025 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.686952777 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.340170438 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.273790593 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.290096506 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.276109204 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.625677973 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.367809366 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.278024314 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.31595655 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.273634506 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.278032067 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.701446832 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.214743093 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.276024341 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.424659087 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.858270423 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.276253883 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.27461177 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.947581556 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.573404643 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.778554583 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.28791587 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.53971737 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.27671681 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.309726186 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.023373814 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.324678111 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.701334019 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.27829287 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.274150058 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.843778206 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.275980732 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.328333713 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.275308977 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.276692435 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.76379581 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.274691756 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.278497725 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.454360361 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.27394537 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.537375079 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.275529805 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.28337043 seconds)
  done (took 1095.608106417 seconds)
done (took 1363.628595195 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.274881557 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.278198624 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.26572907 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.275538761 seconds)
  done (took 26.311586151 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.282200465 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.279163393 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.280000529 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.279530536 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.281534068 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.279436618 seconds)
  done (took 8.896800655 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.317227796 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.27546402 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.275560073 seconds)
  done (took 19.083915102 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.469478599 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.424018227 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.599985818 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.196729082 seconds)
  done (took 9.906213924 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.280842712 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.281503735 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.281575031 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.282639174 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.28331658 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.285018651 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.283761234 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.284064224 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.28483751 seconds)
  done (took 12.762512311 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.762157215 seconds)
done (took 82.940246126 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.397149999 seconds)
    (2/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.274271553 seconds)
    (3/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.41490391 seconds)
    (4/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.224121183 seconds)
    (5/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.684359044 seconds)
    (6/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.274867154 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.665064017 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.512859101 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.281338054 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.318746682 seconds)
    (11/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.77920836 seconds)
    (12/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.267701539 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.304821831 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.473616116 seconds)
    (15/309) benchmarking ("sort", Float64, false)...
    done (took 5.499011758 seconds)
    (16/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.270960856 seconds)
    (17/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.599775015 seconds)
    (18/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.276709227 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.304716776 seconds)
    (20/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.302082244 seconds)
    (21/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.275374519 seconds)
    (22/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.370392793 seconds)
    (23/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.966308416 seconds)
    (24/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.277473037 seconds)
    (25/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.277684904 seconds)
    (26/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.282873021 seconds)
    (27/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.678317081 seconds)
    (28/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.770108706 seconds)
    (29/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.937630827 seconds)
    (30/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.015449015 seconds)
    (31/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.285710966 seconds)
    (32/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.475811046 seconds)
    (33/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.860350536 seconds)
    (34/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.403906322 seconds)
    (35/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.339945806 seconds)
    (36/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.609764876 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.382806372 seconds)
    (38/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.563452498 seconds)
    (39/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.939195643 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.666664109 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.391352734 seconds)
    (42/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.562429464 seconds)
    (43/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.299646494 seconds)
    (44/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.722075282 seconds)
    (45/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.420173834 seconds)
    (46/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.070501509 seconds)
    (47/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.955402362 seconds)
    (48/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.789404533 seconds)
    (49/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.923315148 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.388399888 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.557537519 seconds)
    (52/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.533811371 seconds)
    (53/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.304728546 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.357457243 seconds)
    (55/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.73050547 seconds)
    (56/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.341351988 seconds)
    (57/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.565514159 seconds)
    (58/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.417170073 seconds)
    (59/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.612321826 seconds)
    (60/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.276707555 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.388292067 seconds)
    (62/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.457103755 seconds)
    (63/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.320403148 seconds)
    (64/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.305550694 seconds)
    (65/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.278106535 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.608048201 seconds)
    (67/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.381938136 seconds)
    (68/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.280317253 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.806074274 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.765211053 seconds)
    (71/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.94116345 seconds)
    (72/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.474283083 seconds)
    (73/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.278722699 seconds)
    (74/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.587339745 seconds)
    (75/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.949098627 seconds)
    (76/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.28773333 seconds)
    (77/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.772042788 seconds)
    (78/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.331835633 seconds)
    (79/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.282692502 seconds)
    (80/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.300279406 seconds)
    (81/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.569467797 seconds)
    (82/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.279354683 seconds)
    (83/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.506898265 seconds)
    (84/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.342786968 seconds)
    (85/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.26869894 seconds)
    (86/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.653966764 seconds)
    (87/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.309654748 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 5.383620643 seconds)
    (89/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.412862101 seconds)
    (90/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.285782277 seconds)
    (91/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.644126714 seconds)
    (92/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.043032277 seconds)
    (93/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.396670195 seconds)
    (94/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.700958776 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.07495967 seconds)
    (96/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.844070671 seconds)
    (97/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.758527665 seconds)
    (98/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.738649735 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.259982851 seconds)
    (100/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.264001462 seconds)
    (101/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.782201561 seconds)
    (102/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.278423365 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.491011673 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.197614422 seconds)
    (105/309) benchmarking ("sort", Float32, false)...
    done (took 5.218099005 seconds)
    (106/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.049449072 seconds)
    (107/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.998449687 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.321532066 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.293876243 seconds)
    (110/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.450237389 seconds)
    (111/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.482528159 seconds)
    (112/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.37727445 seconds)
    (113/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.246414631 seconds)
    (114/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.218643864 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.457824355 seconds)
    (116/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.269141232 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.075155733 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.245196186 seconds)
    (119/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.24486229 seconds)
    (120/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.467743757 seconds)
    (121/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.545065975 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.244188921 seconds)
    (123/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.417155093 seconds)
    (124/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.24394813 seconds)
    (125/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.494824476 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.645629346 seconds)
    (127/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.254692054 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.48331052 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.231190189 seconds)
    (130/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.594741669 seconds)
    (131/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.246991776 seconds)
    (132/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.468954491 seconds)
    (133/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.34861869 seconds)
    (134/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.256159559 seconds)
    (135/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.048681577 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 1.737576318 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.260131197 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.016705824 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.497172834 seconds)
    (140/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.807832442 seconds)
    (141/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.287256239 seconds)
    (142/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.416898878 seconds)
    (143/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.247326232 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.907877087 seconds)
    (145/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.229953123 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.492215018 seconds)
    (147/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.446620048 seconds)
    (148/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.23262003 seconds)
    (149/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.246278207 seconds)
    (150/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.375700266 seconds)
    (151/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.330121477 seconds)
    (152/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.374658764 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.816900025 seconds)
    (154/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.308870355 seconds)
    (155/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.434044333 seconds)
    (156/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.289151025 seconds)
    (157/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.217600011 seconds)
    (158/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.985054803 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.325086733 seconds)
    (160/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.918475001 seconds)
    (161/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.255464836 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.713661098 seconds)
    (163/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.253151072 seconds)
    (164/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.434951666 seconds)
    (165/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.37171292 seconds)
    (166/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.347274792 seconds)
    (167/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.659865355 seconds)
    (168/309) benchmarking ("sort", BigInt, false)...
    done (took 6.231690051 seconds)
    (169/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.768489625 seconds)
    (170/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.252806684 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.229270968 seconds)
    (172/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.314781848 seconds)
    (173/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.92915728 seconds)
    (174/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.247322179 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.039733684 seconds)
    (176/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.669346124 seconds)
    (177/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.314516199 seconds)
    (178/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.357195366 seconds)
    (179/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.215446309 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.632560908 seconds)
    (181/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.29079541 seconds)
    (182/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.988871428 seconds)
    (183/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.578496032 seconds)
    (184/309) benchmarking ("sort", Int8, false)...
    done (took 4.23538905 seconds)
    (185/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.314957036 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.566588286 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.013927322 seconds)
    (188/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.25576861 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.822028379 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.255573782 seconds)
    (191/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.217013329 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.327525505 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.655354678 seconds)
    (194/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.563725566 seconds)
    (195/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.256741767 seconds)
    (196/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.411287797 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.440711361 seconds)
    (198/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.360548594 seconds)
    (199/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.326926583 seconds)
    (200/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.220630906 seconds)
    (201/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.291639418 seconds)
    (202/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.231303717 seconds)
    (203/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.524872188 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.580142657 seconds)
    (205/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.038841398 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.552606111 seconds)
    (207/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.248192422 seconds)
    (208/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.423140391 seconds)
    (209/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.32771856 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.289188428 seconds)
    (211/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.774627054 seconds)
    (212/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.818686234 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.287363441 seconds)
    (214/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.233235683 seconds)
    (215/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.22453445 seconds)
    (216/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.362438361 seconds)
    (217/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.256251077 seconds)
    (218/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.73882298 seconds)
    (219/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.928615669 seconds)
    (220/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.230619888 seconds)
    (221/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.236617542 seconds)
    (222/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.24907341 seconds)
    (223/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.358195827 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.828593105 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.435414828 seconds)
    (226/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.859239294 seconds)
    (227/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.283850488 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.377858203 seconds)
    (229/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.298771888 seconds)
    (230/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.318847099 seconds)
    (231/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.357275082 seconds)
    (232/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.661590303 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.25708346 seconds)
    (234/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.798114008 seconds)
    (235/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.690754022 seconds)
    (236/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.433426363 seconds)
    (237/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.97550016 seconds)
    (238/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.230888946 seconds)
    (239/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.334540287 seconds)
    (240/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.227030897 seconds)
    (241/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.324339386 seconds)
    (242/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.261890584 seconds)
    (243/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.564847553 seconds)
    (244/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.211450596 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.299404144 seconds)
    (246/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.350226435 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.27334212 seconds)
    (248/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.303748844 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.220795723 seconds)
    (250/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.730423191 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.256668267 seconds)
    (252/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.345896362 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.226493293 seconds)
    (254/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.735637135 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.051839109 seconds)
    (256/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.626706479 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.061735746 seconds)
    (258/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.327223111 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.578242787 seconds)
    (260/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.44213974 seconds)
    (261/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.621330449 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.409783116 seconds)
    (263/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.603134943 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.054260842 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.246202242 seconds)
    (266/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.374844922 seconds)
    (267/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.499781995 seconds)
    (268/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.765591052 seconds)
    (269/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.548712707 seconds)
    (270/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.221808027 seconds)
    (271/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.275917748 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.319538131 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.598232408 seconds)
    (274/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.246543693 seconds)
    (275/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.375795002 seconds)
    (276/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.247244919 seconds)
    (277/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.23490584 seconds)
    (278/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.248151524 seconds)
    (279/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.766568083 seconds)
    (280/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.247158733 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.932979637 seconds)
    (282/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.933790486 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.935759326 seconds)
    (284/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.463009407 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.312303195 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.302977343 seconds)
    (287/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.251219366 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.334111506 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.336148286 seconds)
    (290/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.896479342 seconds)
    (291/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.235512573 seconds)
    (292/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.227810678 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.010848489 seconds)
    (294/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.52850459 seconds)
    (295/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.240467877 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.265714401 seconds)
    (297/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.229909363 seconds)
    (298/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.2089651 seconds)
    (299/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.223504065 seconds)
    (300/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.291836362 seconds)
    (301/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.343846086 seconds)
    (302/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.323730049 seconds)
    (303/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.243947247 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.340270104 seconds)
    (305/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.220561598 seconds)
    (306/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.230719036 seconds)
    (307/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.210927292 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.243864011 seconds)
    (309/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.946111911 seconds)
  done (took 878.67401723 seconds)
done (took 879.89372123 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.251981517 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.246172464 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.229120371 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.251245871 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.34106128 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.259141278 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.239606223 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.231894903 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.277432264 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.28033309 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.228234938 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.257441248 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.231831282 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.22969587 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.230112881 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.243635927 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.113778408 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.230990988 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.246406999 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.239806012 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.247555941 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.228796825 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.27964015 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.25776073 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.233972713 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.234526251 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.233490031 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.249528936 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.342133052 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.233648844 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.234479257 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.242797719 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.11406158 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.227854936 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.226140958 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.250495165 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.240951386 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.241330002 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.23467818 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.263119309 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.465987263 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.23117486 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.233068756 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.231916316 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.232406703 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.23659883 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.233310711 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.237250253 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.244384426 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.245685211 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.459541729 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.24642296 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.234485475 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.232134828 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.243263506 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.231851633 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.235649103 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.247850726 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.251589206 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.247579267 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.106941265 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.23734757 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.234773013 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.249576356 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.239722928 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.500710451 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.227688386 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.237420575 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.474670327 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.237208963 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.501971263 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.241145496 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.234188723 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.246936208 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.264047772 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.120838242 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.228282445 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.232552758 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.240844782 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.232662215 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.24346666 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.246682136 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.23841096 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.234714295 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.247382499 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.262113847 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.243825612 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.234388849 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.243321921 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.253572478 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.241711645 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.245266119 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.236764234 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.229149937 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.243948164 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.238447643 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.237797188 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.23628042 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.238605968 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.246548743 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.475275195 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.250682464 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.231526364 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.232182621 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.234196519 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.24881058 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.47480612 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.236124964 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.257161608 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.281603085 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.236997177 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.113761595 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.238001699 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.251062832 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.24420811 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.238729111 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.23087039 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.11569537 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.47155445 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.249471137 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.236559754 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.234324928 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.250890925 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.237244967 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.23220757 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.126486765 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.237495154 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.250790096 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.357001548 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.246661275 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.267497731 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.234868809 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.239336207 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.26831438 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.251519463 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.267415175 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.24034538 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.251819785 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.252640747 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.233409445 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.247295828 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.247574027 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.23790115 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.243237361 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.232329342 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.265174552 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.24958803 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.249148206 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.258522215 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.358603598 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.23435308 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.116662445 seconds)
done (took 207.370740975 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.295600212 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.231265587 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.326391072 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.233450945 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.330208777 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.345078292 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.23026806 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.231918236 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.231265944 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.614379976 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.231887166 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.232049588 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.227818738 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.2311768 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.317949941 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.234513526 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.23158175 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.60093451 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.235533228 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.304442558 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.230778402 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.232073918 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.234805154 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.658744427 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.227609311 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.227619613 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.320932585 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.234324694 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.581028288 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.232649733 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.232580617 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.605151755 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.343709049 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.251157433 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.245619323 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.241219358 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.343597845 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.249384081 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.329496215 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.316165922 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.336047389 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.273913016 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.230557266 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.228520362 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.236480991 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.237012645 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.233558493 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.262068138 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.23028396 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.232964297 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.578312384 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.24495308 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.243929198 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.234490418 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.234014111 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.256034507 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.233783574 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.23711904 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.324957539 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.236690445 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.315296384 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.617159238 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.64355565 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.236982494 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.228855876 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.234966196 seconds)
  done (took 142.031206106 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.301946542 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.309390365 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.340791007 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.236774739 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.287774264 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.344333785 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.237233547 seconds)
  done (took 10.23125749 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.242359853 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.236698361 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.286286009 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.286441934 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.236918217 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.384361294 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.237006613 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.248638684 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.234503885 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.290196983 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.239939451 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.237800456 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.244920171 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.238324658 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.285118094 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.248973729 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.352393342 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.238329042 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.237993174 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.394722739 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.23592174 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.245336108 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.290159712 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.249901747 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.240203815 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.244168898 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.801834265 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.239540286 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.235904014 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.238537512 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.235919486 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.276276721 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.239090063 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.235232022 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.236615883 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.355127057 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.238875058 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.236720625 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.238641092 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.235235652 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.238220218 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.239188463 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.239898026 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.236274786 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.240035324 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.262718933 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.239964698 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.239623348 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.238748186 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.240044693 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.289125093 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.240055441 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.236994977 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.237504112 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.295488718 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.245951232 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.241069703 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.237644386 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.239983082 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.237888582 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.396172845 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.287201346 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.241524345 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.287874159 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.241194222 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.2397312 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.240534494 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.239799382 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.295229475 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.240752947 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.288916818 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.237225088 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.395333321 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.263722772 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.241791352 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.243140778 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.24235641 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.240833968 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.241073845 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.24609485 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.238567505 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.242336466 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.246286497 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.238740317 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.238674387 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.343307876 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.350232125 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.239144831 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.254841449 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.248337111 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.239755183 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.295479236 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.242026308 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.239590838 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.294556891 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.356897157 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.295120273 seconds)
  done (took 143.99873306 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.246679627 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.250259357 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.242878046 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.257861685 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.242590846 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.243111077 seconds)
  done (took 8.662022292 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.244253065 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.241983334 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.242058422 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.243169472 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.243109478 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.243940539 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.243436755 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.243706197 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.245313719 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.243507411 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.244715109 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.245556954 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.245343246 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.243409274 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.243068369 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.243088668 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.243650183 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.240625582 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.244208881 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.242859922 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.347921262 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.243647818 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.243913025 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.244768646 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.247085051 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.243816303 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.251356264 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.243483728 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.244044809 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.25118559 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.245907667 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.245520834 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.244532604 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.249443819 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.247446301 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.245033237 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.247327879 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.24751086 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.242255532 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.245272865 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.24722702 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.245363984 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.244488051 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.246315028 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.246118178 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.248065362 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.249972622 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.252685968 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.24514478 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.247181123 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.247918496 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.244908141 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.246827393 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.247888267 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.247351867 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.248816987 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.25081877 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.246089848 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.24591873 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.246657195 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.246323639 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.247522375 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.247757165 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.249045653 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.243861344 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.248454016 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.24778047 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.249872113 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.246743247 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.245692729 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.24820533 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.245453435 seconds)
  done (took 91.986052186 seconds)
done (took 398.080095444 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.40760624 seconds)
  done (took 7.590509148 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.404422422 seconds)
  done (took 7.589496358 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.804063522 seconds)
  done (took 18.988619361 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.247767038 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.263732673 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.252470897 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.245018164 seconds)
  done (took 26.192564188 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.318891506 seconds)
  done (took 7.502944666 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.252406794 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.240496819 seconds)
  done (took 13.679746531 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.44162871 seconds)
  done (took 7.625030145 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.021678596 seconds)
  done (took 8.20631236 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.258586797 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.255882569 seconds)
  done (took 13.71085283 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.232509718 seconds)
  done (took 7.418725458 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.833439272 seconds)
  done (took 8.020371098 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.242857737 seconds)
  done (took 7.430631022 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.242897648 seconds)
  done (took 7.428327242 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.321782706 seconds)
  done (took 8.507671612 seconds)
done (took 151.076040191 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.241709562 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.244372384 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.244848202 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.24526273 seconds)
  done (took 26.161940701 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.283883958 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.283367345 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.283966917 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.294410326 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.286204414 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.282796715 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.276193485 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.276127396 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.294051857 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.287478092 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.287394723 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.284823492 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.283297726 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.27628617 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.286369962 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.285473176 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.293662829 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.284888466 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.276152739 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.287069588 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.251337334 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.294554588 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.28635485 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.251786409 seconds)
  done (took 31.964907862 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.450958947 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.322145374 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.40404185 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.302604539 seconds)
  done (took 6.666877117 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.302087508 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.304394296 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.314948782 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.354889842 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.387750722 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.313411641 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.277951402 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.272763558 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.258303586 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.304919403 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.384073233 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.321252106 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.38693574 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.251146489 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.432779392 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.250861526 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.251006096 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.303748266 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.356079707 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.368832424 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.251207546 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.302758895 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.306643357 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.32164743 seconds)
  done (took 32.768525283 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.250049939 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.259732965 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.257194003 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.25185679 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.251192154 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.25215254 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.257872102 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.2523995 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.273519102 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.252739479 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.250794064 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.251528655 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.252021827 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.252709368 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.251674383 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.265066247 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.265577269 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.252238761 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.254996498 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.257971288 seconds)
  done (took 26.302818857 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.244110466 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.100149269 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.597993418 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.503102173 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.245560619 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.248353559 seconds)
  done (took 27.12929392 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.314612769 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.425702575 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.253506141 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.566566208 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.647355926 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.256588251 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.255211618 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.461698118 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.730220788 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.736158962 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.306040705 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.31470222 seconds)
  done (took 18.458038456 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.248277596 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.25020592 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.257559767 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.265528286 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.302584771 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.258374629 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.261627772 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.249149717 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.304164524 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.307201662 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.258765198 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.30395623 seconds)
  done (took 36.460454427 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.337593166 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.296316634 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.135738069 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.987705596 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.62588523 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.461524926 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.995101899 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.664928907 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.254152988 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.524518259 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.903737467 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.352921843 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.506960423 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.249782527 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.25362682 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.205450106 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.479615213 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.694255972 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.253501474 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.910966979 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.277500155 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.25874879 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.067973386 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.278495218 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.462379202 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.379783803 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.512300918 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.25080199 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50804536 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.263930411 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.261109793 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.251523554 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.525225716 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885057634 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.34595464 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.261807977 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.946528474 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.962855696 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.258666886 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.920616968 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.679575381 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.254923275 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.262052444 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.251954374 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.186740575 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.257248766 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.675651397 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.258581094 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.964163874 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.252611207 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.262949387 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.347158903 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.256450846 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.066846677 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.290785621 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.254552642 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.250199669 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.258902215 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.821522247 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.36164883 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.265512031 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.188023258 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.629358958 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.920252107 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.825112818 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.356174544 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.25645504 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.257022594 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.187305487 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.979621809 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.272558197 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.602031455 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.274832276 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.902740722 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.890726441 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.923216246 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.196450763 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.759899498 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.262630663 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.188653938 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.48193806 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.254536427 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.190250263 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.202282403 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.187643296 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901439041 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.263725237 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.609428735 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.262927725 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.666257917 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.265822658 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.270700774 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.278389282 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.477373211 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.142461385 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.25519206 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.673021334 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398621442 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.276620579 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.672027319 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.190686426 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.258990316 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.510930331 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.466306548 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.254476058 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.212351467 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.441995974 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.255672922 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.27312288 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.259264465 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.267887102 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.777923971 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.269568101 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.378151246 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.274957625 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.662587707 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943265761 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.271019582 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.357372136 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.923478984 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.495186033 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.006389066 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.258641717 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.338314256 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.259217709 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.256661673 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.02435198 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.770996627 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.256774069 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.263085937 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.263144806 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.265729822 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.25775832 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.201634891 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.254395193 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.959162067 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.259253554 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.480359267 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.260816305 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.532662474 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.190329227 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.60542229 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.349600026 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.47926791 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.362263735 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.256279987 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.517992538 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.263134305 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.258194006 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.269103959 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.275506743 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.356468085 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.278818655 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.25924082 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.513702605 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.261689104 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.261339665 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.011623478 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.262293151 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.264955074 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.262089829 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.079601749 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.783984408 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.236388997 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.266999362 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.147751049 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.272324658 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.322933577 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.264079921 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.268516729 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.924086069 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.054238747 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.264637738 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.259623965 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.482638122 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.268043174 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.006328207 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.341349545 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.43988662 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.785660691 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.274600444 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.192650783 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.969707766 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.95234107 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.259670635 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.193538082 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.259855059 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.268885961 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.270957683 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.787035218 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.784933733 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.264405833 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.927985096 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.266488936 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.2701925 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.265202425 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.259858168 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.871852698 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.389126703 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.274778695 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.273437881 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.404050044 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.274858142 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.194255949 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.26480562 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.265453599 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.260668355 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.259837627 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.293306313 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.942976233 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.731254498 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.522697695 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.990593365 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.273931722 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.092078108 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.291023975 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.286707418 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.697781481 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.279008103 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.278678232 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.269266987 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.271265489 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.98858832 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.921681321 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.827865136 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.923190524 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.742327632 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.137368269 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.263246514 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.264806155 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.684725335 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.197325762 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.81953669 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.432422566 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.681459635 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.207542904 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.447054996 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.364326622 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.959086372 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.273340032 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.489780498 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.130181077 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.705644575 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.287366786 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.47350795 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.297947141 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.265979615 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.192047784 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.01721887 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.482827903 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.716278971 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.341402235 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.680429103 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.708298454 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.27753899 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.261644557 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.534337285 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420948886 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.978201009 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.434844946 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.262204296 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.954208708 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.74489248 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.273257562 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.488930678 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.837846483 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.27155504 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.448096254 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.20139526 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.274751544 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.273742991 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.270465011 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.389480407 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.22151772 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.530362554 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.274703576 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.197666963 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.26927902 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.749809914 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.120892266 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.269633016 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.264373478 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949052131 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.268659212 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.525186525 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.266852346 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.862017396 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.272382198 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.198206607 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.198356524 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.957620661 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.271501341 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.241187385 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.713219749 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.627269668 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.25621715 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.283301588 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486036964 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.521748869 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.279582 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.795575421 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.493468621 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.048514925 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.289809428 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.36629694 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.761466902 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.268335132 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.265359841 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.501789535 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.093531945 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.490508432 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.171640729 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.183378386 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.26619291 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.478639697 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.266697257 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.977916477 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502540805 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.978159503 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.268881345 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.955577405 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.292149806 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.971946828 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.195526848 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.629246384 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.276138632 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.346527437 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.276682065 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.27850608 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.277108895 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424067285 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.977249506 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.281278441 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.281125183 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.360544628 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.420874978 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.871624951 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.273172163 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.802100372 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.941602545 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.804797792 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.28022911 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.266926243 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.266817726 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.200761424 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415757532 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.492984292 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.540849193 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399263744 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.760398973 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.28997979 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.767495818 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.294353282 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.478989805 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.54359423 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.162698782 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.281903429 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.279323772 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.268134401 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.278726413 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.479177283 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.720935904 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.782788452 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38693687 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.280031067 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.688663087 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.544319161 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.268964418 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.268623466 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.859502694 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.269354478 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.554751694 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.274247468 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.018432145 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417543249 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.278300055 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910240878 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.280420714 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.424782898 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.042870821 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.98624016 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.525173156 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.675198389 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.281356839 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.804844595 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.908490424 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.53478206 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.336824061 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.281165512 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.383093569 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417282397 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.270089982 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.269766168 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.269702166 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318328207 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.980506138 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.280070316 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.804313059 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.535486755 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.267994418 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.269675293 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.292901115 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.279760559 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.494073628 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941991244 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.49566092 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.280813676 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.277840723 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.08861067 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.80492002 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.285242107 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.205409989 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.27529102 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497624657 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.509048507 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.293724033 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.723871314 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.98217418 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.791981185 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.242810301 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.293565904 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.279185752 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.912671704 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.807752425 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.898835294 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.721677753 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.831070309 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.283744024 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.546933084 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.27709643 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.28362466 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.549046222 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.275572465 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.271158671 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.285550532 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.802145693 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.982036962 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.273592315 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.975552618 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.210803716 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.61286233 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.896415606 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.210773008 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.282839269 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.446415414 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.275479243 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40347921 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.284646044 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.276776714 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.279426089 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.030333464 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.549553561 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.278411165 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.273367092 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.808838488 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.288758157 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.282251529 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.498348841 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.282111624 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.948666059 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.624540933 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.529465843 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.285748967 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.264521263 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.277217285 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.273932068 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.261327892 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.471875137 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.780400193 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.790506276 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.289174764 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.286118371 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.277933014 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.490245984 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.486224076 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.995169201 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.299417718 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.274670206 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.291408239 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.184199045 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.77650886 seconds)
  done (took 1544.006690574 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.291888214 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.295882289 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.294894869 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.349535257 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.27851285 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.375650845 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.322816394 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.346714737 seconds)
  done (took 51.772382555 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.27742799 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.498811212 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.30626966 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.2870934 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.284432139 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.285794825 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.680582922 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.286175597 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.285067306 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.285131795 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.288014738 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.289404624 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.858903839 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.285085484 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.279819928 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.280653531 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.286306772 seconds)
  done (took 64.26356724 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.28553931 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.471697128 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.357733366 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.295287108 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.940025751 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.282249663 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.428961277 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.305839272 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.276131968 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.286361319 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.928710164 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.305005482 seconds)
  done (took 82.383722708 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.285295819 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.284226246 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.284011275 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.284028305 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.285099398 seconds)
  done (took 7.64198515 seconds)
done (took 1957.169136464 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.52965352 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.907304991 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.877083019 seconds)
  done (took 5.003690875 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.423781448 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.47379682 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.593624689 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.613249608 seconds)
  done (took 7.323600921 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.554020149 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.660245949 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.457617649 seconds)
  done (took 5.890968548 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.575304372 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.282499023 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.396653063 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.275682283 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.277874286 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.279504362 seconds)
  done (took 20.053191631 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.28114792 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.283330417 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.280828919 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.283764217 seconds)
  done (took 6.348440118 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.268269894 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.022674851 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.268750283 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.284133288 seconds)
  done (took 18.062745755 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.027639943 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.04900548 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.024999842 seconds)
  done (took 7.321388487 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.289388202 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.122116113 seconds)
  done (took 9.631841023 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.581141818 seconds)
  done (took 2.80085414 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.414374477 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.550470038 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.213127985 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.164314271 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.245688399 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.69281576 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.733071263 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.363176013 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.144075835 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.224817949 seconds)
  done (took 25.967098222 seconds)
done (took 121.407306218 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.778613325 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.65140529 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.48294954 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.748256409 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.507024891 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.482873041 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.496706213 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.719663325 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.261340748 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.252576304 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.801436916 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.504549731 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.43718915 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.66165447 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.438970646 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.28324255 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.517648924 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.819145134 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.436385443 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.632702616 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.499197691 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.388319229 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.625238789 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.407845692 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.512920601 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.435375829 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 4.967088251 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.523579753 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.607269069 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 4.986144901 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.436383222 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.808084155 seconds)
  done (took 184.333395156 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.281013756 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.281172673 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.297482416 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.29371446 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.280139823 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.28005435 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.305475959 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.279529814 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.280092849 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.293637775 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.281662163 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.281746985 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.282498954 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.305754854 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.280928724 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.29211683 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.291766817 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.281594923 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.298460772 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.281806519 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.281701158 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.300500484 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.282388272 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.281937585 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.304277472 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.28271065 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.29214128 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.280874082 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.28136607 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.281502445 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.281984071 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.287541483 seconds)
  done (took 202.414188303 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.294385154 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.281552274 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.28250065 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.281948952 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.281484118 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.283715258 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.28539626 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.282641163 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.281915159 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.295107431 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.298262685 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.282369246 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.284695053 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.284171433 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.282348967 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.288560172 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.282849008 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.293745333 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.283790734 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.288813654 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.284110827 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.294739275 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.283725886 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.283817792 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.30254868 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.284534951 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.283489539 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.283291468 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.283557831 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.288147001 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.285282589 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.286029346 seconds)
  done (took 202.388958026 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.484998754 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.2909126 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.292373109 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.246823075 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.291998922 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.290844421 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.283473819 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.487541676 seconds)
  done (took 13.895388716 seconds)
done (took 604.252804949 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.435368458 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.170351476 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.477641582 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.311070811 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.978441485 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.31244736 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.311287428 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.466165368 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.181150401 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.469734069 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.506088968 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.308624602 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.643413242 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.309478557 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.54208931 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.400818298 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.112996945 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.216076317 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.600929047 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.754835663 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.549380842 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.674486877 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.467939019 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.177798852 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.652326275 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.6692019 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.910341504 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.115184978 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.310743138 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.607756511 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.781359456 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.166824157 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.362594362 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.345371993 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.401853169 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.382684197 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.136269157 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.344194099 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.482552155 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.442292241 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.756987089 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.997469876 seconds)
  done (took 87.473161234 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.285691886 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.285216448 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.28487968 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.285282558 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.285904361 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.284833051 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.284772037 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.284600123 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.285354936 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.284998326 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.284141927 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.286015021 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.285364427 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.286413303 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.284925783 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.284771285 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.286609607 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.288638138 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.285434117 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.285188183 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.286140986 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.285805935 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.286180311 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.285298346 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.285696457 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.286884971 seconds)
  done (took 34.654916411 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.29416649 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.518564494 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.679781081 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.300505929 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.294280231 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.297816999 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.364270853 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.295484775 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.298313046 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.297945057 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.443263548 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.298335816 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.329703444 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.683894596 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.296912169 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.295867677 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.295935672 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.295187245 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.525359561 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.305070092 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.366770494 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.295845598 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.365433786 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.305640331 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.297958258 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.296517765 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.299843898 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.814831524 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.298577707 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.443215675 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.987859298 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.364442951 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.781740967 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.687803863 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.994090723 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.298566626 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.297161206 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.448400404 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.298298172 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.296921756 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.36622683 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.297397163 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.686460756 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.909804759 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.31185089 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.296330741 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.83545673 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.446959696 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.516403992 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.30499716 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.711887526 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.302321818 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.300437364 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.300074515 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.518873521 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.305870663 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.298618533 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.860820744 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.304038035 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.368406458 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.299364469 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.300372407 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.531177714 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.299660586 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.520047716 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.300879458 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.308002475 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.301332568 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.689966913 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.301477971 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.924289304 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.314045314 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.299663541 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.448359019 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.520003575 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.865857326 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.304835164 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.534816824 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.787932866 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.368161116 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.305676341 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.809357994 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.372621832 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.3068704 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.303366236 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.302612067 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.301069228 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.343950566 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.367999551 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.857695043 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.920741265 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.874089532 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.371919911 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.314691867 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.301669964 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.86228159 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.30282616 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.301463966 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.685654959 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.931070629 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.314302338 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.308263379 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.913287614 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.316211944 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.369837984 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.305569004 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.696629106 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.303029456 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.345007394 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.301945841 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.309329228 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.305691818 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.371162405 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.306778605 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.30307492 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.901551683 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.469679878 seconds)
  done (took 170.627291241 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.297877609 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.297281504 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.297384377 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.29573728 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.294681995 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.300982757 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.296223925 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.296398841 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.301738906 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.296461169 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.297437429 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.297536 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.300030166 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.309503249 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.306993226 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.304163508 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.908759882 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.298642542 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.296896839 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.309466353 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.075201916 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.30061857 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.297219197 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.313305537 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.296987311 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.297948346 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.304742438 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.30094388 seconds)
  done (took 151.030659471 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.304831122 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.808341796 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.305152373 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.421131677 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.322728614 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.302410131 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.418728926 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.354138633 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.306159361 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.302498893 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.302098259 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.573264742 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.305124757 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.767272807 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.475632796 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.421079619 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.76876206 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.307139437 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.302301971 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.304464779 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.422631579 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.315899687 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.577619462 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.816163988 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.307135222 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.816260251 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.300024207 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.305774089 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.304498804 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.818157473 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.305894985 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.577480715 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.373029014 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.359701701 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.816374542 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.768669531 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.766882496 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.434122292 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.306634286 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.303357494 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.304208588 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.300092911 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.817985892 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.310013156 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.305994068 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.815831993 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.321799551 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.305954722 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.314939173 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.304042384 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.359095771 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.360070125 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.58284505 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.826831765 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.375802004 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.326971847 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.42200567 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.66109279 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.309247421 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.766380028 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.297918395 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.820923916 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.310952189 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.299541413 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.306111299 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.30983499 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.437395974 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.423831485 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.769318835 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.306810401 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.767200467 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.438939645 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.306791677 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.304734901 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.307485807 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.81971931 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.768807188 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.464340008 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.431238299 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.484119073 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.303057313 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.30685056 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.302021582 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.37795206 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.307365389 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.83334996 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.776068775 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.309828459 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.310044006 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.309727955 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.309633842 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.467300457 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.829494297 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.379414704 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.77532758 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.599288559 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.587101071 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.310367121 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.363747947 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.308523839 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.588984359 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.310423314 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.360884176 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.719700693 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.589446827 seconds)
  done (took 154.715979246 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.531342326 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.402879792 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.393469622 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.4131588 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.807901013 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.85673059 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.419684097 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.429757302 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.41050307 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.538958356 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.385255524 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.400316118 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.478085633 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.378717909 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 1.988852298 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.37130857 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.395546713 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.431570227 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.411097608 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.301493266 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.913324858 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.585619938 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.46710711 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.292013948 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.398229366 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.050278105 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.827730278 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.798227099 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.466282254 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.481738744 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.798358212 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.374088025 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.187980592 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.927722977 seconds)
  done (took 62.561265363 seconds)
done (took 662.289365728 seconds)
SAVING RESULT...
DONE!
