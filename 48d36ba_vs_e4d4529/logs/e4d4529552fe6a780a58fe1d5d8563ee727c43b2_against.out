cset: moving following pidspec: 25936
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.148372778 seconds)
loading group "string"... done (took 0.51501619 seconds)
loading group "linalg"... done (took 9.835037263 seconds)
loading group "parallel"... done (took 0.169014719 seconds)
loading group "find"... done (took 2.555602427 seconds)
loading group "tuple"... done (took 2.152437471 seconds)
loading group "dates"... done (took 1.381527358 seconds)
loading group "micro"... done (took 0.657717367 seconds)
loading group "io"... done (took 0.670458373 seconds)
loading group "scalar"... done (took 53.488791279 seconds)
loading group "sparse"... done (took 13.373013845 seconds)
loading group "broadcast"... done (took 1.306078308 seconds)
loading group "union"... done (took 2.536828531 seconds)
loading group "simd"... done (took 3.544820469 seconds)
loading group "random"... done (took 13.395419488 seconds)
loading group "problem"... done (took 2.205742993 seconds)
loading group "array"... done (took 23.177240976 seconds)
loading group "misc"... done (took 1.708506577 seconds)
loading group "sort"... done (took 3.68409258 seconds)
loading group "collection"... done (took 20.421907284 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.901250501 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.174351012 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.238096967 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.669934773 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.307472759 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.200532065 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.198505062 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.203569183 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.657631951 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.231122058 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.174912256 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.416718355 seconds)
done (took 7.155111275 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.288194749 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.092876056 seconds)
    (2/2) benchmarking "String"...
    done (took 0.232614217 seconds)
  done (took 0.962979231 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.094086755 seconds)
    (2/2) benchmarking "String"...
    done (took 0.151749256 seconds)
  done (took 0.883439298 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.131544172 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.186158589 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.144994137 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.130848902 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.144650518 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.146951578 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.130230248 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.145293476 seconds)
  done (took 1.669714494 seconds)
done (took 4.57424963 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.522922154 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.918076035 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.535111623 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.216952449 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.343293864 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.358004534 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.312742703 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.266825761 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.128685499 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.09695367 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.250094303 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.465638403 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.459441595 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.978001043 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.097760127 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.149944068 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.197408274 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.854769171 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.117717274 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.152949757 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.530155267 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.252232773 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.155475217 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.14954688 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.226106896 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.165201175 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.168593157 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.141941374 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.721971977 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.171982136 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.237134484 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.121319827 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.168573741 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.201008383 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.27600947 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.149418791 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.721044555 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.239366123 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.124183319 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.139134243 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.724168834 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.159991225 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.246589528 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.143052409 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.112077172 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.179875388 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.140768878 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.117900677 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.147872924 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.139411653 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.198774439 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.50807697 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.145455368 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.234508383 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.147064441 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.74277567 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.137319907 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.317935053 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.165158851 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.145523813 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.130883404 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.127450705 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.201203728 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.135955556 seconds)
  done (took 22.604517098 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.246130601 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.248855319 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.117998664 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.201221189 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.184299204 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.120527617 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.142958612 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.118911909 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.168403119 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.22104431 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.179818537 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.253177866 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.133067271 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.129505575 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.225954572 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.290965841 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.14632999 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.16177574 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.129044412 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.150705966 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.181039362 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.140633875 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.149827363 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.135296045 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.210082791 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.245876308 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.158415745 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.162492241 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.143237628 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.137600808 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.183188798 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.202383766 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.118015566 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.143649133 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.215623649 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.163131988 seconds)
  done (took 6.928231795 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.274016549 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.142237151 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.300316891 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.226287784 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.167627881 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.230954369 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.217200246 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.329004338 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.338571197 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.219065776 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.16720157 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.145605038 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.152572963 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.119372722 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.137273322 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.117693318 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.880183018 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.213720334 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.179318753 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.243432073 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.150287128 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.120568824 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.422173797 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.1254332 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.14125239 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.134843404 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.110831622 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.262797734 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.13310254 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.516274311 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.14035479 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.135004877 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.17034296 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.24849808 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.163934884 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.177308651 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.133561397 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.141717952 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.250130621 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.156092825 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.118258264 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.117955503 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.171371094 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.169776547 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.146034422 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.144738937 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.174887602 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.140796745 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.147144899 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.172416688 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.234503983 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.233208986 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.218468703 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.126241542 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.314621084 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.164360636 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.155863465 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.129477359 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.87821943 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.160885682 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.136454224 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.120032093 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.149878906 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.136524694 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.501518943 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.159314533 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.21601071 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.123031707 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.199082299 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.151495452 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.15435678 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.125746927 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.143515177 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.145895578 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.143165203 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.119539572 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.141328447 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.120033839 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.14468453 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.123971561 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.159596482 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.125431243 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.136370345 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.187925154 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.150408023 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.146062079 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.165456724 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.14312686 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.126289943 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.170271024 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.138137957 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.127838254 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.244709471 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.152614798 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.123324412 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.160683143 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.152560253 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.181988645 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.128094432 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.342038328 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.122163719 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.181102778 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.139328541 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.151716709 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.155077402 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.120157109 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.140905488 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.119599496 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.139445806 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.189171332 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.141655165 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.120380462 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.144233564 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.132371023 seconds)
  done (took 32.032752559 seconds)
done (took 62.20718382 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.486408152 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.107552713 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.127075237 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.10797239 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.128427924 seconds)
  done (took 1.684073373 seconds)
done (took 2.388099282 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.227592839 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.329832935 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.252610196 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.143234136 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.209836949 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.207786898 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.193735042 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.205071957 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.215574829 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.211736213 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.13848004 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.231326554 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.220168291 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.194807804 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.140085411 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.244354537 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.187705573 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.210362016 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.24108373 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.145571724 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.140128783 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.161587936 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.14303893 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.143854536 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.143657305 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.160524533 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.148031324 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.159793365 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.137021754 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.144267507 seconds)
  done (took 2.339635298 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.168586592 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.142595857 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.138373183 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.15400478 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.140523037 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.144197108 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.139309685 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.15699699 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.146038124 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.157492653 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.137810542 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.144723082 seconds)
  done (took 2.316061281 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.118794505 seconds)
done (took 9.680325131 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.248192595 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.787965146 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.197788979 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.308356809 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.373273585 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.317334209 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.657880028 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.247604601 seconds)
  done (took 15.965295238 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.263639671 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.131538654 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.156344602 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.137400504 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.153665351 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.135382649 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.14983323 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.136933614 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.152386487 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.132859493 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.152334664 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.130704889 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.132771354 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.1466734 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.133787544 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.147030079 seconds)
  done (took 3.173414301 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.177836093 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.176867184 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.138643748 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.156836354 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.135569893 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.157298704 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.142640764 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.155702971 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.136241138 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.151978683 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.144734117 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.154593192 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.138634738 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.151860862 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.144703737 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.174450047 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.13515343 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.155549389 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.157237663 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.155982894 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.157118513 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.137425157 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.155521732 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.139707221 seconds)
  done (took 4.42164021 seconds)
done (took 24.274657623 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.195581156 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.14174079 seconds)
  done (took 1.066644998 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.209202092 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.224188495 seconds)
  done (took 1.164233734 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.154638589 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.147747908 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.162360241 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.161268273 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.135634148 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.148058981 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.16005534 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.148903921 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.133383791 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.149041719 seconds)
  done (took 2.238746282 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.136107671 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.152814265 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.147176606 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.21662657 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.158904984 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.135732972 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.153951561 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.136148389 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.155573066 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.133358718 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.154351891 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.149843566 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.153829059 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.15201137 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.153379561 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.137600948 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.158123181 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.136624497 seconds)
  done (took 3.457645068 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.134038484 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.134705328 seconds)
  done (took 1.006997888 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.136405195 seconds)
    (2/7) benchmarking "second"...
    done (took 0.132705423 seconds)
    (3/7) benchmarking "month"...
    done (took 0.150362486 seconds)
    (4/7) benchmarking "year"...
    done (took 0.150548963 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.133606515 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.133446788 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.147606759 seconds)
  done (took 1.722836961 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.578522241 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.266034179 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.397561799 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.104751938 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.151765947 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.366502891 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.155482341 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.104590395 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.104697951 seconds)
  done (took 2.996863707 seconds)
done (took 14.387250153 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.135154617 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.324684096 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.675637663 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.153384938 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.134212737 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.207817629 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.386186051 seconds)
done (took 2.763557293 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.353948152 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.20810747 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.118851496 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.135346611 seconds)
  done (took 1.559134999 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.125551231 seconds)
    (2/2) benchmarking "read"...
    done (took 0.140831596 seconds)
  done (took 1.017976308 seconds)
done (took 3.326193855 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.15519278 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.15084069 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.135994598 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.153131694 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.136061576 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.153394995 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.136138053 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.150474443 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.135592731 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.150141649 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.137484103 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.15198043 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.134536591 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.15188356 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.13368795 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.153070373 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.137307125 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.149918716 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.132874299 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.152893325 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.135156293 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.15035229 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.135871259 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.152295414 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.136815582 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.152942424 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.135186674 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.150505102 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.136767112 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.152990893 seconds)
  done (took 5.079150498 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.257942438 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.129187797 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.147491312 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.14046011 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.146094346 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.132634465 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.145649038 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.132724839 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.149928423 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.131960775 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.150045547 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.132055759 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.147578683 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.133514953 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.150783001 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.135192471 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.15736659 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.132687055 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.133012236 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.149765134 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.135522331 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.148755858 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.13166409 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.149217927 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.134527932 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.146800791 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.132536896 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.149964671 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.132626991 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.148850004 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.134803734 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.152555852 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.132505467 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.161399435 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.134976103 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.148504639 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.138258363 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.130206153 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.151297522 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.129753302 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.145834536 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.132815353 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.149185103 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.139449437 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.149458112 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.132988769 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.149983737 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.1338291 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.150775738 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.135995296 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.146914562 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.134358775 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.152074995 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.133628655 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.136014573 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.146865045 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.132796566 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.145988816 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.135455843 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.149719877 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.129338514 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.146416175 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.137390376 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.150350683 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.147212715 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.154881846 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.132923887 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.152154475 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.13376743 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.155812272 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.136305182 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.16035873 seconds)
  done (took 11.086756982 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.135223411 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.132708566 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.150369191 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.13319096 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.149265909 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.136330674 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.150627744 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.132457347 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.14936222 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.132438769 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.150455446 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.131812014 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.14992109 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.133842089 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.132484724 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.149704302 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.133216032 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.150003363 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.133194731 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.150545121 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.134967372 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.150146537 seconds)
  done (took 3.866103504 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.278624188 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.138969697 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.200175245 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.14951189 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.169521278 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.16436329 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.13813684 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.156055389 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.1381015 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.160772539 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.143709476 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.156102114 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.15106935 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.159033562 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.161186419 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.145641915 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.155870868 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.144879806 seconds)
  done (took 3.67791847 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.135060402 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.133131455 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.151279224 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.133509575 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.150366677 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.134610763 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.150963331 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.134152395 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.151551255 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.13363117 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.152747566 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.133372128 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.152543142 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.133960122 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.133911582 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.152173611 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.134353887 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.150254233 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.134523741 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.150852353 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.134473734 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.150253185 seconds)
  done (took 3.891902106 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.150701357 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.155196621 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.155323383 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.158113542 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.136076242 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.152476931 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.141458002 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.153918316 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.142232752 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.154090894 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.137655075 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.154754526 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.150161065 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.154452183 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.142025952 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.155128386 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.13732717 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.154212418 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.136088046 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.135588192 seconds)
  done (took 3.728970004 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.229746395 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.169812376 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.170680643 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.159990178 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.170176389 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.151620118 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.177865775 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.152528614 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.168473169 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.181454919 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.153039922 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.167824554 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.160106533 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.17396004 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.152452417 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.179497477 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.159585587 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.176587469 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.171436815 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.152575548 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.180672207 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.152831865 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.177847756 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.152073598 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.169498091 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.16973143 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.152017236 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.175013875 seconds)
  done (took 5.48640934 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.148982423 seconds)
    (2/2) benchmarking "in"...
    done (took 0.163201899 seconds)
  done (took 1.08881318 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.138896225 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.137949665 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.154954411 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.137101164 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.154369211 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.13694437 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.155199973 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.136194414 seconds)
  done (took 1.928716494 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.248407357 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.251352494 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.141191628 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.165253906 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.251300672 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.230496141 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.172572574 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.159071136 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.136902674 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.147532798 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.244767858 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.127190476 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.15419796 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.13252635 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.155237618 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.141333126 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.154837637 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.145094149 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.159939962 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.137884154 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.159672749 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.141450879 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.15585704 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.146433006 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.149911801 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.139614611 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.15863372 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.148728201 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.152012068 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.137704801 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.152730525 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.138784408 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.157711256 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.141882987 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.155484367 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.251687872 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.144397553 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.153514983 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.139003081 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.163187023 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.162513962 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.157781866 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.156450342 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.136084344 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.159963289 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.141990123 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.160743695 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.139613145 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.130430483 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.151100849 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.146437127 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.150757649 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.136852668 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.155552183 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.137895958 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.160605688 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.139141856 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.152423014 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.133310179 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.151632062 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.136328998 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.150696887 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.138101709 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.157458501 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.138399723 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.155798443 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.136115493 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.155382538 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.136937386 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.155919828 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.136388364 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.169491666 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.137396662 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.159982844 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.141311266 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.155002393 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133961658 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.160491848 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.136254338 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.156718881 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.141311056 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.177362778 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.137998065 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.15045782 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.133082008 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.161616711 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.138877437 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.157803796 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.129348432 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.16200007 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.140312396 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.156753244 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.130468057 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.153950722 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.133572224 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.158696577 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.129806311 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.15586619 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.137068618 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.15991838 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.142773952 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.153513237 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.138773303 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.16141501 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.142143006 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.155726786 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.207877273 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.134121943 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.153088392 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.138692497 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.14346985 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.150214982 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.138615323 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.155332183 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.135530782 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.151350951 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.141336339 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.157142399 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.140230611 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.159753206 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.13906943 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.15803972 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.140731723 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.155815764 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.13381108 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.159921454 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.146334321 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.158540692 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.140909399 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.157632335 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.138212339 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.156578431 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.140899063 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.15458984 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.142779889 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.153356303 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.137779532 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.157636736 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.142850219 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.156832025 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.133415639 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.155851942 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.138129716 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.156044564 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.141194212 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.157892635 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.133253887 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.149475014 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.138605754 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.151925395 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.139628859 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.16493508 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.133787614 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.158608647 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.133684459 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.164267816 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.13476148 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.162626267 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.140885583 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.161266248 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.143548352 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.148844766 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.135230046 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.158867967 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.140012009 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.153840513 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.138338472 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.157716984 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.145448664 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.151121033 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.141683171 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.130206921 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.163360718 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.142507786 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.159420762 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.142376835 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.153548157 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.170336047 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.16824877 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.145600917 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.156888317 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.1388583 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.162579194 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.138637182 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.162649803 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.145188295 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.163151893 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.136101385 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.156547491 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.145606296 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.153288417 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.140407869 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.155824774 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.139674116 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.15017608 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.14081218 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.150367585 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.143427108 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.158858749 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.142909234 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.163262451 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.140416459 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.155995955 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.148247763 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.153531186 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.141968123 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.151144849 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.14364592 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.16805929 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.144964873 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.163463804 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.139583882 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.155422139 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.140512072 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.165563582 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.140942713 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.157714609 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.140264554 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.150746405 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.132345111 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.163729899 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.141887107 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.153845053 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.138951329 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.158655092 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.141848555 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.155067764 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.132004007 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.162702324 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.142493329 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.153022601 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.13806658 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.153948208 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.138497221 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.164473638 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.131901899 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.155319821 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.142069951 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.162427498 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.139083678 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.15731344 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.141052294 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.146838924 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.160509587 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.140258618 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.156009923 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.146366727 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.155729929 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.138696408 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.153360354 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.140826497 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.152432722 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.140005583 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.158417422 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.136291284 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.154665199 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.142646282 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.163695886 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.144433451 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.156144158 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.141850022 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.164124991 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.145371698 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.156848647 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.145373025 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.155038989 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.132144458 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.155301452 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.131849239 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.159052558 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.135509551 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.164007657 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.13735329 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.156611117 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.142653406 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.160976127 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.137622459 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.164104947 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.1494241 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.152542862 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.133240547 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.156292221 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.13830397 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.154713598 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.135847233 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.159400018 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.141409672 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.162302832 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.140380072 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.153866075 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.139621596 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.166878065 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.135744846 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.164814254 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.14547227 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.164563664 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.134626826 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.163294438 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.136094192 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.161601974 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.132985277 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.159200552 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.13833491 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.158155726 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.136753843 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.158734012 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.13630218 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.151649801 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.13787277 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.165613798 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.138670498 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.162705328 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.139034999 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.157358349 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.136463512 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.155688792 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.144707158 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.156989936 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.145334333 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.140076402 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.152418126 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.134259112 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.162147226 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.138925627 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.164258528 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.134892084 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.163238146 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.147049356 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.162859258 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.14124331 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.168355626 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.149368715 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.165177499 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.145704842 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.152374545 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.1372567 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.164250356 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.141594752 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.162349835 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.142866282 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.153739104 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.140967787 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.165359157 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.14082992 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.156862475 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.133930229 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.160516431 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.144831057 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.162973239 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.141357082 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.160848597 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.141694555 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.154189789 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.143026428 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.163038121 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.140683463 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.165961328 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.140787526 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.144340981 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.157106641 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.145660492 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.161706667 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.134223633 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.152868392 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.137379551 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.16504962 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.133647233 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.163765728 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.145064327 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.157710278 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.138291678 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.163757416 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.136837722 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.163216705 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.145738366 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.158121085 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.149874366 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.161788241 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.137959443 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.163259518 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.14510246 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.153895547 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.137905805 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.159336393 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.146846327 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.158464216 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.145108886 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.159752228 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.146075349 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.163497397 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.144951323 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.163925524 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.145521508 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.153798259 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.146394105 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.163894585 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.143856562 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.158113054 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.14060112 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.135841855 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.158709568 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.147140779 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.157189123 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.150183833 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.164840795 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.139518301 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.157952837 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.146345216 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.159073091 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.147735966 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.157125358 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.142028047 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.154431091 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.143639355 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.158725771 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.148313344 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.15708897 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.136118915 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.165711715 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.14478168 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.164365106 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.143442123 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.165965728 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.135410656 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.153644189 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.143202498 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.158129885 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.149909007 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.163538674 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.139706802 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.159571549 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.142477476 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.162916527 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.147250778 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.157373783 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.138637323 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.161673212 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.142605495 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.159564355 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.136863005 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.164813276 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.140589666 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.162950819 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.139809888 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.156311288 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.140456338 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.167468992 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.139150307 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.157021155 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.138155068 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.168021646 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.140523806 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.158146018 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.135437334 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.166725182 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.143217514 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.169352192 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.13881458 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.162356959 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.138612529 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.16563922 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.149000232 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.160025028 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.143009108 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.158985511 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.14729387 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.166656807 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.134313728 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.160044793 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.153433547 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.166064274 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.143544441 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.164915874 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.140824682 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.168300871 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.149710308 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.165383601 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.137715697 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.137190351 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.161145841 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.13753837 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.165817106 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.147236461 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.162769582 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.141413583 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.166755074 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.147372791 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.165066312 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.145641635 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.158328304 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.150026201 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.160793283 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.146224461 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.156312964 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.13630623 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.166116864 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.149456436 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.162701974 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.142777444 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.165264871 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.146432658 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.158065002 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.140443139 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.165702845 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.147697133 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.170126103 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.143431158 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.160434228 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.145596308 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.174315742 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.144410403 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.162313029 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.150535344 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.170244974 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.143621406 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.162128717 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.146501731 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.168601049 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.145457393 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.169944376 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.141048384 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.162113003 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.149268773 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.171290707 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.152092246 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.161966756 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.13819851 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.16704722 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.140466675 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.137722961 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.168338096 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.170515608 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.149939807 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.163110896 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.141045031 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.151858417 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.169541532 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.163735486 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.141645736 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.161433238 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.147920626 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.141581203 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.167918071 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.140716707 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.171321437 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.15115735 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.170111367 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.151824614 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.158999339 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.148703547 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.166319684 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.152493484 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.164563594 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.139404529 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.158297644 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.147207546 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.171648644 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.150857382 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.16811656 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.149098289 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.16940597 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.144278543 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.163712788 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.141505495 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.171568536 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.149685166 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.166036197 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.14599133 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.162592045 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.144884626 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.166614903 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.150204925 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.170205094 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.145770283 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.174615361 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.151664887 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.164039715 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.141738555 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.164263836 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.148581255 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.164564083 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.149439674 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.141439215 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.159404698 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.150716303 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.172365354 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.142510721 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.173077666 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.151592113 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.162571651 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.148010512 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.17198032 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.148856988 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.167519068 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.147548163 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.167346839 seconds)
  done (took 91.29094133 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.19821522 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.173737527 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.146269857 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.167608883 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.163753366 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.169890319 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.146683248 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.168359328 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.148191331 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.177662467 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.147111585 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.166675595 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.163268038 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.188044164 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.185358558 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.157299682 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.167037373 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.149550093 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.166451264 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.148232607 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.182626157 seconds)
  done (took 4.352874413 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.151679205 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.146481057 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.167022356 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.146864416 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.166413062 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.148512252 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.166936871 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.146383698 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.167192351 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.146891095 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.167574452 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.148276258 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.145559991 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.167656655 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.146055095 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.168185214 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.147803084 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.167978693 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.147555286 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.167741163 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.146461222 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.167159734 seconds)
  done (took 4.311810601 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.176014213 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.150269738 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.166823169 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.14749648 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.172100796 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.147271522 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.172087666 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.148171565 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.177826943 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.144161559 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.15962372 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.143475228 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.165855449 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.148088455 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.163473023 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.148962378 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.17711079 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.150716862 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.174040149 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.148755299 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.159463784 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.148379134 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.147625337 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.160026426 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.152663967 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.173824199 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.151319731 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.172115183 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.139855005 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.170980052 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.148649839 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.163032185 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.138905582 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.160381219 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.140564243 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.171430319 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.153538799 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.169218935 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.149704722 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.139603506 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.170655849 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.151363033 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.16063628 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.148841972 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.168812528 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.142876478 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.172366751 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.148144397 seconds)
  done (took 8.431627444 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.181727789 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.207194854 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.151516893 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.199894064 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.185230119 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.158645663 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.173350676 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.178349356 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.172526548 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.153005281 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.186966582 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.163351849 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.175797984 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.154701028 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.175885774 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.153712983 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.176809565 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.151848221 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.178329241 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.151623331 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.178481077 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.174933279 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.16302988 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.18178003 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.154819688 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.172568593 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.15296184 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.176544866 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.162530305 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.181139795 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.157226418 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.177171832 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.183690956 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.155049046 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.17257872 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.154492621 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.185018011 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.154797967 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.173898999 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.151311351 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.174238149 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.157246742 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.17600632 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.165845182 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.175437463 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.15513097 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.176076232 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.151342849 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.182915369 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.153986621 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.180667179 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.163614172 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.177152277 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.176119183 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.157857504 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.185587636 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.155468792 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.172872193 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.156103161 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.182676582 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.153006468 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.176575597 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.163118508 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.17539472 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.158584832 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.18477671 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.155079428 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.17720766 seconds)
  done (took 12.483800908 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.189687669 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.178104143 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.165063169 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.185504735 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.158297783 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.177686562 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.157650285 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.178202829 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.157799676 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.183529064 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.178304936 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.287206564 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.159390241 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.183846005 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.159583003 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.179611946 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.158506958 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.178235025 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.157976514 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.176857546 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.15788579 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.185838926 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.158118501 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.422611213 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.189673351 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.155340983 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.178138924 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.156670203 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.186105649 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.15853685 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.188569022 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.157700989 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.17747613 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.187118698 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.16825729 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.177054848 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.152052855 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.176234352 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.15835673 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.177459508 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.153568341 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.185132271 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.156632558 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.173219304 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.156968635 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.178198638 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.163774527 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.189542678 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.183103382 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.162993144 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.177207451 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.16478541 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.178271762 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.156871345 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.186112703 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.194014895 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.16537962 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.185387961 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.157789828 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.186317827 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.186159986 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.171974802 seconds)
  done (took 11.929703422 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.155828405 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.151183331 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.170963501 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.150543376 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.171664148 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.152685618 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.172051278 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.151921764 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.172644441 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.151859535 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.175422447 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.153750627 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.171943722 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.152433769 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.151220417 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.174675635 seconds)
  done (took 3.483136927 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.175129882 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.190836209 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.252902412 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.156325396 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.17314632 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.159616247 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.17515286 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.154710945 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.151751071 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.17922356 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.155344126 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.176398899 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.191828025 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.15424203 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.173875602 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.157969739 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.172690606 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.157294164 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.17502519 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.232162902 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.180608442 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.156020329 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.175530072 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.158031059 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.177380867 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.157612152 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.182531871 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.153910843 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.176664714 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.154715694 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.175710333 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.159945549 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.17301865 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.157468278 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.175779197 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.154370748 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.174582955 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.155555047 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.176295533 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.154734062 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.176950714 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.155563358 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.174328732 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.15574753 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.173584504 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.154571752 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.173015926 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.160674063 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.175004586 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.155549249 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.17595331 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.159046063 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.179171178 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.162317638 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.182993732 seconds)
  done (took 10.268211063 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.170316211 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.176712905 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.165655214 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.174123889 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.154608488 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.178113642 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.156619567 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.156411231 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.177201514 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.15256116 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.177231196 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.157230539 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.177407057 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.156159523 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.177167991 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.15635906 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.174808752 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.156453554 seconds)
  done (took 3.906937467 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.15717739 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.151694569 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.174558161 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.152078348 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.174222993 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.153021135 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.174620669 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.152744912 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.175162218 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.151810995 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.17532907 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.151980849 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.151586316 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.174644485 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.152500748 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.17570314 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.154117294 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.176060587 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.152659636 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.17254792 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.152885922 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.175437603 seconds)
  done (took 4.49908267 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.171238186 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.279850182 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.183178462 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.289235594 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.151675852 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.174181298 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.159314044 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.174870282 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.190156025 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.150557623 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.172076491 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.149977172 seconds)
  done (took 3.161410959 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.18560398 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.212831255 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.155367593 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.177470333 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.164287582 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.181006817 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.159889885 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.181221439 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.167076833 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.192443746 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.181260131 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.167532617 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.189848095 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.167371772 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.185822513 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.164175696 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.180077928 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.159801466 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.176508759 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.196007467 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.159514768 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.189660361 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.159692863 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.180438867 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.16092626 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.191092526 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.168946274 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.193419987 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.181816766 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.168095188 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.186000818 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.161094718 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.189953904 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.172532695 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.17880074 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.167089614 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.182484449 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.197313989 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.166141309 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.192063391 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.156162107 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.187662132 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.167760439 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.187481243 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.189794806 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.160977454 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.186994031 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.161936235 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.182970753 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.179966041 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.187040614 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.19039132 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.165624483 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.190778032 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.167264427 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.204066522 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.194380724 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.16814303 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.188433878 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.171490174 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.190274336 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.163866858 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.191269504 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.193670578 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.166230287 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.188487307 seconds)
  done (took 12.701195104 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.197685544 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.179235153 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.160785739 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.193178406 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.16991623 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.182909014 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.160381498 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.182042563 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.159894564 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.178628022 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.22600786 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.161844045 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.191704126 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.169999691 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.183538423 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.160484305 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.182367744 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.191330755 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.156934411 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.204057793 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.160901397 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.191570591 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.168840256 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.190203447 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.193935695 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.165133988 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.182436119 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.161057771 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.181963852 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.161310737 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.189253885 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.16104939 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.191206577 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.157316443 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.191521142 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.183015802 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.160625105 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.189219803 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.161860807 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.18818224 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.170377532 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.199219119 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.162398305 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.183215058 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.195609581 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.16160861 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.182872277 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.157877269 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.182843782 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.157902552 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.195099321 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.172290205 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.194812273 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.192859231 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.160694038 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.184665383 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.161732158 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.184215884 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.162991817 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.188259065 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.170563869 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.184037928 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.205300758 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.162472616 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.182981299 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.170855525 seconds)
  done (took 12.683242611 seconds)
done (took 224.089840201 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.322184965 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.348911268 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.146271813 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.384236432 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.146741426 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.843748775 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.753925133 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.252878247 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.147565343 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.146199597 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.171762485 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.166379956 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.50164354 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.169759228 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.147511775 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.186482373 seconds)
  done (took 31.766049091 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.353232768 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.396304027 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.188316894 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.15036535 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.177668054 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.153445072 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.173769793 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.154440171 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.174091551 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.159042222 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.175905469 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.148392473 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.181629521 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.14929601 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.175778568 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.152612773 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.180167464 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.152456468 seconds)
  done (took 4.337652575 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.175482022 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.243698448 seconds)
  done (took 1.36646818 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.186789675 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.272003444 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.374111191 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.225511079 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.173193742 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.194600445 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.225790794 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.166964388 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.264027429 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.164686445 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.18858278 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.17425519 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.179081642 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.182342392 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.169239748 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.174279006 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.181794346 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.191190165 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.167074668 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.178846905 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.179435946 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.175850294 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.157562495 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.189024666 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.258099442 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.164959804 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.178890556 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.153632526 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.177741806 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.167115246 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.186306234 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.168928535 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.187705923 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.233199557 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.155916614 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.228403137 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.179982245 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.153352112 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.190777123 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.153905325 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.179153159 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.179754911 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.165107588 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.173394047 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.151412551 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.179190733 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.152225084 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.176007857 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.161552736 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.178339647 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.16236108 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.183948112 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.229297245 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.155879809 seconds)
  done (took 11.04239352 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.989611319 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.200959843 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.177200676 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.145446079 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.198167448 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.16675689 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.005911506 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.180448715 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.308236055 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.083396429 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.194944762 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.16242701 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.321849517 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.312226786 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.357594426 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.415706494 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.84506242 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.188699834 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.187062614 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.221252018 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.182990659 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.172813107 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.191813149 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.512485981 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.154219611 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.176805864 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.160158914 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.185522964 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.232986821 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.154888133 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.180693928 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.256796902 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.352415206 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.269036377 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.154553802 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.176990943 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.152361205 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.242638956 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.354993047 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.276476779 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.246115794 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.150933648 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.176225273 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.15869099 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.19298292 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.150782862 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.238354681 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.251139408 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.250819396 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.18122954 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.162636185 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.1854805 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.157357999 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.23672731 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.175832625 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.420110826 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.445574609 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.154012811 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.183717776 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.167217982 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.34986998 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.156132075 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.296959761 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.201602382 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.271692441 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.177414251 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.864309002 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.245119648 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.154116805 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.182308658 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.159401346 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.1831925 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.157649308 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.238324999 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.490690332 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.185396551 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.159602209 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.176508479 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.284809193 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.155659669 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.177718549 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.238318923 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.154847345 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.183959496 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.163226483 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.185327199 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.24933436 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.331073177 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.160604362 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.183851662 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.159754533 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.187492138 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.155418228 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.289199555 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.312295369 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.236536434 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.289146407 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.158823898 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.240068726 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.245494137 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.183599884 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.247926429 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.159301403 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.189817224 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.160353143 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.308163839 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.194004559 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.18082495 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.160720857 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.184000564 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.21961857 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.158003262 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.183853338 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.247673045 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.551309283 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.245477165 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.153125827 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.183928697 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.162139263 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.237531742 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.186044957 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.321170521 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.162853042 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.243927318 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.184336709 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.152208951 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.184303675 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.24149726 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.163583722 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.184899769 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.182959998 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.163230394 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.338721565 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.280670957 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.186773891 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.306845166 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.252933142 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.162085974 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.252405002 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.186116405 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.245215122 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.165013163 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.181178906 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.157646723 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.896344291 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.167273017 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.184810233 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.161382673 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.261893848 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.178597362 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.157238711 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.179227331 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.152794011 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.8625013 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.182469154 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.153000741 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.181998493 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.160145714 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.184782227 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.161335879 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.184408925 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.239636479 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.306776022 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.188277923 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.160610228 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.179556702 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.238444777 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.157194152 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.179452359 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.155317376 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.179840816 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.162577588 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.185186189 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.159062964 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.248027001 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.237917545 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.316179872 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.62597171 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.155631034 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.179748905 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.302061386 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.181120449 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.385874419 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.185053001 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.297878242 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.241985661 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.153675408 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.44127469 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.261269188 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.239588777 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.183051979 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.251445243 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.15334869 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.185375249 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.240559362 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.155984291 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.186034411 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.237019387 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.165193562 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.185924062 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.316791122 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.180492575 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.306373737 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.152986005 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.248784081 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.182193141 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.161010628 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.413994824 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.156043726 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.191928597 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.237584681 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.160420191 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.180619965 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.03834084 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.156197656 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.189249974 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.161561187 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.317617136 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.241366308 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.161037448 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.188734126 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.165272134 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.238606739 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.287273403 seconds)
  done (took 60.580328198 seconds)
done (took 110.034910099 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.311983528 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.222418367 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.411926544 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.227210248 seconds)
  done (took 2.214035528 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.337728702 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.194010216 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.291398368 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.179327204 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.300578167 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.152758601 seconds)
  done (took 2.448682266 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.230253302 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.222409149 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.221457142 seconds)
  done (took 1.672194488 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.263732071 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.263031283 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.405479356 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.319493561 seconds)
  done (took 2.310547522 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.332010377 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.172090529 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.210169673 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.28189716 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.30046265 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.26374122 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.207692542 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.206017399 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.20974455 seconds)
  done (took 3.21340074 seconds)
done (took 12.852315787 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.200173988 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.212189623 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.176365025 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.193983816 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.185714608 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.211089623 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.183466208 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.208469806 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.184538061 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.193631467 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.182185528 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.190679415 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.29887404 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.184098061 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.191629676 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.182522443 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.191119276 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.193817594 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.208269222 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.167617055 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.209512955 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.166875969 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.190168875 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.197414489 seconds)
  done (took 5.693571648 seconds)
done (took 6.691332746 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.303961488 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.159306571 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.165774782 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.191048317 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.28264984 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.172973113 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.208025825 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.167287335 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.20133943 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.166425074 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.179194924 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.17855867 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.189975765 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.295862274 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.194139981 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.157694006 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.18247055 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.176451628 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.206283076 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.182152354 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.282805096 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.158667663 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.203666612 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.156543091 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.282321935 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.184894392 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.165601296 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.192693778 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.179970093 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.19168506 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.166854668 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.181872848 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.181767947 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.20588065 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.157086527 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.18946732 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.156771123 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.154575382 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.166951607 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.193129657 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.178482264 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.192101733 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.165791195 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.182377871 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.168452637 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.1907656 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.158212437 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.19588301 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.155312837 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.192596908 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.15930713 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.207844307 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.16650595 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.180255254 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.156710781 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.183918849 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.178102047 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.182852932 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.179306391 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.181015826 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.157297866 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.156769377 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.194451473 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.156589745 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.191309104 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.157936006 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.191355688 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.168523246 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.190761618 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.160791886 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.182808861 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.167326935 seconds)
done (took 14.348819008 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.166482623 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.225489778 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.298498922 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.302198415 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.185913935 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.199815912 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.197641613 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.179630664 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.195059092 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.174789545 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.217910043 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.189300957 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.30307206 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.200916542 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.173870854 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.196551461 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.168670541 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.189564608 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.301686688 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.209012892 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.182798595 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.20203037 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.184338176 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.200776369 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.16216748 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.219899752 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.167001405 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.195701283 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.162160286 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.193608419 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.18212323 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.185430214 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.165818363 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.203820193 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.204900218 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.172829729 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.20037604 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.169303862 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.187254329 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.161284477 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.194138445 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.178901242 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.186614513 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.17491079 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.196131645 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.177202073 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.195225594 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.174152034 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.188563783 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.169622827 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.188428989 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.186352817 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.200215753 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.179783547 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.200242852 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.174864625 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.199295246 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.175005844 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.191246177 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.175077292 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.187209072 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.167602668 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.208015419 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.185233262 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.190902977 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.175696155 seconds)
  done (took 13.807410216 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.185741288 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.220040552 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.172827634 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.199534731 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.168014312 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.1827085 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.155291955 seconds)
  done (took 2.314185694 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.163973296 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.316433046 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.306186562 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.307675578 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.29732077 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.342717534 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.181428868 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.184691642 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.195011042 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.195921213 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.314567655 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.372041933 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.19506461 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.173407247 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.334530809 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.157856177 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.310790779 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.290982743 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.199141036 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.309321039 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.174701685 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.217761001 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.169947799 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.18413843 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.311358727 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.186718506 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.357103442 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.1776478 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.193030832 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.173234948 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.198040756 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.261234896 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.311822753 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.173590929 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.192697479 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.308281521 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.302123825 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.199171347 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.358590782 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.190301923 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.299127982 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.172783076 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.200056516 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.174341653 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.199331004 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.29525214 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.179037152 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.200642344 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.173238929 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.320435022 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.197455975 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.315060246 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.197102578 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.174916237 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.199860891 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.174916447 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.206075857 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.176052136 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.323198641 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.202965824 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.308981749 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.309995077 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.306756886 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.310348613 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.209488861 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.315289535 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.293753068 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.173336567 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.305198587 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.201785018 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.311488562 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.198950439 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.172492256 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.30070437 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.202094135 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.312680055 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.313985179 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.171107792 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.199929614 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.163331734 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.199313614 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.159822349 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.327331848 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.173306047 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.172150941 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.205476758 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.201486586 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.174970225 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.304532092 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.211487788 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.173026542 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.199497925 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.179137515 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.201304789 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.202073741 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.317324221 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.172956072 seconds)
  done (took 23.865085428 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.166188033 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.160738457 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.190597422 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.162913315 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.18811603 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.161198572 seconds)
  done (took 2.098951899 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.201725373 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.200659246 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.183864791 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.200412846 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.224085829 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.302083177 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.311559801 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.198348756 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.222353136 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.186158798 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.308263991 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.30899076 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.307074244 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.205195786 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.310786867 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.177067 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.313374697 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.200966059 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.185467579 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.20075416 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.17517039 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.206292085 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.174429514 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.294993728 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.205531513 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.178289991 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.195234743 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.187026926 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.210124625 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.195873092 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.178856194 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.202667672 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.167375055 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.195771403 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.311817236 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.168953538 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.197635817 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.1790074 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.205580752 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.176614707 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.308832429 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.200443855 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.183101985 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.205796701 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.171333101 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.194573765 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.178176289 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.194141029 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.313326576 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.205126713 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.178485965 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.205309697 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.177166733 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.20555519 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.168405075 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.195513968 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.179872804 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.313009776 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.206493367 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.168866585 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.204280098 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.176986961 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.198080775 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.181140004 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.201568719 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.179744226 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.1944616 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.176795806 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.199973264 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.177530327 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.206329171 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.203226752 seconds)
  done (took 16.278616785 seconds)
done (took 59.383499677 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.727467927 seconds)
  done (took 2.793713711 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.289491632 seconds)
  done (took 2.358802192 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.27682424 seconds)
  done (took 19.380996424 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.487305892 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.405739584 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.082248728 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.231283951 seconds)
  done (took 3.280376296 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.160174908 seconds)
  done (took 2.247854913 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.458583525 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.33547192 seconds)
  done (took 1.871814635 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.831156602 seconds)
  done (took 1.921858219 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.867225713 seconds)
  done (took 2.944856116 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.360837716 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.274960384 seconds)
  done (took 1.729136296 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.713872972 seconds)
  done (took 1.810766508 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 13.41726633 seconds)
  done (took 14.515664877 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.314460728 seconds)
  done (took 1.410713961 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.355090826 seconds)
  done (took 1.455020642 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.6948686 seconds)
  done (took 4.796430188 seconds)
done (took 63.592663845 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.179304505 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.205830923 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.178308219 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.202799811 seconds)
  done (took 1.853244467 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.186006894 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.200491837 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.179718175 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.175269285 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.205663933 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.202209303 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.173112446 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.178173984 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.2011591 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.176788752 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.200765125 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.175422237 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.203662771 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.175374675 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.200018521 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.178420593 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.205408243 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.176001571 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.203962389 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.176402669 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.202248973 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.1780482 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.205511888 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.1789634 seconds)
  done (took 5.634637407 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.17683352 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.166931074 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.195122369 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.166355861 seconds)
  done (took 1.808890363 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.191335714 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.217721751 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.18757958 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.211109318 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.189899428 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.214220887 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.174878872 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.200535627 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.175569253 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.213333763 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.192488444 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.216817585 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.188785249 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.206786352 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.188380659 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.197339061 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.17929773 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.214593978 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.186147065 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.220304621 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.181466651 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.211480035 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.175442002 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.213584283 seconds)
  done (took 5.854911927 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.257291238 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.215174918 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.203374396 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.249307821 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.234077043 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.174300237 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.230456052 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.180225642 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.209791273 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.184069706 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.203474338 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.222491212 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.209114302 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.179221674 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.205037875 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.181448702 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.212358289 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.180976505 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.244153604 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.207148269 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.181596207 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.214845128 seconds)
  done (took 5.686332389 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.329166649 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.166866959 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.193121067 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.163403391 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.207470028 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.169490478 seconds)
  done (took 2.339092143 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.171015183 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.16251033 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.18870172 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.161540864 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.191140786 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.161390914 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.187551643 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.16359294 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.188853275 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.162767486 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.188510844 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.160309282 seconds)
  done (took 3.204104237 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266879957 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.207471285 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.340373032 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.456906705 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246828106 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.246771116 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.365376212 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.218304017 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.265137837 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.222709467 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26752571 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219031554 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.239665672 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274703089 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199829671 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.235505716 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231055709 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.29905437 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228745569 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.302531627 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243127565 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.235894592 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.278490372 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.234088008 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.2267604 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221205084 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.20814693 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186572678 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252620322 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250880087 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.26345955 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211033051 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228990153 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.276120448 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.318799689 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.269527011 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.354963645 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.218026817 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.223830977 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.275948359 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.320563529 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.22868334 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.281718996 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2414578 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18743843 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280993763 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238867108 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.274907724 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.191518279 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.231843728 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270719551 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238168974 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.256981631 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.226406793 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.390075861 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192218088 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.227735594 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.267913957 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.276333673 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.295479963 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239374644 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.211238873 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.260513226 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277299369 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.30551839 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.199967468 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.252620951 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.215079166 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223305002 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.298071704 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27210206 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24828709 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.283518596 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190138634 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26374548 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.254966152 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244090187 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26667623 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261781124 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.208732689 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210027267 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222116164 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185964989 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.277420613 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.210603108 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.307475832 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190100501 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.264582878 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264829627 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211770714 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.249066798 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249182874 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221180919 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.235827824 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.149752074 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232724916 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.246388246 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217076906 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217369541 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.239642904 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198549271 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.214407083 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211938055 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.21080921 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260318788 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.18453024 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248444373 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261597722 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.190696456 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.269112992 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.235650637 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.223855213 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258846464 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.289718336 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191114108 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.222638228 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312341045 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260792661 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.197428947 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.259115003 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.289139701 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.231471264 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195092616 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253748888 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283216951 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203277875 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.292410997 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22816882 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.223422056 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.188405174 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264804204 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.248783662 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.219406253 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216702766 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.257097079 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247825649 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.214877884 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199133354 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273982257 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.222713307 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184339922 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223940768 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226194057 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.201536592 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.23942898 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.198045436 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242442562 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259589435 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.226102146 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.245378899 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22387414 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263717824 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191423714 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.260526356 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.238504631 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.177500435 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.263964223 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.290037162 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187969084 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270125412 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.249536411 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267960542 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262098273 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188416069 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.272245933 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18805471 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.209777863 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252024368 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.23043922 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.253526863 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.280978538 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265496611 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.252372736 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.253894227 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207719571 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.257915479 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.276179604 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217038843 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.22852487 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.263557957 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260606534 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.180451788 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.211122587 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.187665206 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226444927 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190034501 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.225248057 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.268672434 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223459562 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.262704287 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.257197581 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228014121 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.286762724 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.185798767 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248152995 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.265781563 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19898529 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.281115706 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283683001 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270740574 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200004344 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253515827 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.210514479 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185345357 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.224655244 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.219792685 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.226577137 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.226191124 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20166049 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.283150811 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259832064 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209433267 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.305425641 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2253832 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.293805797 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.211018524 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.221808024 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.256075162 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25978548 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.24820817 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218671732 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.220526647 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.284233351 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233131671 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283390925 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260900357 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241477146 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.284122582 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.256037098 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191312107 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.233149062 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249030481 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198830522 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.251450272 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.232945963 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191582533 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23649453 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.197874744 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.229961854 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277841058 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23481331 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236101113 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.245093458 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259413924 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187190354 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232781208 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.266534453 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235927627 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.155023973 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.257830622 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251383015 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240076409 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243622321 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261191873 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191478191 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.407347261 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.272617559 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231054732 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.227313194 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229270915 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.234311151 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.248562405 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248223325 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.24260627 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233120986 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.300895526 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.262994128 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.198300356 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222012799 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.208343254 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.243434657 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.219829211 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.213118233 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.25461066 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.233429544 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279194163 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196721245 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.26457282 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.269482872 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.206979812 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.238226314 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199133074 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.353314203 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232662478 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263919036 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.257226495 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.223475625 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273857242 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.215690766 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187955536 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.222265415 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.275668296 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190355911 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.272978568 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.253588393 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2678599 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266744675 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223317225 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.232364884 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.188660933 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.261295798 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239843977 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271353361 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195587651 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.226311879 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277551566 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.176836734 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.220657459 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.220691542 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.380848151 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.235177741 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25997901 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.157244507 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.374694994 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190870012 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.223548888 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.24903523 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231729049 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.224728718 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.247488664 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261863258 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23101143 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.221150958 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225370908 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.266276319 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270877742 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258926153 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235877691 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.236514015 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.254021339 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249941491 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232063938 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236119482 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.208238213 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251435465 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291578839 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.267330154 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.192791556 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262837823 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262861848 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.235233266 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263654826 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.231650058 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275562835 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189511808 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257677949 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199407132 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.216566087 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250036335 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.255461676 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189562723 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266102973 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265088528 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192101314 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.218292214 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208541812 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259250425 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232322699 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.192236247 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277190207 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.219668018 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246399839 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.305159965 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220215923 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.259696083 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204270808 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.221104443 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201933989 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236030434 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19333527 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.267558605 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.265940732 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.191870767 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266569373 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259182401 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255506025 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216159821 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.233635925 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.359368883 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.188869967 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.287606476 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.211396505 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.288690762 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.240589883 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270437323 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.232487875 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242071844 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256942032 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240410879 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.283161776 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257820635 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.260267874 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194082781 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234323862 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2015155 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.226204813 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.243632168 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232323398 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23330816 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.19798635 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.260154591 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237659202 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.209749578 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.232657798 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.296345017 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.242995355 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249199636 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.279259324 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.230744985 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269394802 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237004789 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221016932 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.258164394 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232466713 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.235028561 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245847394 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.196546433 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.22803675 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.309343737 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.188098082 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251765256 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269445856 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.233311024 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266435347 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.226163187 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241634498 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234328192 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272236714 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190294241 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.242878092 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.265935354 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196438947 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.219894164 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.236382644 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252594272 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.257830762 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.236589234 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.239062314 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287664793 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.186535872 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225253923 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.378964323 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22307732 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.287025676 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.215092506 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200476122 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238098993 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252743593 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.229326788 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264908547 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.222850895 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191573663 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.238950847 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.21248547 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.216337357 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.265922852 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243964334 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248294843 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278335255 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.196456477 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.349232469 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.236667735 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.233992605 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.199799779 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.191742749 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23398625 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197439214 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234181176 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.270287863 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312601483 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.25954334 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.208142739 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227885264 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.190425543 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222842374 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.222983313 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243034257 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263075493 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209847635 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.185362398 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20401058 seconds)
  done (took 117.328508258 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.248630151 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.221041517 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.238614421 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.291379721 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.263986084 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.361553239 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.298103691 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.31354043 seconds)
  done (took 3.472177991 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.184982532 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.227653251 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.239559933 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.179509838 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.200799976 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.555375303 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.231308883 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.212751216 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.223355288 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.215793014 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.200141024 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.635091236 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.214095801 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.18025295 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.210877025 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.196487626 seconds)
  done (took 5.33071063 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.427249303 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.73613509 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.379753808 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.410061294 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.367259132 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.287980267 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.942196281 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.280012214 seconds)
  done (took 14.061865618 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.237759773 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.267787126 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.462574745 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.432721368 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.278395947 seconds)
  done (took 2.919756556 seconds)
done (took 170.584363072 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.189882596 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.186779617 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.217565027 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.190022209 seconds)
  done (took 2.004744458 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.246538264 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.145163223 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.178551756 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.142936403 seconds)
  done (took 1.955641985 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.462813532 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.143330796 seconds)
  done (took 1.869683289 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.209451425 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.225789536 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.199332261 seconds)
  done (took 1.887023203 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.199849366 seconds)
  done (took 1.45004459 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.185398507 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.182734341 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.36683792 seconds)
  done (took 1.983924632 seconds)
done (took 12.385642755 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.208046567 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.022156379 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.642755409 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.195930083 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.812036363 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.462452802 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.530272809 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.241627375 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.264672134 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.203922301 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.207100079 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.7850939 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.514780895 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.941222903 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.498841926 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.9434771 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.79144848 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.17354225 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.210500232 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.175603615 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.507008747 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.171129094 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.205418371 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.172822046 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.787775316 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.479882113 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.203524205 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.956623674 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.20320105 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.183336862 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.494016313 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.174183952 seconds)
  done (took 23.594395279 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.178382041 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.262706871 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.228620064 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.207245349 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.182755922 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.206878473 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.18541443 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.21722022 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.306204511 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.174199177 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.227568673 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.173685076 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.209816416 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.174010326 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.228052184 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.17310225 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.206635844 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.17456745 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.211522569 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.175644403 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.226332343 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.173177259 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.207119565 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.174381463 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.204641038 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.191034139 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.205161424 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.186852462 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.204682383 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.183958519 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.210284353 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.17528039 seconds)
  done (took 7.703259961 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.218194018 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.272274707 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.229746464 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.244719458 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.260774572 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.175063463 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.293808103 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.212356892 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.311874716 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.205888961 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.195177124 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.205539545 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.214830811 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.206668948 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.200004134 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.205287209 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.177845032 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.205126364 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.182106398 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.20598178 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.227593886 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.174152663 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.208857845 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.175170809 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.205529488 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.193169187 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.206322815 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.185453471 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.205306834 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.184153585 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.21228754 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.175464073 seconds)
  done (took 8.036634058 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.191999905 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.189407326 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.228863182 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.230570103 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.184088353 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.189527802 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.219734088 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.185894519 seconds)
  done (took 2.882626276 seconds)
done (took 43.455507366 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.200570827 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.22299344 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.196482039 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.190528069 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.366267247 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.180717255 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.22493007 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.182439121 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.189584444 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.227720857 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.174980003 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.213489857 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.194759473 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.217418849 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.33795778 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.191710622 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.372700956 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.337249311 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.182405179 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.222544711 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.183021109 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.341266581 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.222493307 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.182274017 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.322405035 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.179700785 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.362778395 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.185072069 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.185522684 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.207996212 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.339852086 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.219719491 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.183367382 seconds)
  done (took 8.989668588 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.28954108 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.216785109 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.183510557 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.21544276 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.185496145 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.214985439 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.832198424 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.183227909 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.216536404 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.182340575 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.216432341 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.272281552 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.222142634 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.179233966 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.219120392 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.164774585 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.323887695 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.218015782 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.177642493 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.148001084 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.212212251 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.184023122 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.336269019 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.21269241 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.18434935 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.185388449 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.219319579 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.190647358 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.219711599 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.186255599 seconds)
  done (took 8.270241977 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.193745098 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.197941722 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.235040364 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.286056139 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.214758106 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.228920731 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.201631925 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.228632705 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.206343 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.21119194 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.19432094 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.246166639 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.196211124 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.221441358 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.178886226 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.226062685 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.195250039 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.210014346 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.187628678 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.22811169 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.197251899 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.22840174 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.201272731 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.221206133 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.178012092 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.218658323 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.189893351 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.221697396 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.187246925 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.225627086 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.180888296 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.212584295 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.180686245 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.245610633 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.181539216 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.223203593 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.19977722 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.224160907 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.192959035 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.244450498 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.182098506 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.213254074 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.205763735 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.26802703 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.180757134 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.220752932 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.181451077 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.225038673 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.177170156 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.229181239 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.221006805 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.210923051 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.234662383 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.178225108 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.177933521 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.218828316 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.179766644 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.214894925 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.194529207 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.212171813 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.200522427 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.21995311 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.191399828 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.214244703 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.190494406 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.210423686 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.179920016 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.216163592 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.207435526 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.219708106 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.217261427 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.211668467 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.192267117 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.225655581 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.191005085 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.225429854 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.179562219 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.22333685 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.190816164 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.21633156 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.192828152 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.215475795 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.180282703 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.228215892 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.20068355 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.226231073 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.190868057 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.224405003 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.180635052 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.214825083 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.196582331 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.215279471 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.183060779 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.226620159 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.179820562 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.217099185 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.190226146 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.223862685 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.177490378 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.239167495 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.182803763 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.181682741 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.238105628 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.183320937 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.215942265 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.189360951 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.254530831 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.181604099 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.221745517 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.192123803 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.21318528 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.19033405 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.213917008 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.179825871 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.227868362 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.196169709 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.220825916 seconds)
  done (took 25.566877884 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.437921261 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.428602618 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.283763738 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.51094116 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.1946112 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.349341491 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.461282751 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.432642587 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.215588798 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.215697471 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.271167793 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.394559532 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.215946804 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.209016384 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.466611851 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.513074323 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.209183444 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.254056469 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.250101706 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.193988985 seconds)
  done (took 7.811248204 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.192230451 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.249280234 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.203138332 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.230652096 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.19077454 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.22717847 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.180510035 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.234655259 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.190984063 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.219522608 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.18453457 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.220344361 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.193663175 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.196633315 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.227108629 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.203093844 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.221652418 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.18569177 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.23526232 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.185558024 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.189525428 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.206691997 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.222465022 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.203609202 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.228948877 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.190454037 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.211344054 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.185360443 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.218170062 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.191289968 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.217197382 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.189541561 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.219632469 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.16123014 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.22448972 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.195409836 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.218358843 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.184843967 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.186231224 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.213667535 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.195011112 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.223404108 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.188960482 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.185919313 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.200863672 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.167408439 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.228879594 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.193034743 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.195337549 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.200841322 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.224935098 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.194533187 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.220581961 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.20374225 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.218657065 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.196588197 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.224353809 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.195078857 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.220055218 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.179216575 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.210958391 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.18322302 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.221016583 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.195106235 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.224972813 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.190410527 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.220679599 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.181019598 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.184790399 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.217222386 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.183919617 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.227516711 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.236455208 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.189591777 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.188389739 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.223216932 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.19045271 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.183637738 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.188688241 seconds)
  done (took 17.451243207 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.208977832 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.225658514 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.198399531 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.24924643 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.194077473 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.221854679 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.190727047 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.202441247 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.22813739 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.200606445 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.230429302 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.228349219 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.203263069 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.226017778 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.191388933 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.23113435 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.194362775 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.255229802 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.193195448 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.24279121 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.196118794 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.220192247 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.194519429 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.227295385 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.210593889 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.227638584 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.208806372 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.228039194 seconds)
  done (took 7.353273415 seconds)
done (took 76.705934045 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.522101169 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.709677676 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.402005171 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.410581611 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.421476083 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.434421514 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.405732321 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.411628393 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.965685162 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.38125365 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.408162169 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.402802479 seconds)
done (took 31.235366104 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.465373076 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.190065092 seconds)
    (2/2) benchmarking "String"...
    done (took 2.202896752 seconds)
  done (took 5.709209461 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.177162333 seconds)
    (2/2) benchmarking "String"...
    done (took 2.186728074 seconds)
  done (took 5.669913961 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.3968483 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.394496395 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.873596007 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.397380352 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.394737138 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.403417781 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.40152194 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.405213959 seconds)
  done (took 17.576673682 seconds)
done (took 35.121891059 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.461125329 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.707022381 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.66121453 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.381992222 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.413719161 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.405773179 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.396574313 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.46177604 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.393546484 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.385385599 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.914981927 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.694584905 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.402889781 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.828427484 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.383144812 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.396374357 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.397865259 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.76793711 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.399622466 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.443898907 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.385980228 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.387162851 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.408989579 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.428810326 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.406679369 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.402079342 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.393731912 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.405624975 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.713598845 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.431832916 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.445965859 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.398205526 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.387256578 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.399770949 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.406725325 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.407362207 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.715179284 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.409665503 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.383873396 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.408009217 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.71432282 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.409775643 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.40718062 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.402354867 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.385964794 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.46387519 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.388136438 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.578716889 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.433570568 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.401382955 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.482708171 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.8383212 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.406474175 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.3995946 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.397431964 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.756169063 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.401135717 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.527226053 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.440989947 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.401462155 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.408153299 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.404420981 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.448835079 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.412498615 seconds)
  done (took 157.641176581 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.40055366 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.401554276 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.398660054 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.406249566 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.399999399 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.400043469 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.401492885 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.401811921 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.400934993 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.407020264 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.402164409 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.401656524 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.400178402 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.41070998 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.409209509 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.423231614 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.400670295 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.399005697 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.411223662 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.400489406 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.412932958 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.401634523 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.402421844 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.40151293 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.419639118 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.49278145 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.414761821 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.429040523 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.411368583 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.401919755 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.417520203 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.40873829 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.170594668 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.36155757 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.418407467 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.405575528 seconds)
  done (took 87.756408202 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.401247603 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.404564505 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.406614417 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.44130591 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.403603908 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.050767489 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.050657 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.479859485 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.990738558 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.016901311 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.696433813 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.400846713 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.403253095 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.499171647 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.41603866 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.404281159 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.501523623 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.426803087 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.404041952 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.402526886 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.050540226 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.420447041 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.55804792 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.590721418 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.402031432 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.440015871 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.810451385 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.403094695 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.442939008 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.749184795 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.439839381 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.401895869 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.789758112 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.893484221 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.519271131 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.404307489 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.441941675 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.40401688 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.696999737 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.403010118 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.406829388 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.40879989 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.089287123 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.403911349 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.051927065 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.406082576 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.426186877 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.402742346 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.404850784 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 23.018686525 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.405244969 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.164380401 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.405364048 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.403925947 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.408915966 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.405722264 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.404582874 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.442831173 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 23.029816711 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.33261171 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.40271888 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.411027129 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.444932068 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.407159667 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.51405287 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.406299712 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.068696446 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.471075965 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.587018433 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.054600239 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.406813325 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.5087589 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.527826897 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.404886474 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.40654255 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.407040868 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.405805864 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.522613106 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.406051287 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.405611495 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.255296222 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.592314498 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.406343782 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.031253975 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.50973158 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.402325254 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.847022586 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.407272461 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.407676843 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.18627271 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.502546588 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.406184962 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.406903629 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.408156722 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.40774382 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.25724612 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.055296906 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.764550297 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.407971502 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.520755957 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.408451033 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.379920031 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.027979116 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.155013287 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.408448519 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.525883843 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.594897298 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.411214722 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.409176056 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.045538962 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.409252113 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.470529807 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.407337972 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.814778332 seconds)
  done (took 405.023777336 seconds)
done (took 651.726319754 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.396092128 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.39480663 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.416407632 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.396331335 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.395809621 seconds)
  done (took 13.312535694 seconds)
done (took 14.627156847 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.416379275 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 2.414237383 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 2.408978614 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 2.254696146 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.411861383 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.446042056 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.423533118 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.409758043 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.410508348 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 2.431147215 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 2.249930595 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 2.410523992 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 2.413698558 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 2.408180817 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 2.245914721 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 2.412186634 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 2.363620751 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.411640824 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 2.431024993 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.784942694 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.421973213 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.543357923 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.778956039 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.485844255 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.78724592 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.833522475 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.424157639 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.665573115 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.465156917 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.461024548 seconds)
  done (took 20.970291684 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 2.350152279 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.801163472 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.422719468 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.561309438 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.769624615 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.488308325 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.810135144 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.843607138 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.422017143 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.672874323 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.464325387 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.46261176 seconds)
  done (took 21.037238954 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 2.208422664 seconds)
done (took 93.259094332 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.474160855 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.546891193 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.454657607 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.45400061 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.452483657 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.454712293 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.455499264 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.454901912 seconds)
  done (took 13.063614933 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.451340775 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.451438902 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.449922228 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.453004325 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.451202209 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.450883035 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.454393118 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.453996559 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.451420883 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.452877283 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.45102572 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.451568737 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.451217016 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.451421232 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.453723689 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.452538553 seconds)
  done (took 24.549835563 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.454554172 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.452873302 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.452675372 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.452779715 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.452069777 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.453128362 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.453135975 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.453477709 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.453413105 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.454015626 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.454383968 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.453258546 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.453206165 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.454213486 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.451837486 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.453961289 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.452813867 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.453854921 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.456237696 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.453997607 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.453846052 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.450146908 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.4522448 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.45253506 seconds)
  done (took 36.198658993 seconds)
done (took 75.129608034 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.425625353 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.430274339 seconds)
  done (took 6.175469591 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.551194115 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.552411868 seconds)
  done (took 4.426279837 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.453783124 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.455628889 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.454201892 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.454694204 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.454208807 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.45467388 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.455317328 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.453166775 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.454326978 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.454961207 seconds)
  done (took 15.865843555 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.453942433 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.454774591 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.455296026 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.45411955 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.456774706 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.454499626 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.455225765 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.455377182 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.457316115 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.457341607 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.454593353 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.455288414 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.457621671 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.454065213 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.455617925 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.455165074 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.457233424 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.455932211 seconds)
  done (took 27.522997583 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.476760628 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.482188133 seconds)
  done (took 4.280874195 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.637273846 seconds)
    (2/7) benchmarking "second"...
    done (took 1.537591966 seconds)
    (3/7) benchmarking "month"...
    done (took 1.622073729 seconds)
    (4/7) benchmarking "year"...
    done (took 1.611039784 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.538475179 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.484199702 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.536297528 seconds)
  done (took 12.288398476 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.457790128 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.809639969 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.994985116 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.673741123 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.452227968 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.476393402 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.4085625 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.475148481 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.480238583 seconds)
  done (took 16.550934655 seconds)
done (took 88.43096144 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.418279099 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.463925615 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.441216233 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.436908632 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.862575821 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.480986863 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.421362521 seconds)
done (took 17.848801025 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.411529077 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.425128433 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.426312242 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.440591433 seconds)
  done (took 11.028142755 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.425066833 seconds)
    (2/2) benchmarking "read"...
    done (took 1.828608862 seconds)
  done (took 5.575615097 seconds)
done (took 17.929365809 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.458165036 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.459706434 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.459639246 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.463220079 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.461669602 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.460202586 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.459224319 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.461828281 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.458839284 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.462963621 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.461432561 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.460158446 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.462710307 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.459697214 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.461382904 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.46244519 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.462007005 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.461585443 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.461769405 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.462102409 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.463387348 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.463706104 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.462842447 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.460907005 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.462071329 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.461308592 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.460517011 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.459596154 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.461229672 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.458719576 seconds)
  done (took 45.15969936 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.468095977 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.465921819 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.459690998 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.460417837 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.460159494 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.460949049 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.459352199 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.460572954 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.460061158 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.462710795 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.460528185 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.461713881 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.463015094 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.459713907 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.461352243 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.463141926 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.469168321 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.460522738 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.462203957 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.463136688 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.461799297 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.461160598 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.461272554 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.463381273 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.460943322 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.463857171 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.465550403 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.46550333 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.460459602 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.464537146 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.463765678 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.460118986 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.462892243 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.462857742 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.463040446 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.463868764 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.471637001 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.467763324 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.462708491 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.463876447 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.46247997 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.462887284 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.462183773 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.463114688 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.465771869 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.462258992 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.461811799 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.461229322 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.462521037 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.461797202 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.461936675 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.464668377 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.462978428 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.464936568 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.462770999 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.464195342 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.464392435 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.464961012 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.462279735 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.466116467 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.464753793 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.462373951 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.466854549 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.461781418 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.464286764 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.463023476 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.461901335 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.464487139 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.462340917 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.465676048 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.46179378 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.465202244 seconds)
  done (took 106.672835494 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.465711806 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.465643502 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.46308284 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.464053285 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.465738346 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.465114523 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.466650962 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.465271387 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.465489781 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.467805368 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.46663413 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.468043946 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.466049349 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.464661742 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.464182072 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.464891869 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.463510409 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.464829013 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.466592924 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.467084048 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.464880206 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.466582028 seconds)
  done (took 33.573368234 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.467042562 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.468066644 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.470707763 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.465869647 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.469811699 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.464669565 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.467535502 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.468074397 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.465496694 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.468146962 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.469273013 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.470711185 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.468784613 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.465967216 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.465889133 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.46773441 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.466429983 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.470131502 seconds)
  done (took 27.751749647 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.466653197 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.465073875 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.466633502 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.468185584 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.467175469 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.4660314 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.468237057 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.466287787 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.467218213 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.470157693 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.467577267 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.469558245 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.467291406 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.467671063 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.468472841 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.468418924 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.469029476 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.468431635 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.47149222 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.466248047 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.468884975 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.467748588 seconds)
  done (took 33.622998638 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.468095 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.469190391 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.467706892 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.467427667 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.468513768 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.468053584 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.473375281 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.470613617 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.471224867 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.470320981 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.469470245 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.469799896 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.470467649 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.469228245 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.469441331 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.469805692 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.468657083 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.469473667 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.468677825 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.47065168 seconds)
  done (took 30.726796055 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.469851997 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.470337324 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.470670188 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.471586505 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.473547998 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.472552131 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.471348975 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.468910955 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.470027508 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.469440003 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.470973369 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.469361013 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.471000607 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.471792747 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.472214867 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.470241223 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.470502988 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.470970785 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.467587533 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.471117661 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.47123234 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.470990969 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.473412296 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.470300239 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.472693001 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.472073788 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.472881503 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.470499425 seconds)
  done (took 42.524377996 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.498934746 seconds)
    (2/2) benchmarking "in"...
    done (took 1.497823781 seconds)
  done (took 4.333422498 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.471576868 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.472153407 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.470825934 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.471609134 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.470010118 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.474792011 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.474199826 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.473093401 seconds)
  done (took 13.114391641 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.463262193 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.472894144 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.473441001 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.475246049 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.472457916 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.463556853 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.481164609 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.477606335 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.465044473 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.465491038 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.472394778 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.468164283 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.470019686 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.468908093 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.46837227 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.472477681 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.477400304 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.475674735 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.474191725 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.47487163 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.473833858 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.472627071 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.475187173 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.477113535 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.467372492 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.484725607 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.485401042 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.479420742 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.469198632 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.48184633 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.469828112 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.479243136 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.476917491 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.476968545 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.474568449 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.474534157 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.485507969 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.474179712 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.483344146 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.479400069 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.475917783 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.47536429 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.478554849 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.475859675 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.477672894 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.478887923 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.478689364 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.476195262 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.469008245 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.476954367 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.482844641 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.470738353 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.48086499 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.483832826 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.479535282 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.492795697 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.482008641 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.472195033 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.475303598 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.489879754 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.494243297 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.484110864 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.482682191 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.483840229 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.482463726 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.483761099 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.489538579 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.484159124 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.481647352 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.479188241 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.488426705 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.498225158 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.495146485 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.482892203 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.481999352 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.479693193 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.470428886 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.482576241 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.486966325 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.489135036 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.484148997 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.47778904 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.486741365 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.480119155 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.472584398 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.485425137 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.478892951 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.479106736 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.472851122 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.492957939 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.489805373 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.482559479 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.469551191 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.475512424 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.477602145 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.483383816 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.473432899 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.479691936 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.484227498 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.481630102 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.479626774 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.478239726 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.488146293 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.487143931 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.483749016 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.488102991 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.484611276 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.471102575 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.492531487 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.486817283 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.479891263 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.475472055 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.484768349 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.484427455 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.478023637 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.484526699 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.484529911 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.482011085 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.48706522 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.482912317 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.486378889 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.497414581 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.488473918 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.48118151 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.481667117 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.488664446 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.480401035 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.486744858 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.48772515 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.482909035 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.482939555 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.485280216 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.490046046 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.480544139 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.48754007 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.481811759 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.484316406 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.480997619 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.486991677 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.485972832 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.48261633 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.480845784 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.491896281 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.493571563 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.491630395 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.487608585 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.501512099 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.484105556 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.488351766 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.487414636 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.487828166 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.483514209 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.482649085 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.488166896 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.479003091 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.482098387 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.478195097 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.488076521 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.48284953 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.486090585 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.484137753 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.476998227 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.481059288 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.488924046 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.492202046 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.484673365 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.487647975 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.48383932 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.485163442 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.478371027 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.486423518 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.476699516 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.482672902 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.490557075 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.485474514 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.486240673 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.490060224 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.48929169 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.485581442 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.489390306 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.480438749 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.490788878 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.492150364 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.49563251 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.495218212 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.485056305 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.486578356 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.477775491 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.483208444 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.488552141 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.484038229 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.4926667 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.500780302 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.500089502 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.48159099 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.48975816 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.478220031 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.488338287 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.493691481 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.49468225 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.48597367 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.489632516 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.481342564 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.492727881 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.482715295 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.490626776 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.478151028 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.490103036 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.489207182 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.48726336 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.490173087 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.48348732 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.490540732 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.495721488 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.487787658 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.488397861 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.484607924 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.49227517 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.478769751 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.485985753 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.491162109 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.490141449 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.505724296 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.495945678 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.493200288 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.499898485 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.49406597 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.48400701 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.49146124 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.496038009 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.49073957 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.500934231 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.497200447 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.488159912 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.50353575 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.492263855 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.482646711 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.497050289 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.498493768 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.49043576 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.486416743 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.496812897 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.491199545 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.490987995 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.49193623 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.484186222 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.495245101 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.498446904 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.500722473 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.483169682 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.495869761 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.484944699 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.494741126 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.493679748 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.496824282 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.495687405 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.503166709 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.498020873 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.493246034 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.488625823 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.49693952 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.492444046 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.491170071 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.486267702 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.49802625 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.502225597 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.490651779 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.497410809 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.488351906 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.496181602 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.485038844 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.494152644 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.48686694 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.511802933 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.511046971 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.504934532 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.496915006 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.494873685 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.503318684 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.496686974 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.488149156 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.489752433 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.49127616 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.488174928 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.488494591 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.496811431 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.488168363 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.498088758 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.497605946 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.493545443 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.495789723 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.494898618 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.48945889 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.501704162 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.494404771 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.494549551 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.485821906 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.500189165 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.495692854 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.502034652 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.493412885 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.491217424 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.511555066 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.500176593 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.495680142 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.490546459 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.492347037 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.488868452 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.49672818 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.498656009 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.491879309 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.50089526 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.495118199 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.501708982 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.493409462 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.510210621 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.504598315 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.493122275 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.499629597 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.494376625 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.483762216 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.494380675 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.498869794 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.507437503 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.507490163 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.490736706 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.498098815 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.495098295 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.498347031 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.499559965 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.495569443 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.497399355 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.498245412 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.510180589 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.502238169 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.495607787 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.507370246 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.508600291 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.494954352 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.497701418 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.489092851 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.510212926 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.506161712 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.497796962 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.498454308 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.496488625 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.498676473 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.496783076 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.497264002 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.501752632 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.497891876 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.510792259 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.503212036 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.502464105 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.499684282 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.511473491 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.507805357 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.511841345 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.509141561 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.49751627 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.504106284 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.498074441 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.496481361 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.493755456 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.496321495 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.503067325 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.492983151 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.503982874 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.499426568 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.503319172 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.507716868 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.508086817 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.492541894 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.504685966 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.508663916 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.491067265 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.50332895 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.498982098 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.49309839 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.504098252 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.49875267 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.490366268 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.49613006 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.501534937 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.508949288 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.496214568 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.506416633 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.496215405 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.505585312 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.501945255 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.500278981 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.500138111 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.501230429 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.493993266 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.500568193 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.508743465 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.512528933 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.500037959 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.50479841 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.499938785 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.51598887 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.512574259 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.504688969 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.506206271 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.500931787 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.498019406 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.504747915 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.506129865 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.497031431 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.507490233 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.495020072 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.499143571 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.498006276 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.508943071 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.510054875 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.506872208 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.494980123 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.496325127 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.506746423 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.50258982 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.505300011 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.505688538 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.510331237 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.496025577 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.497091564 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.504838919 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.503274893 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.510344507 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.500818854 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.502935045 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.500677914 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.507855293 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.51157553 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.504117947 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.498594689 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.500872492 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.517653188 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.511916075 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.504522467 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.500810473 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.507240271 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.497606854 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.50286255 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.502750245 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.499621216 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.502194937 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.511974463 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.50159954 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.501249007 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.500821857 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.506639008 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.514803942 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.50775144 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.499011641 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.519683474 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.521718299 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.511697053 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.497767418 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.505166334 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.503093934 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.509111389 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.508405852 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.499376841 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.520323359 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.516257549 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.509016475 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.514030521 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.507246767 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.499548791 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.511096627 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.508845434 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.513702196 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.515355409 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.51385452 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.519189486 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.509315675 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.504630582 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.49791199 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.500083076 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.503092397 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.502777832 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.507758563 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.51506913 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.51059384 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.511414126 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.515445715 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.508006011 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.507530812 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.508381757 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.500253 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.513377784 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.504194004 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.515885714 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.512397701 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.503455223 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.512970818 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.510761389 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.507675801 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.511126799 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.513926945 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.508852767 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.507617205 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.513184114 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.520233684 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.516171296 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.514490355 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.503951864 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.510832348 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.515204831 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.5092781 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.513129288 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.507092347 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.530150517 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.522518471 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.505391363 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.510048659 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.524551481 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.519758832 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.510843593 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.513894539 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.512421447 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.513090666 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.51652588 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.508180614 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.522518332 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.517420546 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.504925173 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.51298793 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.507504551 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.509787103 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.522477684 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.522090413 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.511692164 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.512162406 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.525609855 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.519533245 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.518304947 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.533801331 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.52169595 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.515792337 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.515344095 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.504052855 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.514924349 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.516438159 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.518121893 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.511097675 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.509556558 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.511189796 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.50311775 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.523131607 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.529453082 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.524511531 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.511681199 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.509790456 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.510735898 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.516290515 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.512790418 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.515285219 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.51481812 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.518873804 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.514393276 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.506712481 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.535870518 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.539365027 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.518823518 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.512203752 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.514342082 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.523219607 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.523409297 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.515209301 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.519604693 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.516242533 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.514459137 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.518840001 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.522956306 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.51458485 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.509555649 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.511769688 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.509105522 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.520812109 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.530371983 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.535510766 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.525079551 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.517491994 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.516230172 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.514740387 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.511908184 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.521926636 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.519258769 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.513387003 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.512288749 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.518420254 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.515961073 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.513695282 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.510543904 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.520555443 seconds)
  done (took 893.306780445 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.514529536 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.51811414 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.514814699 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.513909904 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.517811657 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.513707644 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.516422095 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.517054509 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.518183423 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.516522178 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.516966578 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.516691892 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.517238191 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.515418336 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.516431734 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.515391936 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.519631163 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.522428446 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.514966533 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.517189861 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.517609746 seconds)
  done (took 33.223506356 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.519941747 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.521743722 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.521034973 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.521486915 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.517562324 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.519964515 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.520426794 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.516118146 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.51637593 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.515650489 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.52250604 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.520775163 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.520827893 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.518920109 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.519736134 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.520968763 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.518400071 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.5210231 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.521662636 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.519876026 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.521090217 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.517790356 seconds)
  done (took 34.811561862 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.516710958 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.518851175 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.512163174 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.522257265 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.518615321 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.517712902 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.517945473 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.517896375 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.51880089 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.512282742 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.509343332 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.513767777 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.518595137 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.523412788 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.523112401 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.52453898 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.521902122 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.518571741 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.519850604 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.517975994 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.531098822 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.532320835 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.521642662 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.513013422 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.524506084 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.521744839 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.523010992 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.52104014 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.513158971 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.52354849 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.52254075 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.515434749 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.52966959 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.522289951 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.514787181 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.525051894 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.522971811 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.523229875 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.524781398 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.52613597 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.532483146 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.522267881 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.532074854 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.5329478 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.523728542 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.51962802 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.529412155 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.524324777 seconds)
  done (took 74.412637811 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.525153582 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.522464274 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.521346325 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.523823176 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.521921118 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.521333753 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.521728706 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.521509824 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.5213355 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.524525989 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.52613632 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.520858484 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.522146566 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.521624642 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.523600103 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.524982821 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.522950859 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.527544949 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.522758586 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.521905823 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.520466674 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.522995766 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.523854255 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.52401056 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.523550027 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.52314823 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.522919849 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.522284433 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.524078585 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.527405615 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.525599869 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.527848618 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.527994796 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.525868617 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.525538827 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.523482839 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.525636884 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.524673773 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.526062357 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.523074687 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.525994961 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.525835443 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.523601639 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.523573284 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.525518853 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.52527783 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.52548491 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.523948612 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.526777253 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.527880186 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.526975742 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.528462733 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.527015412 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.526762586 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.525738503 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.525498529 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.525784599 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.528164091 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.529554981 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.526665856 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.526629818 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.526616618 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.525769094 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.526913373 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.525434484 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.524527246 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.527346948 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.5346286 seconds)
  done (took 105.075047325 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.525842148 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.527068631 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.527827247 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.527681069 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.527194136 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.528982072 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.528180783 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.52782585 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.529372206 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.527932497 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.530863178 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.526760351 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.528431444 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.527586295 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.526210979 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.529037386 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.52752665 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.527773888 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.528703056 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.528677425 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.530104212 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.528100187 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.527907075 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.529160726 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.526423367 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.528316835 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.528297627 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.527607946 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.52947159 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.528691184 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.528047037 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.528485291 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.528874167 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.528420479 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.528699634 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.529422142 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.528726383 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.529297127 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.531600282 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.530488479 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.529532701 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.529842657 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.529419209 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.531363591 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.530795431 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.528885901 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.531832295 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.52903599 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.530269317 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.530593101 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.528669113 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.528768986 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.532480911 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.530802555 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.531787108 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.532845762 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.53123173 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.531094283 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.532169 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.532081699 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.532726334 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.531559705 seconds)
  done (took 96.202199668 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.529171412 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.534152632 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.530286079 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.531657901 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.529829387 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.530945032 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.530098485 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.529972911 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.531003628 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.531272308 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.531469679 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.532014022 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.533919013 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.531624098 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.531437412 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.534274855 seconds)
  done (took 25.892452106 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.533229051 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.53189166 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.530672162 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.532077717 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.53326041 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.533981521 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.535057635 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.531034568 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.533411546 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.534290149 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.535363191 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.535991763 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.532837241 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.534146347 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.533340867 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.532136245 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.534360759 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.532112219 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.534363344 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.53391615 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.534181896 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.53593149 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.533722409 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.533395274 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.532196029 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.535858785 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.53227886 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.534308378 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.534096131 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.534427039 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.533865305 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.538037763 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.535079496 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.534813261 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.535714492 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.535403141 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.534173444 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.536087306 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.535176436 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.534732733 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.534929197 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.534437515 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.532254346 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.536372258 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.535159045 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.535264575 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.535529833 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.534771426 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.534571052 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.536561947 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.53507307 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.537102379 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.536035972 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.537478544 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.53894109 seconds)
  done (took 85.786747116 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.533436619 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.536721534 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.537595319 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.535719451 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.54101384 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.535185724 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.535364937 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.540985484 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.53581695 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.53546495 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.536179216 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.535211985 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.538095522 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.535823794 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.536452156 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.537598392 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.538322785 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.534972639 seconds)
  done (took 29.055117135 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.536414162 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.538137008 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.536794029 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.537088131 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.537507459 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.541141579 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.542176907 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.539292672 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.54030984 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.540516919 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.542076266 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.537501592 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.54110212 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.536261769 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.537742963 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.536473877 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.539097395 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.539538023 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.537100144 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.537710556 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.536258416 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.538531052 seconds)
  done (took 35.244220303 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.530770219 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.527725348 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.528375431 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.551263048 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.540955453 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.530016282 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.531048466 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.528169819 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.552172661 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.566120455 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.559994396 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.538415674 seconds)
  done (took 19.880351196 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.538662144 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.541083193 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.538374398 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.540710519 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.540408176 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.53986516 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.53962784 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.538999617 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.540203472 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.544211523 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.541574177 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.540422704 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.543091618 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.542071097 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.540071192 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.539599204 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.540179795 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.544611853 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.54480259 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.538938856 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.542038481 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.539054513 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.541303262 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.540785179 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.541795014 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.54114165 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.543959536 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.543694418 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.542188151 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.543781929 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.544206355 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.540747395 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.541458101 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.541362767 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.542219509 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.540784062 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.540643472 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.541297046 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.540708075 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.543170888 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.540099757 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.540955871 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.542326087 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.541606094 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.541228462 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.544481948 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.544205587 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.54232078 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.541263103 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.543925802 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.543616336 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.542682278 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.544892405 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.543857567 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.544392552 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.543764469 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.545437517 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.54258471 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.541841528 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.543155523 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.544289117 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.549804482 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.544656971 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.545005619 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.544636647 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.542765249 seconds)
  done (took 103.181806362 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.542920367 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.54515005 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.545177428 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.544759777 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.54397986 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.544860348 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.547798711 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.544480691 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.545818152 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.549876839 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.547375962 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.54992475 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.54540972 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.548792273 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.544302107 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.543917003 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.544637066 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.544518266 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.545032716 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.547486242 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.545342533 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.543690158 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.542442374 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.547401733 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.548462832 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.546713517 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.545887644 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.545972711 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.545875562 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.547867295 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.54559885 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.544642724 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.545078743 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.54492558 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.54600365 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.546541219 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.550005556 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.545039561 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.547044076 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.547396914 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.547017815 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.548350178 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.547160641 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.547624387 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.546660228 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.546189079 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.547482191 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.546034311 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.547895302 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.546497917 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.545763256 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.552574947 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.551291684 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.548281873 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.547157638 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.548320006 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.546970463 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.547942723 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.547981765 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.544819282 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.547389371 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.549354355 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.551214439 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.548348012 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.550296165 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.546530952 seconds)
  done (took 103.486736549 seconds)
done (took 1978.361696465 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.513694514 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.51282045 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.539742659 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 11.827775166 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.535282455 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.170003393 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.078302765 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.532602923 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.53707109 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.538512475 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.538574773 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.517419149 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 10.830495903 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.534213185 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.540141033 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.51355511 seconds)
  done (took 58.663081739 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.577526583 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.557745367 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.691734194 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.542988183 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.577804761 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.806162152 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.615322033 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.54955969 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.759230626 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.548988387 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.53171559 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.577677022 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.543925034 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.515562629 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.570790811 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.801993326 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.910568726 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.524265271 seconds)
  done (took 33.605441657 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.142335628 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.530362067 seconds)
  done (took 6.078127114 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.569434702 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.544882698 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.551968026 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.547083955 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.534347629 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.517398197 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.544378723 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.518514331 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.526907786 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.701009605 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.548663276 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.565649095 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.545050038 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.548276495 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.555115633 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.604050837 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.740749295 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.554274954 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.554139252 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.557740828 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.544766273 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.792494143 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.600954633 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.553940693 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.702346926 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.53382354 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.559618021 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.565820975 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.757469368 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.554921544 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.545516019 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.549236813 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.549397797 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.519849068 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.177322409 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.533626169 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.583680858 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.563350759 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.55708418 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.76071636 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.547978482 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.560809863 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.518138445 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.177944695 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.732478621 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.842935753 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.527043558 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.551326394 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.548447047 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.755208047 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.550533486 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.553147855 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.652537799 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.519725239 seconds)
  done (took 98.290192841 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.522508484 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.519175518 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.783933627 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.542972958 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.516896597 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.517294273 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.521283328 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.928796183 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.589037196 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.516628686 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.940021284 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.317862138 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.527660257 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.567608632 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.567571197 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.566048588 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.519203874 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.523730008 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.524347265 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.520378674 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.215598017 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.521544325 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.522582656 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.722547819 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.593985521 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.234951247 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.521663963 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.520981404 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.521929011 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.520361633 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.279838728 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.532628276 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.585556096 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.517730362 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.927495739 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.066403695 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.032950489 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.530751432 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.524061335 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.524533183 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.534457279 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.232807538 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.054405591 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.522018407 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.521061442 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.2550728 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.523504421 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.522606751 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.531593508 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.885147755 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.524251164 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.524941405 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.522452402 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.523667849 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.521538318 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.591383024 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.574948393 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.239468999 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.523736992 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.524393639 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.540048284 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.525295989 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.53337921 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.526179132 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.524710021 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.054859909 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.731511388 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.532615844 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.06227447 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.274728302 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.524234681 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.349886881 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.528852656 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.550098375 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.641231193 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.523364947 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.525959272 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.232785538 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.556786446 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.519936858 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.041006192 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.52758413 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.946806573 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.544694615 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.52548945 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.249106468 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.535549249 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.588032039 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.524482059 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.522388148 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.525068866 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.531042181 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.931152767 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.554253513 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.523119455 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.524839437 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.562717927 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.525510891 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.527004376 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.525231666 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.355349797 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.532398848 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.526565983 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.530061679 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.525711684 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.526226485 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.525676694 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.529022859 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.900986222 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.525567113 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.528349171 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.527075615 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.525613697 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.533179324 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.732097077 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.538944862 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.992416355 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.530803393 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.526381812 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.523972008 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.526774809 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.536060696 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.52550265 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.550096 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.525673272 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.942401474 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.548062083 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.528463292 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.527816981 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.527930123 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.528848745 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.532241915 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.59224731 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.53138587 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.503841724 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.55402569 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.531800099 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.527862098 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.538443541 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.541432329 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.531033311 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.530188651 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.951792194 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.933436926 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.740997371 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.53230114 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.527607246 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.498565914 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.566284511 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.797621891 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.548249886 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.527704885 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.921425972 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.729892397 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.534947147 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.525435532 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.529389875 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.908383811 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.529131673 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.951443546 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.309017509 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.529533749 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.533745598 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.512981225 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.392731576 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.532471133 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.530044498 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.955148347 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.548428889 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.530572499 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.531652664 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.532170815 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.530565584 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.535593458 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.532739254 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.529673012 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.529076707 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.603755548 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.820815413 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.548838647 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.530986238 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.240280136 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.543274463 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.52845959 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.536132633 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.533777445 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.540842869 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.600659623 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.53540356 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.56290985 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.532101673 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.537953046 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.276182397 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.543459053 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.53300535 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.820180695 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.451332254 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.532412746 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.533288207 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.533473914 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.567529642 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.267035843 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.537321471 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.99972734 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.5385013 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.604719985 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.530331616 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.563172384 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.264003404 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.536552658 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.53182112 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.423508325 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.530098067 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.318250805 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.532911692 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.535181814 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.365787088 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.530650162 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.530885457 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.531749044 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.535294956 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.941086782 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.532781299 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.57754551 seconds)
  done (took 549.235674886 seconds)
done (took 747.275752054 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.533565756 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.530906339 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.532191139 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.532291293 seconds)
  done (took 11.548079892 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.571050061 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.561025672 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.571952132 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.562113031 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.574459992 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.564097781 seconds)
  done (took 10.825268214 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.534686988 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.535706042 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.531466676 seconds)
  done (took 9.022897326 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.85594481 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.534513712 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.035851137 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.54545393 seconds)
  done (took 10.394263963 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.573029364 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.569747382 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.570868055 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.573081675 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.573372843 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.576657199 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.573112195 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.573291758 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.576490837 seconds)
  done (took 15.580874356 seconds)
done (took 58.790313979 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.68919218 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.691919901 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.540527814 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 1.60969932 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.755086244 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.694618638 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.702020348 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.708278476 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.696312918 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 1.604191078 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.681957251 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 1.595931368 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.691387291 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.831550297 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 1.606541795 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.696142017 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 1.594888218 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.792349153 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.69456975 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 1.605910011 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.727517305 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 1.600684277 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.605243516 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.542245491 seconds)
  done (took 43.380406895 seconds)
done (took 44.805566826 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.5992834 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.733278024 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.566266841 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.563951882 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.577773682 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.536924632 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.598394531 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.573907129 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.59101943 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.589702154 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.535474308 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.578325079 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.589762008 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.58044993 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.610901498 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.566863915 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.568396512 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.575252412 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.592117824 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.593692955 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.569747522 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.578895472 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.604880691 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.568645636 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.586050014 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.583853156 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.583075543 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.543673815 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.572250284 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.591144028 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.550250768 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.57981619 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.59279759 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.577217466 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.570717198 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.579916133 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.578110178 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.728871038 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.600626169 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.579634742 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.579048494 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.596369901 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.582350382 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.583106552 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.578493955 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.605652995 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.586783836 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.593262174 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.553758407 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.554950598 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.597656029 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.590489335 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.580112667 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.556030065 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.54735501 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.593033513 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.58090306 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.599511572 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.575058952 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.581270635 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.644752032 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.597328194 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.590269754 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.588814053 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.577903028 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.592597774 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.580863949 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.594725418 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.579265701 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.582624928 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.577721231 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.580199339 seconds)
done (took 123.57686519 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.749936986 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.54219772 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.789969939 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.576804355 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.801724368 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.752856142 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.577208526 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.580110292 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.579583199 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.443786672 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.577564088 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.579629924 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.543864482 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.580128381 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.750774662 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.579357752 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.579512101 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.344951896 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.580861155 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.766501662 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.545423549 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.579458533 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.580451676 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.473693547 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.545416984 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.541353199 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.764428563 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.580342934 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.351677123 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.55031621 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.541813732 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.372988283 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.76419201 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.600686861 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.591355018 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.589023367 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.803572437 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.585978496 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.751973557 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.75074484 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.789018981 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.621733742 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.548953048 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.547320368 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.583802242 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.584507988 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.580857384 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.61287193 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.545432768 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.586163087 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.341561382 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.594322714 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.590830579 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.583406661 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.581709168 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.602480246 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.581926026 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.583333956 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.765962417 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.583692382 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.752509031 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.45704143 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.444181205 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.583325436 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.545729872 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.583551581 seconds)
  done (took 125.750049084 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.697337629 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.704945371 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.753191799 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.576216221 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.667290442 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.75294945 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.57771306 seconds)
  done (took 13.163262731 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.590329888 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.584488781 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.691075729 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.691070771 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.585817024 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.816862117 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.582844648 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.59538919 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.582714115 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.698176423 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.584123163 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.584183715 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.590850415 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.546932958 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.689558149 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.593048948 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.744979861 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.577133866 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.582553759 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.785747825 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.583966369 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.593213145 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.67011203 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.594204892 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.585423118 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.590862986 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.424223709 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.585040528 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.584862851 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.584884084 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.583094191 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.698092753 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.58493849 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.551110934 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.585169874 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.749456688 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.588928313 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.585731747 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.585865423 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.55344447 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.585217576 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.585538775 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.585941551 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.587725227 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.586531919 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.611536285 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.586608744 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.587617741 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.586748287 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.58862178 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.689487119 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.588813983 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.589945691 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.585346991 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.703497771 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.602446163 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.585917525 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.58584454 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.588995291 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.588349817 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.79310246 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.691661698 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.587900179 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.696016302 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.585480947 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.587212802 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.58741583 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.587076262 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.727711115 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.586565582 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.695743712 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.588219004 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.890106067 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.611115072 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.589127989 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.587331671 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.585064204 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.586285519 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.55412675 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.595316416 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.587194433 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.582715023 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.593639247 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.58933877 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.590861868 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.798197662 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.751645164 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.587569131 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.603021166 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.595005761 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.590014554 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.699626747 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.589169196 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.591452726 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.703233421 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.752831069 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.683607532 seconds)
  done (took 163.603616498 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.6027997 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.603025916 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.585567341 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.617243785 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.58232028 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.582484267 seconds)
  done (took 11.011609158 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.585313258 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.592197094 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.589287227 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.589033074 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.592887336 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.591117837 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.589750484 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.585562172 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.593938726 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.591069018 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.59082639 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.593601602 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.595693908 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.592448733 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.590103182 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.592609647 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.591008186 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.590437373 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.590707519 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.592254365 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.555691893 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.592987838 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.594954987 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.58474461 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.598737801 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.592306466 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.617090483 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.591805634 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.590365646 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.598144359 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.59337406 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.594175628 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.585622794 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.588102789 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.595579647 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.587249817 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.597021381 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.594393673 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.593649304 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.593793945 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.594559755 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.59342232 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.593204135 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.594280879 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.586527169 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.590329469 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.599198753 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.615399137 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.592597983 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.595803629 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.59579832 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.59443418 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.592911291 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.593343399 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.590353773 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.589482224 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.600958753 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.59453154 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.592087234 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.587175087 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.593616409 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.595673165 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.588808116 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.597682918 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.596358168 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.595240987 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.587412128 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.597594499 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.596485908 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.602267928 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.597457121 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.596080479 seconds)
  done (took 117.136188061 seconds)
done (took 432.093163254 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.044630815 seconds)
  done (took 4.488422935 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.699118372 seconds)
  done (took 4.145838099 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.255515943 seconds)
  done (took 25.707606254 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.644515969 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.564520042 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.586523817 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.562002543 seconds)
  done (took 11.804810165 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.23489223 seconds)
  done (took 4.680852153 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.574271142 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.564972333 seconds)
  done (took 6.587857436 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.968194838 seconds)
  done (took 4.414741428 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.304226537 seconds)
  done (took 4.754195139 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.585847614 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.574420113 seconds)
  done (took 6.617402045 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.549077365 seconds)
  done (took 3.994225523 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.037670573 seconds)
  done (took 16.486662516 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.58673383 seconds)
  done (took 4.037829252 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.616661448 seconds)
  done (took 4.063982089 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.733653979 seconds)
  done (took 7.180044963 seconds)
done (took 110.408604477 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.556692859 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.561759285 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.563800326 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.558652466 seconds)
  done (took 11.684049138 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.711057181 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.714602185 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.717405754 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.704739967 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.704131371 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.718711646 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.632566823 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.631624454 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.694230112 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.69303813 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.719606802 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.708586337 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.71849011 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.632923502 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.690518676 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.723381094 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.695332206 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.722040142 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.631691502 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.703045408 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.601655979 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.70906468 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.692144372 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.599467781 seconds)
  done (took 41.915789362 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.173871482 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.717877322 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.801548018 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.683463448 seconds)
  done (took 8.824519585 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.765352424 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.764705484 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.77510094 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.817098669 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.843644432 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.77374553 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.63405954 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.630014334 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.61479075 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.770629212 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.838968768 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.760194784 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.983547768 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.601399592 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.98216938 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.600689306 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.600171991 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.766136741 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.80937513 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.843977296 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.601104163 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.762562194 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.775084318 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.760090512 seconds)
  done (took 43.522808663 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.617307061 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.624176789 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.604475401 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.623980047 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.601824436 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.604212868 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.603316805 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.618027614 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.601599966 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.601829604 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.603106932 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.624156256 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.60368417 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.601651508 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.617684763 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.605520716 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.604763148 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.61789275 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.619018591 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.605912596 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.601670925 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.617614991 seconds)
  done (took 36.871051969 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.562256834 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.566803432 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.000680324 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.909204097 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.567583699 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.566534264 seconds)
  done (took 15.623303355 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.689157399 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.889111038 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.597034302 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.049687534 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.182382201 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.596549813 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.593627304 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.941159417 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.315802659 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.284108056 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.660919171 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.690141393 seconds)
  done (took 23.941370757 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.734948906 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.578552343 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.585483601 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.657312637 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.578323892 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.574429123 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.646788394 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.234386859 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.604586799 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.931468031 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.596279806 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.737819313 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.916586111 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.590131608 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.57892299 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.571823135 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.894894874 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.293830312 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.583612274 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.586222521 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.642463332 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.583760198 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.578874521 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.891227718 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.580233631 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.578608146 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.926409636 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.576860647 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003992408 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948133139 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954667559 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.581687658 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.938977715 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.182609744 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.755922453 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869107796 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.583939131 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.579406571 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.581412552 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.589756002 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.595673933 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.580716374 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947508059 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.581554331 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.579731613 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.599047546 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243085171 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.610707759 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.575909339 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.582726616 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.964378151 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.748052598 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.607307885 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.580346216 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.580114203 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.579101086 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.609087371 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.779500522 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.302801634 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.600148874 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.596315635 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.580360743 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.574810107 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.585490586 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.417309212 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.609282578 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.607812698 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.609830412 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.582823486 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.579628527 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.627860638 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.581209873 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.628654175 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.579682584 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.578292603 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.588263005 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.579356216 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.357740604 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.592695762 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.582071924 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.893578436 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.581016482 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.581034572 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.580140393 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.581763575 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.60375464 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.612965727 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.581188781 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.647638572 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.2424742 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.878395989 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.631808207 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.643368546 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.88855601 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.560892764 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.58116266 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.598445375 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.582811124 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.629597451 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.247993058 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.581793258 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.608953904 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.918717596 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.878727875 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.590914529 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.576239828 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.249841059 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.588979646 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.634886462 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.591602885 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.877619843 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.395167081 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.976768625 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.586673487 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.651981443 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.583978172 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.583988648 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.591299215 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.612261517 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.585746065 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.984710417 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.563237196 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.586995805 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.736334488 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.590398751 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.585916896 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.598303248 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.585614064 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.584747893 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.877575773 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.602176925 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.959923256 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.589874103 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.586464801 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.599285845 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.589355602 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.586290686 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.891338277 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.595985914 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.938113499 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.587168033 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.586314223 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.583592718 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.888886359 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.584422362 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.631209737 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.014675679 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.594285279 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.596952727 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969515188 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.653700097 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.781874218 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.649356109 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.595688111 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.923616544 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.616945214 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.613339937 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.588612701 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.587612364 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.596937711 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.618207036 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.587853176 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402198283 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.591681456 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.593998511 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.585431011 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.632997115 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.740395339 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.617736585 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.882568865 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.589947716 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.57671838 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.61836369 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.605943954 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.895435656 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.966168254 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.606330456 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.837400342 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.255381568 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.401761914 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.63529622 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.589243088 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.587557607 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.589975792 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.589828287 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.588461913 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.588832211 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88244406 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.984900175 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.591326383 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.410910773 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.592615863 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.589417341 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.616095105 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.970549816 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.6219895 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.590805297 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.600058011 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.588998643 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.608152755 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.97186842 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894697364 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.635806411 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.591856479 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.194363194 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.621091551 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.590775126 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.588625201 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.64936875 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.590593539 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340305985 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.021590735 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.587905277 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.975847906 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.596112048 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.634676798 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.589487182 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.594635743 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.610124304 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.59813081 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.619874846 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.890626385 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.594190225 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.59285046 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.313802754 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.593234726 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.343464905 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.604616761 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.606706901 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.5949582 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.264564929 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.595647254 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.595590543 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.965834203 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.263080382 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.593524148 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.25911675 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.609780197 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.593498797 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.977915418 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.911388871 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.603585763 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.607790907 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.979936834 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.895811891 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.649811893 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.595034746 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.594910288 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.569873795 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348460723 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.598034429 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.850469952 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259846452 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.602023414 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.59167063 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.641503714 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.599459959 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.169540414 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.593973228 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.594586714 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.60038396 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.608826164 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349930533 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.602973535 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.594084276 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.440575858 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.605209643 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.266608205 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.595288898 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.89137662 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.98005312 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.970646756 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.602941617 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.597398454 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.93120459 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983527235 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.598298429 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.60335836 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.366205018 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.544986691 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.625387977 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.597527521 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.618472573 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.611620514 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032176578 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.599456327 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.597708479 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.607544926 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.598880346 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.597247038 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.5953498 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.607442539 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.599531337 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.301526332 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.612359226 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.612795664 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.598101825 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.60021208 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.936812705 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.64414518 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.419078641 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.921874632 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.610715441 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.661199444 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.625942377 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.612360692 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.580195569 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.598533724 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.598156651 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.617715912 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.905843125 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.619822115 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.578527688 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.681358712 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.901700139 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.601130912 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.600157534 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932096393 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.602220296 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.611289816 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.601031389 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.66253928 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.606226672 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.602302779 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.594789044 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.660508574 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.75780719 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.899389021 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.987286232 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.986101445 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.180475674 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.601205223 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.620255481 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.643781168 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.766704831 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.600252169 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.601402804 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.617894706 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420558578 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.603201007 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.427553392 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.99462697 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.604856875 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.602942944 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.603832861 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925828487 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.600891286 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.958991713 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.602830989 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.591245926 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.653463544 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.616351004 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.606046621 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920883864 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.958523288 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.601504843 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.614814635 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.602116303 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.603743954 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.997058494 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.901657187 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.33324978 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.383876539 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.605133935 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.603146601 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.279033807 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.966254857 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.605185128 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.604766779 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.605071497 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.620198281 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.608899218 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.634373547 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.60290949 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912519323 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.978592529 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.210322765 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.981314314 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.636280982 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.563142702 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.615035404 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.939144705 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.523073989 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.9009696 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.431657615 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.549297296 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.945431539 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.756495222 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.90369355 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.606145866 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93005556 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.613221347 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.606284221 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.606138742 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.606327872 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.607276177 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.981071616 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.432225634 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.949327635 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.636138995 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.615259524 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.666236538 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.903863473 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.914614142 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.608961028 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.914358942 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.004408242 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.618726027 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.606279961 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.437362252 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.000825524 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.608241104 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.630115882 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945189049 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.607694107 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.671011866 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.571504519 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.607715479 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.396643945 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.909702903 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.658848168 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.609524927 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.552465226 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437712435 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.612323816 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.34000441 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.612122254 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.627803228 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.961731866 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.63566128 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.610331593 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.977920656 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.636588284 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.611721225 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.910055042 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.428759621 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.619130128 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.631745 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.607663098 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.628468047 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.611229264 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.666319439 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.610884736 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.609748489 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.182886036 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.610184996 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.608857662 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.648755125 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.620373792 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.613235105 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.610032672 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.609222584 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.636989871 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.59865895 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.601545979 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.609572069 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809222178 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372245521 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.617832198 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.325766147 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.033571588 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.949366676 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.609401657 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.590334637 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.642020609 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.61200527 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.609158189 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.606528944 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.608540723 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.39487263 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.616984534 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.992680564 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.638960863 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.910373938 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908126445 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.610974063 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.909303969 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.61784917 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.661755521 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.590671691 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.611013104 seconds)
  done (took 1109.428216214 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.650140915 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.648604268 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.612771918 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.625227202 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.660850238 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.658059939 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.643461435 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.636435401 seconds)
  done (took 22.619561678 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.615506763 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.63605728 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.610577015 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.637269516 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.61989936 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.255092285 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.60551464 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.634936537 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.658634034 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.609097149 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.602195154 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.393014223 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.635013992 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.615760007 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.625943216 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.635736779 seconds)
  done (took 36.879083158 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.084028842 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 3.065486261 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.427029792 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.637810228 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.677114387 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.613734889 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.13667583 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.614589607 seconds)
  done (took 30.742314019 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.647416477 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.64852835 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.648500134 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.64877475 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.650084693 seconds)
  done (took 9.728996753 seconds)
done (took 1393.226526258 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.643289346 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.641921784 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.64250859 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.641748089 seconds)
  done (took 8.054896157 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.591023272 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.593533368 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.595070085 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.629124556 seconds)
  done (took 10.895849186 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.131196781 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.353376501 seconds)
  done (took 5.972127461 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.612987657 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.463275533 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.448858615 seconds)
  done (took 9.013855045 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.018251902 seconds)
  done (took 3.503275452 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.115080067 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.169390884 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.60506144 seconds)
  done (took 8.377923617 seconds)
done (took 47.306043039 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.608736348 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.373342099 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.764805426 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.606591243 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.76914725 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.764469072 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.890807274 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.607384501 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.604470234 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.615193105 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.604388519 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.769449314 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.881047443 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.379746754 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.884635609 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.377309712 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.773570577 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.617614363 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.604879503 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.623920123 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.89298255 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.607134678 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.618076083 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.619610776 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.778001099 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.755875241 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.604873357 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.368651628 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.623982771 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.614550845 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.75700639 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.606316697 seconds)
  done (took 90.455238549 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.607128253 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.605001725 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.604397599 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.603179985 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.609053568 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.612004432 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.605825014 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.604955421 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.603119713 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.623146491 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.608990221 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.622195951 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.603810163 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.605277039 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.609044349 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.603162664 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.6120184 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.609322666 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.6083525 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.609843682 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.608422202 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.604615992 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.607659047 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.605151744 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.611262787 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.607990514 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.609168806 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.606140976 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.607379332 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.617868655 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.610198406 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.612656749 seconds)
  done (took 84.969251469 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.60905259 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.622336541 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.611326063 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.608445599 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.608419339 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.629605483 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.614628927 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.61107191 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.609212736 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.612250762 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.605277948 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.626779844 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.609860164 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.609297942 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.611032381 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.614290546 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.627911273 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.611177511 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.613664699 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.612683639 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.614577245 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.611839326 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.620728167 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.606717866 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.611406591 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.609985809 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.606502754 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.626766574 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.623799507 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.612654794 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.616787303 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.629101857 seconds)
  done (took 85.160284281 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.940999551 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.649944941 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.652869963 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.621791431 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.65317936 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.649312668 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.622825989 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.946087209 seconds)
  done (took 17.23178576 seconds)
done (took 279.305039775 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.620003284 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.620509983 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.677545169 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.62187957 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.6685501 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.676952146 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.945506268 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.679977461 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.935502552 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.625392098 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.669197179 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.624570695 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.627003406 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.853174975 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.614530241 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.643039454 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.657025031 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.636939935 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.62327032 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.973020522 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.682750649 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.614022566 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.619569779 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.624315215 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.60724405 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.729366632 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.729667579 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.868013802 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.833852825 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.725918569 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.636941262 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.624336377 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.634408328 seconds)
  done (took 75.417205709 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.641008539 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.653889576 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.653761278 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.653235722 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.653477652 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.651342186 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.645387867 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.653058465 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.659517666 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.655212719 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.652974237 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.656009748 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.65376924 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.654277125 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.654861348 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.639594253 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.643533721 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.653625227 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.64586181 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.636957326 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.655846599 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.653968008 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.657509031 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.65320562 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.655135824 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.654073608 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.656032307 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.65386597 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.655015557 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.656002066 seconds)
  done (took 51.060445956 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.653952293 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.630738867 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.62110978 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.661470708 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.64699694 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.650456039 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.055817712 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.657400358 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.651940166 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.652637811 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.620111119 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.659304231 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.716339557 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.627919584 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.651171843 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.65543258 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.65519952 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.648888382 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.619344331 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.668383319 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.068931112 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.658101564 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.05489909 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.673087129 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.652843284 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.650187569 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.66167681 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.620786065 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.655229482 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.620809113 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.625077602 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.0449062 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.634296443 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.62215244 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.643918616 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.663558684 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.659671876 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.623098161 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.653313106 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.651761373 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.054567554 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.650360426 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.62691338 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.622168922 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.653463893 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.659948098 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.622106484 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.624842307 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.968039441 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.664939585 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.621728015 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.654513259 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.66324754 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.656196923 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.97036774 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.656571342 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.653470948 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.621132198 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.663372417 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.054279947 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.661905261 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.650031404 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.640270806 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.656078053 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.635935128 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.653988611 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.67412525 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.655986422 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.630916543 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.654435596 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.625891603 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.653483589 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.661555565 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.623418872 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.636472837 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.625328752 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.66132041 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.624202771 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.64320812 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.048614283 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.659404104 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.622846802 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.076071965 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.65908912 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.666018423 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.66440928 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.662594035 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.781530109 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.0468554 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.626111323 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.625424155 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.626825032 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.067256179 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.668704239 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.65534465 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.622584199 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.664238937 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.660812314 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.636234049 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.627359946 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.65375164 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.677618362 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.625279653 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.661355959 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.057837173 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.671386634 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.624454688 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.657380872 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.783045316 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.665418766 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.677160552 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.660727318 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.078817564 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.662350499 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.665878531 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.627348981 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.63605763 seconds)
  done (took 238.130148121 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.628456943 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.624399443 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.62768366 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.627139108 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.627004105 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.66027705 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.627730943 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.629202079 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.657981717 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.629123927 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.630315839 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.658916612 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.657268148 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.631479464 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.642304025 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.626494752 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.628764594 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.640712202 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.625688574 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.629118758 seconds)
  done (took 50.214760691 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.665655179 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.437991032 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.383835402 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.669528157 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.666281865 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.658368218 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.733986284 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.667518055 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.666664385 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.091560736 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.891395267 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.67026191 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.666802671 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.664609445 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.3798629 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.648572001 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.089424779 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.437744911 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.669472982 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.436921064 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.650649779 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.668335897 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.657573425 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.440452938 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.095320501 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.051399064 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.737996082 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.438922925 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.666964004 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.666797433 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.439903775 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.670603783 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.658491977 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.431947876 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.672808603 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.687018999 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.666303375 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.739903867 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.742204089 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.093554355 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.443750424 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.070069804 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.687790326 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.904789987 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.672700628 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.651348122 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.45227979 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.671500195 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.649947175 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.674693828 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.684882065 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.397927837 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.663048772 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.399628402 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.673689371 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.668760113 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.440489185 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.401059869 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.392057677 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.888361642 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.659887895 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.058682742 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.671103916 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.452683404 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.671254285 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.670581364 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.671429516 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.895398151 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.444432982 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.059766539 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.095929168 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.097054451 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.673294209 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.752586695 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.674016717 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.097124641 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.75095129 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.170397647 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.098480261 seconds)
  done (took 153.735196428 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.041446542 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.792172175 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.229699531 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.445638583 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.368669368 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.86824407 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.794222017 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.998070704 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.660479311 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.828221033 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.595407069 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.793416048 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.565555368 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.760526112 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.798934977 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.859648284 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.229446496 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.635211573 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.523924726 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.565596016 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.644822921 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.821766092 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.524121259 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.148476633 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.656986898 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.522986128 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.639479224 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.373818906 seconds)
  done (took 64.199587253 seconds)
done (took 634.250427253 seconds)
SAVING RESULT...
DONE!
