cset: moving following pidspec: 11599
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.615607274 seconds)
loading group "shootout"... done (took 1.260736476 seconds)
loading group "string"... done (took 0.423939284 seconds)
loading group "linalg"... done (took 7.979364618 seconds)
loading group "parallel"... done (took 0.158051744 seconds)
loading group "find"... done (took 1.507798764 seconds)
loading group "tuple"... done (took 1.991999674 seconds)
loading group "union"... done (took 12.890183794 seconds)
loading group "dates"... done (took 1.367317586 seconds)
loading group "micro"... done (took 0.207761228 seconds)
loading group "simd"... done (took 4.363321942 seconds)
loading group "io"... done (took 1.015414406 seconds)
loading group "random"... done (took 8.695235193 seconds)
loading group "problem"... done (took 1.665786302 seconds)
loading group "array"... done (took 19.419624408 seconds)
loading group "misc"... done (took 1.567137769 seconds)
loading group "scalar"... done (took 39.965832738 seconds)
loading group "sort"... done (took 3.097505014 seconds)
loading group "sparse"... done (took 11.740262633 seconds)
loading group "collection"... done (took 17.384095193 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.534595222 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.127977777 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.139407096 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.123428601 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.152340376 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118923892 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124862051 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.088626434 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.86528793 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.154995463 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.115474456 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.462508113 seconds)
done (took 5.318019458 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.177336242 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.090942741 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079891726 seconds)
  done (took 1.262952854 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064700593 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128250177 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065226086 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066263208 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065991734 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065632032 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065460403 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068391999 seconds)
  done (took 1.618920397 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072504056 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067787792 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.065000933 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067330772 seconds)
  done (took 1.364229817 seconds)
done (took 5.594536975 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.249758148 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.110726582 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.283051201 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.401485404 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.475725837 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.091146436 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.07453569 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.07018669 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.128342749 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.334751452 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.117063522 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.194316771 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.09823562 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.180382272 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.986621573 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.127426193 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083339885 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.12374817 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.090348898 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128926889 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.424300661 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.075009466 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.07285371 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.068501378 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.066679362 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.636398529 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.6616724 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.13248176 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083925568 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.103158061 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.115053416 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.640466534 seconds)
  done (took 10.566588217 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.104092688 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.098568629 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.066636818 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123255537 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.092225648 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.067390171 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073156586 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067181706 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090315992 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126050703 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089124041 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107428054 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.063598587 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067498448 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084750495 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.197676539 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.078126703 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.078901489 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.066111044 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079017303 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107666499 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.076727905 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078814444 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.08014278 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129002664 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.166110258 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09496464 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.09549173 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.064138949 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.0796072 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115333736 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.124956909 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.0637701 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.063985585 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.119793637 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.092862706 seconds)
  done (took 4.518342181 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.989965695 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.095767859 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.108330682 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.643923297 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064140185 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.155217783 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.244898389 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.071723015 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.470484881 seconds)
    (9/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.089498071 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.154338275 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.120822698 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.147099038 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.121359619 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.068780006 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.299485226 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.117386406 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.4559362 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.066620118 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.065794546 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.063010636 seconds)
    (21/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.09192839 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.061237132 seconds)
    (23/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.061738019 seconds)
    (24/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.066286469 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.061452779 seconds)
    (26/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.074348293 seconds)
    (27/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.076312837 seconds)
    (28/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.092852929 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.086668597 seconds)
    (30/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.179706726 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.976306836 seconds)
    (32/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.265432095 seconds)
    (33/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.067677992 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.158899708 seconds)
    (35/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.084891514 seconds)
    (36/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.382221213 seconds)
    (37/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.068511039 seconds)
    (38/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.090955321 seconds)
    (39/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.397452947 seconds)
    (40/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.123592718 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.063740289 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.175404955 seconds)
    (43/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.123407343 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063108833 seconds)
    (45/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.118658973 seconds)
    (46/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.079046831 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.069126346 seconds)
    (48/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.067935633 seconds)
    (49/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.069018061 seconds)
    (50/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.080677479 seconds)
    (51/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.082065547 seconds)
    (52/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.104652051 seconds)
    (53/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.066509807 seconds)
    (54/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064880827 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.165806386 seconds)
    (56/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.063600386 seconds)
    (57/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065625662 seconds)
    (58/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.066471648 seconds)
    (59/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.147864654 seconds)
    (60/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063336231 seconds)
    (61/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.153566655 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063395937 seconds)
    (63/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.06860088 seconds)
    (64/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.098429453 seconds)
    (65/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.069176627 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.092594768 seconds)
    (67/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.110326037 seconds)
    (68/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.335693437 seconds)
    (69/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.057802078 seconds)
    (70/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.067427651 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.222472753 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076139699 seconds)
    (73/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.065410041 seconds)
    (74/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.078543623 seconds)
    (75/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.06511124 seconds)
    (76/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.067534572 seconds)
    (77/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066453498 seconds)
    (78/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.075503217 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.068183164 seconds)
    (80/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066642708 seconds)
    (81/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.108757979 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06520677 seconds)
    (83/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.068602067 seconds)
    (84/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.065214668 seconds)
    (85/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.070917612 seconds)
    (86/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.09853016 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063774356 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.462923298 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.098894965 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.064742873 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.077327304 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.104784856 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065554732 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.072182775 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.066557102 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.068459306 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.064505586 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.066737694 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.06973005 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.091033739 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.067913503 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.214720303 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.039938722 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.06809945 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065573538 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.071845526 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.072882413 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.067718761 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066506143 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.072384059 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.068345523 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065853312 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.11989888 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.065496696 seconds)
  done (took 22.205473203 seconds)
done (took 39.374100013 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.26500804 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083685064 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.084271346 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.084402575 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.084412524 seconds)
  done (took 1.804284272 seconds)
done (took 2.983141412 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.112021518 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.064673392 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.106693648 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.105511445 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.064715757 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.064774671 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.103699542 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.064637044 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.102912565 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.106380468 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.109480905 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.104498393 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.062978197 seconds)
  done (took 2.373385511 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.070612132 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.081836369 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.088074648 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.063328814 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.073067563 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.084192669 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.063203521 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.081397494 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.090388394 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.083136406 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.082840489 seconds)
  done (took 2.038374923 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.070211618 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.081869091 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.085591736 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.063029121 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.074512993 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.083052949 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.063264072 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.083039671 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.088029915 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.083319763 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.083194201 seconds)
  done (took 2.027862156 seconds)
done (took 7.606810374 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078256464 seconds)
  done (took 1.234202921 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.584909562 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.767713954 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.078910756 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.098217694 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.202305514 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.111523559 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.255661508 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.08251775 seconds)
  done (took 8.536092049 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.097795051 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069455755 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.083819427 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069616276 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070443341 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.06978311 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070377959 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071504585 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070209768 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071063622 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071940133 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070933481 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071288248 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069294054 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071120145 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071148012 seconds)
  done (took 2.428889756 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.098077324 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096280051 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073304198 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074557409 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071606194 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071528204 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074301341 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073564875 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.069922481 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071473168 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074998412 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074395476 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.074589638 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064822683 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075332178 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076442089 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070774579 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073940946 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074363399 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07430007 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074539047 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063481517 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.072321653 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073915674 seconds)
  done (took 3.085469994 seconds)
done (took 16.453811592 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.120802928 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079543421 seconds)
  done (took 1.363913061 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083387708 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083255281 seconds)
  done (took 1.339505272 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083168264 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064192102 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090968942 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.07835079 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065491032 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065471248 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088655624 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065492876 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.064343428 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.062801719 seconds)
  done (took 1.903320341 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067902744 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.076857913 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070835058 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082129065 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.071401269 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064709227 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.069175191 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.0649159 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.074524927 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062821879 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069214077 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084040494 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.068848881 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085995275 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.069403829 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.06922545 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071452404 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067990305 seconds)
  done (took 2.469129899 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065948313 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065668862 seconds)
  done (took 1.311681172 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070085064 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064573658 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067193213 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067212214 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064154392 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062849224 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063724412 seconds)
  done (took 1.634476512 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.37877961 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.12638937 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.343099615 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.06821371 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.077141099 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.24378456 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.062137365 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.068579113 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.068780103 seconds)
  done (took 2.659606911 seconds)
done (took 13.867982189 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.08123014 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.083331553 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.098732687 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.446304055 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091757853 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065764616 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113152896 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.175967002 seconds)
done (took 2.366464944 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.21424339 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.593637106 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.846173151 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.063305962 seconds)
  done (took 3.697819234 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.32720253 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.082764218 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074879399 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06361772 seconds)
  done (took 1.75880742 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.064229955 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070477272 seconds)
  done (took 1.338410038 seconds)
done (took 8.216913196 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.063918062 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.086664236 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.060998112 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.061598418 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.061700912 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.061776455 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.061776856 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.061394298 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.061437475 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.062321094 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.062855172 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.063045085 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062841423 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062786561 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063054853 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06137938 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.061615836 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061535731 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061420179 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.061698581 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061233688 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.061886594 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.061219228 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.061446362 seconds)
  done (took 2.747681169 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081793166 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.064061715 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.065528135 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.06551148 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.065852164 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.065069433 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.065479552 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.063770813 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.065367258 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.064486016 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066899411 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.067011389 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.064712133 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.067089437 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065039749 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.066949497 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.067043237 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065222713 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064707799 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.067300545 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.066378753 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065320371 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.067121463 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066794309 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.067302191 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067391381 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.065079643 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065289667 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067178065 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.067067835 seconds)
  done (took 3.207883753 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.064250288 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.059544594 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.060528476 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.068387067 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.059879909 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.060440356 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.061217731 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.059753636 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.060134238 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.061620984 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.060565773 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.059443893 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.061273971 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.059493709 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.059573461 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.060549763 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.063949319 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.077448197 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06029465 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.059580757 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.063793133 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.059712229 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.059308936 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.059673798 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.060121094 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.05997504 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062226781 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.060039751 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.059615259 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.060629123 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.059529271 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.063076188 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.063928322 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.059770061 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.068130147 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.063911357 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.059925421 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.063122557 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.061355677 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.059415796 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.059331666 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.058275387 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.058207013 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.05897638 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.06714946 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.059440089 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.060333513 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.058938851 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.058435644 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.058164754 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.058271681 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.060483939 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.063746627 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.061652921 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.05862538 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.061643502 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.059346369 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.06055877 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.059619882 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.059216774 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.059016063 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.061206084 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.060114035 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.05915449 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.075604988 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.059938459 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.066577336 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.058095572 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.059349002 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.061592793 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.060469869 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.073688511 seconds)
  done (took 5.637860281 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089730071 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087264611 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063036225 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.0630959 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059126836 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.059042369 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066920857 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059070389 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064673043 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.07984615 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059990848 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062961319 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063533471 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062801432 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.05934287 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064659317 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.06991774 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060487713 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.060378537 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064483097 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060777443 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068816868 seconds)
  done (took 2.680990405 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.150079663 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065847376 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104428952 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08281038 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069919801 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079812697 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06654581 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066450256 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066359215 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067194433 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067508553 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066418107 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070014439 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067569445 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067276173 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067081061 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066952934 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066735824 seconds)
  done (took 2.581430863 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077860724 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066347138 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.089213078 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066132102 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06555771 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065916014 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070469976 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071759762 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.065656958 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065528591 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.071469295 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065673127 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.065833843 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065548746 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066025533 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065848139 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.065602307 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065698665 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071119861 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070274309 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070413789 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071395163 seconds)
  done (took 2.742827203 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076728891 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.065524928 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.077808007 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066387763 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061311224 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06050021 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.066353943 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.064698581 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.066005135 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.064706622 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064596709 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060710734 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.066688037 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065037048 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.066874451 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064943945 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064535517 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064671798 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064582701 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06066101 seconds)
  done (took 2.538182098 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.095174992 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064127796 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064285706 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082795549 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064045411 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.06378122 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081893308 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.064075895 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.064012419 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085965215 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064308606 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064453952 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082338515 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.082712394 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06390457 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082375736 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082477066 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084864889 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06402107 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06397015 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085720974 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.064163741 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091948373 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064627408 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064069482 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.063842681 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063958647 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.082238177 seconds)
  done (took 3.273406378 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064141558 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06245611 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062471925 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.061779618 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062635508 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.061658357 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.061708653 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.061808634 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061293462 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06175426 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.062444686 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.063739475 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06308146 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.062546266 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.062934118 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.061641339 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061226812 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06182894 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061623713 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061370683 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.061286293 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061049188 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.061046077 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.061988682 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061716563 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.061236995 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061588608 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063063889 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062883233 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062892532 seconds)
  done (took 3.093465095 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074819832 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071189752 seconds)
  done (took 1.377792646 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062564522 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076441059 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.059445519 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069042835 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067637134 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.061867855 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.069129181 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06764748 seconds)
  done (took 1.757377757 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.077859167 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.100437106 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.061973875 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.063280166 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.072899913 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.121778142 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082710563 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.072032156 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074050434 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.062044348 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.063538051 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.083352355 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.06258219 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073344389 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.064056654 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.06863861 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068226498 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073634078 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073517284 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.060345077 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076637444 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066614256 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061229037 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065453762 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.062544104 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068403514 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076946345 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071853275 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067944375 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.057889742 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.081438995 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.059170745 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.061095145 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068053557 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.072217218 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.060043546 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.096352125 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.060613877 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.06616636 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.058512738 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071456479 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081472943 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071735162 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.078094553 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.061425761 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.062398071 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.058725796 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.062119484 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.062297666 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068624937 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.058997387 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06550904 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.05829545 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.061824241 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068862877 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.059805406 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.066779664 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069647184 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.077049988 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071996597 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068570194 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074851356 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067560445 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.070391808 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.060548 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078168731 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.061652331 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070400063 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.072492658 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.06176993 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074118513 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.058762694 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.057682349 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.059455046 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093029883 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.061368943 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.061699527 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.059849561 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.060316122 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.063361398 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070430468 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.06913245 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067570375 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.065848997 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07688696 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071300385 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.060491666 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.070224852 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.077407387 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.061668892 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.05987039 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.07531056 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.061751802 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.059552907 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079847946 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.067322863 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.061943646 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.062066945 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.061813431 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072542982 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.061208662 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.057547944 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066137782 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.061349936 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.069942083 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.064122148 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065134236 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.058318555 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068480911 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.064913541 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.060741685 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.057344342 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.061913426 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.059931417 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.056976852 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066559181 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.058565983 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.072679187 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.063360515 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.071007139 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073220681 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.06769076 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075999892 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.059697982 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.057525825 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.077822802 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.067314525 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.061610573 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.078569795 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.057631676 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.199786648 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06235062 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.066718103 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.07197413 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.06096753 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.065648147 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.062326543 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.071098557 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.065335707 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064615179 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.064272687 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069758596 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074905521 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.063230422 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069502412 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.062760963 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077435874 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071182788 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065015826 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.067437925 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.063608937 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074298798 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067082187 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072607312 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06103649 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.063251434 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06252098 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071150693 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070943166 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.064345118 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074754768 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064238797 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.063807169 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.062396301 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.063861071 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063318444 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066737901 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.063398987 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069362137 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070760139 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.076989801 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.072771287 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.06953332 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.060687825 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.060696908 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.064138025 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060622167 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065535301 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071510952 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.076223004 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073844854 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.082666801 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.062430626 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069612868 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.062291736 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075746273 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071134064 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.060726347 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.065792857 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.05815712 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062396827 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068853558 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.06993001 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.073415325 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073117124 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065456905 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064338598 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.060982779 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075387446 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.063266488 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06882187 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.072121619 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.068557626 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.061910482 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064513706 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070253491 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064270588 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.061353412 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.078222035 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.071724862 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060998749 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074474902 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.06246279 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.072518115 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060813529 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063554367 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065005124 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.065698707 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071390495 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.079848767 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059645751 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.062495967 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078268388 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.062193014 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061853451 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066119154 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.074234568 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063904932 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066258271 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068599231 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067217114 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.062656861 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067643236 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.061285082 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.069699923 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.064318426 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070433343 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.05954108 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076042285 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.057509137 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.075079141 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.059419085 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.068657159 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.060417409 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06709666 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.059736937 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.074307896 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.0608778 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.060171837 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.070766892 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.056865517 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068051748 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.057641225 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.061649247 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.063513061 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.068385852 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.060824869 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.066596256 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.060691669 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.066446577 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.062014016 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.065646162 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.068047333 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.061195036 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.057895624 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066980013 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.204383013 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069740776 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.065492427 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.066019825 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.063589768 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.073261654 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.065620091 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06415056 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071644184 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066172019 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066027933 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.0647595 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.066145289 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.064756968 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07222047 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070982649 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.080679633 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067703809 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066475576 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070527231 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.059741958 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077631471 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.059750462 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066176814 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.059576863 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.069725612 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069940494 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.060208408 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.077256249 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06255813 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.066593804 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073415113 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06712253 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.062021279 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079593277 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.064776943 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068455061 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.066353947 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.063328603 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066179738 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.062722379 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068448102 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070380017 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070587728 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.061180809 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06624233 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067923112 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061952776 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.071553589 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06216276 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067315635 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.062451027 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.058717947 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064321797 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.07004627 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.063336163 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.063982619 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.060075557 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.05805742 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.060281812 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.06956483 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.063634431 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.066799995 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073137147 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.058141912 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.061081106 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.059280326 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.062191576 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.076635124 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.068470376 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.06657816 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064820343 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.058835764 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.062293379 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.062414583 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.060402019 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.064668488 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.058652542 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.05907101 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069093369 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.062077244 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.062854589 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060295693 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06151359 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.06781001 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.065941353 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.060333085 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.064847023 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.059996056 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063572265 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.058933169 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.06173223 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063411999 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.059427277 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063649963 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.070336522 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.077488543 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066147622 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.06902658 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.064297993 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068510905 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077392181 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.070887139 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06240853 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068704316 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.058132844 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.079168841 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.06729231 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066469754 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068216261 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.062933005 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075552405 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06254139 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069331482 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.076273949 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060760998 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.06847567 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.058350784 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.076808375 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.064814409 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.057923391 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.065263937 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064730422 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.062806764 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.070673918 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.059596857 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.065773387 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065124395 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.061066675 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.060602989 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.060799564 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.065863213 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073421298 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.059672605 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.064276842 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.204110761 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069383659 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065795039 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074634286 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070223251 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064389375 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.065377665 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063544674 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.063686295 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074389119 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063165731 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06583162 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064762353 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.061494966 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066892584 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076519044 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072252445 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071079026 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060831226 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.061635461 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.081943361 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.062559244 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.065185227 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067158711 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068675975 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071335002 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069638896 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076335886 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.061174473 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.064970589 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071123757 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.060886032 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.059750148 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.062502934 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.062966063 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068219434 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.068559467 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066276537 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065000834 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.065587981 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071132652 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.062651715 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.063811596 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.067278152 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.06137593 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069031204 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067053181 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067306783 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.062487426 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.059646519 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.062061595 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069367611 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068089014 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071227729 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063295483 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.072655832 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.077378506 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068061246 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.067277573 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060466813 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.067304115 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069520528 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.06797844 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060482321 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06459115 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063084548 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.071192734 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071671312 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064371269 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060601723 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07950334 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069131798 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.070345081 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.064770946 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.064744518 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06270617 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060740412 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071642821 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060739911 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.06367898 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065221337 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.064978553 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.078688248 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068658804 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.081078672 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063557455 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064874009 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06066908 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070356184 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064920344 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.061831388 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071687164 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.060515205 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.079753928 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.072927364 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.068771827 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.059270573 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.0633625 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.066934278 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074230598 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068141053 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069072765 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.064333556 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.068360546 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.062015592 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.069274565 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.059060145 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.058118544 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.068854579 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067342616 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.07059618 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.059481672 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.0708233 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.063543646 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067374879 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068967414 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.062735972 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062928522 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.062476736 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067485323 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.062606509 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.06772036 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.062731158 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076077831 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.059776997 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.068483431 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.066836858 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.068015792 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070986803 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071610853 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068405019 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.059291515 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06452733 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.066008947 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.059903165 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.061746795 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.062672746 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.221617031 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.063648763 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.063516979 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.074810475 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.070728751 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.060584436 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.070453239 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.063991912 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.068979169 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.06133703 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.069090114 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.06667088 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.061674934 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.063661514 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.063622321 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.058478654 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.059757195 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.059858754 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.069152613 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.063562791 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.059952502 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.077804843 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.062140017 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067371017 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069994872 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.065181162 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.062417623 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.05918076 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.062884727 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.07066485 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073848029 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06209337 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067178587 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.063097516 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069515708 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.058952136 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069801998 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067089146 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067527185 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.059033748 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060848182 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073676611 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.073424528 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.063949439 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.068371962 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068561186 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.063089293 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.084980379 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067644298 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.061685106 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.069988823 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063888225 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.060427954 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.060042452 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.064726159 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072716562 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.061206579 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.064111148 seconds)
  done (took 41.522978831 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10228909 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060715145 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.059715424 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.059041789 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072140505 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060702296 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.059497095 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060282342 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.060278388 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.062568734 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.058905947 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059243593 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07161491 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.075424062 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070999662 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.064497175 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060025343 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.060424711 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060743871 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061730382 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072789222 seconds)
  done (took 2.716313925 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.070676538 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077030208 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074265513 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.079920409 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069241651 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066538586 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073503291 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066732033 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074925257 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072131114 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.074816747 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066746337 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.071584744 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.071641222 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072201873 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067480345 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074959967 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069531698 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.066585076 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073803886 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066908423 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073913535 seconds)
  done (took 2.899391668 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.063952504 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06206884 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069061037 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060833809 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.060341712 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.065809965 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.059817229 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.063594623 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.06341823 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.063274815 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068450579 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.061782088 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.059858202 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.064875615 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.059721172 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.061459774 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.105711039 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.061470361 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.062259426 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.060187712 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.064171825 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.071985569 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060399764 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060474095 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.063822106 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.065438358 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.060881482 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.06404476 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.061291306 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064060664 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.062190344 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.060248923 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069217553 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070981893 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064689657 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.063782682 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.062773975 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064957893 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060391567 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.060338499 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069788478 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.063417963 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.061093617 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.063758161 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071062573 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.061050039 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.060335931 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.06880057 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060107667 seconds)
  done (took 4.480623205 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.076672594 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109164985 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.065034723 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088684569 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.074227545 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.067711763 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.064626714 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090735096 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.061480201 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.0618375 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.075575838 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.075892148 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063310597 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.065195237 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.066310037 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063350541 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064226111 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.062642611 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.067066174 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.062987815 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.067167223 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.066297504 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.074659357 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.07538571 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066234028 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063705893 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064525756 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.067225163 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076557046 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070104154 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.067647148 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068048524 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.077138405 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.069022152 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064498075 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.063606978 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.076936106 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.063665236 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.063412359 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.061284713 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.062865397 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.06615665 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.066450474 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.077223633 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063905799 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.066889899 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063869901 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.060932424 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.074973714 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.062989285 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.068300732 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.075919407 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.065139449 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.063895446 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.065590411 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.074870221 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.063672503 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062322034 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.065413491 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076748442 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062938312 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066774009 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.076778393 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.063329037 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.068789578 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.076028203 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.066827179 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.064479723 seconds)
  done (took 6.166909607 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071154229 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.090562167 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071665731 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071622702 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071639968 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071314914 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071166397 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071321402 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070770474 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071949138 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071524975 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.119206884 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.065989082 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078062057 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070950617 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070861407 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071777595 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070991957 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070605769 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070735488 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.070754923 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07161794 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070930242 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071571792 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.075346198 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065830999 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070710457 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070807483 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071474989 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070837954 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.075302645 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.070863145 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071214072 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072242678 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.075617141 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.070910543 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.060599559 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071218672 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071275182 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070949714 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065866422 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071941877 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070943818 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066028054 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071216433 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070858142 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071929263 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.075196138 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081279376 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072211378 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.070993776 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072364464 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07076965 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07150659 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07190693 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.081098413 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072478765 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071858416 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071152654 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072017028 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072234255 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.08144275 seconds)
  done (took 5.869160319 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078398154 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068063438 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.080476083 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062120593 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.059542132 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069749909 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.059259882 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.059340361 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068423636 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.068676797 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070180699 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069683037 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072384983 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070443132 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069564819 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072933943 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069410719 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069682169 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068104674 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069737599 seconds)
  done (took 2.733169016 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.072986439 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.078487895 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.065968522 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069598671 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.066039734 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069457552 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.064684247 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065857536 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065860501 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065460523 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073027482 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07258852 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065926119 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069646265 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072007386 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071635852 seconds)
  done (took 2.455921236 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.068376225 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.070479535 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.07687031 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.063370503 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065773416 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.060422625 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.062164338 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060293577 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.060304012 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.073978715 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.060977122 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071988254 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.061016563 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.05990982 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.060729965 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.066558947 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.060316785 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.06130364 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.060892768 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.073676542 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.067453218 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.062163384 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.064282689 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.061150204 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.06589286 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.068167372 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.062935774 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064413399 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.060848589 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.061488031 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066663738 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.067479409 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.061111839 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.061701028 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.059439613 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06092076 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.060934313 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.061416231 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.066551895 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.060831075 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.059091022 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065394633 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.061337527 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.062064154 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.059953319 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.061275908 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.059801996 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.065855159 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.061166933 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.06524345 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.060648864 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.062815864 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.061192502 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.06800366 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.064381728 seconds)
  done (took 4.849305367 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077188757 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.065367575 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059041776 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.059394995 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.064781633 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.065593013 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.064720462 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.06472517 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065059151 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.059325995 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065307062 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.064111324 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065092406 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.065415558 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065169186 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065415525 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059192753 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.064557435 seconds)
  done (took 2.522120822 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071804141 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064126786 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.069357379 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064326878 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.064338233 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.063701397 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059758396 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.060023417 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059903362 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064100229 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064291751 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.06377155 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059966397 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.064109342 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.064477527 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063875771 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.0643153 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060067308 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064020319 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060163648 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.063834099 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.059871408 seconds)
  done (took 2.748513067 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.096082974 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081486348 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.128476156 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.076793769 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.084735166 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.069194444 seconds)
  done (took 1.892181991 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089621247 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10612402 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064553587 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065260202 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077169613 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068481693 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068082053 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068523238 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076564679 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074103476 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068409316 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078989706 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076750585 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071158227 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07675654 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080002331 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068633918 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06826022 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081577816 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080040339 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068484695 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076835012 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068795137 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068131248 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068610811 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07057203 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08063777 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074376879 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068394524 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076856442 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080051739 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068358546 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076542961 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074265198 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064397117 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076381582 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068550649 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080054763 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076770568 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070799793 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064181669 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076731759 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076856853 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070809674 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080517883 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068545226 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071162767 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068287918 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068924747 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083496047 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076650968 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070689143 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076494638 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080200928 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08014122 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083360121 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074028991 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070480903 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076745948 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074212222 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07055316 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076470409 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070626708 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074179789 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080291647 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070581014 seconds)
  done (took 6.258724347 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09733045 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064804413 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069504519 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074241389 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070897711 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068208261 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068746057 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068470894 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068279219 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064999269 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104388092 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068531919 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070726237 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070937761 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069024604 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06868387 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068723878 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0707566 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064552007 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083995959 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068704848 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071095349 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070980987 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070883634 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074403401 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080009823 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068359841 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068856568 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068161093 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068187154 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070926244 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068673808 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07063044 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064536021 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0706982 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068658261 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06875081 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0708474 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068981444 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076935797 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070775253 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080409529 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068456104 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068645142 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074304215 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068184913 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068723626 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06472264 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06859857 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065015088 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074624509 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074694246 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075003729 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07135362 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068938076 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068807881 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068722666 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068360997 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068751452 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080628327 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070623077 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068148274 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083395159 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068508247 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068310016 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070679257 seconds)
  done (took 6.090553107 seconds)
done (took 126.048845082 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.209542302 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.182032578 seconds)
  done (took 1.732310205 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.07182179 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.10139313 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.080336447 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130939148 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.068656627 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102827098 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.100891959 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.080173526 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067856946 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.068116411 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068281828 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.071088102 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132990379 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068036804 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.067880419 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.07052676 seconds)
  done (took 2.717450448 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103394615 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.188672054 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106148671 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06628006 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102728866 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074130778 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065638412 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.080892369 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070386235 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069227301 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.074339229 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.072716805 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068806914 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07337042 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.072219357 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077465466 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070837125 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076999308 seconds)
  done (took 2.880307429 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.093507051 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.084889742 seconds)
  done (took 1.550541464 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.156404908 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.129966787 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.198296754 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.332736759 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.140139206 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.285465593 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.130454441 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.128615754 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.109475007 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.125292791 seconds)
  done (took 3.103135108 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.102300795 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.170573742 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.300963337 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.121369448 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074271901 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.087730632 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.119930322 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078908499 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.078108561 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.078003385 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.077722989 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.074558505 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.094880389 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.0743705 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073816717 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.074685377 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.098557133 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072839154 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07291386 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.073648914 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.09692402 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066899448 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074569707 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073670291 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.0779746 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077743281 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068685536 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.066585821 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.073742318 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.072699811 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076810493 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.082883112 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.075672236 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.102501382 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070928886 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.103532748 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.072889684 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.070846666 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.072513715 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.071194326 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.074915193 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.074966347 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.074957914 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.074465752 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067510806 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.072350295 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067653813 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066102423 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077527577 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068052999 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077898876 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078330905 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.102377241 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067834423 seconds)
  done (took 5.991752082 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109122331 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107909397 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071312721 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.11540075 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107510359 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071156341 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.107521795 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099996129 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.108391784 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070638826 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068216103 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070462578 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080851927 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.080721591 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.118763157 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.110789503 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073435044 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071130712 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108993547 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.10833604 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068576527 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103276009 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097314603 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106534164 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067072987 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070427877 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067477192 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070359171 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.073889741 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.076938394 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068745841 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080481109 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.08347737 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.076700767 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067225406 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068238039 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068594324 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078319594 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077438305 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.076246531 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.07560867 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067109583 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068619858 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069398243 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069937691 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066788961 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076887192 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078665475 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.076446282 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068519869 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069918389 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067789455 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068996724 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078397422 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.075704003 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079435248 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077674548 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068707304 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068280994 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073015525 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078205806 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077478453 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077932321 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070793832 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.076659957 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068235738 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080422783 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082159643 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068094089 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069620455 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068256046 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068623477 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069133933 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.074780708 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.074905907 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07024911 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069009915 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068259471 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077222794 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075930332 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068120927 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.074892882 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067024364 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068130494 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069957525 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069685761 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.075019308 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078660273 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070669265 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068088158 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068937781 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068493662 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067025887 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.073991226 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078350811 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077816209 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.07541602 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068416504 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.075727458 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075026617 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069104623 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.076076068 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066607782 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069384374 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068349568 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.075554847 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.073329117 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.075567545 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067689911 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066934407 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.074391529 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077069434 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066945372 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.074617019 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.212092752 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078506268 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068442033 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080682031 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069539984 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078049821 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069774584 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077830004 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069573645 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077571338 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069311622 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067818471 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068429125 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.07777701 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07116652 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068737952 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070039014 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068995722 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079502322 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08129483 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070949157 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076557027 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.07644872 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071014853 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.076954856 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068451894 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.076640567 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069622829 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06943762 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067527868 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079431595 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068759739 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069183244 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06900956 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078298325 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068796765 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078329553 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076225609 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067655833 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079370732 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078405801 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.075361486 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.078894757 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07012208 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068928314 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06808899 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069654978 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076668351 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078444843 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070825744 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068260968 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.075850911 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.077464161 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066964856 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.0765654 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076204682 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.076505701 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068546276 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068994543 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078555401 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078311777 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.076965968 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.075978237 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076821774 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068407372 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076225172 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076530148 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068448213 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083327287 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068032112 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081408699 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07658099 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074933474 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076707975 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.077926129 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.077721028 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.078453801 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081921514 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06748725 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06794378 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077960795 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068580901 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068975703 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076831618 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070185517 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070403161 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08191431 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06881209 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077418743 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067212763 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078606288 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066615368 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070276544 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082615014 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068736953 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07030162 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078013542 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071497477 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075339523 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077311327 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076135575 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067465496 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069315212 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.076895681 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.074788085 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066914601 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066693208 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069379539 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.074012869 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.073018184 seconds)
  done (took 18.387304877 seconds)
done (took 37.743958483 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.220219643 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.163500711 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.200986582 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.120835168 seconds)
  done (took 2.187620702 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.11282594 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100484678 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.088048644 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.06256844 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.094413954 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.062657512 seconds)
  done (took 1.939973675 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.313162494 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.217398707 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.190562707 seconds)
  done (took 2.135103272 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.22398374 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.204566552 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.459432833 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.29027838 seconds)
  done (took 2.699950147 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143352562 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.083303364 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.062440888 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.080422382 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.127111578 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.372864911 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.094323723 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.119638785 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.073350176 seconds)
  done (took 2.634093143 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.141100376 seconds)
done (took 13.17762724 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.19478828 seconds)
    (2/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.112517781 seconds)
    (3/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.078320883 seconds)
    (4/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.082713007 seconds)
    (5/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.246656268 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.157007611 seconds)
    (7/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.069710896 seconds)
    (8/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.17225619 seconds)
    (9/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.065832341 seconds)
    (10/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.217915637 seconds)
    (11/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.170898207 seconds)
    (12/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.073031154 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.118285823 seconds)
    (14/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068341902 seconds)
    (15/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.073698154 seconds)
    (16/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.082579243 seconds)
    (17/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.0766268 seconds)
    (18/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072680921 seconds)
    (19/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.073618413 seconds)
    (20/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.076267468 seconds)
    (21/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073777289 seconds)
    (22/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.18889553 seconds)
    (23/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.17401062 seconds)
    (24/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.236525941 seconds)
    (25/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.189527093 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.063100291 seconds)
    (27/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.180708746 seconds)
    (28/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.171480223 seconds)
    (29/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.082365662 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.125793951 seconds)
    (31/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072621561 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086955014 seconds)
    (33/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.187173119 seconds)
    (34/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.062237823 seconds)
    (35/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.062186494 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.101749908 seconds)
    (37/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.208028644 seconds)
    (38/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071176777 seconds)
    (39/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.189909715 seconds)
    (40/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.180337163 seconds)
    (41/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.061941356 seconds)
    (42/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.062408119 seconds)
    (43/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.1369864 seconds)
    (44/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.062743099 seconds)
    (45/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.163092378 seconds)
    (46/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.178662721 seconds)
    (47/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.07760682 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 0.158826033 seconds)
    (49/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.071283464 seconds)
    (50/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.221929196 seconds)
    (51/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.071179092 seconds)
    (52/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069418324 seconds)
    (53/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.128680721 seconds)
    (54/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.18066876 seconds)
    (55/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.138999644 seconds)
    (56/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.064936582 seconds)
    (57/309) benchmarking ("sort", Int64, false)...
    done (took 0.063451945 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.0755537 seconds)
    (59/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.061980513 seconds)
    (60/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.163107586 seconds)
    (61/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.096548821 seconds)
    (62/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.066161613 seconds)
    (63/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.062256934 seconds)
    (64/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.062378206 seconds)
    (65/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.071892031 seconds)
    (66/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.061915628 seconds)
    (67/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.070044975 seconds)
    (68/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.140146891 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.100697602 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.08999826 seconds)
    (71/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.062591402 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.123056206 seconds)
    (73/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.196254638 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.090940857 seconds)
    (75/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.07356348 seconds)
    (76/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.070008517 seconds)
    (77/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.177977455 seconds)
    (78/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.073316244 seconds)
    (79/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.2063314 seconds)
    (80/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.063041723 seconds)
    (81/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.159142838 seconds)
    (82/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.213780995 seconds)
    (83/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.168394517 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.114062153 seconds)
    (85/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.135758997 seconds)
    (86/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.062336261 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.076349483 seconds)
    (88/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.142367429 seconds)
    (89/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.070616864 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.264571694 seconds)
    (91/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.063845666 seconds)
    (92/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.209544095 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.095324765 seconds)
    (94/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068716959 seconds)
    (95/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.0758907 seconds)
    (96/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075219303 seconds)
    (97/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.075802684 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066521909 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065137558 seconds)
    (100/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075303848 seconds)
    (101/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.066974146 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.092285764 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.131951576 seconds)
    (104/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073274194 seconds)
    (105/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.070749972 seconds)
    (106/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.076592872 seconds)
    (107/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.064148113 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.063180113 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.124814689 seconds)
    (110/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.117138182 seconds)
    (111/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.064053159 seconds)
    (112/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.222960004 seconds)
    (113/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.189476758 seconds)
    (114/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.063017655 seconds)
    (115/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.071147299 seconds)
    (116/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.094870823 seconds)
    (117/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.074414513 seconds)
    (118/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.14416243 seconds)
    (119/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.064889939 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.147177914 seconds)
    (121/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.072548529 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.07660322 seconds)
    (123/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.069845202 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.143601363 seconds)
    (125/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07393056 seconds)
    (126/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.241870978 seconds)
    (127/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.166198601 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089406168 seconds)
    (129/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.071508292 seconds)
    (130/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.081382338 seconds)
    (131/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.064056913 seconds)
    (132/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.06993054 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.135809489 seconds)
    (134/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071706268 seconds)
    (135/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.065711643 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07381072 seconds)
    (137/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067801586 seconds)
    (138/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.190317058 seconds)
    (139/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.063774304 seconds)
    (140/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.063854912 seconds)
    (141/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.071590154 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.07646318 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.117562291 seconds)
    (144/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.09089092 seconds)
    (145/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.062743637 seconds)
    (146/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.064434558 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075668499 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.090007602 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.093911416 seconds)
    (150/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.063206722 seconds)
    (151/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.063392262 seconds)
    (152/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.063415115 seconds)
    (153/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.170532747 seconds)
    (154/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.157579911 seconds)
    (155/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.071517558 seconds)
    (156/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089307853 seconds)
    (157/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.06402875 seconds)
    (158/309) benchmarking ("sort", Float32, false)...
    done (took 0.130832459 seconds)
    (159/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072544247 seconds)
    (160/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.064477685 seconds)
    (161/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.225078995 seconds)
    (162/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.177248266 seconds)
    (163/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.062704486 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.131283905 seconds)
    (165/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.062242766 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.119256939 seconds)
    (167/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.070865248 seconds)
    (168/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.062980102 seconds)
    (169/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.070968963 seconds)
    (170/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.064275781 seconds)
    (171/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.066032864 seconds)
    (172/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064349158 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092973484 seconds)
    (174/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.063751616 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.143926572 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.133269781 seconds)
    (177/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.06519489 seconds)
    (178/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.194171968 seconds)
    (179/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.179329197 seconds)
    (180/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.139426235 seconds)
    (181/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.063555729 seconds)
    (182/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.20777398 seconds)
    (183/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.062178866 seconds)
    (184/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.061786041 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.076723047 seconds)
    (186/309) benchmarking ("sort", Int8, false)...
    done (took 0.167746315 seconds)
    (187/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.063265778 seconds)
    (188/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.089228994 seconds)
    (189/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.173086271 seconds)
    (190/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.069515161 seconds)
    (191/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.07199327 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.115872597 seconds)
    (193/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.062619442 seconds)
    (194/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.060776814 seconds)
    (195/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.070623464 seconds)
    (196/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.137659023 seconds)
    (197/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.061486601 seconds)
    (198/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.073978394 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.135018864 seconds)
    (200/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.135525719 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.117104768 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.076247143 seconds)
    (203/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.367852316 seconds)
    (204/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.067609801 seconds)
    (205/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.062889018 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092134158 seconds)
    (207/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.063291327 seconds)
    (208/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.064779976 seconds)
    (209/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.063936973 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.07064972 seconds)
    (211/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.064473433 seconds)
    (212/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.069747848 seconds)
    (213/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.065449969 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.121244328 seconds)
    (215/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.141152439 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.107629506 seconds)
    (217/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.063990065 seconds)
    (218/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.064166716 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074617037 seconds)
    (220/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.064453722 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075046846 seconds)
    (222/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.063807165 seconds)
    (223/309) benchmarking ("sort", BigInt, false)...
    done (took 0.243222406 seconds)
    (224/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.063810535 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.063048116 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.138381547 seconds)
    (227/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.063026262 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.09008085 seconds)
    (229/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.067956446 seconds)
    (230/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.077548607 seconds)
    (231/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071672548 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.127784268 seconds)
    (233/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.064209042 seconds)
    (234/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.140082756 seconds)
    (235/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.072581953 seconds)
    (236/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.063325369 seconds)
    (237/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.062819256 seconds)
    (238/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.067149041 seconds)
    (239/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069257243 seconds)
    (240/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073770275 seconds)
    (241/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.06620065 seconds)
    (242/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071339394 seconds)
    (243/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.066829844 seconds)
    (244/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.062787934 seconds)
    (245/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.063235788 seconds)
    (246/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.077209235 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.063128371 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.063176095 seconds)
    (249/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.0627894 seconds)
    (250/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.173860466 seconds)
    (251/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.062592772 seconds)
    (252/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.092931588 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.177498179 seconds)
    (254/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.063855153 seconds)
    (255/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.076092035 seconds)
    (256/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.062336613 seconds)
    (257/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.064212689 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.062729392 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.08762123 seconds)
    (260/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.064197812 seconds)
    (261/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.06230375 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.062858367 seconds)
    (263/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.062419523 seconds)
    (264/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.064746223 seconds)
    (265/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.062990571 seconds)
    (266/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.183009549 seconds)
    (267/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068267203 seconds)
    (268/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071215847 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.08544101 seconds)
    (270/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.091694533 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.069881805 seconds)
    (272/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.071534265 seconds)
    (273/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.063794887 seconds)
    (274/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.062739903 seconds)
    (275/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.062937962 seconds)
    (276/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081145571 seconds)
    (277/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.182587712 seconds)
    (278/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.064367879 seconds)
    (279/309) benchmarking ("sort", Float64, false)...
    done (took 0.129800515 seconds)
    (280/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.076249674 seconds)
    (281/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.063292589 seconds)
    (282/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.064326148 seconds)
    (283/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.063935506 seconds)
    (284/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.062178489 seconds)
    (285/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.063446228 seconds)
    (286/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.069531152 seconds)
    (287/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.062537476 seconds)
    (288/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.09087959 seconds)
    (289/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.065436202 seconds)
    (290/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.062701533 seconds)
    (291/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.065515006 seconds)
    (292/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.064046719 seconds)
    (293/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.077221519 seconds)
    (294/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.062732647 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07419181 seconds)
    (296/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.09009794 seconds)
    (297/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.062447534 seconds)
    (298/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.117465618 seconds)
    (299/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.078240322 seconds)
    (300/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070196895 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.069635002 seconds)
    (302/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.063640883 seconds)
    (303/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.062690058 seconds)
    (304/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.062344835 seconds)
    (305/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.06373524 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.062541626 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.063014351 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.086880338 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.06280842 seconds)
  done (took 32.374431616 seconds)
done (took 33.804262117 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086290559 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098454799 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.071745045 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.09251663 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08040309 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.09606949 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071656797 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076958421 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078887669 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.077852043 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079755354 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.072415711 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075592333 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07612224 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073369375 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09886212 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078276764 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072190837 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072283127 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.062951924 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073228794 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064379163 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.062851048 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069428869 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.074364095 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070618659 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07321021 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.072726527 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.062963997 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.063402155 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.067675254 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072176344 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.062769479 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076123316 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071748404 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.071995548 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073268138 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075557856 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.063023216 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.063829255 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073360268 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.063520101 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072066622 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.069996034 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.067882882 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070257625 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.071741368 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.075847618 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094684933 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06719896 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.072980694 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.0746924 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07497754 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.068221418 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068007399 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073555488 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070760816 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096637301 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.071928374 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066940852 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073163174 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.071736952 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.069038456 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071986324 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071758774 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.0740123 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075912925 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.069727019 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073253098 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.069705104 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.062931141 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071278161 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.067248575 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06549321 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074315143 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075662729 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.062093515 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.067561499 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071502212 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071466775 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.062744213 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066536404 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.062790512 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.067940404 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066899347 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.068874643 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068079765 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070692955 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.062726527 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072249442 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070577028 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071084882 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.062662669 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076245903 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063144949 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069048776 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.063022055 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.063431218 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.062693126 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068643235 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.062864506 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066957049 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.072308946 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.062308098 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.067840102 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.076841378 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.063019013 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070779909 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.062400533 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.062626372 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.074371239 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073975677 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.062757487 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067283965 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.062198908 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.068102325 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063079803 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.062883192 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06280514 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.062900905 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.067093183 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.062717266 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066390532 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.067704496 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076241112 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06250845 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067532232 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06641572 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.062305467 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068906953 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.062264506 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.062431894 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.061727308 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.076043043 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066187902 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.062380083 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.067577809 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065733922 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.07061402 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.060906774 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07025946 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.067695103 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.066501702 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.067960649 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.061252157 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.072767842 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066049166 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065822749 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.061426331 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.204016737 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.063733086 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064209507 seconds)
done (took 12.334112482 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.065597915 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.111369353 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.080590478 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.08920305 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.077939706 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.064058685 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.06888608 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.084046195 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.06689967 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.085325877 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086113932 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084995099 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.101773489 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.062703431 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06340186 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.064173636 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.062460186 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.070064679 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.087669306 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085655571 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.094683564 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.063029922 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.073318556 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.079507493 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.075420529 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.082739884 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.064379843 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.064449965 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.065823946 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.083709096 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.088534265 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.063325557 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.064506809 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.080416773 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.079385628 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.07418488 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.064284414 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.069109599 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.064303759 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.063478896 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.065164118 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.080338197 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.068396684 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.068549926 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.064163848 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.064462216 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.064544368 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.068766581 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.078261659 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.068610825 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.0725179 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.078396269 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.066580265 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.063966474 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06270342 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.069705419 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.063918756 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.06459803 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.064030588 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.063866605 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.063849032 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.0660137 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.064587169 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.064307444 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.067946454 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.067816592 seconds)
  done (took 6.263610105 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.0871106 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091802057 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.080035081 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.080834925 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.063278737 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.064084879 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.064093824 seconds)
  done (took 2.062487256 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.065211513 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086464135 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088780746 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08924482 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.081547083 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.089753176 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.063842627 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.096776576 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06303272 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.085384507 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.121163347 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09066948 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067663847 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.075997933 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.064421596 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.080733156 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.063695914 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07252186 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.081092586 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089281059 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068464947 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.090707969 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.076945417 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.064361826 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.098670804 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.077032584 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.063568635 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.064013807 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065457877 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.065226901 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065032248 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106579467 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.076695901 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078738048 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065174993 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.064063626 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.078167497 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067220469 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.075301327 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071040073 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.07727494 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065960235 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.063094583 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065295916 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.066892575 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.07565671 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.063368693 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.065657176 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.065043112 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084487768 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.06312877 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.076989372 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.068826149 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069794928 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.07063816 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070657704 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.072533874 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.065746494 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085301524 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.071791933 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065014008 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.081613059 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081352781 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.077773995 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083432172 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.068799508 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.076928945 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.077826266 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.06574964 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.067663901 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.06757764 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083900787 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.067109914 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.068048391 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068174418 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067080585 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078012187 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090331555 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089571798 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.077709257 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.065744975 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065478798 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.076309436 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.08967824 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069423442 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065003751 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067350284 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.063007258 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.068010106 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065413467 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069860592 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.065688571 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.072697808 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.066392312 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068432132 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081692524 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.063783301 seconds)
  done (took 8.710944077 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068082663 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.065816464 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.06790033 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066660278 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06561072 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.066309867 seconds)
  done (took 1.96127457 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091285004 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.066178087 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079154201 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.066246095 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104903107 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.080475622 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.081023888 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075297045 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.077628606 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078327742 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.081025647 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.08453643 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.079513407 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.066927945 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.080869434 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.066741045 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.081029917 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.069913217 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077954521 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067640005 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.080367698 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.067207406 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067672162 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085476556 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.068453279 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.066924231 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.064702958 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077987087 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077447918 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.075470726 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.06714972 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.068848774 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073202612 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.074730881 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.081233373 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075617395 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.065643242 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.071699591 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.068015384 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.068365466 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.083248224 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067737557 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.068683002 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.071723036 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.075341091 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073524589 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.072209914 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.070356238 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.080419662 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.071628332 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.071228738 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.066411333 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.068397758 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.071486113 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073377163 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075097039 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07139329 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.08112641 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.067046133 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073235785 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.065871657 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.068475031 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075113222 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.0685967 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.073074806 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.071475474 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.073853264 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.067354011 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067526881 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.065819321 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.07186174 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.065605988 seconds)
  done (took 6.81667508 seconds)
done (took 27.331866039 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.992982386 seconds)
  done (took 2.498664786 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.596476681 seconds)
  done (took 2.141282144 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.510157353 seconds)
  done (took 8.054868522 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.329872045 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.370141788 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.744937453 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.135320808 seconds)
  done (took 3.159791178 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.714975856 seconds)
  done (took 2.26927623 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.249200975 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.232316123 seconds)
  done (took 2.050822277 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.365448164 seconds)
  done (took 1.911051028 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.103191167 seconds)
  done (took 2.649919622 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.260641945 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.165576871 seconds)
  done (took 1.98728493 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.461172247 seconds)
  done (took 2.010772766 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.337315236 seconds)
  done (took 5.894411275 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.244660712 seconds)
  done (took 1.837104943 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.235626289 seconds)
  done (took 1.790273309 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.736062366 seconds)
  done (took 3.285452332 seconds)
done (took 43.097877245 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080985714 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083463003 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.083270625 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.07982899 seconds)
  done (took 1.85480324 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.07485551 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.070905812 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.074869803 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.075709439 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072054579 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073527601 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.073570095 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.070810417 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072284648 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.070645632 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.068987676 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.070566293 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.07341263 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.069970577 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.071063571 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.072534717 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.068661042 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.068196896 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.070719164 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.067957224 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.071160542 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.067936303 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.066103689 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.067089578 seconds)
  done (took 3.259243099 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077163696 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071218581 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.073464477 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.069679045 seconds)
  done (took 1.850923732 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.074780577 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.085880289 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.086289047 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.092838393 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.074747116 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.074445427 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.083192764 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.083932445 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.063539296 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.087947653 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.06613418 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.064456251 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.064694761 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.085569562 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.083486358 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.061531766 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.063002096 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.07508281 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.074061309 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.076363369 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.065429144 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.063346357 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.074257064 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.073916471 seconds)
  done (took 3.360901414 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081870841 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.064084634 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.080147775 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.092875425 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092750172 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.063553274 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.082871554 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093026423 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.140611325 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.063988038 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069404932 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064280812 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.106877495 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.063913819 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.08364446 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109980859 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112746239 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067831031 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097399567 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06357599 seconds)
  done (took 3.262639464 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.083005763 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068446968 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.069503186 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.065708394 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076517599 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073980649 seconds)
  done (took 2.004693197 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067872139 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067262986 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067668454 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067261906 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072067884 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.070118273 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065871554 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067717768 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067471559 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067205435 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066901721 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065801603 seconds)
  done (took 2.378249172 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.165621534 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067326849 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068420028 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.063918931 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070805497 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.064032729 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081920896 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068894645 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.083559277 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06430312 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.064815344 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.066776892 seconds)
  done (took 2.494656419 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113828262 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138729847 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098568117 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.071583378 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179049724 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099832873 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.09021288 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.125132442 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097639852 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.068155243 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096604217 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140966162 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097033433 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.10095066 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08295251 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130286804 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113811921 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08994508 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117247821 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081837631 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.069526493 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138715991 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.068899794 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094063174 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105764856 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.099013927 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113444448 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137236517 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085417541 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.089706002 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082247554 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.075099714 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.106943759 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.083959628 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.098434727 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09579869 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100925083 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08813342 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.085645754 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125269859 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172202863 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107641962 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103726207 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139650975 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079455772 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.113235968 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081617016 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10206594 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108036479 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095344263 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075803907 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093603163 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.109192877 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105017135 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.082106117 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082527848 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124650593 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.100353756 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099965646 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080438233 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11421943 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.090247162 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111857866 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122081494 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143611752 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.253617082 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144633469 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126902918 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102481448 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.092328647 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.09468584 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075976993 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115835363 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102725579 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142761283 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122874832 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10466525 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.097200409 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087796612 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110893099 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118944982 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100179654 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101347196 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153900464 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112764066 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096779574 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098568712 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.14139804 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071355092 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154053863 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090063831 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125552028 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102972559 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145226695 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093640026 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.084724407 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110107752 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112118399 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.091329535 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107192181 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087167509 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119300448 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093847009 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108205174 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082876222 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092512742 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087945514 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.098537489 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.075547479 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113378241 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120663385 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11866086 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.074956246 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11145657 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087845938 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.076453563 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095128808 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145901907 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084087695 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076649819 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157606558 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.094281602 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.119991423 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114068469 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.083375823 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120386155 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142344752 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092417753 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092634196 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0751141 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15696509 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074164159 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11789955 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079790426 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101210525 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107491241 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140784986 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141330486 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097908751 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077256235 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090455468 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.104940015 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085506677 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084520577 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074547405 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.107697233 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124932357 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.098349067 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079454999 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.090064855 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.067166618 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111968417 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073698454 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080025273 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095963443 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.085969571 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.087338414 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140383201 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.081209839 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107126743 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095430231 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.064829044 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08960217 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157168913 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.081564547 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.110755183 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115769323 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084217405 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.066591866 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.094066897 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.071678577 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107890525 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.090936492 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107295807 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076427603 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105472082 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.065835906 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072015489 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132053637 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100076656 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088132214 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.13101863 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105229037 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.08703225 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.10324538 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.093640737 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093566863 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100933257 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.103933678 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107115415 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.070348758 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127351385 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089812048 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.07364843 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087676857 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076397457 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.075503127 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098727557 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.381407038 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.0954098 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108298024 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109985296 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101586486 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.118098292 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096814067 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085413598 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143544606 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081684383 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.080250946 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09699842 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.115249283 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095317189 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.142839657 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.08211878 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150834404 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102039434 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086269924 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126821316 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.07279617 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074517513 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.090647523 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097190703 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121318089 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081186477 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082077581 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12476808 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138857903 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103553037 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1129336 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068994868 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097158958 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142540886 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.116066312 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086538522 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117790652 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088562353 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136147946 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102243223 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125651839 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10985981 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1149634 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.093581939 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.082488875 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.075127881 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089686938 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116194802 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088194958 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084231334 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.067529353 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.07474113 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099636927 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094978451 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118243071 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095256933 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143596586 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073156667 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109854601 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111039879 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110523337 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096490682 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098254571 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.092964771 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092169312 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09254374 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093157047 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.074760834 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132577718 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104976209 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079057624 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092561131 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262809441 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11021538 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116589638 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113944378 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095954789 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111353877 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127338558 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102073563 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08529528 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086410624 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.099464068 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.088225954 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082751359 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.1081628 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117308442 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10103456 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113314224 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.096572917 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.094182982 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111867015 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097772856 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091085232 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.122753205 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161102055 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.106900214 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.107599107 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087056937 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112327088 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109410156 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118513743 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.116555367 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11377396 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07052048 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.075371765 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.070532694 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1106195 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080010269 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123738319 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077343261 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111594265 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103210723 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.0819295 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.066530244 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10421005 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093277336 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.084564542 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130005586 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.114883283 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.074314501 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094435578 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111644211 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085190354 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130619531 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.106463996 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105641652 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072096126 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097185608 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.075677445 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114057839 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.104926435 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.083835721 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.079104855 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.072550003 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115863214 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089866878 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116604614 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096936281 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104029697 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12456367 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144559608 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088478668 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09794263 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28009519 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118993344 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.083498952 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11960939 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143305998 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.126938999 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.085179592 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.087448732 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109888463 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109273983 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104626664 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077016226 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079649981 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113510423 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118437925 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.068140119 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085829501 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071060831 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.086817564 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118086189 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102968986 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083785176 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12304026 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075181781 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113401795 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100594963 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130373771 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128571972 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152993577 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099461497 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086054206 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077329756 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131413614 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.071629502 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123461033 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117126734 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090878264 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.069087566 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084402544 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.098279844 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.632435546 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11327513 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.076354163 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142834217 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.091013541 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120256528 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087429185 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.122276837 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096303463 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105284821 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094688587 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141399405 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083640536 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11352847 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.173477865 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115397209 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.111946725 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074688635 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.086700561 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.074467063 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.079983116 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.085668261 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089894251 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112324265 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08965338 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108379728 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.079628819 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.110169132 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096661775 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246546778 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.102100545 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082982362 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14618162 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.091550245 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131296968 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110982288 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080421718 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075890348 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.089552427 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.104404456 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083258282 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097505394 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079675656 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.079048856 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159993506 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111051336 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08595858 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105608328 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.09216754 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.091232756 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093373753 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124093448 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114832425 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074628654 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.089860516 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107177813 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079873919 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.075429576 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099168934 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.070340418 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093049722 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107794447 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102065803 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095739552 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.108553161 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079547907 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092798348 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114260493 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087168169 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.077560986 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077822096 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.07807912 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.077348524 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107184726 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11369964 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119531639 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114165837 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093494613 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10180493 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.079881162 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.224269059 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081675366 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099377765 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.106995068 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.076161892 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.135594406 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090060489 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093775795 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101908534 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105595166 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160049928 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075121793 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115418603 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092925904 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113803085 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087287134 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111199866 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099273918 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097888187 seconds)
  done (took 51.870972063 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.094861712 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.153252792 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.159519892 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.080799287 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.094507077 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120720306 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.211099736 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193537813 seconds)
  done (took 2.858422064 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073816167 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.08010171 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102860201 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081275244 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.064622014 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.073612141 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.21947724 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.08034384 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.063981111 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.096258691 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.07719031 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.065883966 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.44185058 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.063723155 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.064832174 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.074856976 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.064886148 seconds)
  done (took 3.502778202 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.39237631 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.59731046 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.368409888 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073306247 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.030603647 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.086395865 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.190486485 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.133775377 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.079006887 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.546376062 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.369516245 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.129778152 seconds)
  done (took 18.715721732 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.079737666 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.075984831 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.088213151 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.087769162 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.075475738 seconds)
  done (took 2.128300208 seconds)
done (took 101.109714228 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079783091 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.166812291 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.065947161 seconds)
  done (took 1.990547941 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.091357534 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087456166 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.088993518 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.086613368 seconds)
  done (took 2.084042153 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.072060615 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.074240563 seconds)
  done (took 1.871350159 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.235085638 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.174760666 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.096322979 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08070931 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078002511 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081720926 seconds)
  done (took 1.967409686 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.070301418 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.072195098 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073191759 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079015699 seconds)
  done (took 2.016488849 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.068154616 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.064192697 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.066825995 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.07023537 seconds)
  done (took 1.994847178 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.082386268 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.081575556 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.07679006 seconds)
  done (took 1.965375377 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.095303483 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.096336301 seconds)
  done (took 1.915993874 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.078403128 seconds)
  done (took 1.801467932 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.089373906 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.099312539 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.13100486 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111538748 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.131287133 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.11554653 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.078312375 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.08232303 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.073745961 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.071676099 seconds)
  done (took 2.707208194 seconds)
done (took 22.617622644 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07613554 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.367585382 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.35876642 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084719762 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668824819 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355014563 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.018067315 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089819656 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.105656297 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066649574 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083264615 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.645837384 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.972143906 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.32547225 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.959988885 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323795721 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649148334 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06613284 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.065505115 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067002832 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.966224256 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.065863123 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066808847 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066511778 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.646799959 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371575454 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067423354 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324347496 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065772103 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068790638 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354144036 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067620786 seconds)
  done (took 16.183452633 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.068540087 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119742514 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073212437 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082319959 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.068330698 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.067555284 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.069685749 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.067092777 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11607491 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067131981 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083775762 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.065919791 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.070839887 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067825291 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086856096 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067027864 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068823817 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067344269 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06703445 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068420226 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085267162 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06682666 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068122958 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067918139 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068025278 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080484641 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068086023 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066895492 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067179175 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06975556 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070720303 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068757675 seconds)
  done (took 4.104327273 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116686935 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128050693 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073172851 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.104396458 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116867556 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068760198 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.145666674 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091386892 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121302383 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068241507 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083980377 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066296246 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101294317 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070090455 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087855796 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067339813 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068723128 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067474243 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066692427 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068074472 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086141089 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066730451 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068340023 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067322263 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068295161 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081997683 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068123805 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06718106 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067080003 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070181679 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071336028 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068822149 seconds)
  done (took 4.377241405 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.067821303 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.070858923 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.080064681 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.081465626 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.067619712 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.068805017 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071567518 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.06865313 seconds)
  done (took 2.32204423 seconds)
done (took 28.720362464 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.076422726 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.065161472 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.069759784 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.085328616 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.071629315 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.076546363 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.062795797 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.072298519 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.069968205 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.069427247 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.073430183 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.06492601 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.068450333 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.062916611 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.070614071 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.064296254 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078463175 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.069252049 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.077517572 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078327124 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.067110877 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.071054282 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073369831 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.077583911 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.077616743 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.077578119 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.074496432 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.070263787 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.065577721 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.068045346 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.067361271 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.077348093 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.079900727 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080432917 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.064644465 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.06555063 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.069136768 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067030095 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079633441 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.074685874 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.067101272 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.074421368 seconds)
  done (took 4.72652282 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086171086 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.087819116 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083266844 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080217598 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.098232341 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079880272 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.086370385 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.076420139 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.074673658 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086942228 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.072100191 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.078253513 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.075899632 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.070374805 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.074701572 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.071996053 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.076659128 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07101046 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075011092 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.075640649 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.086680676 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.070260344 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.086318224 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077016959 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.071733642 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.07809102 seconds)
  done (took 3.806874917 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.071949322 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.082969584 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.08964685 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.146369412 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.110574225 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078473328 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.079409886 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089999891 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.095049371 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.065878402 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.069490086 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.090723668 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090210924 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.072130376 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.106088885 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.081801524 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081054736 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068016693 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073086198 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.094367472 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.086445079 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083629576 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093747702 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082582503 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.065604123 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.068224395 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072411861 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.079974108 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07315041 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077748937 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070644083 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070323932 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.067025451 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.077486135 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07050899 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.065180287 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089405884 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077586139 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078096024 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.105318015 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.075167246 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.066798776 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093517959 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.12654753 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.065224655 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.068702548 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.069278188 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077112496 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066553272 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093031714 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079580392 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.065284928 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.06608766 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066105365 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066374037 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08049806 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.067208503 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.067434904 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076169946 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.072061111 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.087025368 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070620133 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085009574 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.065290548 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075718017 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066619374 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.066714816 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.063907666 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096575109 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071568561 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.1139526 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.066283201 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.064061945 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077111073 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.076202217 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.071320619 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.064816867 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082999456 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075803064 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.069758583 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076780862 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.068372491 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.068775209 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.096009235 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.065694156 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.064877463 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.066701068 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.068766944 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.06892585 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.066414245 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079045088 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.064955453 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.068944552 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.079760127 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.065164311 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.066084673 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.068960624 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.067488422 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.065077324 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078490393 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.069655667 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.066495491 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076838342 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066063233 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.068728091 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079065699 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072483767 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.064744323 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.067256126 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.069096732 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067058228 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069300222 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069022564 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.067902762 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.072096471 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.072953011 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.070938683 seconds)
  done (took 10.672847248 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.17013937 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.160423403 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.067362694 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.153189486 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.073177417 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079792823 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.154392918 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093901028 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.066700506 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.066647453 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.065977727 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.103533614 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.099950801 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.109588084 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078033028 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.065854117 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.089243454 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.107622485 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.156088401 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.152967934 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.09032279 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.073358165 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070526206 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070310315 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070189877 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.076077288 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084432383 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.073779192 seconds)
  done (took 4.516097598 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.076605897 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.08969761 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.070345171 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.077438181 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.086673415 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066715216 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.067772266 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.067647448 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080115772 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.076425025 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066203831 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.071550165 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.069479543 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.069634988 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.066970398 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.072109194 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.073145918 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.065547372 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.069795437 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.071461426 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076689205 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.09248966 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071690696 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.065757701 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.068967595 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.065779711 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.076444805 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.079708546 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.065883662 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.088916787 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.063937976 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.071365154 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080746443 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.06664437 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.065404269 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.066588127 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067328635 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066993386 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068374084 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066111058 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065208537 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.070399148 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.064941162 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.075577847 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.079234524 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.073266247 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.068434867 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.068791825 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.069267947 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.063659241 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.068917084 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.068600738 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069150385 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.073394628 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.069983241 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.068984996 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.067061275 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.094969155 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.071617079 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.065310552 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065815594 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.064713934 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.068104694 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.077118911 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.082379488 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.068173796 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065349708 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066127331 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.078822006 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.079123457 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.065310558 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070597341 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.063809473 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.066438771 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.068233143 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068220146 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.066883965 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.064620651 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.065509329 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.06615675 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.066793941 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.065834983 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.065984581 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069129479 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.064510526 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.064350867 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068764888 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.067750083 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.076475771 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.065393276 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.069668785 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.066764548 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.064661852 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.068910114 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.071607981 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.068993632 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.079513142 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.07874354 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066628372 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064375943 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.079655924 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.068529157 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065707144 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.071788109 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.070784456 seconds)
  done (took 9.203750035 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087757267 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.067491444 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082969458 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.089701071 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.076371057 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.071513109 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076825464 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.066755097 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082610372 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.06545397 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.074510946 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.064883357 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076848757 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075726842 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.067694519 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076757863 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.068976327 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083806968 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.079907838 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.06491537 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075329146 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.078341453 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.078722241 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.080121907 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.079088906 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.080515739 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.07819403 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.069338883 seconds)
  done (took 3.921426175 seconds)
done (took 38.582476314 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.834535239 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.98838424 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.816622073 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.014786441 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.997658351 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.943915485 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.933081077 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.814320838 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.918619011 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.862602294 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.137623416 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.299093959 seconds)
done (took 66.368148096 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.837638933 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.97926884 seconds)
    (2/2) benchmarking "String"...
    done (took 2.073619492 seconds)
  done (took 5.803893804 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.068864007 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.464642316 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.078257018 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.814530086 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.82003497 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.243902389 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.609145577 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.259129277 seconds)
  done (took 31.046006677 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.964889247 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.035306993 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.519527219 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.539545808 seconds)
  done (took 15.85202417 seconds)
done (took 64.449177878 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.853636844 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.814252383 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.855566233 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.845642111 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.824529685 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.816120911 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.814493533 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.817578706 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.847626431 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.884016378 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.816706637 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.817638523 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.819185129 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.849461852 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.465958724 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.878009491 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.837592773 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.823374384 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.828684935 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.855654872 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.816052239 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.815456803 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.309124114 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.004534414 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.426870932 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.272264907 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.816974075 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.231115066 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.824386709 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.81799461 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.897697168 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.272637668 seconds)
  done (took 205.62721059 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.819219449 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.892608348 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.937242786 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.85627014 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.43481323 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.995985304 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.914041661 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.462011826 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.820821637 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.834845614 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.146999227 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.816843752 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.175440165 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.76305412 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.853063505 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.910524019 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.044597271 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.15453046 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.857244613 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.978293124 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.822163561 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.921194 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.878305788 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.107524939 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.850010361 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.906770137 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.819794091 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.830331908 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.002622571 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.028604774 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.837872616 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.830776432 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.983756596 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.685492254 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.834023038 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.842286761 seconds)
  done (took 172.605544024 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.015621815 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.824328349 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.816969798 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.875700486 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.947409505 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.823110577 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.471037216 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.8311834 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.462834682 seconds)
    (9/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.82247687 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.821472639 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.817350301 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.817062064 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.818292148 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.829717353 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.899829053 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.821680056 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.835804998 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.820145584 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.842367069 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.815895454 seconds)
    (21/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.821600457 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.820301778 seconds)
    (23/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.822878301 seconds)
    (24/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.818573176 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.819482822 seconds)
    (26/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.81764654 seconds)
    (27/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.819329016 seconds)
    (28/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.815634145 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.818962244 seconds)
    (30/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.113604767 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.061115684 seconds)
    (32/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.822319763 seconds)
    (33/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.819077148 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.313594751 seconds)
    (35/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.833001276 seconds)
    (36/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.987314017 seconds)
    (37/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.823143858 seconds)
    (38/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.911009523 seconds)
    (39/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.876140992 seconds)
    (40/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.928568811 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.820653996 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.038546145 seconds)
    (43/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.895974831 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.825191656 seconds)
    (45/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.823564984 seconds)
    (46/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.885644909 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.833494806 seconds)
    (48/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.824612495 seconds)
    (49/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.820754948 seconds)
    (50/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.826367724 seconds)
    (51/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.885017246 seconds)
    (52/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.057810788 seconds)
    (53/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.82186211 seconds)
    (54/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.946260508 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.300846935 seconds)
    (56/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.820692345 seconds)
    (57/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.819835102 seconds)
    (58/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.822802821 seconds)
    (59/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.390024464 seconds)
    (60/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.820804027 seconds)
    (61/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.823736985 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.825549793 seconds)
    (63/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.827408941 seconds)
    (64/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.822710698 seconds)
    (65/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.819815038 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.208346024 seconds)
    (67/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.892542617 seconds)
    (68/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.206518041 seconds)
    (69/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.235101342 seconds)
    (70/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.820433337 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.856134953 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.059920904 seconds)
    (73/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.820610868 seconds)
    (74/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.820864504 seconds)
    (75/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.821574332 seconds)
    (76/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.824980761 seconds)
    (77/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.823514364 seconds)
    (78/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.823920742 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.945667096 seconds)
    (80/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.832138874 seconds)
    (81/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.925264894 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.905009843 seconds)
    (83/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.942915705 seconds)
    (84/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.826197738 seconds)
    (85/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.832158542 seconds)
    (86/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.648055424 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.889590353 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.858452205 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.636552732 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.824600634 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.196662745 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.578397563 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.821469677 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.820301536 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.832562348 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.821894618 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.822593507 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.823459386 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.902895528 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.821363147 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.942415037 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.562130977 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.212979447 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.827219794 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.830057735 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.836982003 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.913557682 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.952380665 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.832225226 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.896516318 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.835001212 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.832843027 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.917684881 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.830622746 seconds)
  done (took 405.996292099 seconds)
done (took 788.055917148 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.472804578 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.442864393 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.538776185 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.456089031 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.436426241 seconds)
  done (took 14.114705843 seconds)
done (took 15.878794278 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.847928325 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.834919505 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.889883625 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.916272175 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.84771541 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.853693221 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.915608841 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.851523668 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.883236002 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.88285787 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.919626796 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.915981471 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.857098091 seconds)
  done (took 26.183497062 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.843993583 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.980287855 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.058809336 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.873360316 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.841514309 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.055497087 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.894852461 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.991927025 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.978579303 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.063595092 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.066425886 seconds)
  done (took 23.420072987 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.837275134 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.978264592 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.061186237 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.874688157 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.842373687 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.068389884 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.901386042 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.982115634 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.978887653 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.064125858 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.069526519 seconds)
  done (took 23.433606431 seconds)
done (took 74.806003947 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.837287319 seconds)
  done (took 3.604386352 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.861121093 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.001247231 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.837008292 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.834665785 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.836202321 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.836436981 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.833142952 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.83527577 seconds)
  done (took 16.644718147 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.834414941 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.836253512 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.835857504 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.834925516 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.836432825 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.835962899 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.834659712 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.837080536 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.83401611 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.835411119 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.836218839 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.835190414 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.837956913 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.835971399 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.83378109 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.837560321 seconds)
  done (took 31.141088706 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.836113993 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.83705586 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.836586982 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.837168541 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.837389147 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.837061722 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.838687701 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.834523385 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.839401765 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.834778248 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.836807428 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.83757494 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.835942341 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.838856162 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.835047809 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.835032546 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.834472704 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.837771608 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.840887805 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.836803788 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.837502029 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.837624991 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.840064146 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.836315524 seconds)
  done (took 45.866612911 seconds)
done (took 99.032350591 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.553245597 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.676821065 seconds)
  done (took 10.000949257 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.842667129 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.836592114 seconds)
  done (took 5.527964715 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.838875196 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.839074523 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.838030799 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.838001285 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.841558183 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.836703089 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.839602739 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.839807393 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.839897593 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.836596485 seconds)
  done (took 20.160674649 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.83975819 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.838900809 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.840394455 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.83833012 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.837251143 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.839311631 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.837517655 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.840038984 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.840703901 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.839557264 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.83822319 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.841108966 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.840274148 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.839507031 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.841281655 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.838837453 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.838892267 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.839749233 seconds)
  done (took 34.876235314 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.840690836 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.840242286 seconds)
  done (took 5.453042801 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.839502355 seconds)
    (2/7) benchmarking "second"...
    done (took 1.841557144 seconds)
    (3/7) benchmarking "month"...
    done (took 1.839480158 seconds)
    (4/7) benchmarking "year"...
    done (took 1.840770686 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.843267154 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.839069553 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.841020735 seconds)
  done (took 14.657465823 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.841361479 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.999197937 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.059155742 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.647588614 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.842152458 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.842379745 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.178309828 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.843199284 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.847583387 seconds)
  done (took 20.876284611 seconds)
done (took 113.326214608 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.749003194 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.844384721 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.106212186 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.903702986 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.90104083 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.176002852 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.883836629 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.098584353 seconds)
done (took 43.437064845 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.846383033 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.841088752 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.871987033 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.869652815 seconds)
  done (took 22.353676668 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.841136235 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.178463016 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.86518235 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.675309883 seconds)
  done (took 22.347126305 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.226274552 seconds)
    (2/2) benchmarking "read"...
    done (took 2.185446004 seconds)
  done (took 6.191413454 seconds)
done (took 59.513914987 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.841890171 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.839977733 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.841862273 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.84188833 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.842606061 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.83949434 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.841231133 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.84039052 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.84204543 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.842682581 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.843695638 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.843385825 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.841148845 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.842031574 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.840872313 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.842951146 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.844002289 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.838298839 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.843476178 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.843972259 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.843825466 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.843273504 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.843401505 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.842264244 seconds)
  done (took 45.984204273 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.843884165 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.842360144 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.842595812 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.843429099 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.843132307 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.842807211 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.839980262 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.843602204 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.843352657 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.841389467 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.842140799 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.842697342 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.843797439 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.842221888 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.841530087 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.842323483 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.843958346 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.843191727 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.84257057 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.846365205 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.842278552 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.843892872 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.843710897 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.84263863 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.842843049 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.844113769 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.841488459 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.841565836 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.843407285 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.844647387 seconds)
  done (took 57.065628395 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.842606719 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.846466349 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.843866714 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.843752211 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.847502811 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.844014693 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.846888426 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.843750317 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.845576451 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.844653837 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.847620812 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.843271469 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.844730965 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.845303071 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.845680193 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.846388289 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.84183706 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.844146867 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.845106888 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.843320366 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.846090924 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.844767517 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.843959626 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.843686535 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.844143716 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.847294437 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.846262787 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.843066089 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.846517628 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.846853989 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.843256355 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.844390388 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.846585287 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.847962849 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.844324622 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.846306903 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.844071746 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.84308218 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.844973743 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.844679008 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.847446557 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.848786183 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.8472906 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.848746431 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.846268661 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.84777743 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.847013355 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.849973616 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.846331186 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.84711956 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.844331998 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.847610635 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.846735775 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.848242497 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.846521279 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.847566566 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.849569371 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.84710289 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.845196765 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.846930433 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.84902132 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.843399356 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.850047718 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.847752354 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.846279941 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.847855245 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.846615297 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.846890811 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.844877331 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.84616792 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.842955416 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.846177969 seconds)
  done (took 134.684795147 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.846485186 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.845941071 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.844365231 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.847509693 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.847048244 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.850311165 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.848383522 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.84558459 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.848864308 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.847197332 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.849151393 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.84609344 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.849018295 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.847267514 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.850484777 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.846019914 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.84789569 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.851340961 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.848324352 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.849247524 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.850378942 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.847527481 seconds)
  done (took 42.433204355 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.846931253 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.847863868 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.848559857 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.84540606 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.846976814 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.848986988 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.845999643 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.850410436 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.850014999 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.850162662 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.845305267 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.848548365 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.849649604 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.850648791 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.850828755 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.850703048 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.848725091 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.846893022 seconds)
  done (took 35.053530046 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.847939712 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.849562132 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.850009613 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.849985534 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.849178598 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.85142412 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.850816566 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.849498346 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.847353818 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.846873434 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.848939875 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.849938284 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.851144247 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.851166874 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.847220328 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.849868686 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.848892241 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.847968703 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.847734794 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.852840126 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.849016489 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.849532696 seconds)
  done (took 42.469038159 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.848276845 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.850873465 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.851051456 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.851510782 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.850106862 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.849274597 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.847672169 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.847618731 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.851004044 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.847816153 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.848957494 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.851896435 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.850463036 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.848119417 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.850827092 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.851311188 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.852404542 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.849587563 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.853137912 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.85261304 seconds)
  done (took 38.78373605 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.851794117 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.854749525 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.849158057 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.852066499 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.849673827 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.846711976 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.852055371 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.85184921 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.85526673 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.852277174 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.853751944 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.850959578 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.849546726 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.850631438 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.847638527 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.849235822 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.852580001 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.849517145 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.852553436 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.85306564 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.848149144 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.852456832 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.853848342 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.850808581 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.852983504 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.853664544 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.85300149 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.85045484 seconds)
  done (took 53.622211627 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.851522041 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.855169172 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.852109277 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.853845017 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.852217524 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.85384893 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.853213644 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.853738412 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.853129918 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.85552939 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.853465184 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.851282538 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.851938112 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.852519331 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.849402555 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.854981018 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.85254013 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.850514154 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.856759578 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.851432847 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.85377659 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.853030882 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.853574319 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.857446471 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.852576568 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.852455749 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.855546431 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.853600905 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.856942552 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.857301172 seconds)
  done (took 57.389547393 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.873396553 seconds)
    (2/2) benchmarking "in"...
    done (took 1.872422544 seconds)
  done (took 5.533710708 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.856808862 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.858632095 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.85766433 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.857134217 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.852158123 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.853759219 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.854945084 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.855767755 seconds)
  done (took 16.630527078 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.855050591 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.856599658 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.857861066 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.855156432 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.854771418 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.86148876 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.857418739 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.856719701 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.854788906 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.857226 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.859355768 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.859375002 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.865618774 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.858694578 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.855703183 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.859599698 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.854938048 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.85610389 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.85925163 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.857778476 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.863501644 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.857174018 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.857256647 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.855394317 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.859246931 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.858432435 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.867658583 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.858307175 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.859999043 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.858199675 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.866062096 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.858011935 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.857703134 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.857908956 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.859987133 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.858407738 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.863761038 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.859068532 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.85906712 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.860907574 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.863575985 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.860923366 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.860436258 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.863001651 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.859499455 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.858979563 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.86100733 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.858267981 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.85967796 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.859947683 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.867633846 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.859897076 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.86025226 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.861012058 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.860944492 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.856802975 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.859102535 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.858343415 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.866819249 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.864054432 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.860470293 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.879809158 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.867582989 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.860743353 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.859436552 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.866573098 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.88166074 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.860828831 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.860983507 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.859409602 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.860204672 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.85636371 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.859710581 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.860512015 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.870410402 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.868633895 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.858437866 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.860338064 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.863152793 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.861935926 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.85973558 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.86032408 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.858257382 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.859848529 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.871989484 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.884863033 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.858544517 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.860179535 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.862789546 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.860678778 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.867614809 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.864845274 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.860219456 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.859444121 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.86403885 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.856717392 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.864684917 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.860863823 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.864260422 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.870722944 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.860825395 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.86518252 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.859784795 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.869016651 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.863769035 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.862516914 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.858239503 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.862001002 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.866712783 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.86213854 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.860533825 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.862494723 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.862589078 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.863029932 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.862020949 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.863135573 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.869510828 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.866974299 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.861386703 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.862857771 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.864747023 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.863446872 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.868363729 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.886015804 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.858532218 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.862331146 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.862162732 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.872090949 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.867895718 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.862938915 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.864696628 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.860454226 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.863198228 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.86384764 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.864836214 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.859485628 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.862854169 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.863373216 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.862285227 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.861346073 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.864005526 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.862769602 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.865018193 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.859333458 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.865290631 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.85893183 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.865439248 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.864767986 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.865925114 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.862068134 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.866918275 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.865916867 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.861634683 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.864158834 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.866450408 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.863224034 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.86492159 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.863935833 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.863160213 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.859511299 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.860317184 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.864202341 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.864670535 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.862917177 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.860744171 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.863092096 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.860923729 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.8609527 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.860995027 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.864907481 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.864915945 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.86352616 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.866163273 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.861886929 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.863266246 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.863873439 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.864582238 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.865408416 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.864456822 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.875373098 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.866485294 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.873542126 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.866021157 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.868080801 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.865057216 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.864029297 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.861125412 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.862105994 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.864503182 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.868751557 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.865971196 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.865733796 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.881718206 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.874325499 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.862883233 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.862672577 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.869349946 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.871937821 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.865647233 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.861547578 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.866483411 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.867045605 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.86430267 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.86420285 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.864896119 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.86895147 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.866573524 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.864165242 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.868840824 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.863045215 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.865102559 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.866065164 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.867036575 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.868603114 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.862992917 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.866355739 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.865023148 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.867779054 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.870992215 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.86818978 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.865979502 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.866152687 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.871983071 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.870359258 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.867434475 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.866533624 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.874392234 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.861859426 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.872129018 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.876360893 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.868669669 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.871155405 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.867094323 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.87263346 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.868504966 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.869511806 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.870189645 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.874957058 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.869100447 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.867873459 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.873255204 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.870097569 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.871581741 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.871415879 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.869468718 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.866659538 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.872063717 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.868395645 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.870410675 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.872737547 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.872949827 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.870022607 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.873122207 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.873982644 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.870516424 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.870243071 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.866682206 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.870072739 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.880946797 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.875106863 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.869648776 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.871335016 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.869263871 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.867571983 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.872636548 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.871914307 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.879771436 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.879043367 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.872657865 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.873566697 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.871678866 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.8711162 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.871848458 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.867072187 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.877111188 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.872984826 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.874515994 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.874097212 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.871187648 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.871957278 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.879551866 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.874632991 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.873853392 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.871918578 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.873555678 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.87111442 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.871393586 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.871165367 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.87074332 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.868640623 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.873775294 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.870303636 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.872922849 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.874003773 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.875252911 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.872481129 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.868698253 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.873600633 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.87387977 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.872494915 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.874171521 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.870583348 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.875284736 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.871355857 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.873862983 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.876779779 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.869398877 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.876923116 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.880951138 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.874656809 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.882286994 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.869531214 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.877921204 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.871323476 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.873173179 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.873170159 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.875482451 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.881855661 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.871349352 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.872655947 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.87983396 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.876168205 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.872840583 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.87149723 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.873151651 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.870761685 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.875174014 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.873228759 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.881886463 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.873615994 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.871946369 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.872843313 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.874134676 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.875998815 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.877529604 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.872364292 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.868872756 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.875049366 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.874358337 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.870393426 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.873597091 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.870924292 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.872450465 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.87537706 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.873802055 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.879716359 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.871245147 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.873477368 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.879328219 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.87487175 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.881108411 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.871328651 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.874743875 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.878509476 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.871475992 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.873999924 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.87106781 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.876693157 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.877068153 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.873479699 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.878232778 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.885518252 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.876040695 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.878760647 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.875728017 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.874241829 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.877300167 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.88638131 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.901678486 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.87741308 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.876512821 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.878313997 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.883751866 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.878553631 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.879420615 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.880420547 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.883156872 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.877761617 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.875917624 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.88004668 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.8915603 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.87497988 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.878036968 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.877168652 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.876968226 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.877999561 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.879163587 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.87897119 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.87657254 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.875159236 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.888703216 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.877904968 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.88213031 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.874305647 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.880360606 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.876512307 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.880470545 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.879003885 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.87499211 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.879296568 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.877742699 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.879598264 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.881981362 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.879739284 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.880348335 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.887974589 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.875781782 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.876362306 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.879969101 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.878434537 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.880666673 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.876315613 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.880451677 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.882314328 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.881483149 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.880561194 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.876360847 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.886699315 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.881447887 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.879254823 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.877032405 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.88521618 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.876339006 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.879022819 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.877210254 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.886988621 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.878557797 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.887081829 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.8830307 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.877006386 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.882345017 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.883025793 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.88745001 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.879769471 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.882172264 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.876965276 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.876849256 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.880937253 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.882121859 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.878621121 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.881210197 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.882079188 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.880912311 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.880282545 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.878899194 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.876131249 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.880995671 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.881254206 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.88555774 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.880085039 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.882979387 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.881712162 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.88072435 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.880255542 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.882336964 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.879860736 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.885513685 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.882675847 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.880179344 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.882689844 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.879337809 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.880823545 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.882188242 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.884150432 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.880636726 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.881616245 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.880697297 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.878485722 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.882627127 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.88705751 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.881488787 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.881673886 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.883942392 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.884323427 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.882483641 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.881543042 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.884062007 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.882392697 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.882486114 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.881490836 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.880806111 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.882204523 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.879759768 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.886016151 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.883472121 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.888433658 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.881590984 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.888655707 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.882477768 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.88368765 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.894850981 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.887477257 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.885510485 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.892600665 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.889188984 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.884852751 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.880522003 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.881894653 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.885234233 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.883447824 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.885905459 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.883509624 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.882594004 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.881766827 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.884057799 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.882842254 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.886981497 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.883912387 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.883556044 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.888448388 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.88830741 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.888283549 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.884593116 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.886535126 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.881877335 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.888546685 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.899098567 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.885202874 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.882080024 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.883912581 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.885714042 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.886379712 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.894701251 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.891871539 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.885162654 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.882149798 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.888094368 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.903041513 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.884257255 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.89120567 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.917465435 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.883183197 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.885882522 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.88402999 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.890963569 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.883822108 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.887236217 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.883068952 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.892184691 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.885969326 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.889292442 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.893370551 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.887474789 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.88048379 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.887796435 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.886387113 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.894764898 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.8854841 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.893594749 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.883715988 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.889417819 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.886892995 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.882441345 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.889181948 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.886740603 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.887495121 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.889236204 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.887269402 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.887013601 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.894542079 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.888351415 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.888477659 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.899064403 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.902426294 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.887476928 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.888696467 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.886685895 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.894820226 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.892961531 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.890335633 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.892999017 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.895849993 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.892922721 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.897809471 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.891110156 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.889727138 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.887807864 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.889575698 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.889741397 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.901054413 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.898249786 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.892631244 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.893324459 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.893292013 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.891340391 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.898382537 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.894690668 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.887322409 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.891233413 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.88738921 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.889059562 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.88988051 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.889574704 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.893013505 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.897936315 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.889768753 seconds)
  done (took 1118.665394953 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.889355413 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.890185785 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.889048899 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.889392007 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.883393065 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.891679707 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.887811002 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.889233585 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.889351708 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.889263621 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.888289675 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.892351816 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.888429226 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.881702316 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.881189436 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.883540842 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.881704329 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.88066751 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.887128627 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.883466628 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.883668438 seconds)
  done (took 41.443324348 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.883361528 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.886924828 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.884365299 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.883916847 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.883207992 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.884124247 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.883504607 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.889880246 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.885578144 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.885888912 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.884690132 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.884676402 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.88620725 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.886440913 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.879959725 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.88259322 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.881420027 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.881303557 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.882189048 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.882287077 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.882732879 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.881004448 seconds)
  done (took 43.257892388 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.874799638 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.868321529 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.870147936 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.868794689 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.869765034 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.869185299 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.869655207 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.869738712 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.869121977 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.871396452 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.875545379 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.877273301 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.869606327 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.872051461 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.869712889 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.868699354 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.017571248 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.869012996 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.868414308 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.868406056 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.868612648 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.876902262 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.869502547 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.869967696 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.868405301 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.869716553 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.869681711 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.868715257 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.869054034 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.869796735 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.872024243 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.868496109 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.8700975 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.870703241 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.867234877 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.869058238 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.872078839 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.868442 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.867717906 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.868064643 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.877562296 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.89295512 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.869482692 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.866999161 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.874554243 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.868559479 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.868750768 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.871145495 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.876371662 seconds)
  done (took 93.634592865 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.867091649 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.866432181 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.866290093 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.867761073 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.865532604 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.866056913 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.866004617 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.86579003 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.866336451 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.867179152 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.864928368 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.866142036 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.867151215 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.86731866 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.865863724 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.866582503 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.867048263 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.866651575 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.86679345 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.868125896 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.866040716 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.865594529 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.865208535 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.866799665 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.866083402 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.866884354 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.865837012 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.866313268 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.865395284 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.866728357 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.86587001 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.865988945 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.866110691 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.866394303 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.866637028 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.867527967 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.868012728 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.867543072 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.867553217 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.868215545 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.868251557 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.868608608 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.866458415 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.866920171 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.868227847 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.866969992 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.869090375 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.867692902 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.86766074 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.868643336 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.867971077 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.867644919 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.86800724 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.868200717 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.866902744 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.866453024 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.867767183 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.868872487 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.866824725 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.866964646 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.86897178 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.867938278 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.867279398 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.868064298 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.867555365 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.867487629 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.867837402 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.868410354 seconds)
  done (took 128.761614131 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.867615724 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.867701256 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.867768309 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.867628236 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.867822426 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.868343027 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.867343563 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.867049325 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.867315941 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.869487095 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.866711308 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.867908968 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.868087818 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.869260112 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.867792402 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.868339144 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.866772632 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.868732078 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.866806181 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.867702379 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.867486281 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.866180838 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.864105258 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.866405909 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.864904396 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.865065114 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.863457622 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.862473383 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.862876804 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.864126166 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.863762255 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.862649133 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.86343474 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.862685099 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.862216616 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.863352446 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.863944144 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.862048942 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.863149193 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.861830276 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.862208857 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.862614 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.862031542 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.861691055 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.863502896 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.86198709 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.862667081 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.861916143 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.861058372 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.861486417 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.861301526 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.861671926 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.862257113 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.860001804 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.860298485 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.85993349 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.860791139 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.860698491 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.859742794 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.857929171 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.85930941 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.859192024 seconds)
  done (took 117.379136295 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.861179427 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.859025672 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.860201814 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.859818594 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.859191831 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.861270101 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.860913508 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.860372472 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.860848741 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.86019433 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.860689776 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.859544554 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.860600522 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.859980644 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.859886416 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.859824196 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.858775206 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.859663947 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.859588454 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.859422102 seconds)
  done (took 38.9942142 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.860984123 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.859374066 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.859064289 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.860338438 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.86026824 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.860050972 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.859991306 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.859932346 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.859455171 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.858499792 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.858721206 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.859628627 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.85838795 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.858065435 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.859239183 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.859495585 seconds)
  done (took 31.543640106 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.857943719 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.858902483 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.859004902 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.859300547 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.858389482 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.860276623 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.858464579 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.858805621 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.859838493 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.859203764 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.859572406 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.858684242 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.859447478 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.859917623 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.859880222 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.860095002 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.859888946 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.859370842 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.859645052 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.858793071 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.858484255 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.859465488 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.859908131 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.859105007 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.858791062 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.858474216 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.860691646 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.859029372 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.85930812 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.860266021 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.85859058 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.859032799 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.859812976 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.859139231 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.859331535 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.859415678 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.860973278 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.859892724 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.858310187 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.859112543 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.859017028 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.85960254 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.860112446 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.859164919 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.858070896 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.858099992 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.85862426 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.857334644 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.859843705 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.857941647 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.857883924 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.858113372 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.856723857 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.858772438 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.857391992 seconds)
  done (took 104.043372366 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.857918175 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.857862939 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.858290442 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.858477576 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.857469707 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.858170533 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.858127945 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.856854193 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.857555815 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.858169712 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.856738773 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.857476882 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.856637542 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.856812953 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.859419754 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.857518808 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.85911178 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.857993703 seconds)
  done (took 35.232070969 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.859282898 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.857753948 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.857521804 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.856530255 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.858041369 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.85815012 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.857160977 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.856971838 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.857222237 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.858928393 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.857514186 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.858540681 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.85860351 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.857322566 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.859104006 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.857361752 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.859693617 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.859344903 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.858443487 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.858873828 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.858520811 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.858292618 seconds)
  done (took 42.671278611 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.857863496 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.856969571 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.871483422 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.876623084 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.876903022 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.88848064 seconds)
  done (took 13.020765469 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.855950559 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858092093 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.857742337 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85699651 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857403328 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856364799 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85810702 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85827426 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857244043 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.857789024 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857980578 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857503147 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857704042 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.858561209 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857435214 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857595587 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857786625 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856614966 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.8570095 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857330387 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856973424 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856240603 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.858149589 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85936075 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857901072 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.858078883 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857319826 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856822205 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857507767 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.858825109 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856311459 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857267419 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85731493 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857126804 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856893624 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858815061 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856902068 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856178777 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857773028 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856761703 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.856450188 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855885747 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856517376 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.857433955 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85721876 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857744345 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856522634 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857023704 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85766879 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857034719 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.858133991 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.857851197 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85815592 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856138755 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857991432 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857374749 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.858059691 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85721373 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857741745 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857166578 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.858114504 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857652186 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.858502821 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857761514 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857376054 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857697434 seconds)
  done (took 124.381998114 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.859101847 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.857910459 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858212171 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.858559254 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857462119 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860425274 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857857058 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.858133219 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858403379 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85864705 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.858253492 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.86054073 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858617628 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.858478344 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.858116774 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.858654436 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858880266 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859654093 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.859617594 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.859935567 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.861346831 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.861423193 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.859849067 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860687245 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.859712921 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.860229375 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859892115 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85975712 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860205453 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.859493348 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860015376 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.860280978 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861126109 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.858714645 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.860841101 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85898733 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861255308 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85943927 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.859815481 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.859415026 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860561256 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.860401438 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859891339 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.86090589 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.860651792 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86036559 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.860270877 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.86031309 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.862397819 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860022586 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.861956042 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860347673 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864900318 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.859877978 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86071121 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860833698 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.860718616 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860797761 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860655919 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860725857 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.861365702 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.861046331 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86160606 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.86130078 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.861299024 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861226584 seconds)
  done (took 124.557167537 seconds)
done (took 2589.018026283 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.922321554 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.869001185 seconds)
  done (took 15.585333968 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.025601065 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.978848606 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.862349956 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.903385819 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.863264394 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.86170035 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.866763704 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.865427947 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.861813934 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.863160644 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.863996319 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.046429147 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.920566176 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.863794988 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.863495252 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.955169445 seconds)
  done (took 52.267117904 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.868531151 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.867242599 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.879236068 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.869428134 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.868143238 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.879628758 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.897846491 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.873723476 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.904255231 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.880930812 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.937142635 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.880066127 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.86797387 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.918145812 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.883536031 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.882711522 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.962978506 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.944893098 seconds)
  done (took 35.861461183 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.944883492 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.872274829 seconds)
  done (took 10.61990483 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.8858059 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.872524634 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.923549856 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.865585593 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.870793876 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.891381282 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.872848228 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.862093528 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.894727276 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.900784415 seconds)
  done (took 70.637432727 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.871225462 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.870042486 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.869849803 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.865960287 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.862633986 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.866800015 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.865727511 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.869296859 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.529839271 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.903849148 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.876630513 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.875162756 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.868011573 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.868688968 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.865042861 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.891352255 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.977137284 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.863769108 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.865460157 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.872764098 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.86677198 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.921697161 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.880681856 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.869862265 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.899104654 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.528440539 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.876022769 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.8711227 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.99509969 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.864889521 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.867119109 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.077124199 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.872649722 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.332201303 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.154038313 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.871606642 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.882099364 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.874474313 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.865235149 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.988962657 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.868211152 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.875069086 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.788594828 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.130774973 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.970797689 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.913603064 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.17605347 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.883341681 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.869611464 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.902380827 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.871439293 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.868437704 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.884808503 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.381225735 seconds)
  done (took 132.741496271 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.867557558 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.222291729 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.032219494 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.869232259 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.150520055 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.069477232 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.867528938 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.911603177 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.867465895 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.09229103 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.116194151 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.971583187 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.869144146 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.865719812 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.868457805 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.866404379 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.021670985 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.935677018 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.869579939 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.86585454 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.893054573 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.105670052 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.985716749 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.87203235 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.892778909 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.07460271 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.985693347 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.970103867 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.652446331 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.867419643 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.928387741 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.868813012 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.866858561 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.867556829 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.021525398 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.959359541 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.951738294 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.868185541 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.86690161 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.866724697 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.616635821 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.064538218 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.963039759 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.995037553 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.11786503 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.071853161 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.643624875 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.867981898 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.600736256 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.029352874 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.095722099 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.09498565 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.986863675 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.871541484 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.20226059 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.868255933 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.868380205 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.115679205 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.085444215 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.967019087 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.871576495 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.868534888 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.868215282 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.15628983 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.872226896 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.96276892 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.871302639 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.870880857 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.963574544 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.96769123 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.094873868 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.078802024 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.8978489 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.207750667 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.379399081 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.113263632 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.932680482 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.118272647 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.872580376 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.86984668 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.945308464 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.704402259 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.121138362 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.149106535 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.112210429 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.902480624 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.588783336 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.868505494 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.092755811 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.088960408 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.130024347 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.111721585 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.108619916 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.194366433 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.869687569 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.869578198 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.220522293 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.99310698 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.873930288 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.212828249 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.102342456 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.434983958 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.896294839 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.173877398 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.998386465 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.872738806 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.506201628 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.871803259 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.099887009 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.908398807 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.872313797 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.87310169 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.087832924 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.862954453 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.872788348 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.514309325 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.93017441 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.876781855 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.101278095 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.874584619 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.138655494 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.875191845 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.102804361 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.45818725 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.900948841 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.044395066 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.116096375 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.873696223 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.114704358 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.112543421 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.985085521 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.089003142 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.560269244 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.873515318 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.158835263 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.874408973 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.872866671 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.039722644 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.874871012 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.013003555 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.874224006 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.165428454 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.892829919 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.109171061 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.874962362 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.123648183 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.319612985 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.92177555 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.87530141 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.001231321 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.873871906 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.78873513 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.028770981 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.876505176 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.872488755 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.422387418 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.873306695 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.019684723 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.098359468 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.894159997 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.943317607 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.533923762 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.873719095 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.953122451 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.894760068 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.256726944 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.874081052 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.122316799 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.875984008 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.874044678 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.87416353 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.15746107 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.054208672 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.874353026 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.875450797 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.781705773 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.873601968 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.874738064 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.053969467 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.212147196 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.874291452 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.077185239 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.879611241 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.999945707 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.878790249 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.943684565 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.207934046 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.875198928 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.873454126 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.874079967 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.875409307 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.877422065 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.082730399 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.900289656 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.418756552 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.012071364 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.149330916 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.185328559 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.114083868 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.917528448 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.878551815 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.134435157 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.878540386 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.936491182 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.87861619 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.895060422 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.105102597 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.880519894 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.08230147 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.144819698 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.747581247 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.921425156 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.880602118 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.875918389 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.876867547 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.020168923 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.959599261 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.878560193 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.878890195 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.990843651 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.995455328 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.085164542 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.877229115 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.943091617 seconds)
  done (took 903.812264323 seconds)
done (took 1223.319950227 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.877994912 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.87788655 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.878959822 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.882501491 seconds)
  done (took 29.32876116 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.879600438 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.879363791 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.879429583 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.877693533 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.879529743 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.87834214 seconds)
  done (took 13.083457112 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.037171354 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.880054866 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.880508631 seconds)
  done (took 21.609024171 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.953363042 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.261166971 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.019189593 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.287299066 seconds)
  done (took 10.330507848 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.877979902 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.877151424 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.878433653 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.879269612 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.878666349 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.879380032 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.878276046 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.87865588 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.880340971 seconds)
  done (took 18.718850383 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.959536985 seconds)
done (took 98.840624427 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.982677346 seconds)
    (2/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.885679247 seconds)
    (3/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.880723525 seconds)
    (4/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.355826776 seconds)
    (5/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.939256574 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.986574734 seconds)
    (7/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.944391611 seconds)
    (8/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.977862502 seconds)
    (9/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.015996099 seconds)
    (10/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.877566841 seconds)
    (11/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 8.190859255 seconds)
    (12/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.957267353 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.217996284 seconds)
    (14/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.940550263 seconds)
    (15/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.892692358 seconds)
    (16/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.877244872 seconds)
    (17/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 7.032309647 seconds)
    (18/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.967018805 seconds)
    (19/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.03894951 seconds)
    (20/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.880172756 seconds)
    (21/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.901181165 seconds)
    (22/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.952081503 seconds)
    (23/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.159570874 seconds)
    (24/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.113750189 seconds)
    (25/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.057315825 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.157773535 seconds)
    (27/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.961914354 seconds)
    (28/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.062759433 seconds)
    (29/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.969977244 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.983326996 seconds)
    (31/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.908466698 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.767333221 seconds)
    (33/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.065111661 seconds)
    (34/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.977810706 seconds)
    (35/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.246250292 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.762374937 seconds)
    (37/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.672621785 seconds)
    (38/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.0523174 seconds)
    (39/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.185824597 seconds)
    (40/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.883534839 seconds)
    (41/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.984388275 seconds)
    (42/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.235770703 seconds)
    (43/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.962511321 seconds)
    (44/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.199315754 seconds)
    (45/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.068095422 seconds)
    (46/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.041156959 seconds)
    (47/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.303325007 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 2.094960249 seconds)
    (49/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.034013797 seconds)
    (50/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.173875077 seconds)
    (51/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.964176093 seconds)
    (52/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.961849818 seconds)
    (53/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.830450978 seconds)
    (54/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.922976718 seconds)
    (55/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.149730452 seconds)
    (56/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.886598423 seconds)
    (57/309) benchmarking ("sort", Int64, false)...
    done (took 6.12134611 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.145443652 seconds)
    (59/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.960963312 seconds)
    (60/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.984233353 seconds)
    (61/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.883830235 seconds)
    (62/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.054037016 seconds)
    (63/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.181691048 seconds)
    (64/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.03928727 seconds)
    (65/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.900614602 seconds)
    (66/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.973812425 seconds)
    (67/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.123962951 seconds)
    (68/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.983698771 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.852462332 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.55739416 seconds)
    (71/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.895018945 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.096987705 seconds)
    (73/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.210577343 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.216375429 seconds)
    (75/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.905418894 seconds)
    (76/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.191627435 seconds)
    (77/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.315455627 seconds)
    (78/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.016598392 seconds)
    (79/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.19514293 seconds)
    (80/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.200464896 seconds)
    (81/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.113349626 seconds)
    (82/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.88625576 seconds)
    (83/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.199450225 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.015317939 seconds)
    (85/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.900862643 seconds)
    (86/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 7.003913596 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.42946034 seconds)
    (88/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.884289837 seconds)
    (89/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.884333982 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 3.419530768 seconds)
    (91/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.078344688 seconds)
    (92/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.186275834 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.51737397 seconds)
    (94/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.887441034 seconds)
    (95/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.546284062 seconds)
    (96/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 3.288700977 seconds)
    (97/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.924866223 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.144244608 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.3595398 seconds)
    (100/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.884347628 seconds)
    (101/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.266584722 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.770623376 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.881437016 seconds)
    (104/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.901461328 seconds)
    (105/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.894836864 seconds)
    (106/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.048958314 seconds)
    (107/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.880410556 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.331489596 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.010716643 seconds)
    (110/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.743409756 seconds)
    (111/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.140968045 seconds)
    (112/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.884227968 seconds)
    (113/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.344779082 seconds)
    (114/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.121360217 seconds)
    (115/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.981848664 seconds)
    (116/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.895065689 seconds)
    (117/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.881701401 seconds)
    (118/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.984699492 seconds)
    (119/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.664181942 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.881568473 seconds)
    (121/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.023189739 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.181617221 seconds)
    (123/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.009495928 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.880120088 seconds)
    (125/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.90809803 seconds)
    (126/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.268960879 seconds)
    (127/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.752865612 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.80360172 seconds)
    (129/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.968160827 seconds)
    (130/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.493259407 seconds)
    (131/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.341514464 seconds)
    (132/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.898629516 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.916770587 seconds)
    (134/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.893502935 seconds)
    (135/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.881601619 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 3.256969666 seconds)
    (137/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.994736355 seconds)
    (138/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.056308208 seconds)
    (139/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.169330455 seconds)
    (140/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.127243178 seconds)
    (141/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.037370742 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.128552968 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.88681475 seconds)
    (144/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.448639618 seconds)
    (145/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.565753531 seconds)
    (146/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.123303576 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.134955635 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.200694944 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.85068234 seconds)
    (150/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.884980777 seconds)
    (151/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.992273454 seconds)
    (152/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.972558048 seconds)
    (153/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 3.456181444 seconds)
    (154/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.01550552 seconds)
    (155/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.904768049 seconds)
    (156/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.891593137 seconds)
    (157/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.025137013 seconds)
    (158/309) benchmarking ("sort", Float32, false)...
    done (took 5.624517031 seconds)
    (159/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.912574418 seconds)
    (160/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.319100147 seconds)
    (161/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.917885743 seconds)
    (162/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.96735507 seconds)
    (163/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.151117617 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.010751233 seconds)
    (165/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.898047741 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.882357601 seconds)
    (167/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 3.301948839 seconds)
    (168/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.985954763 seconds)
    (169/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.888201065 seconds)
    (170/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.02365639 seconds)
    (171/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.104760037 seconds)
    (172/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.974486517 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.661862236 seconds)
    (174/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.126551778 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.889731962 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.917281151 seconds)
    (177/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.01512166 seconds)
    (178/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.232970421 seconds)
    (179/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.065066287 seconds)
    (180/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.354477012 seconds)
    (181/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.033298628 seconds)
    (182/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.224135892 seconds)
    (183/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.141909913 seconds)
    (184/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.052716849 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.296546938 seconds)
    (186/309) benchmarking ("sort", Int8, false)...
    done (took 4.786680464 seconds)
    (187/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.88614858 seconds)
    (188/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 2.01615469 seconds)
    (189/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.055064918 seconds)
    (190/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.122499022 seconds)
    (191/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.888729442 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.168262899 seconds)
    (193/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.944675267 seconds)
    (194/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.494312514 seconds)
    (195/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.909183469 seconds)
    (196/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.993411003 seconds)
    (197/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.199768849 seconds)
    (198/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.893079461 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.116606606 seconds)
    (200/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.029369441 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.892156822 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.280732488 seconds)
    (203/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.147689988 seconds)
    (204/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.888214148 seconds)
    (205/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 3.382880599 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.680566002 seconds)
    (207/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.265825444 seconds)
    (208/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.890236276 seconds)
    (209/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.500880338 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 3.229230029 seconds)
    (211/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.215775307 seconds)
    (212/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.119819685 seconds)
    (213/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.953671484 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.266523326 seconds)
    (215/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.014099776 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.014513531 seconds)
    (217/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.884781808 seconds)
    (218/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.3932273 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.588078733 seconds)
    (220/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.177291474 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.190400282 seconds)
    (222/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.175668668 seconds)
    (223/309) benchmarking ("sort", BigInt, false)...
    done (took 6.889970955 seconds)
    (224/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.021067044 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.204346031 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.890598212 seconds)
    (227/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.892287343 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.495560839 seconds)
    (229/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.98314652 seconds)
    (230/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.374031433 seconds)
    (231/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.917611356 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.020398912 seconds)
    (233/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.897019855 seconds)
    (234/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.131024494 seconds)
    (235/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.914962762 seconds)
    (236/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.892165288 seconds)
    (237/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.291445414 seconds)
    (238/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.788535968 seconds)
    (239/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.9532943 seconds)
    (240/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.911015607 seconds)
    (241/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.146688406 seconds)
    (242/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.913011915 seconds)
    (243/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.947676234 seconds)
    (244/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.06653271 seconds)
    (245/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.630974904 seconds)
    (246/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.442881447 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.304290725 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.149158308 seconds)
    (249/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.032687202 seconds)
    (250/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.892102048 seconds)
    (251/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.02495171 seconds)
    (252/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.923556518 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.887835907 seconds)
    (254/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.217919566 seconds)
    (255/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.591266101 seconds)
    (256/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.898258642 seconds)
    (257/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.192655347 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.151160845 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.047227199 seconds)
    (260/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.397997449 seconds)
    (261/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.981013931 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.285105354 seconds)
    (263/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.003604538 seconds)
    (264/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.89342846 seconds)
    (265/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.303612602 seconds)
    (266/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.89346916 seconds)
    (267/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.974099092 seconds)
    (268/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.910985737 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.83224679 seconds)
    (270/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.923115181 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.906327965 seconds)
    (272/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.911932449 seconds)
    (273/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.143040489 seconds)
    (274/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.575116569 seconds)
    (275/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.085245821 seconds)
    (276/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.729956584 seconds)
    (277/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.893980651 seconds)
    (278/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.131708484 seconds)
    (279/309) benchmarking ("sort", Float64, false)...
    done (took 5.640973679 seconds)
    (280/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.570916686 seconds)
    (281/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.107139543 seconds)
    (282/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.893456259 seconds)
    (283/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.110927084 seconds)
    (284/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.003477172 seconds)
    (285/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.892541919 seconds)
    (286/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.92819407 seconds)
    (287/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.135361847 seconds)
    (288/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.896883606 seconds)
    (289/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.072558062 seconds)
    (290/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.031068972 seconds)
    (291/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.893202153 seconds)
    (292/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.403297772 seconds)
    (293/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.808494514 seconds)
    (294/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.280494517 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.782214523 seconds)
    (296/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.8923432 seconds)
    (297/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 3.473767331 seconds)
    (298/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.897881582 seconds)
    (299/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.713128726 seconds)
    (300/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.053364824 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.92487307 seconds)
    (302/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.979174476 seconds)
    (303/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.992223448 seconds)
    (304/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.626843871 seconds)
    (305/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.994402389 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.227839286 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.107547737 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.909564869 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.216101287 seconds)
  done (took 1009.659993646 seconds)
done (took 1011.5344639 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.920430606 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.914081559 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.896571539 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.917851072 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.00944577 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.939888511 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.909217116 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.899704436 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.946463347 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.94735256 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.894332022 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.938392991 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.898261029 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.896366743 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.896193743 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.912924779 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.192689277 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.920573944 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.915317813 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.908718767 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.915035824 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.896741201 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.947367694 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.937245702 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.900937998 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.901093443 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.900961932 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.917581052 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.009273801 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.900174165 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.901817939 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.909905878 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.194249173 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.920626332 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.896512268 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.916839462 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.909516484 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.911700588 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.900902523 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.930485153 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.280695198 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.929627547 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.900418043 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.897867485 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.89816687 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.904709248 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.898315574 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.906025178 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.913245793 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.91445398 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.274818619 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.947721799 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.902339634 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.900262531 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.911671691 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.89891972 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.902935089 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.916003358 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.919892781 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.915572749 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.182685955 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.928736652 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.903343922 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.918312114 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.909094253 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.311054167 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.929427806 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.904836028 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.280987355 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.940511494 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.314813886 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.942490751 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.902296253 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.916192801 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.932553319 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.195835292 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.920647455 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.899441714 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.911427733 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.89816719 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.913163376 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.915195463 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.905147161 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.902662703 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.916475198 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.943259914 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.913941801 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.901399006 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.913272095 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.920630782 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.910511763 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.913108665 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.905072094 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.899098042 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.912923433 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.904803284 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.90321786 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.903137198 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.905050575 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.91531787 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.280222009 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.950011146 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.898591491 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.899199102 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.903403646 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.916376579 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.28221286 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.934132988 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.924132071 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.953390918 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.902724827 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.190151185 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.928368623 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.918630772 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.913688721 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.905512648 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.900159743 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.185829306 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.30043482 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.950184111 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.902331533 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.900258181 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.918211021 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.903454906 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.900402439 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.198653004 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.927664883 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.917761506 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.025379759 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.916072399 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.934919327 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.900218543 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.907324494 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.948596468 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.920541975 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.935284027 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.905294761 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.918527447 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.921364061 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.900154342 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.915973262 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.915448626 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.903479758 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.912240315 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.901192168 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.949382821 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.916937656 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.91837497 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.925629796 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.025933513 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.902083942 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.18723233 seconds)
done (took 298.436358367 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.979653843 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.9027622 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.019175026 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.902058598 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.988795485 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.980985302 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.900185537 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.902012039 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.902613076 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.400674 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.902268597 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.909343203 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.901696072 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.902165027 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.970521818 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.901701527 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.902877587 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.346120191 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.902068873 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.982568063 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.900852243 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.902056516 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.901295982 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.420145351 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.901350786 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.901685641 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.982580456 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.902725438 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.351862075 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.902858378 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.901176164 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.365987283 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.981945139 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.930831559 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.910209686 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.910562021 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.000782715 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.910468013 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.978146723 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.970744188 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.033343589 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.935890356 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.904027553 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.901991949 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.90570851 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.904141705 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.903831101 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.937228771 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.903651602 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.908976694 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.348258271 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.912234856 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.90808479 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.904701648 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.903888841 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.931761259 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.904774789 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.905160318 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.983184399 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.905357957 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.980341717 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.407685586 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.403540847 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.90420807 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.903185349 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.904744375 seconds)
  done (took 187.613548446 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.971076371 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.978299206 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.972022032 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.911180157 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.955308063 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.972595103 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.908557235 seconds)
  done (took 15.504869433 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.912687243 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.905664552 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.955112237 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.955928972 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.905768245 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.084635961 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.91737208 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.909995973 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.932754175 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.906468248 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.570936477 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.953805133 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.912588725 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.905082809 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.917246419 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.961286847 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.908214919 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.906192312 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.021593813 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.05479008 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.910891822 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.913860375 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.933013331 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.918100641 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.905362472 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.906149735 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.905824979 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.912675155 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.905819068 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.906077938 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.907805744 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.958017177 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.906296681 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.907822919 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.906352938 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.906671765 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.906302097 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.906905723 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.906887985 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.905630446 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.906885454 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.90580463 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.907573604 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.908034483 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.907637974 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.931862808 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.907716946 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.908355569 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.90877033 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.910614872 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.93589215 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.90874992 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.907010012 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.912821193 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.951407282 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.915665448 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.90724393 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.907784005 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.908563442 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.908105018 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.909139894 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.057901 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.957991277 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.909648297 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.959309588 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.062174169 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.908991047 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.909070057 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.909271532 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.998137421 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.908560874 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.958144012 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.909107133 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.022460537 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.909388122 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.08881738 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.932990022 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.912974645 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.913017679 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.91141335 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.916784448 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.909149462 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.912549921 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.915429984 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.914830728 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.909583661 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.909510575 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.910893194 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.917103102 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.910080715 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.960045746 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.909249131 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.909696496 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.051771096 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.910130952 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.026073385 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.938190837 seconds)
  done (took 209.723861159 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.917301845 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.918745403 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.914393508 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.927192893 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.911104378 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.9128433 seconds)
  done (took 13.345818722 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.913978209 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.915234157 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.911128725 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.911843257 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.912105089 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.912439685 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.913288841 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.913770281 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.914187759 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.912935817 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.913366419 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.913458688 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.913635308 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.9113408 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.912647821 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.911597218 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.913082924 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.912136207 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.913170275 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.913906899 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.119017788 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.912376962 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.911906914 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.915913152 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.915919156 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.91191761 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.924765391 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.912117765 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.912301981 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.919049916 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.915913379 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.914015782 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.915230315 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.918693681 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.916953828 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.917015735 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.916930025 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.913930472 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.914091493 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.914768529 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.915309522 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.913873625 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.91414554 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.914683116 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.915869886 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.9195765 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.918142091 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.927048862 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.915269131 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.915114261 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.914392326 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.914486933 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.915126223 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.915114679 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.918485327 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.919785012 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.918329936 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.915534515 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.914922285 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.917702259 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.918090211 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.915545066 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.916745582 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.918738074 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.92271301 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.915184519 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.918846188 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.91791492 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.915337587 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.914859438 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.916196753 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.915536851 seconds)
  done (took 140.954256215 seconds)
done (took 568.98667946 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.735926233 seconds)
  done (took 9.580634058 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.936767789 seconds)
  done (took 8.894216741 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.151111981 seconds)
  done (took 9.99729539 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.929786966 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.928893711 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.929763807 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.923771892 seconds)
  done (took 29.571988829 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.251610117 seconds)
  done (took 9.095974727 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.938511536 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.926017428 seconds)
  done (took 16.08998777 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.063700113 seconds)
  done (took 8.926473894 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.971986933 seconds)
  done (took 8.836258516 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.942292463 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.953289655 seconds)
  done (took 15.772634199 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.93156305 seconds)
  done (took 8.791067193 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.341011135 seconds)
  done (took 10.275616545 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.947073652 seconds)
  done (took 8.883769386 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.980363173 seconds)
  done (took 8.839695436 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.971135065 seconds)
  done (took 8.83184171 seconds)
done (took 164.233156649 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.931440579 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.934132213 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.932807966 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.935254416 seconds)
  done (took 29.592971075 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.964552166 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.964617559 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.974673373 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.963661427 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.956153272 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.956364733 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.965731445 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.965266173 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.95550533 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.962903536 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.965978387 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.964533914 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.96646774 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.974830324 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.974527289 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.963183549 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.9655708 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.966009342 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.955420646 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.972899875 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.965095138 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.9652875 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.931435641 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.930490699 seconds)
  done (took 48.950579967 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.12084736 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.000043043 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.084734985 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.983056141 seconds)
  done (took 10.048406796 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.932263418 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.995899049 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.985139906 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.978808003 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.983700502 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.033508906 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.984122889 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.068900594 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.062049844 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.056352154 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.939609585 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.952640275 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.956049995 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.978342161 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.035032443 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.933446276 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.933103069 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.048255194 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.996545549 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.119102341 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.932416495 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.988109484 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.983934784 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.986604806 seconds)
  done (took 49.723964249 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.933756653 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.942047676 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.941626093 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.93383483 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.935940001 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.934303915 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.941089575 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.935821945 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.956910228 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.936226278 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.933961619 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.935974486 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.941515563 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.93579118 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.936143396 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.947456653 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.948516612 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.936349551 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.938391777 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.942842576 seconds)
  done (took 40.651846356 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.933733777 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.781548855 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.28098308 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.185712937 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.934641213 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.938497424 seconds)
  done (took 31.918731224 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.947176626 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.940579216 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.9328604 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.990735527 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.076268474 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.944428805 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.933948021 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.947117491 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.984291924 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.001085982 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.959787599 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.965034237 seconds)
  done (took 25.488442741 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.935241112 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.934184981 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.937353306 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.948198141 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.947930801 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.945683314 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.944110619 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.934403904 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.95078631 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.957982603 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.947072924 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.948882981 seconds)
  done (took 45.198707836 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.640711002 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011092644 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.934819392 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.808412556 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.381876738 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.484318013 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.829043404 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.545379455 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.47442091 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.862704837 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.13896587 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.936445771 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.021089257 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.938316156 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.209178786 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.272147439 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.13371001 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.178775813 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.781505615 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.939799221 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.141756794 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.147591688 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.221935707 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.936612953 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939167818 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.946476343 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.596534939 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.552671005 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.044458379 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.444740962 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.145632739 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.88734618 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992412625 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.940056875 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.950591821 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.940430798 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947207101 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.210714695 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.943260151 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.13718801 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00929958 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.187074134 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942799931 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.357836459 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.638922349 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.198830697 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.050837349 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.937873451 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941435536 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.938125683 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.86525029 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.021733348 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.940265744 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.945041333 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.639065315 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.942029261 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016465608 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.937270384 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141146675 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.746717008 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.62924049 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.939199021 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943959352 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.494759735 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.935960804 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.134759197 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.553002909 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.387640545 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.353297006 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.036949704 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.940796384 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.945263551 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.241937016 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.873146065 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.601043978 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.048113283 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.074403676 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.957204518 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.579234718 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.229535758 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.349742049 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.5042297 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.859080176 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.21177536 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.80250405 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.894220971 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.157008654 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.786767714 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.866142555 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.151499279 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970700915 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94347759 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.204773576 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.605473606 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.123530273 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.952428348 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.374045817 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960223649 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.950436286 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940976574 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.154835803 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.536672799 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.942512576 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.062467849 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956853478 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.024457248 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.868681152 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.956516847 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.943615606 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.846516635 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.943908888 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.888204046 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.069307965 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.783189318 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.946392456 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.880752032 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.9480088 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.937757031 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.056482108 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.896870299 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.187317725 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.233810519 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.603740707 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.920610407 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.155305023 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.302626841 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.17652662 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.951768299 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.154163208 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.469099404 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.334466541 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.996233405 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.227788823 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.997623478 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.229802245 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.365902125 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018778567 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.626457925 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.819600564 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.161007966 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95684025 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.943752498 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.945330493 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950629794 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.881511643 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.569610442 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.293364807 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.118894751 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.158597048 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.450178175 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.895375569 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.032075843 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.215960684 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.083538622 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.923668739 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.588816647 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.386064034 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.762689415 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.034719187 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.118205994 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.259163579 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 4.00503201 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96464927 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02148725 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961399398 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.957062628 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.289720136 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.321838912 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.945976377 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.947391403 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.894567408 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.952566904 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.947892623 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.481288822 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.913619961 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.953938588 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.959819676 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.819210254 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003747024 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.950918304 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.948719521 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.471763373 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.458055463 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.951230521 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.597281187 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.952035561 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.086049205 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.214740275 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.288593933 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.086034945 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.648106019 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.350423095 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.062171893 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.650703729 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.87368611 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.947819182 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.885067956 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950913651 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.952217257 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.951982421 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.137413655 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.220315929 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.247267671 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.41783404 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.014856555 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.150352002 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.600222019 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.976847749 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.950233033 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.952776062 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.95091254 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.945940034 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.446937157 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.246614319 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.953293274 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.056487786 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.95510501 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078726748 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.959021047 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.874467161 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.950318835 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.950641969 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.430854347 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.048465 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.897944463 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.233440609 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.755208966 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.149756412 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997844817 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.96137936 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.955023834 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.576883494 seconds)
    (233/481) benchmarking "4d"...
    done (took 3.06635045 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.877530328 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394139781 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.069032076 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.626897137 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.51783859 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.508351781 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.26677663 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.262310831 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.271967691 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.018791906 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.166056987 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.035559886 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.005908497 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.04636146 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.885865327 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.877706847 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.600295968 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.282245866 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.250415226 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.962477745 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.170875406 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.569812465 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.255933369 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981078152 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.650600019 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330097693 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.926269298 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.966879519 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.327363029 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.139489646 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.033063763 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.954520808 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.908320976 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.28920893 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99121533 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.654544156 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.972238119 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.303502967 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.396070342 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.252644103 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.312586976 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.171717605 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.961705176 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.299413004 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.177849098 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.070535803 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.957904513 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.92429073 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.175020485 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.52997013 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.79597501 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.959142515 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.14585544 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.320781899 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.856500425 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.957144898 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.134779388 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291964064 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.956256311 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.269768378 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.323878242 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.057410905 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014108864 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.181965266 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.646498565 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327571884 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.514785849 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.425310985 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.962096974 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.883280323 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.657033071 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.158930064 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.962689383 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.921883839 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.169647592 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.187591806 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.640633629 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.177958996 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.196936393 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.967609349 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.222301156 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.02688007 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.053915849 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.235609424 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.38622784 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.199188506 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.182517711 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.495611169 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.173623533 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.404264593 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.11811134 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.958222058 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.162389581 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.175487456 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.168792961 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.309139589 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133762427 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.664009836 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.961637545 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.165176253 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.25612955 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.017703171 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.329601461 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.138229307 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.043123796 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964389105 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023697481 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.963545619 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963529951 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.332525912 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.495237269 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.975589922 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035268013 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.960088754 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.523266195 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.967390845 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.961209974 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.226214649 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316075217 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.28314665 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.939860992 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.956657 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.962882923 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086813378 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.884874898 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.967410292 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.229441599 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.961736831 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382866266 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.190061476 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972977932 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.251091231 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.356351329 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.632676282 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.001230675 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.964817187 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.178830746 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.263529541 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.162692587 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.153562869 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.231221775 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.293075654 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.988804361 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.311119005 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.212241138 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.965356916 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.833736524 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.96677744 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.090017695 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.167093153 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.233081085 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.467525969 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.642493374 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.308865457 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.814245822 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.967198377 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.587170348 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308179136 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.227227155 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.011323962 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025939944 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.969348331 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.410797937 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.768214361 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093265787 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.830461845 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.891783452 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.969699516 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.241396615 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.206064088 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.672973843 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.966016563 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.233179802 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263700619 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.228367472 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.01185596 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.874822955 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.179570894 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968107377 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.970602161 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.229937341 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.176328136 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.208089659 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.966180548 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.969772596 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.771840449 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.888753399 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.968976768 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018485829 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.192208841 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.984784058 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.478975325 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.668076694 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.24196229 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.013262589 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.97044211 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.228616485 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.483783905 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.503094524 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.973083195 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.177216851 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.963227755 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.353512562 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.967639315 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.414893011 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.349551999 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.969339755 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.517974704 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.294105713 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.237721732 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.901044522 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.976179468 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.182792679 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.890044159 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.001953163 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.948098262 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425253836 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.284114326 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.702446922 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.526020309 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.970174963 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.970293572 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.416321493 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.079042618 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.41992025 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.066425988 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983946302 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.486741605 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.681143533 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.254470774 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.209424913 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.51270011 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.654808928 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.971329159 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.96551669 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.971254529 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.886282233 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.151518192 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.154829895 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.254110638 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.995600251 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.446843539 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.086453346 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.331428836 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093101935 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.165410919 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.084919233 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.488165372 seconds)
  done (took 1701.554463269 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.986942047 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.024695368 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.023806831 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.973386926 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.978050258 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.98677137 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.050904312 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.976211686 seconds)
  done (took 57.899075597 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.963615691 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.978833778 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.96906162 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.965494744 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.968580782 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.964107266 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.126946801 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.975786319 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.999089802 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.968534806 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.964548399 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.964452559 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.259573426 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.986572756 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.964919896 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.96496108 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.96940347 seconds)
  done (took 75.854136266 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.964354984 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.178667774 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.028352296 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.967491795 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.932028345 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.981154594 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.929909372 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.971841031 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.968038166 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.214999895 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.264633685 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.984484526 seconds)
  done (took 91.280288715 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.978693519 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.967618795 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.967724945 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.968039633 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.968776787 seconds)
  done (took 11.751253698 seconds)
done (took 2221.787280041 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.196829227 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.02526213 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.066961364 seconds)
  done (took 5.986023954 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.112956364 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.159129102 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.270768183 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.032673219 seconds)
  done (took 10.477499265 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.272194949 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.335167479 seconds)
  done (took 6.50077937 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.284755115 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.001137466 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.349086674 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.969607284 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.973486108 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.970362245 seconds)
  done (took 22.812503944 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.966717193 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.967433297 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.968420724 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.967111339 seconds)
  done (took 9.764084499 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.966406927 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.690883022 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.969039984 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.978991802 seconds)
  done (took 21.500161091 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.164949051 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.084030987 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.109805887 seconds)
  done (took 8.254343207 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.109685141 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.803614321 seconds)
  done (took 6.808676407 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.121286768 seconds)
  done (took 4.016452415 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.995658722 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.237440184 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.462376952 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.955211472 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.649224728 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.277279861 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.311128359 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.195425401 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.419057774 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.447396262 seconds)
  done (took 26.8460278 seconds)
done (took 138.693405112 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.526879003 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.00689783 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.176291113 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.335141163 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.208492779 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.176604725 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.184491436 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.330855158 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.022120222 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.010386902 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.345336553 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.211233094 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.133637906 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.988936005 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.141916943 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.988324696 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.200430167 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.344080516 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.015174288 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.254349816 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.203212365 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.97364532 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.168760866 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.988705908 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.206877963 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.126328676 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.516046697 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.995260196 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.146873771 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.528795143 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.131349887 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.392767423 seconds)
  done (took 171.878135931 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.97006253 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.971111211 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.971475467 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.970416971 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.510819984 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.972408985 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.972151013 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.970771925 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.378671 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.36907991 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.971494475 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.506071649 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.974539444 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.970265925 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.970940335 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.970882538 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.532762817 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.971913662 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.972063654 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.970556928 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.971218499 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.36095019 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.97181405 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.37021616 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.521685903 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.972817543 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.97222126 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.971608548 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.97198487 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.970736511 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.971719046 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.971495126 seconds)
  done (took 212.766129059 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.971571264 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.973006481 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.973657787 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.971506309 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.974204825 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.97341533 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.972152131 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.97226917 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.765319358 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.75619268 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.973945253 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.973144829 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.977041218 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.972045496 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.975199881 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.972714681 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.97165779 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.973235942 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.973676452 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.97353975 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.975063106 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.768612949 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.976794326 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.734648692 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.972002671 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.981138699 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.97023775 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.971000397 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.972173146 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.970394475 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.970612643 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.970283369 seconds)
  done (took 224.172150326 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.207917235 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.969803871 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.971376133 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.887845691 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.971514793 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.970128374 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.956789967 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.222103224 seconds)
  done (took 20.055802356 seconds)
done (took 630.777842845 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.362870049 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.196092192 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.149029982 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.995080926 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.235719116 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.042688843 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.990565779 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.057793233 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.838210973 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.070267528 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.62927336 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.016330196 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.724416277 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.021026056 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.116834723 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.048477675 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.576256906 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.681147486 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.136154641 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.058666486 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.175745321 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.943167211 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.072384655 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.86410086 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.660531614 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.993230387 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.057880891 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.581221931 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.005212787 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.155505914 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.66272188 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.33406955 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.009038003 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.992630778 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.044408646 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.025169299 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.257730094 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.007365782 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.122738534 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.738854656 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.053201321 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.738060886 seconds)
  done (took 107.341560015 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.984520319 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.979243838 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.978887679 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.978676557 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.98809684 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.979859024 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.980473566 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.979326498 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.979666048 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.978423635 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.980103474 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.988234061 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.98023171 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.987541429 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.97955785 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.980004071 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.979249213 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.988607004 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.979639985 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.979107238 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.979720046 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.979040128 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.976352508 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.979840083 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.980181462 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.980090032 seconds)
  done (took 53.421101043 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.975836639 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.146789596 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.215541688 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.996028122 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.976661316 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.979009051 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.994455448 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.980699008 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.977614432 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.978777436 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.066085247 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.982532664 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.995642843 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.215428198 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.994986914 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.976453224 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.976158642 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.97718614 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.155642602 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.994039608 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.996925197 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.982734258 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.995939202 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.991836066 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.979576601 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.978281789 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.980731062 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.42412732 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.986640255 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.069372453 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.038842052 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.003883125 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.369430572 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.22526383 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.032809013 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.989680536 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.978240533 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.07325254 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.983903997 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.978377494 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.995572132 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.984358679 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.216704702 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.48791559 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.991930343 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.977540517 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.432449291 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.083499602 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.019833093 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.988404798 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.223986787 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.995491251 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.978830684 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.979213568 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.015807313 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.990800289 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.978643852 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.285026374 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.99174769 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.996244329 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.983473687 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.981124975 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.15976835 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.988150401 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.149447183 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.989366186 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.986215389 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.980862273 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.221270846 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.99650778 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.50562134 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.995021818 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.979186891 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.071748948 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.154317431 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.458833422 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.993168268 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.162328201 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.387165959 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.004382833 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.990783693 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.414834084 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.007458095 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.988139858 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.981179622 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.981745045 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.979823924 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.024886037 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.996180285 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.417002064 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.500539547 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.303450615 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.00689381 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.991843647 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.981495179 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.285255192 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.989550401 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.979711756 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.212920878 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.513996708 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.996879308 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.988136786 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.480533079 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.996281114 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.999077624 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.991005401 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.227495829 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.997498194 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.025882076 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.98078872 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.987844441 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.9835628 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.999781602 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.989180573 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.981533656 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.473577303 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.090744517 seconds)
  done (took 245.021495912 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.981881411 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.9835081 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.981178803 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.982466725 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.980812287 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.981997516 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.980530722 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.979335966 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.983149331 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.980815829 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.980985375 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.981425564 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.981327932 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.983896783 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.992090851 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.988710734 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.619506076 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.985878039 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.98585084 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.985687145 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.628150283 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.989943336 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.986067373 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.985813335 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.9871493 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.987149184 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.987704904 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.989343529 seconds)
  done (took 170.754299576 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.987794145 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.101079202 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.008043875 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.016101539 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.997489535 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.987104746 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.085055625 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.007891368 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.993967526 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.987181134 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.987834705 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.047723962 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.99902209 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.086719577 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.020365825 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.096227643 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.094242397 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.995792159 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.989588957 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.988619532 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.018069136 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.000904708 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.049470808 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.113820759 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.010356244 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.102434838 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.010680753 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.989493614 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.990414511 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.101588667 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.009542411 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.049599466 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.019706801 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.007824541 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.107329621 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.106728923 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.094871417 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.094504526 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.997262975 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.990775003 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.989911041 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.991369476 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.102740277 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.011963571 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.991994126 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.10543103 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.008363086 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.989880034 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.990499717 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.991068255 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.003164394 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.008182905 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.05430422 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.122067691 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.02675575 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.013775452 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.089684205 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.122088852 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.991383298 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.088357006 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.998765886 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.104437357 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.011176643 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.992519811 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.9934098 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.994829578 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.020898556 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.097520222 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.097038923 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.000216297 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.090282392 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.027739787 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.998750115 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.992520799 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.992584951 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.104475242 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.112925042 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.02768219 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.028865284 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.023034876 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.002520385 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.991576623 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.994138941 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.009497963 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.997437746 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.106333908 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.108665703 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.000314405 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.992182938 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.992426286 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.992984578 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.017690434 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.114443142 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.028437999 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.098827571 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.060169006 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.069282526 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.009318465 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.007057414 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.998266164 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.056128454 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.00901502 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.004816386 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.307347886 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.053642493 seconds)
  done (took 215.685861207 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.374064352 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.040822782 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.050161867 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.32112965 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.382776168 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.12378358 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.041121866 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.043200935 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.083421481 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.275195535 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.117459892 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.059927196 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.029469697 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.015999337 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.039049426 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.075884776 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.04988138 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.387640864 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.269928745 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.227472085 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.030842707 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.339661483 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.383146749 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.625274066 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.089649927 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.448954277 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.665180252 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.20777955 seconds)
  done (took 65.726473674 seconds)
done (took 859.849833334 seconds)
SAVING RESULT...
DONE!
